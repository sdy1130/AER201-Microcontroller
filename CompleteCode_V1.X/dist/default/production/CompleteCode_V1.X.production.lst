

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Apr 10 16:13:10 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.41
    64                           ; Generated 25/01/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4620 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	smallconst
    99  001000                     __psmallconst:
   100                           	opt stack 0
   101  001000  00                 	db	0
   102  001001                     _keys:
   103                           	opt stack 0
   104  001001  31                 	db	49
   105  001002  32                 	db	50
   106  001003  33                 	db	51
   107  001004  41                 	db	65
   108  001005  34                 	db	52
   109  001006  35                 	db	53
   110  001007  36                 	db	54
   111  001008  42                 	db	66
   112  001009  37                 	db	55
   113  00100A  38                 	db	56
   114  00100B  39                 	db	57
   115  00100C  43                 	db	67
   116  00100D  2A                 	db	42
   117  00100E  30                 	db	48
   118  00100F  23                 	db	35
   119  001010  44                 	db	68
   120  001011  00                 	db	0
   121  001012                     __end_of_keys:
   122                           	opt stack 0
   123  001012                     _dpowers:
   124                           	opt stack 0
   125  001012  0001               	dw	1
   126  001014  000A               	dw	10
   127  001016  0064               	dw	100
   128  001018  03E8               	dw	1000
   129  00101A  2710               	dw	10000
   130  00101C                     __end_of_dpowers:
   131                           	opt stack 0
   132  00101C                     _hexpowers:
   133                           	opt stack 0
   134  00101C  0001               	dw	1
   135  00101E  0010               	dw	16
   136  001020  0100               	dw	256
   137  001022  1000               	dw	4096
   138  001024                     __end_of_hexpowers:
   139                           	opt stack 0
   140  001024                     _happynewyear:
   141                           	opt stack 0
   142  001024  00                 	db	0
   143  001025  33                 	db	51
   144  001026  03                 	db	3
   145  001027  01                 	db	1
   146  001028  10                 	db	16
   147  001029  04                 	db	4
   148  00102A  17                 	db	23
   149  00102B                     __end_of_happynewyear:
   150                           	opt stack 0
   151  0000                     _ADRES	set	4035
   152  0000                     _SSPBUF	set	4041
   153  0000                     _SSPADD	set	4040
   154  0000                     _SSPCON2	set	4037
   155  0000                     _SSPCON1	set	4038
   156  0000                     _SSPSTAT	set	4039
   157  0000                     _PIR2bits	set	4001
   158  0000                     _EECON2	set	4007
   159  0000                     _EEDATA	set	4008
   160  0000                     _EECON1bits	set	4006
   161  0000                     _EEADR	set	4009
   162  0000                     _EEADRH	set	4010
   163  0000                     _ADCON0bits	set	4034
   164  0000                     _LATCbits	set	3979
   165  0000                     _TMR3L	set	4018
   166  0000                     _TMR3H	set	4019
   167  0000                     _TMR1L	set	4046
   168  0000                     _TMR1H	set	4047
   169  0000                     _LATDbits	set	3980
   170  0000                     _PORTB	set	3969
   171  0000                     _PORTBbits	set	3969
   172  0000                     _INTCONbits	set	4082
   173  0000                     _T3CON	set	4017
   174  0000                     _T1CON	set	4045
   175  0000                     _CMCONbits	set	4020
   176  0000                     _CVRCON	set	4021
   177  0000                     _ADCON1	set	4033
   178  0000                     _ADCON0	set	4034
   179  0000                     _LATE	set	3981
   180  0000                     _LATD	set	3980
   181  0000                     _LATC	set	3979
   182  0000                     _LATB	set	3978
   183  0000                     _LATA	set	3977
   184  0000                     _TRISE	set	3990
   185  0000                     _TRISD	set	3989
   186  0000                     _TRISC	set	3988
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISA	set	3986
   189  0000                     _OSCCON	set	4051
   190  0000                     _ACKEN	set	32300
   191  0000                     _ACKDT	set	32301
   192  0000                     _RCEN	set	32299
   193  0000                     _PEN	set	32298
   194  0000                     _RSEN	set	32297
   195  0000                     _SEN	set	32296
   196  0000                     _TRISC4	set	31908
   197  0000                     _TRISC3	set	31907
   198  0000                     _ADON	set	32272
   199  0000                     _PEIE	set	32662
   200  0000                     _TMR3IE	set	32001
   201  0000                     _TMR1IE	set	31976
   202  0000                     _TMR3IF	set	32009
   203  0000                     _TMR3ON	set	32136
   204  0000                     _TMR1IF	set	31984
   205  0000                     _TMR1ON	set	32360
   206  0000                     _nRBPU	set	32655
   207  0000                     _ADFM	set	32263
   208  00102B                     STR_25:
   209  00102B  30                 	db	48	;'0'
   210  00102C  31                 	db	49	;'1'
   211  00102D  32                 	db	50	;'2'
   212  00102E  33                 	db	51	;'3'
   213  00102F  34                 	db	52	;'4'
   214  001030  35                 	db	53	;'5'
   215  001031  36                 	db	54	;'6'
   216  001032  37                 	db	55	;'7'
   217  001033  38                 	db	56	;'8'
   218  001034  39                 	db	57	;'9'
   219  001035  61                 	db	97	;'a'
   220  001036  62                 	db	98	;'b'
   221  001037  63                 	db	99	;'c'
   222  001038  64                 	db	100	;'d'
   223  001039  65                 	db	101	;'e'
   224  00103A  66                 	db	102	;'f'
   225  00103B  00                 	db	0
   226  00103C                     STR_1:
   227  00103C  25                 	db	37
   228  00103D  30                 	db	48	;'0'
   229  00103E  32                 	db	50	;'2'
   230  00103F  78                 	db	120	;'x'
   231  001040  2F                 	db	47
   232  001041  25                 	db	37
   233  001042  30                 	db	48	;'0'
   234  001043  32                 	db	50	;'2'
   235  001044  78                 	db	120	;'x'
   236  001045  2F                 	db	47
   237  001046  25                 	db	37
   238  001047  30                 	db	48	;'0'
   239  001048  32                 	db	50	;'2'
   240  001049  78                 	db	120	;'x'
   241  00104A  20                 	db	32
   242  00104B  00                 	db	0
   243  00104C                     STR_3:
   244  00104C  25                 	db	37
   245  00104D  30                 	db	48	;'0'
   246  00104E  32                 	db	50	;'2'
   247  00104F  78                 	db	120	;'x'
   248  001050  3A                 	db	58	;':'
   249  001051  25                 	db	37
   250  001052  30                 	db	48	;'0'
   251  001053  32                 	db	50	;'2'
   252  001054  78                 	db	120	;'x'
   253  001055  3A                 	db	58	;':'
   254  001056  25                 	db	37
   255  001057  30                 	db	48	;'0'
   256  001058  32                 	db	50	;'2'
   257  001059  78                 	db	120	;'x'
   258  00105A  20                 	db	32
   259  00105B  00                 	db	0
   260  00105C                     STR_5:
   261  00105C  49                 	db	73	;'I'
   262  00105D  6E                 	db	110	;'n'
   263  00105E  69                 	db	105	;'i'
   264  00105F  74                 	db	116	;'t'
   265  001060  69                 	db	105	;'i'
   266  001061  61                 	db	97	;'a'
   267  001062  6C                 	db	108	;'l'
   268  001063  69                 	db	105	;'i'
   269  001064  7A                 	db	122	;'z'
   270  001065  69                 	db	105	;'i'
   271  001066  6E                 	db	110	;'n'
   272  001067  67                 	db	103	;'g'
   273  001068  2E                 	db	46
   274  001069  2E                 	db	46
   275  00106A  2E                 	db	46
   276  00106B  00                 	db	0
   277  00106C                     STR_15:
   278  00106C  74                 	db	116	;'t'
   279  00106D  6F                 	db	111	;'o'
   280  00106E  74                 	db	116	;'t'
   281  00106F  61                 	db	97	;'a'
   282  001070  6C                 	db	108	;'l'
   283  001071  3A                 	db	58	;':'
   284  001072  20                 	db	32
   285  001073  25                 	db	37
   286  001074  30                 	db	48	;'0'
   287  001075  32                 	db	50	;'2'
   288  001076  64                 	db	100	;'d'
   289  001077  00                 	db	0
   290  001078                     STR_13:
   291  001078  20                 	db	32
   292  001079  43                 	db	67	;'C'
   293  00107A  3A                 	db	58	;':'
   294  00107B  20                 	db	32
   295  00107C  25                 	db	37
   296  00107D  30                 	db	48	;'0'
   297  00107E  32                 	db	50	;'2'
   298  00107F  64                 	db	100	;'d'
   299  001080  20                 	db	32
   300  001081  20                 	db	32
   301  001082  00                 	db	0
   302  001083                     STR_6:
   303  001083  53                 	db	83	;'S'
   304  001084  6F                 	db	111	;'o'
   305  001085  72                 	db	114	;'r'
   306  001086  74                 	db	116	;'t'
   307  001087  69                 	db	105	;'i'
   308  001088  6E                 	db	110	;'n'
   309  001089  67                 	db	103	;'g'
   310  00108A  2E                 	db	46
   311  00108B  2E                 	db	46
   312  00108C  2E                 	db	46
   313  00108D  00                 	db	0
   314  00108E                     STR_11:
   315  00108E  41                 	db	65	;'A'
   316  00108F  41                 	db	65	;'A'
   317  001090  3A                 	db	58	;':'
   318  001091  20                 	db	32
   319  001092  25                 	db	37
   320  001093  30                 	db	48	;'0'
   321  001094  32                 	db	50	;'2'
   322  001095  64                 	db	100	;'d'
   323  001096  20                 	db	32
   324  001097  00                 	db	0
   325  001098                     STR_12:
   326  001098  39                 	db	57	;'9'
   327  001099  56                 	db	86	;'V'
   328  00109A  3A                 	db	58	;':'
   329  00109B  20                 	db	32
   330  00109C  25                 	db	37
   331  00109D  30                 	db	48	;'0'
   332  00109E  32                 	db	50	;'2'
   333  00109F  64                 	db	100	;'d'
   334  0010A0  00                 	db	0
   335  0010A1                     STR_10:
   336  0010A1  20                 	db	32
   337  0010A2  73                 	db	115	;'s'
   338  0010A3  65                 	db	101	;'e'
   339  0010A4  63                 	db	99	;'c'
   340  0010A5  6F                 	db	111	;'o'
   341  0010A6  6E                 	db	110	;'n'
   342  0010A7  64                 	db	100	;'d'
   343  0010A8  73                 	db	115	;'s'
   344  0010A9  00                 	db	0
   345  0010AA                     STR_8:
   346  0010AA  20                 	db	32
   347  0010AB  6D                 	db	109	;'m'
   348  0010AC  69                 	db	105	;'i'
   349  0010AD  6E                 	db	110	;'n'
   350  0010AE  75                 	db	117	;'u'
   351  0010AF  74                 	db	116	;'t'
   352  0010B0  65                 	db	101	;'e'
   353  0010B1  73                 	db	115	;'s'
   354  0010B2  00                 	db	0
   355  0010B3                     STR_14:
   356  0010B3  58                 	db	88	;'X'
   357  0010B4  3A                 	db	58	;':'
   358  0010B5  20                 	db	32
   359  0010B6  25                 	db	37
   360  0010B7  30                 	db	48	;'0'
   361  0010B8  32                 	db	50	;'2'
   362  0010B9  64                 	db	100	;'d'
   363  0010BA  00                 	db	0
   364  0010BB                     STR_2:
   365  0010BB  31                 	db	49	;'1'
   366  0010BC  3A                 	db	58	;':'
   367  0010BD  53                 	db	83	;'S'
   368  0010BE  74                 	db	116	;'t'
   369  0010BF  61                 	db	97	;'a'
   370  0010C0  72                 	db	114	;'r'
   371  0010C1  74                 	db	116	;'t'
   372  0010C2  00                 	db	0
   373  0010C3                     STR_17:
   374  0010C3  20                 	db	32
   375  0010C4  6D                 	db	109	;'m'
   376  0010C5  69                 	db	105	;'i'
   377  0010C6  6E                 	db	110	;'n'
   378  0010C7  20                 	db	32
   379  0010C8  20                 	db	32
   380  0010C9  00                 	db	0
   381  0010CA                     STR_4:
   382  0010CA  32                 	db	50	;'2'
   383  0010CB  3A                 	db	58	;':'
   384  0010CC  4C                 	db	76	;'L'
   385  0010CD  6F                 	db	111	;'o'
   386  0010CE  67                 	db	103	;'g'
   387  0010CF  73                 	db	115	;'s'
   388  0010D0  00                 	db	0
   389  0010D1                     STR_19:
   390  0010D1  20                 	db	32
   391  0010D2  73                 	db	115	;'s'
   392  0010D3  65                 	db	101	;'e'
   393  0010D4  63                 	db	99	;'c'
   394  0010D5  00                 	db	0
   395  0000                     
   396                           ; #config settings
   397  0010D6  00                 	db	0	; dummy byte at the end
   398  0000                     
   399                           	psect	cinit
   400  0043CC                     __pcinit:
   401                           	opt stack 0
   402  0043CC                     start_initialization:
   403                           	opt stack 0
   404  0043CC                     __initialization:
   405                           	opt stack 0
   406                           
   407                           ; Clear objects allocated to BANK0 (20 bytes)
   408  0043CC  EE00  F0E8         	lfsr	0,__pbssBANK0
   409  0043D0  0E14               	movlw	20
   410  0043D2                     clear_0:
   411  0043D2  6AEE               	clrf	postinc0,c
   412  0043D4  06E8               	decf	wreg,f,c
   413  0043D6  E1FD               	bnz	clear_0
   414                           
   415                           ; Clear objects allocated to COMRAM (42 bytes)
   416  0043D8  EE00  F042         	lfsr	0,__pbssCOMRAM
   417  0043DC  0E2A               	movlw	42
   418  0043DE                     clear_1:
   419  0043DE  6AEE               	clrf	postinc0,c
   420  0043E0  06E8               	decf	wreg,f,c
   421  0043E2  E1FD               	bnz	clear_1
   422  0043E4                     end_of_initialization:
   423                           	opt stack 0
   424  0043E4                     __end_of__initialization:
   425                           	opt stack 0
   426  0043E4  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   427  0043E6  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   428  0043E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   429  0043EA  6EF8               	movwf	tblptru,c
   430  0043EC  0100               	movlb	0
   431  0043EE  EF6C  F008         	goto	_main	;jump to C main() function
   432                           tblptru	equ	0xFF8
   433                           postinc0	equ	0xFEE
   434                           wreg	equ	0xFE8
   435                           
   436                           	psect	bssCOMRAM
   437  000042                     __pbssCOMRAM:
   438                           	opt stack 0
   439  000042                     _voltage_C:
   440                           	opt stack 0
   441  000042                     	ds	3
   442  000045                     _voltage_9V:
   443                           	opt stack 0
   444  000045                     	ds	3
   445  000048                     _voltage_AA:
   446                           	opt stack 0
   447  000048                     	ds	3
   448  00004B                     _voltage_6:
   449                           	opt stack 0
   450  00004B                     	ds	3
   451  00004E                     _voltage_0:
   452                           	opt stack 0
   453  00004E                     	ds	3
   454  000051                     _count3:
   455                           	opt stack 0
   456  000051                     	ds	2
   457  000053                     _count1:
   458                           	opt stack 0
   459  000053                     	ds	2
   460  000055                     _down_period3:
   461                           	opt stack 0
   462  000055                     	ds	2
   463  000057                     _up_period3:
   464                           	opt stack 0
   465  000057                     	ds	2
   466  000059                     _down_period1:
   467                           	opt stack 0
   468  000059                     	ds	2
   469  00005B                     _up_period1:
   470                           	opt stack 0
   471  00005B                     	ds	2
   472  00005D                     _volt_check3:
   473                           	opt stack 0
   474  00005D                     	ds	1
   475  00005E                     _volt_check1:
   476                           	opt stack 0
   477  00005E                     	ds	1
   478  00005F                     _AA_or_9V:
   479                           	opt stack 0
   480  00005F                     	ds	1
   481  000060                     _gate_status3:
   482                           	opt stack 0
   483  000060                     	ds	1
   484  000061                     _gate_status1:
   485                           	opt stack 0
   486  000061                     	ds	1
   487  000062                     _stage3:
   488                           	opt stack 0
   489  000062                     	ds	1
   490  000063                     _stage1:
   491                           	opt stack 0
   492  000063                     	ds	1
   493  000064                     _current_state3:
   494                           	opt stack 0
   495  000064                     	ds	1
   496  000065                     _current_state1:
   497                           	opt stack 0
   498  000065                     	ds	1
   499  000066                     _voltage_2:
   500                           	opt stack 0
   501  000066                     	ds	3
   502  000069                     _voltage_1:
   503                           	opt stack 0
   504  000069                     	ds	3
   505                           tblptru	equ	0xFF8
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           
   509                           	psect	bssBANK0
   510  0000E8                     __pbssBANK0:
   511                           	opt stack 0
   512  0000E8                     _voltage_4:
   513                           	opt stack 0
   514  0000E8                     	ds	3
   515  0000EB                     _voltage_3:
   516                           	opt stack 0
   517  0000EB                     	ds	3
   518  0000EE                     _count_drained:
   519                           	opt stack 0
   520  0000EE                     	ds	2
   521  0000F0                     _count_C:
   522                           	opt stack 0
   523  0000F0                     	ds	2
   524  0000F2                     _count_9V:
   525                           	opt stack 0
   526  0000F2                     	ds	2
   527  0000F4                     _count_AA:
   528                           	opt stack 0
   529  0000F4                     	ds	2
   530  0000F6                     _process3:
   531                           	opt stack 0
   532  0000F6                     	ds	1
   533  0000F7                     _process1:
   534                           	opt stack 0
   535  0000F7                     	ds	1
   536  0000F8                     _init3:
   537                           	opt stack 0
   538  0000F8                     	ds	1
   539  0000F9                     _init1:
   540                           	opt stack 0
   541  0000F9                     	ds	1
   542  0000FA                     _isr3:
   543                           	opt stack 0
   544  0000FA                     	ds	1
   545  0000FB                     _isr1:
   546                           	opt stack 0
   547  0000FB                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           
   552                           	psect	cstackBANK0
   553  000080                     __pcstackBANK0:
   554                           	opt stack 0
   555  000080                     ??_Eeprom_ReadByte:
   556  000080                     ??_isdigit:
   557  000080                     ??_read:
   558  000080                     ??_I2C_Master_Wait:
   559  000080                     ?_delay_1s_interrupt:
   560                           	opt stack 0
   561  000080                     ?___wmul:
   562                           	opt stack 0
   563  000080                     ?___awdiv:
   564                           	opt stack 0
   565  000080                     ?___lwdiv:
   566                           	opt stack 0
   567  000080                     ?___ftpack:
   568                           	opt stack 0
   569  000080                     ?___lldiv:
   570                           	opt stack 0
   571  000080                     lcdNibble@temp:
   572                           	opt stack 0
   573  000080                     Eeprom_WriteByte@data:
   574                           	opt stack 0
   575  000080                     ___wmul@multiplier:
   576                           	opt stack 0
   577  000080                     ___awdiv@dividend:
   578                           	opt stack 0
   579  000080                     ___lwdiv@dividend:
   580                           	opt stack 0
   581  000080                     ___ftpack@arg:
   582                           	opt stack 0
   583  000080                     ___ftge@ff1:
   584                           	opt stack 0
   585  000080                     ___lldiv@dividend:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x0
   589  000080                     	ds	1
   590  000081                     ??_Eeprom_WriteByte:
   591  000081                     read@channel2:
   592                           	opt stack 0
   593  000081                     lcdNibble@data:
   594                           	opt stack 0
   595  000081                     I2C_Master_Read@a:
   596                           	opt stack 0
   597  000081                     _isdigit$1184:
   598                           	opt stack 0
   599  000081                     I2C_Master_Write@d:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1
   603  000081                     	ds	1
   604  000082                     ??_delay_1s_interrupt:
   605  000082                     lcdInst@data:
   606                           	opt stack 0
   607  000082                     putch@data:
   608                           	opt stack 0
   609  000082                     Eeprom_ReadByte@address:
   610                           	opt stack 0
   611  000082                     I2C_Master_Read@temp:
   612                           	opt stack 0
   613  000082                     isdigit@c:
   614                           	opt stack 0
   615  000082                     ___wmul@multiplicand:
   616                           	opt stack 0
   617  000082                     ___awdiv@divisor:
   618                           	opt stack 0
   619  000082                     ___lwdiv@divisor:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2
   623  000082                     	ds	1
   624  000083                     ??_initLCD:
   625  000083                     Eeprom_WriteByte@address:
   626                           	opt stack 0
   627  000083                     ___ftpack@exp:
   628                           	opt stack 0
   629  000083                     ___ftge@ff2:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x3
   633  000083                     	ds	1
   634  000084                     ___awdiv@counter:
   635                           	opt stack 0
   636  000084                     ___ftpack@sign:
   637                           	opt stack 0
   638  000084                     ___wmul@product:
   639                           	opt stack 0
   640  000084                     ___lwdiv@quotient:
   641                           	opt stack 0
   642  000084                     ___lldiv@divisor:
   643                           	opt stack 0
   644                           
   645                           ; 4 bytes @ 0x4
   646  000084                     	ds	1
   647  000085                     ??___ftpack:
   648  000085                     delay_1s_interrupt@n:
   649                           	opt stack 0
   650  000085                     ___awdiv@sign:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x5
   654  000085                     	ds	1
   655  000086                     ??___ftge:
   656  000086                     delay_1s_interrupt@i:
   657                           	opt stack 0
   658  000086                     ___lwdiv@counter:
   659                           	opt stack 0
   660  000086                     ___awdiv@quotient:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x6
   664  000086                     	ds	1
   665  000087                     ?___lwmod:
   666                           	opt stack 0
   667  000087                     ___lwmod@dividend:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x7
   671  000087                     	ds	1
   672  000088                     ?___ftmul:
   673                           	opt stack 0
   674  000088                     ?___lwtoft:
   675                           	opt stack 0
   676  000088                     set_external_interrupt1@time:
   677                           	opt stack 0
   678  000088                     set_external_interrupt3@time:
   679                           	opt stack 0
   680  000088                     ___lwtoft@c:
   681                           	opt stack 0
   682  000088                     ___ftmul@f1:
   683                           	opt stack 0
   684  000088                     ___lldiv@quotient:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x8
   688  000088                     	ds	1
   689  000089                     ___lwmod@divisor:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x9
   693  000089                     	ds	1
   694  00008A                     set_external_interrupt1@set_time:
   695                           	opt stack 0
   696  00008A                     set_external_interrupt3@set_time:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0xA
   700  00008A                     	ds	1
   701  00008B                     ?___ftadd:
   702                           	opt stack 0
   703  00008B                     ___lwmod@counter:
   704                           	opt stack 0
   705  00008B                     ___ftadd@f1:
   706                           	opt stack 0
   707  00008B                     ___ftmul@f2:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0xB
   711  00008B                     	ds	1
   712  00008C                     ?_printf:
   713                           	opt stack 0
   714  00008C                     ___lldiv@counter:
   715                           	opt stack 0
   716  00008C                     printf@f:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0xC
   720  00008C                     	ds	1
   721  00008D                     I2C_Master_Init@c:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0xD
   725  00008D                     	ds	1
   726  00008E                     ??___ftmul:
   727  00008E                     ___ftadd@f2:
   728                           	opt stack 0
   729                           
   730                           ; 3 bytes @ 0xE
   731  00008E                     	ds	3
   732  000091                     ??_I2C_Master_Init:
   733  000091                     ??___ftadd:
   734  000091                     ___ftmul@exp:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x11
   738  000091                     	ds	1
   739  000092                     ___ftmul@f3_as_product:
   740                           	opt stack 0
   741                           
   742                           ; 3 bytes @ 0x12
   743  000092                     	ds	2
   744  000094                     ??_printf:
   745  000094                     ___ftadd@sign:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x14
   749  000094                     	ds	1
   750  000095                     ___ftadd@exp2:
   751                           	opt stack 0
   752  000095                     ___ftmul@cntr:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x15
   756  000095                     	ds	1
   757  000096                     ___ftadd@exp1:
   758                           	opt stack 0
   759  000096                     ___ftmul@sign:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x16
   763  000096                     	ds	1
   764  000097                     ?___ftdiv:
   765                           	opt stack 0
   766  000097                     ?_abs:
   767                           	opt stack 0
   768  000097                     abs@num:
   769                           	opt stack 0
   770  000097                     ___ftdiv@f1:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x17
   774  000097                     	ds	1
   775  000098                     printf@idx:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x18
   779  000098                     	ds	1
   780  000099                     printf@ap:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x19
   784  000099                     	ds	1
   785  00009A                     ___ftdiv@f2:
   786                           	opt stack 0
   787                           
   788                           ; 3 bytes @ 0x1A
   789  00009A                     	ds	1
   790  00009B                     printf@prec:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x1B
   794  00009B                     	ds	1
   795  00009C                     printf@val:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x1C
   799  00009C                     	ds	1
   800  00009D                     ??___ftdiv:
   801                           
   802                           ; 1 bytes @ 0x1D
   803  00009D                     	ds	1
   804  00009E                     printf@flag:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x1E
   808  00009E                     	ds	1
   809  00009F                     printf@width:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x1F
   813  00009F                     	ds	1
   814  0000A0                     ___ftdiv@cntr:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x20
   818  0000A0                     	ds	1
   819  0000A1                     printf@c:
   820                           	opt stack 0
   821  0000A1                     ___ftdiv@f3:
   822                           	opt stack 0
   823                           
   824                           ; 3 bytes @ 0x21
   825  0000A1                     	ds	3
   826  0000A4                     ___ftdiv@exp:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x24
   830  0000A4                     	ds	1
   831  0000A5                     ___ftdiv@sign:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x25
   835  0000A5                     	ds	1
   836  0000A6                     ?_readADC:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x26
   840  0000A6                     	ds	3
   841  0000A9                     readADC@volt:
   842                           	opt stack 0
   843                           
   844                           ; 3 bytes @ 0x29
   845  0000A9                     	ds	3
   846  0000AC                     readADC@i:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x2C
   850  0000AC                     	ds	1
   851  0000AD                     readADC@a:
   852                           	opt stack 0
   853                           
   854                           ; 3 bytes @ 0x2D
   855  0000AD                     	ds	3
   856  0000B0                     readADC@channel:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x30
   860  0000B0                     	ds	1
   861  0000B1                     ??_main:
   862                           
   863                           ; 1 bytes @ 0x31
   864  0000B1                     	ds	2
   865  0000B3                     main@eeprom_min:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x33
   869  0000B3                     	ds	1
   870  0000B4                     main@eeprom_seconds:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x34
   874  0000B4                     	ds	1
   875  0000B5                     main@eeprom_AA:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x35
   879  0000B5                     	ds	1
   880  0000B6                     main@eeprom_9V:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x36
   884  0000B6                     	ds	1
   885  0000B7                     main@eeprom_C:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x37
   889  0000B7                     	ds	1
   890  0000B8                     main@eeprom_drained:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0x38
   894  0000B8                     	ds	1
   895  0000B9                     main@eeprom_total:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x39
   899  0000B9                     	ds	1
   900  0000BA                     main@past_min:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x3A
   904  0000BA                     	ds	1
   905  0000BB                     main@past_seconds:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x3B
   909  0000BB                     	ds	1
   910  0000BC                     main@past_total:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x3C
   914  0000BC                     	ds	1
   915  0000BD                     main@past_AA:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x3D
   919  0000BD                     	ds	1
   920  0000BE                     main@past_9V:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x3E
   924  0000BE                     	ds	1
   925  0000BF                     main@past_C:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x3F
   929  0000BF                     	ds	1
   930  0000C0                     main@past_drained:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x40
   934  0000C0                     	ds	1
   935  0000C1                     main@flag_interrupt:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x41
   939  0000C1                     	ds	1
   940  0000C2                     main@done:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x42
   944  0000C2                     	ds	1
   945  0000C3                     main@loop_count:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x43
   949  0000C3                     	ds	2
   950  0000C5                     main@i:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x45
   954  0000C5                     	ds	1
   955  0000C6                     main@i_431:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x46
   959  0000C6                     	ds	1
   960  0000C7                     main@i_432:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x47
   964  0000C7                     	ds	1
   965  0000C8                     main@i_435:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x48
   969  0000C8                     	ds	1
   970  0000C9                     main@i_440:
   971                           	opt stack 0
   972                           
   973                           ; 1 bytes @ 0x49
   974  0000C9                     	ds	1
   975  0000CA                     main@i_441:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0x4A
   979  0000CA                     	ds	1
   980  0000CB                     main@i_446:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x4B
   984  0000CB                     	ds	1
   985  0000CC                     main@i_447:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x4C
   989  0000CC                     	ds	1
   990  0000CD                     main@i_449:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x4D
   994  0000CD                     	ds	1
   995  0000CE                     main@i_450:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x4E
   999  0000CE                     	ds	1
  1000  0000CF                     main@time:
  1001                           	opt stack 0
  1002                           
  1003                           ; 7 bytes @ 0x4F
  1004  0000CF                     	ds	7
  1005  0000D6                     main@j:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x56
  1009  0000D6                     	ds	1
  1010  0000D7                     main@k:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x57
  1014  0000D7                     	ds	1
  1015  0000D8                     main@k_433:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x58
  1019  0000D8                     	ds	1
  1020  0000D9                     main@k_434:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x59
  1024  0000D9                     	ds	1
  1025  0000DA                     main@count_min_initial:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x5A
  1029  0000DA                     	ds	1
  1030  0000DB                     main@count_seconds_initial:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x5B
  1034  0000DB                     	ds	1
  1035  0000DC                     main@keypress:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x5C
  1039  0000DC                     	ds	1
  1040  0000DD                     main@count_min_final:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x5D
  1044  0000DD                     	ds	1
  1045  0000DE                     main@count_seconds_final:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x5E
  1049  0000DE                     	ds	1
  1050  0000DF                     main@count_seconds:
  1051                           	opt stack 0
  1052                           
  1053                           ; 1 bytes @ 0x5F
  1054  0000DF                     	ds	1
  1055  0000E0                     main@address_seconds:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x60
  1059  0000E0                     	ds	1
  1060  0000E1                     main@address_AA:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0x61
  1064  0000E1                     	ds	1
  1065  0000E2                     main@address_9V:
  1066                           	opt stack 0
  1067                           
  1068                           ; 1 bytes @ 0x62
  1069  0000E2                     	ds	1
  1070  0000E3                     main@address_C:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x63
  1074  0000E3                     	ds	1
  1075  0000E4                     main@address_drained:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0x64
  1079  0000E4                     	ds	1
  1080  0000E5                     main@address_total:
  1081                           	opt stack 0
  1082                           
  1083                           ; 1 bytes @ 0x65
  1084  0000E5                     	ds	1
  1085  0000E6                     main@count_min:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x66
  1089  0000E6                     	ds	1
  1090  0000E7                     main@address_min:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x67
  1094  0000E7                     	ds	1
  1095                           tblptru	equ	0xFF8
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           
  1099                           	psect	cstackCOMRAM
  1100  000001                     __pcstackCOMRAM:
  1101                           	opt stack 0
  1102  000001                     ??i2_read:
  1103  000001                     ?i2___awdiv:
  1104                           	opt stack 0
  1105  000001                     ?i2___ftpack:
  1106                           	opt stack 0
  1107  000001                     i2___awdiv@dividend:
  1108                           	opt stack 0
  1109  000001                     i2___ftpack@arg:
  1110                           	opt stack 0
  1111  000001                     i2___ftge@ff1:
  1112                           	opt stack 0
  1113                           
  1114                           ; 3 bytes @ 0x0
  1115  000001                     	ds	1
  1116  000002                     i2read@channel2:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x1
  1120  000002                     	ds	1
  1121  000003                     i2___awdiv@divisor:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0x2
  1125  000003                     	ds	1
  1126  000004                     i2___ftpack@exp:
  1127                           	opt stack 0
  1128  000004                     i2___ftge@ff2:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x3
  1132  000004                     	ds	1
  1133  000005                     i2___awdiv@counter:
  1134                           	opt stack 0
  1135  000005                     i2___ftpack@sign:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x4
  1139  000005                     	ds	1
  1140  000006                     ??i2___ftpack:
  1141  000006                     i2___awdiv@sign:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x5
  1145  000006                     	ds	1
  1146  000007                     ??i2___ftge:
  1147  000007                     i2___awdiv@quotient:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x6
  1151  000007                     	ds	2
  1152  000009                     ?i2___ftmul:
  1153                           	opt stack 0
  1154  000009                     ?i2___lwtoft:
  1155                           	opt stack 0
  1156  000009                     i2set_external_interrupt1@time:
  1157                           	opt stack 0
  1158  000009                     i2set_external_interrupt3@time:
  1159                           	opt stack 0
  1160  000009                     i2___lwtoft@c:
  1161                           	opt stack 0
  1162  000009                     i2___ftmul@f1:
  1163                           	opt stack 0
  1164                           
  1165                           ; 3 bytes @ 0x8
  1166  000009                     	ds	2
  1167  00000B                     i2set_external_interrupt1@set_time:
  1168                           	opt stack 0
  1169  00000B                     i2set_external_interrupt3@set_time:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0xA
  1173  00000B                     	ds	1
  1174  00000C                     ?i2___ftadd:
  1175                           	opt stack 0
  1176  00000C                     i2___ftadd@f1:
  1177                           	opt stack 0
  1178  00000C                     i2___ftmul@f2:
  1179                           	opt stack 0
  1180                           
  1181                           ; 3 bytes @ 0xB
  1182  00000C                     	ds	3
  1183  00000F                     ??i2___ftmul:
  1184  00000F                     i2___ftadd@f2:
  1185                           	opt stack 0
  1186                           
  1187                           ; 3 bytes @ 0xE
  1188  00000F                     	ds	3
  1189  000012                     ??i2___ftadd:
  1190  000012                     i2___ftmul@exp:
  1191                           	opt stack 0
  1192                           
  1193                           ; 1 bytes @ 0x11
  1194  000012                     	ds	1
  1195  000013                     i2___ftmul@f3_as_product:
  1196                           	opt stack 0
  1197                           
  1198                           ; 3 bytes @ 0x12
  1199  000013                     	ds	2
  1200  000015                     i2___ftadd@sign:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x14
  1204  000015                     	ds	1
  1205  000016                     i2___ftadd@exp2:
  1206                           	opt stack 0
  1207  000016                     i2___ftmul@cntr:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x15
  1211  000016                     	ds	1
  1212  000017                     i2___ftadd@exp1:
  1213                           	opt stack 0
  1214  000017                     i2___ftmul@sign:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x16
  1218  000017                     	ds	1
  1219  000018                     ?i2_abs:
  1220                           	opt stack 0
  1221  000018                     ?i2___ftdiv:
  1222                           	opt stack 0
  1223  000018                     i2abs@num:
  1224                           	opt stack 0
  1225  000018                     i2___ftdiv@f1:
  1226                           	opt stack 0
  1227                           
  1228                           ; 3 bytes @ 0x17
  1229  000018                     	ds	3
  1230  00001B                     i2___ftdiv@f2:
  1231                           	opt stack 0
  1232                           
  1233                           ; 3 bytes @ 0x1A
  1234  00001B                     	ds	3
  1235  00001E                     ??i2___ftdiv:
  1236                           
  1237                           ; 1 bytes @ 0x1D
  1238  00001E                     	ds	3
  1239  000021                     i2___ftdiv@cntr:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x20
  1243  000021                     	ds	1
  1244  000022                     i2___ftdiv@f3:
  1245                           	opt stack 0
  1246                           
  1247                           ; 3 bytes @ 0x21
  1248  000022                     	ds	3
  1249  000025                     i2___ftdiv@exp:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x24
  1253  000025                     	ds	1
  1254  000026                     i2___ftdiv@sign:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x25
  1258  000026                     	ds	1
  1259  000027                     ?i2_readADC:
  1260                           	opt stack 0
  1261                           
  1262                           ; 3 bytes @ 0x26
  1263  000027                     	ds	3
  1264  00002A                     i2readADC@volt:
  1265                           	opt stack 0
  1266                           
  1267                           ; 3 bytes @ 0x29
  1268  00002A                     	ds	3
  1269  00002D                     i2readADC@i:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x2C
  1273  00002D                     	ds	1
  1274  00002E                     i2readADC@a:
  1275                           	opt stack 0
  1276                           
  1277                           ; 3 bytes @ 0x2D
  1278  00002E                     	ds	3
  1279  000031                     i2readADC@channel:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x30
  1283  000031                     	ds	1
  1284  000032                     ??_servo_ISR_1:
  1285  000032                     ??_servo_ISR_3:
  1286                           
  1287                           ; 1 bytes @ 0x31
  1288  000032                     	ds	2
  1289  000034                     ??_IRQ:
  1290                           
  1291                           ; 1 bytes @ 0x33
  1292  000034                     	ds	14
  1293                           tblptru	equ	0xFF8
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           
  1297 ;;
  1298 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1299 ;;
  1300 ;; *************** function _main *****************
  1301 ;; Defined at:
  1302 ;;		line 95 in file "main.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  i               1   71[BANK0 ] unsigned char 
  1307 ;;  i               1   70[BANK0 ] unsigned char 
  1308 ;;  i               1   69[BANK0 ] unsigned char 
  1309 ;;  k               1   88[BANK0 ] unsigned char 
  1310 ;;  i               1   78[BANK0 ] unsigned char 
  1311 ;;  i               1   77[BANK0 ] unsigned char 
  1312 ;;  i               1   76[BANK0 ] unsigned char 
  1313 ;;  i               1   75[BANK0 ] unsigned char 
  1314 ;;  i               1   74[BANK0 ] unsigned char 
  1315 ;;  i               1   73[BANK0 ] unsigned char 
  1316 ;;  i               1   72[BANK0 ] unsigned char 
  1317 ;;  k               1   89[BANK0 ] unsigned char 
  1318 ;;  k               1   87[BANK0 ] unsigned char 
  1319 ;;  j               1   86[BANK0 ] unsigned char 
  1320 ;;  loop_count      2   67[BANK0 ] int 
  1321 ;;  address_min     1  103[BANK0 ] unsigned char 
  1322 ;;  count_min       1  102[BANK0 ] char 
  1323 ;;  address_tota    1  101[BANK0 ] unsigned char 
  1324 ;;  address_drai    1  100[BANK0 ] unsigned char 
  1325 ;;  address_C       1   99[BANK0 ] unsigned char 
  1326 ;;  address_9V      1   98[BANK0 ] unsigned char 
  1327 ;;  address_AA      1   97[BANK0 ] unsigned char 
  1328 ;;  address_seco    1   96[BANK0 ] unsigned char 
  1329 ;;  count_second    1   95[BANK0 ] char 
  1330 ;;  count_second    1   94[BANK0 ] unsigned char 
  1331 ;;  count_min_fi    1   93[BANK0 ] unsigned char 
  1332 ;;  keypress        1   92[BANK0 ] unsigned char 
  1333 ;;  count_second    1   91[BANK0 ] unsigned char 
  1334 ;;  count_min_in    1   90[BANK0 ] unsigned char 
  1335 ;;  done            1   66[BANK0 ] unsigned char 
  1336 ;;  flag_interru    1   65[BANK0 ] unsigned char 
  1337 ;;  past_drained    1   64[BANK0 ] char 
  1338 ;;  past_C          1   63[BANK0 ] char 
  1339 ;;  past_9V         1   62[BANK0 ] char 
  1340 ;;  past_AA         1   61[BANK0 ] char 
  1341 ;;  past_total      1   60[BANK0 ] char 
  1342 ;;  past_seconds    1   59[BANK0 ] char 
  1343 ;;  past_min        1   58[BANK0 ] char 
  1344 ;;  eeprom_total    1   57[BANK0 ] char 
  1345 ;;  eeprom_drain    1   56[BANK0 ] char 
  1346 ;;  eeprom_C        1   55[BANK0 ] char 
  1347 ;;  eeprom_9V       1   54[BANK0 ] char 
  1348 ;;  eeprom_AA       1   53[BANK0 ] char 
  1349 ;;  eeprom_secon    1   52[BANK0 ] char 
  1350 ;;  eeprom_min      1   51[BANK0 ] char 
  1351 ;;  time            7   79[BANK0 ] unsigned char [7]
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Locals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Totals:         0      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;Total ram usage:       55 bytes
  1366 ;; Hardware stack levels required when called:   10
  1367 ;; This function calls:
  1368 ;;		_Eeprom_ReadByte
  1369 ;;		_Eeprom_WriteByte
  1370 ;;		_I2C_Master_Init
  1371 ;;		_I2C_Master_Read
  1372 ;;		_I2C_Master_Start
  1373 ;;		_I2C_Master_Stop
  1374 ;;		_I2C_Master_Write
  1375 ;;		___ftge
  1376 ;;		_delay_1s_interrupt
  1377 ;;		_initLCD
  1378 ;;		_lcdInst
  1379 ;;		_printf
  1380 ;;		_readADC
  1381 ;;		_set_external_interrupt1
  1382 ;;		_set_external_interrupt3
  1383 ;; This function is called by:
  1384 ;;		Startup code after reset
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text0
  1389  0010D8                     __ptext0:
  1390                           	opt stack 0
  1391  0010D8                     _main:
  1392                           	opt stack 21
  1393                           
  1394                           ;main.c: 96: OSCCON = 0xF0;
  1395                           
  1396                           ;incstack = 0
  1397  0010D8  0EF0               	movlw	240
  1398  0010DA  6ED3               	movwf	4051,c	;volatile
  1399                           
  1400                           ;main.c: 100: TRISA = 0xFF;
  1401  0010DC  6892               	setf	3986,c	;volatile
  1402                           
  1403                           ;main.c: 101: TRISB = 0xFF;
  1404  0010DE  6893               	setf	3987,c	;volatile
  1405                           
  1406                           ;main.c: 102: TRISC = 0x00;
  1407  0010E0  0E00               	movlw	0
  1408  0010E2  6E94               	movwf	3988,c	;volatile
  1409                           
  1410                           ;main.c: 103: TRISD = 0x00;
  1411  0010E4  0E00               	movlw	0
  1412  0010E6  6E95               	movwf	3989,c	;volatile
  1413                           
  1414                           ;main.c: 104: TRISE = 0b00000011;
  1415  0010E8  0E03               	movlw	3
  1416  0010EA  6E96               	movwf	3990,c	;volatile
  1417                           
  1418                           ;main.c: 106: LATA = 0x00;
  1419  0010EC  0E00               	movlw	0
  1420  0010EE  6E89               	movwf	3977,c	;volatile
  1421                           
  1422                           ;main.c: 107: LATB = 0x00;
  1423  0010F0  0E00               	movlw	0
  1424  0010F2  6E8A               	movwf	3978,c	;volatile
  1425                           
  1426                           ;main.c: 108: LATC = 0x00;
  1427  0010F4  0E00               	movlw	0
  1428  0010F6  6E8B               	movwf	3979,c	;volatile
  1429                           
  1430                           ;main.c: 109: LATD = 0x00;
  1431  0010F8  0E00               	movlw	0
  1432  0010FA  6E8C               	movwf	3980,c	;volatile
  1433                           
  1434                           ;main.c: 110: LATE = 0x00;
  1435  0010FC  0E00               	movlw	0
  1436  0010FE  6E8D               	movwf	3981,c	;volatile
  1437                           
  1438                           ;main.c: 112: ADCON0 = 0x00;
  1439  001100  0E00               	movlw	0
  1440  001102  6EC2               	movwf	4034,c	;volatile
  1441                           
  1442                           ;main.c: 113: ADCON1 = 0b00001000;
  1443  001104  0E08               	movlw	8
  1444  001106  6EC1               	movwf	4033,c	;volatile
  1445                           
  1446                           ;main.c: 114: CVRCON = 0x00;
  1447  001108  0E00               	movlw	0
  1448  00110A  6EB5               	movwf	4021,c	;volatile
  1449                           
  1450                           ;main.c: 115: CMCONbits.CIS = 0;
  1451  00110C  96B4               	bcf	4020,3,c	;volatile
  1452                           
  1453                           ;main.c: 116: ADFM = 1;
  1454  00110E  8EC0               	bsf	4032,7,c	;volatile
  1455                           
  1456                           ;main.c: 118: nRBPU = 0;
  1457  001110  9EF1               	bcf	intcon2,7,c	;volatile
  1458                           
  1459                           ;main.c: 122: T1CON = 0b10100100;
  1460  001112  0EA4               	movlw	164
  1461  001114  6ECD               	movwf	4045,c	;volatile
  1462                           
  1463                           ;main.c: 123: T3CON = 0b10100100;
  1464  001116  0EA4               	movlw	164
  1465  001118  6EB1               	movwf	4017,c	;volatile
  1466                           
  1467                           ;main.c: 131: TMR1ON = 0;
  1468  00111A  90CD               	bcf	4045,0,c	;volatile
  1469                           
  1470                           ;main.c: 132: TMR1IF = 0;
  1471  00111C  909E               	bcf	3998,0,c	;volatile
  1472                           
  1473                           ;main.c: 133: TMR3ON = 0;
  1474  00111E  90B1               	bcf	4017,0,c	;volatile
  1475                           
  1476                           ;main.c: 134: TMR3IF = 0;
  1477  001120  92A1               	bcf	4001,1,c	;volatile
  1478                           
  1479                           ;main.c: 135: TMR1IE = 1;
  1480  001122  809D               	bsf	3997,0,c	;volatile
  1481                           
  1482                           ;main.c: 136: TMR3IE = 1;
  1483  001124  82A0               	bsf	4000,1,c	;volatile
  1484                           
  1485                           ;main.c: 137: PEIE = 1;
  1486  001126  8CF2               	bsf	intcon,6,c	;volatile
  1487                           
  1488                           ;main.c: 139: unsigned char time[7];
  1489                           ;main.c: 140: I2C_Master_Init(10000);
  1490  001128  0E10               	movlw	16
  1491  00112A  0100               	movlb	0	; () banked
  1492  00112C  6F8D               	movwf	I2C_Master_Init@c& (0+255),b
  1493  00112E  0E27               	movlw	39
  1494  001130  6F8E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  1495  001132  0E00               	movlw	0
  1496  001134  6F8F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  1497  001136  0E00               	movlw	0
  1498  001138  6F90               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  1499  00113A  EC63  F020         	call	_I2C_Master_Init	;wreg free
  1500                           
  1501                           ;main.c: 145: initLCD();
  1502  00113E  EC17  F021         	call	_initLCD	;wreg free
  1503  001142                     l5284:
  1504                           
  1505                           ;main.c: 149: (INTCONbits.GIE = 1);
  1506  001142  8EF2               	bsf	intcon,7,c	;volatile
  1507                           
  1508                           ;main.c: 150: isr1 = 0;
  1509  001144  0E00               	movlw	0
  1510  001146  0100               	movlb	0	; () banked
  1511  001148  6FFB               	movwf	_isr1& (0+255),b	;volatile
  1512                           
  1513                           ;main.c: 151: isr3 = 0;
  1514  00114A  0E00               	movlw	0
  1515  00114C  0100               	movlb	0	; () banked
  1516  00114E  6FFA               	movwf	_isr3& (0+255),b	;volatile
  1517                           
  1518                           ;main.c: 152: current_state1 = 0;
  1519  001150  0E00               	movlw	0
  1520  001152  6E65               	movwf	_current_state1,c	;volatile
  1521                           
  1522                           ;main.c: 153: current_state3 = 0;
  1523  001154  0E00               	movlw	0
  1524  001156  6E64               	movwf	_current_state3,c	;volatile
  1525                           
  1526                           ;main.c: 155: stage1 = 4;
  1527  001158  0E04               	movlw	4
  1528  00115A  6E63               	movwf	_stage1,c	;volatile
  1529                           
  1530                           ;main.c: 156: stage3 = 4;
  1531  00115C  0E04               	movlw	4
  1532  00115E  6E62               	movwf	_stage3,c	;volatile
  1533                           
  1534                           ;main.c: 158: count1 = 0;
  1535  001160  0E00               	movlw	0
  1536  001162  6E54               	movwf	_count1+1,c	;volatile
  1537  001164  0E00               	movlw	0
  1538  001166  6E53               	movwf	_count1,c	;volatile
  1539                           
  1540                           ;main.c: 159: count3 = 0;
  1541  001168  0E00               	movlw	0
  1542  00116A  6E52               	movwf	_count3+1,c	;volatile
  1543  00116C  0E00               	movlw	0
  1544  00116E  6E51               	movwf	_count3,c	;volatile
  1545                           
  1546                           ;main.c: 161: gate_status1 = 1;
  1547  001170  0E01               	movlw	1
  1548  001172  6E61               	movwf	_gate_status1,c	;volatile
  1549                           
  1550                           ;main.c: 162: gate_status3 = 1;
  1551  001174  0E01               	movlw	1
  1552  001176  6E60               	movwf	_gate_status3,c	;volatile
  1553                           
  1554                           ;main.c: 163: init1 = 0;
  1555  001178  0E00               	movlw	0
  1556  00117A  0100               	movlb	0	; () banked
  1557  00117C  6FF9               	movwf	_init1& (0+255),b	;volatile
  1558                           
  1559                           ;main.c: 164: init3 = 0;
  1560  00117E  0E00               	movlw	0
  1561  001180  0100               	movlb	0	; () banked
  1562  001182  6FF8               	movwf	_init3& (0+255),b	;volatile
  1563                           
  1564                           ;main.c: 165: voltage_0 = 0;
  1565  001184  0E00               	movlw	0
  1566  001186  6E4E               	movwf	_voltage_0,c	;volatile
  1567  001188  0E00               	movlw	0
  1568  00118A  6E4F               	movwf	_voltage_0+1,c	;volatile
  1569  00118C  0E00               	movlw	0
  1570  00118E  6E50               	movwf	_voltage_0+2,c	;volatile
  1571                           
  1572                           ;main.c: 166: voltage_1 = 0;
  1573  001190  0E00               	movlw	0
  1574  001192  6E69               	movwf	_voltage_1,c	;volatile
  1575  001194  0E00               	movlw	0
  1576  001196  6E6A               	movwf	_voltage_1+1,c	;volatile
  1577  001198  0E00               	movlw	0
  1578  00119A  6E6B               	movwf	_voltage_1+2,c	;volatile
  1579                           
  1580                           ;main.c: 167: voltage_2 = 0;
  1581  00119C  0E00               	movlw	0
  1582  00119E  6E66               	movwf	_voltage_2,c	;volatile
  1583  0011A0  0E00               	movlw	0
  1584  0011A2  6E67               	movwf	_voltage_2+1,c	;volatile
  1585  0011A4  0E00               	movlw	0
  1586  0011A6  6E68               	movwf	_voltage_2+2,c	;volatile
  1587                           
  1588                           ;main.c: 168: voltage_3 = 0;
  1589  0011A8  0E00               	movlw	0
  1590  0011AA  0100               	movlb	0	; () banked
  1591  0011AC  6FEB               	movwf	_voltage_3& (0+255),b	;volatile
  1592  0011AE  0E00               	movlw	0
  1593  0011B0  0100               	movlb	0	; () banked
  1594  0011B2  6FEC               	movwf	(_voltage_3+1)& (0+255),b	;volatile
  1595  0011B4  0E00               	movlw	0
  1596  0011B6  0100               	movlb	0	; () banked
  1597  0011B8  6FED               	movwf	(_voltage_3+2)& (0+255),b	;volatile
  1598                           
  1599                           ;main.c: 169: voltage_AA = 0;
  1600  0011BA  0E00               	movlw	0
  1601  0011BC  6E48               	movwf	_voltage_AA,c	;volatile
  1602  0011BE  0E00               	movlw	0
  1603  0011C0  6E49               	movwf	_voltage_AA+1,c	;volatile
  1604  0011C2  0E00               	movlw	0
  1605  0011C4  6E4A               	movwf	_voltage_AA+2,c	;volatile
  1606                           
  1607                           ;main.c: 170: voltage_9V =0;
  1608  0011C6  0E00               	movlw	0
  1609  0011C8  6E45               	movwf	_voltage_9V,c	;volatile
  1610  0011CA  0E00               	movlw	0
  1611  0011CC  6E46               	movwf	_voltage_9V+1,c	;volatile
  1612  0011CE  0E00               	movlw	0
  1613  0011D0  6E47               	movwf	_voltage_9V+2,c	;volatile
  1614                           
  1615                           ;main.c: 171: voltage_C = 0;
  1616  0011D2  0E00               	movlw	0
  1617  0011D4  6E42               	movwf	_voltage_C,c	;volatile
  1618  0011D6  0E00               	movlw	0
  1619  0011D8  6E43               	movwf	_voltage_C+1,c	;volatile
  1620  0011DA  0E00               	movlw	0
  1621  0011DC  6E44               	movwf	_voltage_C+2,c	;volatile
  1622                           
  1623                           ;main.c: 172: AA_or_9V = 0;
  1624  0011DE  0E00               	movlw	0
  1625  0011E0  6E5F               	movwf	_AA_or_9V,c	;volatile
  1626                           
  1627                           ;main.c: 174: volt_check1 = 0;
  1628  0011E2  0E00               	movlw	0
  1629  0011E4  6E5E               	movwf	_volt_check1,c	;volatile
  1630                           
  1631                           ;main.c: 175: volt_check3 = 0;
  1632  0011E6  0E00               	movlw	0
  1633  0011E8  6E5D               	movwf	_volt_check3,c	;volatile
  1634                           
  1635                           ;main.c: 176: count_AA = 0;
  1636  0011EA  0E00               	movlw	0
  1637  0011EC  0100               	movlb	0	; () banked
  1638  0011EE  6FF5               	movwf	(_count_AA+1)& (0+255),b	;volatile
  1639  0011F0  0E00               	movlw	0
  1640  0011F2  6FF4               	movwf	_count_AA& (0+255),b	;volatile
  1641                           
  1642                           ;main.c: 177: count_9V = 0;
  1643  0011F4  0E00               	movlw	0
  1644  0011F6  0100               	movlb	0	; () banked
  1645  0011F8  6FF3               	movwf	(_count_9V+1)& (0+255),b	;volatile
  1646  0011FA  0E00               	movlw	0
  1647  0011FC  6FF2               	movwf	_count_9V& (0+255),b	;volatile
  1648                           
  1649                           ;main.c: 178: count_C = 0;
  1650  0011FE  0E00               	movlw	0
  1651  001200  0100               	movlb	0	; () banked
  1652  001202  6FF1               	movwf	(_count_C+1)& (0+255),b	;volatile
  1653  001204  0E00               	movlw	0
  1654  001206  6FF0               	movwf	_count_C& (0+255),b	;volatile
  1655                           
  1656                           ;main.c: 179: count_drained = 0;
  1657  001208  0E00               	movlw	0
  1658  00120A  0100               	movlb	0	; () banked
  1659  00120C  6FEF               	movwf	(_count_drained+1)& (0+255),b	;volatile
  1660  00120E  0E00               	movlw	0
  1661  001210  6FEE               	movwf	_count_drained& (0+255),b	;volatile
  1662                           
  1663                           ;main.c: 181: process1 = 0;
  1664  001212  0E00               	movlw	0
  1665  001214  0100               	movlb	0	; () banked
  1666  001216  6FF7               	movwf	_process1& (0+255),b	;volatile
  1667                           
  1668                           ;main.c: 182: process3 = 0;
  1669  001218  0E00               	movlw	0
  1670  00121A  0100               	movlb	0	; () banked
  1671  00121C  6FF6               	movwf	_process3& (0+255),b	;volatile
  1672                           
  1673                           ;main.c: 184: unsigned char flag_interrupt = 0;
  1674  00121E  0E00               	movlw	0
  1675  001220  0100               	movlb	0	; () banked
  1676  001222  6FC1               	movwf	main@flag_interrupt& (0+255),b
  1677                           
  1678                           ;main.c: 185: unsigned char done = 0;
  1679  001224  0E00               	movlw	0
  1680  001226  0100               	movlb	0	; () banked
  1681  001228  6FC2               	movwf	main@done& (0+255),b
  1682                           
  1683                           ;main.c: 187: unsigned char address_min = 0x00;
  1684  00122A  0E00               	movlw	0
  1685  00122C  0100               	movlb	0	; () banked
  1686  00122E  6FE7               	movwf	main@address_min& (0+255),b
  1687                           
  1688                           ;main.c: 188: unsigned char address_seconds = 0x28;
  1689  001230  0E28               	movlw	40
  1690  001232  0100               	movlb	0	; () banked
  1691  001234  6FE0               	movwf	main@address_seconds& (0+255),b
  1692                           
  1693                           ;main.c: 189: unsigned char address_AA = 0x90;
  1694  001236  0E90               	movlw	144
  1695  001238  0100               	movlb	0	; () banked
  1696  00123A  6FE1               	movwf	main@address_AA& (0+255),b
  1697                           
  1698                           ;main.c: 190: unsigned char address_9V = 0xB8;
  1699  00123C  0EB8               	movlw	184
  1700  00123E  0100               	movlb	0	; () banked
  1701  001240  6FE2               	movwf	main@address_9V& (0+255),b
  1702                           
  1703                           ;main.c: 191: unsigned char address_C = 0xE0;
  1704  001242  0EE0               	movlw	224
  1705  001244  0100               	movlb	0	; () banked
  1706  001246  6FE3               	movwf	main@address_C& (0+255),b
  1707                           
  1708                           ;main.c: 192: unsigned char address_drained = 0x130;
  1709  001248  0E30               	movlw	48
  1710  00124A  0100               	movlb	0	; () banked
  1711  00124C  6FE4               	movwf	main@address_drained& (0+255),b
  1712                           
  1713                           ;main.c: 193: unsigned char address_total = 0x108;
  1714  00124E  0E08               	movlw	8
  1715  001250  0100               	movlb	0	; () banked
  1716  001252  6FE5               	movwf	main@address_total& (0+255),b
  1717                           
  1718                           ;main.c: 195: signed char eeprom_min;
  1719                           ;main.c: 196: signed char eeprom_seconds;
  1720                           ;main.c: 197: signed char eeprom_AA;
  1721                           ;main.c: 198: signed char eeprom_9V;
  1722                           ;main.c: 199: signed char eeprom_C;
  1723                           ;main.c: 200: signed char eeprom_drained;
  1724                           ;main.c: 201: signed char eeprom_total;
  1725                           ;main.c: 203: unsigned char count_min_initial = 0;
  1726  001254  0E00               	movlw	0
  1727  001256  0100               	movlb	0	; () banked
  1728  001258  6FDA               	movwf	main@count_min_initial& (0+255),b
  1729                           
  1730                           ;main.c: 204: unsigned char count_seconds_initial = 0;
  1731  00125A  0E00               	movlw	0
  1732  00125C  0100               	movlb	0	; () banked
  1733  00125E  6FDB               	movwf	main@count_seconds_initial& (0+255),b
  1734                           
  1735                           ;main.c: 205: unsigned char count_min_final = 0;
  1736  001260  0E00               	movlw	0
  1737  001262  0100               	movlb	0	; () banked
  1738  001264  6FDD               	movwf	main@count_min_final& (0+255),b
  1739                           
  1740                           ;main.c: 206: unsigned char count_seconds_final = 0;
  1741  001266  0E00               	movlw	0
  1742  001268  0100               	movlb	0	; () banked
  1743  00126A  6FDE               	movwf	main@count_seconds_final& (0+255),b
  1744                           
  1745                           ;main.c: 207: signed char count_min = 0;
  1746  00126C  0E00               	movlw	0
  1747  00126E  0100               	movlb	0	; () banked
  1748  001270  6FE6               	movwf	main@count_min& (0+255),b
  1749                           
  1750                           ;main.c: 208: signed char count_seconds = 0;
  1751  001272  0E00               	movlw	0
  1752  001274  0100               	movlb	0	; () banked
  1753  001276  6FDF               	movwf	main@count_seconds& (0+255),b
  1754                           
  1755                           ;main.c: 210: signed char past_min;
  1756                           ;main.c: 211: signed char past_seconds;
  1757                           ;main.c: 212: signed char past_total;
  1758                           ;main.c: 213: signed char past_AA;
  1759                           ;main.c: 214: signed char past_9V;
  1760                           ;main.c: 215: signed char past_C;
  1761                           ;main.c: 216: signed char past_drained;
  1762                           ;main.c: 218: while(PORTBbits.RB1 == 0){
  1763  001278  D083               	goto	l172
  1764  00127A                     l5286:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main.c: 221: I2C_Master_Start();
  1768  00127A  EC41  F022         	call	_I2C_Master_Start	;wreg free
  1769                           
  1770                           ;main.c: 222: I2C_Master_Write(0b11010000);
  1771  00127E  0E00               	movlw	0
  1772  001280  0100               	movlb	0	; () banked
  1773  001282  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1774  001284  0ED0               	movlw	208
  1775  001286  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1776  001288  EC38  F022         	call	_I2C_Master_Write	;wreg free
  1777                           
  1778                           ;main.c: 223: I2C_Master_Write(0x00);
  1779  00128C  0E00               	movlw	0
  1780  00128E  0100               	movlb	0	; () banked
  1781  001290  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1782  001292  0E00               	movlw	0
  1783  001294  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1784  001296  EC38  F022         	call	_I2C_Master_Write	;wreg free
  1785                           
  1786                           ;main.c: 224: I2C_Master_Stop();
  1787  00129A  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  1788                           
  1789                           ;main.c: 227: I2C_Master_Start();
  1790  00129E  EC41  F022         	call	_I2C_Master_Start	;wreg free
  1791                           
  1792                           ;main.c: 228: I2C_Master_Write(0b11010001);
  1793  0012A2  0E00               	movlw	0
  1794  0012A4  0100               	movlb	0	; () banked
  1795  0012A6  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1796  0012A8  0ED1               	movlw	209
  1797  0012AA  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1798  0012AC  EC38  F022         	call	_I2C_Master_Write	;wreg free
  1799                           
  1800                           ;main.c: 229: for(unsigned char j=0;j<0x06;j++){
  1801  0012B0  0E00               	movlw	0
  1802  0012B2  0100               	movlb	0	; () banked
  1803  0012B4  6FD6               	movwf	main@j& (0+255),b
  1804  0012B6                     l5290:
  1805                           
  1806                           ; BSR set to: 0
  1807  0012B6  0E05               	movlw	5
  1808  0012B8  0100               	movlb	0	; () banked
  1809  0012BA  65D6               	cpfsgt	main@j& (0+255),b
  1810  0012BC  D001               	goto	l5294
  1811  0012BE  D010               	goto	l5300
  1812  0012C0                     l5294:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;main.c: 230: time[j] = I2C_Master_Read(1);
  1816  0012C0  0100               	movlb	0	; () banked
  1817  0012C2  51D6               	movf	main@j& (0+255),w,b
  1818  0012C4  0D01               	mullw	1
  1819  0012C6  0ECF               	movlw	low main@time
  1820  0012C8  24F3               	addwf	prodl,w,c
  1821  0012CA  6ED9               	movwf	fsr2l,c
  1822  0012CC  0E00               	movlw	high main@time
  1823  0012CE  20F4               	addwfc	prodh,w,c
  1824  0012D0  6EDA               	movwf	fsr2h,c
  1825  0012D2  0E01               	movlw	1
  1826  0012D4  EC8F  F021         	call	_I2C_Master_Read
  1827  0012D8  6EDF               	movwf	indf2,c
  1828  0012DA  0100               	movlb	0	; () banked
  1829  0012DC  2BD6               	incf	main@j& (0+255),f,b
  1830  0012DE  D7EB               	goto	l5290
  1831  0012E0                     l5300:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 231: }
  1835                           ;main.c: 232: time[6] = I2C_Master_Read(0);
  1836  0012E0  0E00               	movlw	0
  1837  0012E2  EC8F  F021         	call	_I2C_Master_Read
  1838  0012E6  0100               	movlb	0	; () banked
  1839  0012E8  6FD5               	movwf	(main@time+6)& (0+255),b
  1840                           
  1841                           ;main.c: 233: I2C_Master_Stop();
  1842  0012EA  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  1843                           
  1844                           ;main.c: 235: lcdInst(0b10000000);;
  1845  0012EE  0E80               	movlw	128
  1846  0012F0  EC30  F022         	call	_lcdInst
  1847                           
  1848                           ;main.c: 236: printf("%02x/%02x/%02x ", time[6],time[5],time[4]);
  1849  0012F4  0E3C               	movlw	low STR_1
  1850  0012F6  0100               	movlb	0	; () banked
  1851  0012F8  6F8C               	movwf	printf@f& (0+255),b
  1852  0012FA  0E10               	movlw	high STR_1
  1853  0012FC  0100               	movlb	0	; () banked
  1854  0012FE  6F8D               	movwf	(printf@f+1)& (0+255),b
  1855  001300  C0D5  F08E         	movff	main@time+6,?_printf+2
  1856  001304  0100               	movlb	0	; () banked
  1857  001306  6B8F               	clrf	(?_printf+3)& (0+255),b
  1858  001308  C0D4  F090         	movff	main@time+5,?_printf+4
  1859  00130C  0100               	movlb	0	; () banked
  1860  00130E  6B91               	clrf	(?_printf+5)& (0+255),b
  1861  001310  C0D3  F092         	movff	main@time+4,?_printf+6
  1862  001314  0100               	movlb	0	; () banked
  1863  001316  6B93               	clrf	(?_printf+7)& (0+255),b
  1864  001318  ECAB  F014         	call	_printf	;wreg free
  1865                           
  1866                           ;main.c: 237: printf("1:Start");
  1867  00131C  0EBB               	movlw	low STR_2
  1868  00131E  0100               	movlb	0	; () banked
  1869  001320  6F8C               	movwf	printf@f& (0+255),b
  1870  001322  0E10               	movlw	high STR_2
  1871  001324  0100               	movlb	0	; () banked
  1872  001326  6F8D               	movwf	(printf@f+1)& (0+255),b
  1873  001328  ECAB  F014         	call	_printf	;wreg free
  1874                           
  1875                           ;main.c: 238: lcdInst(0b11000000);;
  1876  00132C  0EC0               	movlw	192
  1877  00132E  EC30  F022         	call	_lcdInst
  1878                           
  1879                           ;main.c: 239: printf("%02x:%02x:%02x ", time[2],time[1],time[0]);
  1880  001332  0E4C               	movlw	low STR_3
  1881  001334  0100               	movlb	0	; () banked
  1882  001336  6F8C               	movwf	printf@f& (0+255),b
  1883  001338  0E10               	movlw	high STR_3
  1884  00133A  0100               	movlb	0	; () banked
  1885  00133C  6F8D               	movwf	(printf@f+1)& (0+255),b
  1886  00133E  C0D1  F08E         	movff	main@time+2,?_printf+2
  1887  001342  0100               	movlb	0	; () banked
  1888  001344  6B8F               	clrf	(?_printf+3)& (0+255),b
  1889  001346  C0D0  F090         	movff	main@time+1,?_printf+4
  1890  00134A  0100               	movlb	0	; () banked
  1891  00134C  6B91               	clrf	(?_printf+5)& (0+255),b
  1892  00134E  C0CF  F092         	movff	main@time,?_printf+6
  1893  001352  0100               	movlb	0	; () banked
  1894  001354  6B93               	clrf	(?_printf+7)& (0+255),b
  1895  001356  ECAB  F014         	call	_printf	;wreg free
  1896                           
  1897                           ;main.c: 240: printf("2:Logs");
  1898  00135A  0ECA               	movlw	low STR_4
  1899  00135C  0100               	movlb	0	; () banked
  1900  00135E  6F8C               	movwf	printf@f& (0+255),b
  1901  001360  0E10               	movlw	high STR_4
  1902  001362  0100               	movlb	0	; () banked
  1903  001364  6F8D               	movwf	(printf@f+1)& (0+255),b
  1904  001366  ECAB  F014         	call	_printf	;wreg free
  1905                           
  1906                           ;main.c: 247: flag_interrupt = delay_1s_interrupt(1);
  1907  00136A  0E01               	movlw	1
  1908  00136C  EC96  F01F         	call	_delay_1s_interrupt
  1909  001370  0100               	movlb	0	; () banked
  1910  001372  5180               	movf	?_delay_1s_interrupt& (0+255),w,b
  1911  001374  0100               	movlb	0	; () banked
  1912  001376  6FC1               	movwf	main@flag_interrupt& (0+255),b
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 248: if(flag_interrupt == 1){
  1916  001378  0100               	movlb	0	; () banked
  1917  00137A  05C1               	decf	main@flag_interrupt& (0+255),w,b
  1918  00137C  B4D8               	btfsc	status,2,c
  1919  00137E  D002               	goto	l5316
  1920  001380                     l172:
  1921                           
  1922                           ; BSR set to: 0
  1923  001380  A281               	btfss	3969,1,c	;volatile
  1924  001382  D77B               	goto	l5286
  1925  001384                     l5316:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;main.c: 250: }
  1929                           ;main.c: 251: }
  1930                           ;main.c: 252: unsigned char keypress = (PORTB & 0xF0)>>4;
  1931  001384  3881               	swapf	3969,w,c	;volatile
  1932  001386  0B0F               	andlw	15
  1933  001388  0B0F               	andlw	15
  1934  00138A  0100               	movlb	0	; () banked
  1935  00138C  6FDC               	movwf	main@keypress& (0+255),b
  1936  00138E                     l178:
  1937  00138E  B281               	btfsc	3969,1,c	;volatile
  1938  001390  D7FE               	goto	l178
  1939                           
  1940                           ;main.c: 257: }
  1941                           ;main.c: 259: __nop();
  1942  001392  F000               	nop	
  1943                           
  1944                           ;main.c: 260: __nop();
  1945  001394  F000               	nop	
  1946                           
  1947                           ;main.c: 262: if (keys[keypress] == keys[0]){
  1948  001396  0100               	movlb	0	; () banked
  1949  001398  51DC               	movf	main@keypress& (0+255),w,b
  1950  00139A  0D01               	mullw	1
  1951  00139C  0E01               	movlw	low _keys
  1952  00139E  24F3               	addwf	prodl,w,c
  1953  0013A0  6EF6               	movwf	tblptrl,c
  1954  0013A2  0E10               	movlw	high _keys
  1955  0013A4  20F4               	addwfc	prodh,w,c
  1956  0013A6  6EF7               	movwf	tblptrh,c
  1957  0013A8                     	if	0	;There are less than 3 active tblptr bytes
  1958  0013A8                     	endif
  1959  0013A8  0008               	tblrd		*
  1960  0013AA  CFF5 F0B1          	movff	tablat,??_main
  1961  0013AE  0E01               	movlw	low _keys
  1962  0013B0  6EF6               	movwf	tblptrl,c
  1963  0013B2                     	if	1	;There is more than 1 active tblptr byte
  1964  0013B2  0E10               	movlw	high _keys
  1965  0013B4  6EF7               	movwf	tblptrh,c
  1966  0013B6                     	endif
  1967  0013B6                     	if	0	;There are less than 3 active tblptr bytes
  1968  0013B6                     	endif
  1969  0013B6  0008               	tblrd		*
  1970  0013B8  50F5               	movf	tablat,w,c
  1971  0013BA  0100               	movlb	0	; () banked
  1972  0013BC  19B1               	xorwf	??_main& (0+255),w,b
  1973  0013BE  A4D8               	btfss	status,2,c
  1974  0013C0  EFFA  F00D         	goto	l5624
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;main.c: 264: I2C_Master_Start();
  1978  0013C4  EC41  F022         	call	_I2C_Master_Start	;wreg free
  1979                           
  1980                           ;main.c: 265: I2C_Master_Write(0b11010000);
  1981  0013C8  0E00               	movlw	0
  1982  0013CA  0100               	movlb	0	; () banked
  1983  0013CC  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1984  0013CE  0ED0               	movlw	208
  1985  0013D0  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1986  0013D2  EC38  F022         	call	_I2C_Master_Write	;wreg free
  1987                           
  1988                           ;main.c: 266: I2C_Master_Write(0x00);
  1989  0013D6  0E00               	movlw	0
  1990  0013D8  0100               	movlb	0	; () banked
  1991  0013DA  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1992  0013DC  0E00               	movlw	0
  1993  0013DE  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1994  0013E0  EC38  F022         	call	_I2C_Master_Write	;wreg free
  1995                           
  1996                           ;main.c: 267: I2C_Master_Stop();
  1997  0013E4  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  1998                           
  1999                           ;main.c: 269: I2C_Master_Start();
  2000  0013E8  EC41  F022         	call	_I2C_Master_Start	;wreg free
  2001                           
  2002                           ;main.c: 270: I2C_Master_Write(0b11010001);
  2003  0013EC  0E00               	movlw	0
  2004  0013EE  0100               	movlb	0	; () banked
  2005  0013F0  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2006  0013F2  0ED1               	movlw	209
  2007  0013F4  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2008  0013F6  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2009                           
  2010                           ;main.c: 271: for(unsigned char k=0;k<0x06;k++){
  2011  0013FA  0E00               	movlw	0
  2012  0013FC  0100               	movlb	0	; () banked
  2013  0013FE  6FD7               	movwf	main@k& (0+255),b
  2014  001400                     l5324:
  2015                           
  2016                           ; BSR set to: 0
  2017  001400  0E05               	movlw	5
  2018  001402  0100               	movlb	0	; () banked
  2019  001404  65D7               	cpfsgt	main@k& (0+255),b
  2020  001406  D001               	goto	l5328
  2021  001408  D010               	goto	l5334
  2022  00140A                     l5328:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 272: time[k] = I2C_Master_Read(1);
  2026  00140A  0100               	movlb	0	; () banked
  2027  00140C  51D7               	movf	main@k& (0+255),w,b
  2028  00140E  0D01               	mullw	1
  2029  001410  0ECF               	movlw	low main@time
  2030  001412  24F3               	addwf	prodl,w,c
  2031  001414  6ED9               	movwf	fsr2l,c
  2032  001416  0E00               	movlw	high main@time
  2033  001418  20F4               	addwfc	prodh,w,c
  2034  00141A  6EDA               	movwf	fsr2h,c
  2035  00141C  0E01               	movlw	1
  2036  00141E  EC8F  F021         	call	_I2C_Master_Read
  2037  001422  6EDF               	movwf	indf2,c
  2038  001424  0100               	movlb	0	; () banked
  2039  001426  2BD7               	incf	main@k& (0+255),f,b
  2040  001428  D7EB               	goto	l5324
  2041  00142A                     l5334:
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;main.c: 273: }
  2045                           ;main.c: 274: time[6] = I2C_Master_Read(0);
  2046  00142A  0E00               	movlw	0
  2047  00142C  EC8F  F021         	call	_I2C_Master_Read
  2048  001430  0100               	movlb	0	; () banked
  2049  001432  6FD5               	movwf	(main@time+6)& (0+255),b
  2050                           
  2051                           ;main.c: 275: I2C_Master_Stop();
  2052  001434  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  2053                           
  2054                           ;main.c: 277: count_min_initial = time[1];
  2055  001438  C0D0  F0DA         	movff	main@time+1,main@count_min_initial
  2056                           
  2057                           ;main.c: 278: count_seconds_initial = time[0];
  2058  00143C  C0CF  F0DB         	movff	main@time,main@count_seconds_initial
  2059                           
  2060                           ;main.c: 279: count_min_initial = (count_min_initial & 0x0F) + ((count_min_initial & 0xF
      +                          0)>>4)*10;
  2061  001440  0100               	movlb	0	; () banked
  2062  001442  39DA               	swapf	main@count_min_initial& (0+255),w,b
  2063  001444  0B0F               	andlw	15
  2064  001446  0B0F               	andlw	15
  2065  001448  0D0A               	mullw	10
  2066  00144A  0100               	movlb	0	; () banked
  2067  00144C  51DA               	movf	main@count_min_initial& (0+255),w,b
  2068  00144E  0B0F               	andlw	15
  2069  001450  24F3               	addwf	prodl,w,c
  2070  001452  0100               	movlb	0	; () banked
  2071  001454  6FDA               	movwf	main@count_min_initial& (0+255),b
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;main.c: 280: count_seconds_initial = (count_seconds_initial & 0x0F) + ((count_seconds_i
      +                          nitial & 0xF0)>>4)*10;
  2075  001456  0100               	movlb	0	; () banked
  2076  001458  39DB               	swapf	main@count_seconds_initial& (0+255),w,b
  2077  00145A  0B0F               	andlw	15
  2078  00145C  0B0F               	andlw	15
  2079  00145E  0D0A               	mullw	10
  2080  001460  0100               	movlb	0	; () banked
  2081  001462  51DB               	movf	main@count_seconds_initial& (0+255),w,b
  2082  001464  0B0F               	andlw	15
  2083  001466  24F3               	addwf	prodl,w,c
  2084  001468  0100               	movlb	0	; () banked
  2085  00146A  6FDB               	movwf	main@count_seconds_initial& (0+255),b
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 281: keypress = 999;
  2089  00146C  0EE7               	movlw	231
  2090  00146E  0100               	movlb	0	; () banked
  2091  001470  6FDC               	movwf	main@keypress& (0+255),b
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;main.c: 283: initLCD();
  2095  001472  EC17  F021         	call	_initLCD	;wreg free
  2096                           
  2097                           ;main.c: 284: printf("Initializing...");
  2098  001476  0E5C               	movlw	low STR_5
  2099  001478  0100               	movlb	0	; () banked
  2100  00147A  6F8C               	movwf	printf@f& (0+255),b
  2101  00147C  0E10               	movlw	high STR_5
  2102  00147E  0100               	movlb	0	; () banked
  2103  001480  6F8D               	movwf	(printf@f+1)& (0+255),b
  2104  001482  ECAB  F014         	call	_printf	;wreg free
  2105                           
  2106                           ;main.c: 286: process1 = 1;
  2107  001486  0E01               	movlw	1
  2108  001488  0100               	movlb	0	; () banked
  2109  00148A  6FF7               	movwf	_process1& (0+255),b	;volatile
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 287: set_external_interrupt1(500);
  2113  00148C  0E01               	movlw	1
  2114  00148E  0100               	movlb	0	; () banked
  2115  001490  6F89               	movwf	(set_external_interrupt1@time+1)& (0+255),b
  2116  001492  0EF4               	movlw	244
  2117  001494  6F88               	movwf	set_external_interrupt1@time& (0+255),b
  2118  001496  EC5B  F01F         	call	_set_external_interrupt1	;wreg free
  2119                           
  2120                           ;main.c: 288: process3 = 1;
  2121  00149A  0E01               	movlw	1
  2122  00149C  0100               	movlb	0	; () banked
  2123  00149E  6FF6               	movwf	_process3& (0+255),b	;volatile
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 289: set_external_interrupt3(700);
  2127  0014A0  0E02               	movlw	2
  2128  0014A2  0100               	movlb	0	; () banked
  2129  0014A4  6F89               	movwf	(set_external_interrupt3@time+1)& (0+255),b
  2130  0014A6  0EBC               	movlw	188
  2131  0014A8  6F88               	movwf	set_external_interrupt3@time& (0+255),b
  2132  0014AA  EC20  F01F         	call	_set_external_interrupt3	;wreg free
  2133  0014AE                     l5358:
  2134  0014AE  0100               	movlb	0	; () banked
  2135  0014B0  51F9               	movf	_init1& (0+255),w,b	;volatile
  2136  0014B2  B4D8               	btfsc	status,2,c
  2137  0014B4  D7FC               	goto	l5358
  2138                           
  2139                           ; BSR set to: 0
  2140  0014B6  0100               	movlb	0	; () banked
  2141  0014B8  51F8               	movf	_init3& (0+255),w,b	;volatile
  2142  0014BA  B4D8               	btfsc	status,2,c
  2143  0014BC  D7F8               	goto	l5358
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;main.c: 293: }
  2147                           ;main.c: 295: initLCD();
  2148                           
  2149                           ; BSR set to: 0
  2150  0014BE  EC17  F021         	call	_initLCD	;wreg free
  2151                           
  2152                           ;main.c: 296: printf("Sorting...");
  2153  0014C2  0E83               	movlw	low STR_6
  2154  0014C4  0100               	movlb	0	; () banked
  2155  0014C6  6F8C               	movwf	printf@f& (0+255),b
  2156  0014C8  0E10               	movlw	high STR_6
  2157  0014CA  0100               	movlb	0	; () banked
  2158  0014CC  6F8D               	movwf	(printf@f+1)& (0+255),b
  2159  0014CE  ECAB  F014         	call	_printf	;wreg free
  2160                           
  2161                           ;main.c: 298: int loop_count;
  2162                           ;main.c: 300: while(done == 0){
  2163  0014D2  D13E               	goto	l187
  2164  0014D4                     l190:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 305: (INTCONbits.GIE = 0);
  2168  0014D4  9EF2               	bcf	intcon,7,c	;volatile
  2169                           
  2170                           ;main.c: 307: LATDbits.LATD0 = 1;
  2171  0014D6  808C               	bsf	3980,0,c	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;main.c: 308: _delay((unsigned long)((100)*(8000000/4000.0)));
  2175  0014D8  0E02               	movlw	2
  2176  0014DA  0100               	movlb	0	; () banked
  2177  0014DC  6FB2               	movwf	(??_main+1)& (0+255),b
  2178  0014DE  0E04               	movlw	4
  2179  0014E0  0100               	movlb	0	; () banked
  2180  0014E2  6FB1               	movwf	??_main& (0+255),b
  2181  0014E4  0EBA               	movlw	186
  2182  0014E6                     u6187:
  2183  0014E6  2EE8               	decfsz	wreg,f,c
  2184  0014E8  D7FE               	bra	u6187
  2185  0014EA  2FB1               	decfsz	??_main& (0+255),f,b
  2186  0014EC  D7FC               	bra	u6187
  2187  0014EE  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  2188  0014F0  D7FA               	bra	u6187
  2189  0014F2  F000               	nop	
  2190                           
  2191                           ;main.c: 309: LATDbits.LATD0 = 0;
  2192  0014F4  908C               	bcf	3980,0,c	;volatile
  2193                           
  2194                           ;main.c: 311: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2195  0014F6  0E00               	movlw	0
  2196  0014F8  0100               	movlb	0	; () banked
  2197  0014FA  6FC5               	movwf	main@i& (0+255),b
  2198  0014FC                     l5372:
  2199                           
  2200                           ; BSR set to: 0
  2201  0014FC  0E09               	movlw	9
  2202  0014FE  0100               	movlb	0	; () banked
  2203  001500  65C5               	cpfsgt	main@i& (0+255),b
  2204  001502  D001               	goto	l5376
  2205  001504  D00C               	goto	l5380
  2206  001506                     l5376:
  2207                           
  2208                           ; BSR set to: 0
  2209  001506  0EFF               	movlw	255
  2210  001508  0100               	movlb	0	; () banked
  2211  00150A  6FB1               	movwf	??_main& (0+255),b
  2212  00150C  0E8A               	movlw	138
  2213  00150E                     u6197:
  2214  00150E  2EE8               	decfsz	wreg,f,c
  2215  001510  D7FE               	bra	u6197
  2216  001512  2FB1               	decfsz	??_main& (0+255),f,b
  2217  001514  D7FC               	bra	u6197
  2218  001516  F000               	nop	
  2219  001518  0100               	movlb	0	; () banked
  2220  00151A  2BC5               	incf	main@i& (0+255),f,b
  2221  00151C  D7EF               	goto	l5372
  2222  00151E                     l5380:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;main.c: 312: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2226  00151E  0E00               	movlw	0
  2227  001520  0100               	movlb	0	; () banked
  2228  001522  6FC6               	movwf	main@i_431& (0+255),b
  2229  001524                     l5382:
  2230                           
  2231                           ; BSR set to: 0
  2232  001524  0E09               	movlw	9
  2233  001526  0100               	movlb	0	; () banked
  2234  001528  65C6               	cpfsgt	main@i_431& (0+255),b
  2235  00152A  D001               	goto	l5386
  2236  00152C  D00C               	goto	l5390
  2237  00152E                     l5386:
  2238                           
  2239                           ; BSR set to: 0
  2240  00152E  0EFF               	movlw	255
  2241  001530  0100               	movlb	0	; () banked
  2242  001532  6FB1               	movwf	??_main& (0+255),b
  2243  001534  0E8A               	movlw	138
  2244  001536                     u6207:
  2245  001536  2EE8               	decfsz	wreg,f,c
  2246  001538  D7FE               	bra	u6207
  2247  00153A  2FB1               	decfsz	??_main& (0+255),f,b
  2248  00153C  D7FC               	bra	u6207
  2249  00153E  F000               	nop	
  2250  001540  0100               	movlb	0	; () banked
  2251  001542  2BC6               	incf	main@i_431& (0+255),f,b
  2252  001544  D7EF               	goto	l5382
  2253  001546                     l5390:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;main.c: 313: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2257  001546  0E00               	movlw	0
  2258  001548  0100               	movlb	0	; () banked
  2259  00154A  6FC7               	movwf	main@i_432& (0+255),b
  2260  00154C                     l5392:
  2261                           
  2262                           ; BSR set to: 0
  2263  00154C  0E09               	movlw	9
  2264  00154E  0100               	movlb	0	; () banked
  2265  001550  65C7               	cpfsgt	main@i_432& (0+255),b
  2266  001552  D001               	goto	l5396
  2267  001554  D00C               	goto	l5400
  2268  001556                     l5396:
  2269                           
  2270                           ; BSR set to: 0
  2271  001556  0EFF               	movlw	255
  2272  001558  0100               	movlb	0	; () banked
  2273  00155A  6FB1               	movwf	??_main& (0+255),b
  2274  00155C  0E8A               	movlw	138
  2275  00155E                     u6217:
  2276  00155E  2EE8               	decfsz	wreg,f,c
  2277  001560  D7FE               	bra	u6217
  2278  001562  2FB1               	decfsz	??_main& (0+255),f,b
  2279  001564  D7FC               	bra	u6217
  2280  001566  F000               	nop	
  2281  001568  0100               	movlb	0	; () banked
  2282  00156A  2BC7               	incf	main@i_432& (0+255),f,b
  2283  00156C  D7EF               	goto	l5392
  2284  00156E                     l5400:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 315: voltage_3 = readADC(3);
  2288  00156E  0E03               	movlw	3
  2289  001570  EC3E  F019         	call	_readADC
  2290  001574  C0A6  F0EB         	movff	?_readADC,_voltage_3	;volatile
  2291  001578  C0A7  F0EC         	movff	?_readADC+1,_voltage_3+1	;volatile
  2292  00157C  C0A8  F0ED         	movff	?_readADC+2,_voltage_3+2	;volatile
  2293                           
  2294                           ;main.c: 316: voltage_4 = readADC(4);
  2295  001580  0E04               	movlw	4
  2296  001582  EC3E  F019         	call	_readADC
  2297  001586  C0A6  F0E8         	movff	?_readADC,_voltage_4	;volatile
  2298  00158A  C0A7  F0E9         	movff	?_readADC+1,_voltage_4+1	;volatile
  2299  00158E  C0A8  F0EA         	movff	?_readADC+2,_voltage_4+2	;volatile
  2300                           
  2301                           ;main.c: 324: if(voltage_3 < 3.5){
  2302  001592  C0EB  F080         	movff	_voltage_3,___ftge@ff1	;volatile
  2303  001596  C0EC  F081         	movff	_voltage_3+1,___ftge@ff1+1	;volatile
  2304  00159A  C0ED  F082         	movff	_voltage_3+2,___ftge@ff1+2	;volatile
  2305  00159E  0E00               	movlw	0
  2306  0015A0  0100               	movlb	0	; () banked
  2307  0015A2  6F83               	movwf	___ftge@ff2& (0+255),b
  2308  0015A4  0E60               	movlw	96
  2309  0015A6  0100               	movlb	0	; () banked
  2310  0015A8  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  2311  0015AA  0E40               	movlw	64
  2312  0015AC  0100               	movlb	0	; () banked
  2313  0015AE  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  2314  0015B0  EC99  F01C         	call	___ftge	;wreg free
  2315  0015B4  0100               	movlb	0	; () banked
  2316  0015B6  B0D8               	btfsc	status,0,c
  2317  0015B8  D00B               	goto	l5408
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;main.c: 325: process1 = 1;
  2321  0015BA  0E01               	movlw	1
  2322  0015BC  0100               	movlb	0	; () banked
  2323  0015BE  6FF7               	movwf	_process1& (0+255),b	;volatile
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;main.c: 326: (INTCONbits.GIE = 1);
  2327  0015C0  8EF2               	bsf	intcon,7,c	;volatile
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;main.c: 327: set_external_interrupt1(700);
  2331  0015C2  0E02               	movlw	2
  2332  0015C4  0100               	movlb	0	; () banked
  2333  0015C6  6F89               	movwf	(set_external_interrupt1@time+1)& (0+255),b
  2334  0015C8  0EBC               	movlw	188
  2335  0015CA  6F88               	movwf	set_external_interrupt1@time& (0+255),b
  2336  0015CC  EC5B  F01F         	call	_set_external_interrupt1	;wreg free
  2337  0015D0                     l5408:
  2338                           
  2339                           ;main.c: 329: }
  2340                           ;main.c: 330: if(voltage_4 < 3.5){
  2341  0015D0  C0E8  F080         	movff	_voltage_4,___ftge@ff1	;volatile
  2342  0015D4  C0E9  F081         	movff	_voltage_4+1,___ftge@ff1+1	;volatile
  2343  0015D8  C0EA  F082         	movff	_voltage_4+2,___ftge@ff1+2	;volatile
  2344  0015DC  0E00               	movlw	0
  2345  0015DE  0100               	movlb	0	; () banked
  2346  0015E0  6F83               	movwf	___ftge@ff2& (0+255),b
  2347  0015E2  0E60               	movlw	96
  2348  0015E4  0100               	movlb	0	; () banked
  2349  0015E6  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  2350  0015E8  0E40               	movlw	64
  2351  0015EA  0100               	movlb	0	; () banked
  2352  0015EC  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  2353  0015EE  EC99  F01C         	call	___ftge	;wreg free
  2354  0015F2  0100               	movlb	0	; () banked
  2355  0015F4  B0D8               	btfsc	status,0,c
  2356  0015F6  D00B               	goto	l5416
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;main.c: 331: process3 = 1;
  2360  0015F8  0E01               	movlw	1
  2361  0015FA  0100               	movlb	0	; () banked
  2362  0015FC  6FF6               	movwf	_process3& (0+255),b	;volatile
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;main.c: 332: (INTCONbits.GIE = 1);
  2366  0015FE  8EF2               	bsf	intcon,7,c	;volatile
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 333: set_external_interrupt3(500);
  2370  001600  0E01               	movlw	1
  2371  001602  0100               	movlb	0	; () banked
  2372  001604  6F89               	movwf	(set_external_interrupt3@time+1)& (0+255),b
  2373  001606  0EF4               	movlw	244
  2374  001608  6F88               	movwf	set_external_interrupt3@time& (0+255),b
  2375  00160A  EC20  F01F         	call	_set_external_interrupt3	;wreg free
  2376  00160E                     l5416:
  2377                           
  2378                           ;main.c: 334: }
  2379                           ;main.c: 335: loop_count++;
  2380  00160E  0100               	movlb	0	; () banked
  2381  001610  4BC3               	infsnz	main@loop_count& (0+255),f,b
  2382  001612  2BC4               	incf	(main@loop_count+1)& (0+255),f,b
  2383  001614                     l5418:
  2384  001614  0100               	movlb	0	; () banked
  2385  001616  51F7               	movf	_process1& (0+255),w,b	;volatile
  2386  001618  A4D8               	btfss	status,2,c
  2387  00161A  D00F               	goto	l5424
  2388                           
  2389                           ; BSR set to: 0
  2390  00161C  0100               	movlb	0	; () banked
  2391  00161E  51F6               	movf	_process3& (0+255),w,b	;volatile
  2392  001620  A4D8               	btfss	status,2,c
  2393  001622  D00B               	goto	l5424
  2394                           
  2395                           ; BSR set to: 0
  2396  001624  0100               	movlb	0	; () banked
  2397  001626  BFC4               	btfsc	(main@loop_count+1)& (0+255),7,b
  2398  001628  D755               	goto	l190
  2399  00162A  0100               	movlb	0	; () banked
  2400  00162C  51C4               	movf	(main@loop_count+1)& (0+255),w,b
  2401  00162E  E105               	bnz	l5424
  2402  001630  0E07               	movlw	7
  2403  001632  0100               	movlb	0	; () banked
  2404  001634  5DC3               	subwf	main@loop_count& (0+255),w,b
  2405  001636  A0D8               	btfss	status,0,c
  2406  001638  D74D               	goto	l190
  2407  00163A                     l5424:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;main.c: 338: }
  2411                           ;main.c: 340: I2C_Master_Start();
  2412  00163A  EC41  F022         	call	_I2C_Master_Start	;wreg free
  2413                           
  2414                           ;main.c: 341: I2C_Master_Write(0b11010000);
  2415  00163E  0E00               	movlw	0
  2416  001640  0100               	movlb	0	; () banked
  2417  001642  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2418  001644  0ED0               	movlw	208
  2419  001646  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2420  001648  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2421                           
  2422                           ;main.c: 342: I2C_Master_Write(0x00);
  2423  00164C  0E00               	movlw	0
  2424  00164E  0100               	movlb	0	; () banked
  2425  001650  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2426  001652  0E00               	movlw	0
  2427  001654  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2428  001656  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2429                           
  2430                           ;main.c: 343: I2C_Master_Stop();
  2431  00165A  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  2432                           
  2433                           ;main.c: 345: I2C_Master_Start();
  2434  00165E  EC41  F022         	call	_I2C_Master_Start	;wreg free
  2435                           
  2436                           ;main.c: 346: I2C_Master_Write(0b11010001);
  2437  001662  0E00               	movlw	0
  2438  001664  0100               	movlb	0	; () banked
  2439  001666  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2440  001668  0ED1               	movlw	209
  2441  00166A  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2442  00166C  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2443                           
  2444                           ;main.c: 347: for(unsigned char k=0;k<0x06;k++){
  2445  001670  0E00               	movlw	0
  2446  001672  0100               	movlb	0	; () banked
  2447  001674  6FD8               	movwf	main@k_433& (0+255),b
  2448  001676                     l5428:
  2449                           
  2450                           ; BSR set to: 0
  2451  001676  0E05               	movlw	5
  2452  001678  0100               	movlb	0	; () banked
  2453  00167A  65D8               	cpfsgt	main@k_433& (0+255),b
  2454  00167C  D001               	goto	l5432
  2455  00167E  D010               	goto	l5438
  2456  001680                     l5432:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;main.c: 348: time[k] = I2C_Master_Read(1);
  2460  001680  0100               	movlb	0	; () banked
  2461  001682  51D8               	movf	main@k_433& (0+255),w,b
  2462  001684  0D01               	mullw	1
  2463  001686  0ECF               	movlw	low main@time
  2464  001688  24F3               	addwf	prodl,w,c
  2465  00168A  6ED9               	movwf	fsr2l,c
  2466  00168C  0E00               	movlw	high main@time
  2467  00168E  20F4               	addwfc	prodh,w,c
  2468  001690  6EDA               	movwf	fsr2h,c
  2469  001692  0E01               	movlw	1
  2470  001694  EC8F  F021         	call	_I2C_Master_Read
  2471  001698  6EDF               	movwf	indf2,c
  2472  00169A  0100               	movlb	0	; () banked
  2473  00169C  2BD8               	incf	main@k_433& (0+255),f,b
  2474  00169E  D7EB               	goto	l5428
  2475  0016A0                     l5438:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;main.c: 349: }
  2479                           ;main.c: 350: time[6] = I2C_Master_Read(0);
  2480  0016A0  0E00               	movlw	0
  2481  0016A2  EC8F  F021         	call	_I2C_Master_Read
  2482  0016A6  0100               	movlb	0	; () banked
  2483  0016A8  6FD5               	movwf	(main@time+6)& (0+255),b
  2484                           
  2485                           ;main.c: 351: I2C_Master_Stop();
  2486  0016AA  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  2487                           
  2488                           ;main.c: 353: count_min_final = time[1];
  2489  0016AE  C0D0  F0DD         	movff	main@time+1,main@count_min_final
  2490                           
  2491                           ;main.c: 354: count_seconds_final = time[0];
  2492  0016B2  C0CF  F0DE         	movff	main@time,main@count_seconds_final
  2493                           
  2494                           ;main.c: 355: count_min_final = (count_min_final & 0x0F) + ((count_min_final & 0xF0)>>4)
      +                          *10;
  2495  0016B6  0100               	movlb	0	; () banked
  2496  0016B8  39DD               	swapf	main@count_min_final& (0+255),w,b
  2497  0016BA  0B0F               	andlw	15
  2498  0016BC  0B0F               	andlw	15
  2499  0016BE  0D0A               	mullw	10
  2500  0016C0  0100               	movlb	0	; () banked
  2501  0016C2  51DD               	movf	main@count_min_final& (0+255),w,b
  2502  0016C4  0B0F               	andlw	15
  2503  0016C6  24F3               	addwf	prodl,w,c
  2504  0016C8  0100               	movlb	0	; () banked
  2505  0016CA  6FDD               	movwf	main@count_min_final& (0+255),b
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;main.c: 356: count_seconds_final = (count_seconds_final & 0x0F) + ((count_seconds_final
      +                           & 0xF0)>>4)*10;
  2509  0016CC  0100               	movlb	0	; () banked
  2510  0016CE  39DE               	swapf	main@count_seconds_final& (0+255),w,b
  2511  0016D0  0B0F               	andlw	15
  2512  0016D2  0B0F               	andlw	15
  2513  0016D4  0D0A               	mullw	10
  2514  0016D6  0100               	movlb	0	; () banked
  2515  0016D8  51DE               	movf	main@count_seconds_final& (0+255),w,b
  2516  0016DA  0B0F               	andlw	15
  2517  0016DC  24F3               	addwf	prodl,w,c
  2518  0016DE  0100               	movlb	0	; () banked
  2519  0016E0  6FDE               	movwf	main@count_seconds_final& (0+255),b
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;main.c: 358: count_min = count_min_final - count_min_initial;
  2523  0016E2  0100               	movlb	0	; () banked
  2524  0016E4  51DA               	movf	main@count_min_initial& (0+255),w,b
  2525  0016E6  0800               	sublw	0
  2526  0016E8  0100               	movlb	0	; () banked
  2527  0016EA  25DD               	addwf	main@count_min_final& (0+255),w,b
  2528  0016EC  0100               	movlb	0	; () banked
  2529  0016EE  6FE6               	movwf	main@count_min& (0+255),b
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;main.c: 359: count_seconds = count_seconds_final - count_seconds_initial;
  2533  0016F0  0100               	movlb	0	; () banked
  2534  0016F2  51DB               	movf	main@count_seconds_initial& (0+255),w,b
  2535  0016F4  0800               	sublw	0
  2536  0016F6  0100               	movlb	0	; () banked
  2537  0016F8  25DE               	addwf	main@count_seconds_final& (0+255),w,b
  2538  0016FA  0100               	movlb	0	; () banked
  2539  0016FC  6FDF               	movwf	main@count_seconds& (0+255),b
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;main.c: 361: if(count_min < 0){
  2543  0016FE  0100               	movlb	0	; () banked
  2544  001700  AFE6               	btfss	main@count_min& (0+255),7,b
  2545  001702  D005               	goto	l204
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;main.c: 363: count_min = count_min + 60;
  2549  001704  0100               	movlb	0	; () banked
  2550  001706  51E6               	movf	main@count_min& (0+255),w,b
  2551  001708  0F3C               	addlw	60
  2552  00170A  0100               	movlb	0	; () banked
  2553  00170C  6FE6               	movwf	main@count_min& (0+255),b
  2554  00170E                     l204:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;main.c: 365: }
  2558                           ;main.c: 367: if(count_seconds < 0){
  2559  00170E  0100               	movlb	0	; () banked
  2560  001710  AFDF               	btfss	main@count_seconds& (0+255),7,b
  2561  001712  D009               	goto	l205
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;main.c: 369: count_min = count_min - 1;
  2565  001714  0100               	movlb	0	; () banked
  2566  001716  05E6               	decf	main@count_min& (0+255),w,b
  2567  001718  0100               	movlb	0	; () banked
  2568  00171A  6FE6               	movwf	main@count_min& (0+255),b
  2569                           
  2570                           ;main.c: 370: count_seconds = count_seconds + 60;
  2571  00171C  0100               	movlb	0	; () banked
  2572  00171E  51DF               	movf	main@count_seconds& (0+255),w,b
  2573  001720  0F3C               	addlw	60
  2574  001722  0100               	movlb	0	; () banked
  2575  001724  6FDF               	movwf	main@count_seconds& (0+255),b
  2576  001726                     l205:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;main.c: 372: }
  2580                           ;main.c: 374: if(loop_count == 7 || count_min > 2){
  2581  001726  0E07               	movlw	7
  2582  001728  0100               	movlb	0	; () banked
  2583  00172A  19C3               	xorwf	main@loop_count& (0+255),w,b
  2584  00172C  0100               	movlb	0	; () banked
  2585  00172E  11C4               	iorwf	(main@loop_count+1)& (0+255),w,b
  2586  001730  B4D8               	btfsc	status,2,c
  2587  001732  D006               	goto	l5460
  2588                           
  2589                           ; BSR set to: 0
  2590  001734  0100               	movlb	0	; () banked
  2591  001736  51E6               	movf	main@count_min& (0+255),w,b
  2592  001738  0A80               	xorlw	128
  2593  00173A  0F7D               	addlw	-131
  2594  00173C  A0D8               	btfss	status,0,c
  2595  00173E  D003               	goto	l206
  2596  001740                     l5460:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;main.c: 376: done = 1;
  2600  001740  0E01               	movlw	1
  2601  001742  0100               	movlb	0	; () banked
  2602  001744  6FC2               	movwf	main@done& (0+255),b
  2603  001746                     l206:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;main.c: 378: }
  2607                           ;main.c: 380: loop_count = 0;
  2608  001746  0E00               	movlw	0
  2609  001748  0100               	movlb	0	; () banked
  2610  00174A  6FC4               	movwf	(main@loop_count+1)& (0+255),b
  2611  00174C  0E00               	movlw	0
  2612  00174E  6FC3               	movwf	main@loop_count& (0+255),b
  2613  001750                     l187:
  2614  001750  0100               	movlb	0	; () banked
  2615  001752  51C2               	movf	main@done& (0+255),w,b
  2616  001754  0100               	movlb	0	; () banked
  2617  001756  B4D8               	btfsc	status,2,c
  2618  001758  D75D               	goto	l5418
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;main.c: 381: }
  2622                           ;main.c: 384: (INTCONbits.GIE = 0);
  2623  00175A  9EF2               	bcf	intcon,7,c	;volatile
  2624                           
  2625                           ;main.c: 385: TMR1ON = 0;
  2626  00175C  90CD               	bcf	4045,0,c	;volatile
  2627                           
  2628                           ;main.c: 386: TMR3ON = 0;
  2629  00175E  90B1               	bcf	4017,0,c	;volatile
  2630                           
  2631                           ;main.c: 387: TMR1IF = 0;
  2632  001760  909E               	bcf	3998,0,c	;volatile
  2633                           
  2634                           ;main.c: 388: TMR3IF = 0;
  2635  001762  92A1               	bcf	4001,1,c	;volatile
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;main.c: 390: LATA = 0x00;
  2639  001764  0E00               	movlw	0
  2640  001766  6E89               	movwf	3977,c	;volatile
  2641                           
  2642                           ;main.c: 391: LATB = 0x00;
  2643  001768  0E00               	movlw	0
  2644  00176A  6E8A               	movwf	3978,c	;volatile
  2645                           
  2646                           ;main.c: 392: LATC = 0x00;
  2647  00176C  0E00               	movlw	0
  2648  00176E  6E8B               	movwf	3979,c	;volatile
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 393: LATDbits.LATD0 = 0;
  2652  001770  908C               	bcf	3980,0,c	;volatile
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;main.c: 394: LATDbits.LATD1 = 0;
  2656  001772  928C               	bcf	3980,1,c	;volatile
  2657                           
  2658                           ;main.c: 395: LATE = 0x00;
  2659  001774  0E00               	movlw	0
  2660  001776  6E8D               	movwf	3981,c	;volatile
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;main.c: 396: __nop();
  2664  001778  F000               	nop	
  2665                           
  2666                           ;main.c: 397: __nop();
  2667  00177A  F000               	nop	
  2668                           
  2669                           ;main.c: 425: I2C_Master_Start();
  2670  00177C  EC41  F022         	call	_I2C_Master_Start	;wreg free
  2671                           
  2672                           ;main.c: 426: I2C_Master_Write(0b11010000);
  2673  001780  0E00               	movlw	0
  2674  001782  0100               	movlb	0	; () banked
  2675  001784  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2676  001786  0ED0               	movlw	208
  2677  001788  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2678  00178A  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2679                           
  2680                           ;main.c: 427: I2C_Master_Write(0x00);
  2681  00178E  0E00               	movlw	0
  2682  001790  0100               	movlb	0	; () banked
  2683  001792  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2684  001794  0E00               	movlw	0
  2685  001796  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2686  001798  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2687                           
  2688                           ;main.c: 428: I2C_Master_Stop();
  2689  00179C  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  2690                           
  2691                           ;main.c: 430: I2C_Master_Start();
  2692  0017A0  EC41  F022         	call	_I2C_Master_Start	;wreg free
  2693                           
  2694                           ;main.c: 431: I2C_Master_Write(0b11010001);
  2695  0017A4  0E00               	movlw	0
  2696  0017A6  0100               	movlb	0	; () banked
  2697  0017A8  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2698  0017AA  0ED1               	movlw	209
  2699  0017AC  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2700  0017AE  EC38  F022         	call	_I2C_Master_Write	;wreg free
  2701                           
  2702                           ;main.c: 432: for(unsigned char k=0;k<0x06;k++){
  2703  0017B2  0E00               	movlw	0
  2704  0017B4  0100               	movlb	0	; () banked
  2705  0017B6  6FD9               	movwf	main@k_434& (0+255),b
  2706  0017B8                     l5484:
  2707                           
  2708                           ; BSR set to: 0
  2709  0017B8  0E05               	movlw	5
  2710  0017BA  0100               	movlb	0	; () banked
  2711  0017BC  65D9               	cpfsgt	main@k_434& (0+255),b
  2712  0017BE  D001               	goto	l5488
  2713  0017C0  D010               	goto	l5494
  2714  0017C2                     l5488:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;main.c: 433: time[k] = I2C_Master_Read(1);
  2718  0017C2  0100               	movlb	0	; () banked
  2719  0017C4  51D9               	movf	main@k_434& (0+255),w,b
  2720  0017C6  0D01               	mullw	1
  2721  0017C8  0ECF               	movlw	low main@time
  2722  0017CA  24F3               	addwf	prodl,w,c
  2723  0017CC  6ED9               	movwf	fsr2l,c
  2724  0017CE  0E00               	movlw	high main@time
  2725  0017D0  20F4               	addwfc	prodh,w,c
  2726  0017D2  6EDA               	movwf	fsr2h,c
  2727  0017D4  0E01               	movlw	1
  2728  0017D6  EC8F  F021         	call	_I2C_Master_Read
  2729  0017DA  6EDF               	movwf	indf2,c
  2730  0017DC  0100               	movlb	0	; () banked
  2731  0017DE  2BD9               	incf	main@k_434& (0+255),f,b
  2732  0017E0  D7EB               	goto	l5484
  2733  0017E2                     l5494:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;main.c: 434: }
  2737                           ;main.c: 435: time[6] = I2C_Master_Read(0);
  2738  0017E2  0E00               	movlw	0
  2739  0017E4  EC8F  F021         	call	_I2C_Master_Read
  2740  0017E8  0100               	movlb	0	; () banked
  2741  0017EA  6FD5               	movwf	(main@time+6)& (0+255),b
  2742                           
  2743                           ;main.c: 436: I2C_Master_Stop();
  2744  0017EC  EC3D  F022         	call	_I2C_Master_Stop	;wreg free
  2745                           
  2746                           ;main.c: 438: count_min_final = time[1];
  2747  0017F0  C0D0  F0DD         	movff	main@time+1,main@count_min_final
  2748                           
  2749                           ;main.c: 439: count_seconds_final = time[0];
  2750  0017F4  C0CF  F0DE         	movff	main@time,main@count_seconds_final
  2751                           
  2752                           ;main.c: 440: count_min_final = (count_min_final & 0x0F) + ((count_min_final & 0xF0)>>4)
      +                          *10;
  2753  0017F8  0100               	movlb	0	; () banked
  2754  0017FA  39DD               	swapf	main@count_min_final& (0+255),w,b
  2755  0017FC  0B0F               	andlw	15
  2756  0017FE  0B0F               	andlw	15
  2757  001800  0D0A               	mullw	10
  2758  001802  0100               	movlb	0	; () banked
  2759  001804  51DD               	movf	main@count_min_final& (0+255),w,b
  2760  001806  0B0F               	andlw	15
  2761  001808  24F3               	addwf	prodl,w,c
  2762  00180A  0100               	movlb	0	; () banked
  2763  00180C  6FDD               	movwf	main@count_min_final& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;main.c: 441: count_seconds_final = (count_seconds_final & 0x0F) + ((count_seconds_final
      +                           & 0xF0)>>4)*10;
  2767  00180E  0100               	movlb	0	; () banked
  2768  001810  39DE               	swapf	main@count_seconds_final& (0+255),w,b
  2769  001812  0B0F               	andlw	15
  2770  001814  0B0F               	andlw	15
  2771  001816  0D0A               	mullw	10
  2772  001818  0100               	movlb	0	; () banked
  2773  00181A  51DE               	movf	main@count_seconds_final& (0+255),w,b
  2774  00181C  0B0F               	andlw	15
  2775  00181E  24F3               	addwf	prodl,w,c
  2776  001820  0100               	movlb	0	; () banked
  2777  001822  6FDE               	movwf	main@count_seconds_final& (0+255),b
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;main.c: 443: count_min = count_min_final - count_min_initial;
  2781  001824  0100               	movlb	0	; () banked
  2782  001826  51DA               	movf	main@count_min_initial& (0+255),w,b
  2783  001828  0800               	sublw	0
  2784  00182A  0100               	movlb	0	; () banked
  2785  00182C  25DD               	addwf	main@count_min_final& (0+255),w,b
  2786  00182E  0100               	movlb	0	; () banked
  2787  001830  6FE6               	movwf	main@count_min& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;main.c: 444: count_seconds = count_seconds_final - count_seconds_initial;
  2791  001832  0100               	movlb	0	; () banked
  2792  001834  51DB               	movf	main@count_seconds_initial& (0+255),w,b
  2793  001836  0800               	sublw	0
  2794  001838  0100               	movlb	0	; () banked
  2795  00183A  25DE               	addwf	main@count_seconds_final& (0+255),w,b
  2796  00183C  0100               	movlb	0	; () banked
  2797  00183E  6FDF               	movwf	main@count_seconds& (0+255),b
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;main.c: 446: if(count_min < 0){
  2801  001840  0100               	movlb	0	; () banked
  2802  001842  AFE6               	btfss	main@count_min& (0+255),7,b
  2803  001844  D005               	goto	l212
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;main.c: 448: count_min = count_min + 60;
  2807  001846  0100               	movlb	0	; () banked
  2808  001848  51E6               	movf	main@count_min& (0+255),w,b
  2809  00184A  0F3C               	addlw	60
  2810  00184C  0100               	movlb	0	; () banked
  2811  00184E  6FE6               	movwf	main@count_min& (0+255),b
  2812  001850                     l212:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;main.c: 450: }
  2816                           ;main.c: 452: if(count_seconds < 0){
  2817  001850  0100               	movlb	0	; () banked
  2818  001852  AFDF               	btfss	main@count_seconds& (0+255),7,b
  2819  001854  D009               	goto	l5514
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;main.c: 454: count_min = count_min - 1;
  2823  001856  0100               	movlb	0	; () banked
  2824  001858  05E6               	decf	main@count_min& (0+255),w,b
  2825  00185A  0100               	movlb	0	; () banked
  2826  00185C  6FE6               	movwf	main@count_min& (0+255),b
  2827                           
  2828                           ;main.c: 455: count_seconds = count_seconds + 60;
  2829  00185E  0100               	movlb	0	; () banked
  2830  001860  51DF               	movf	main@count_seconds& (0+255),w,b
  2831  001862  0F3C               	addlw	60
  2832  001864  0100               	movlb	0	; () banked
  2833  001866  6FDF               	movwf	main@count_seconds& (0+255),b
  2834  001868                     l5514:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;main.c: 457: }
  2838                           ;main.c: 476: for(unsigned char i=0; i<3; i++){
  2839  001868  0E00               	movlw	0
  2840  00186A  0100               	movlb	0	; () banked
  2841  00186C  6FC8               	movwf	main@i_435& (0+255),b
  2842  00186E                     l5516:
  2843                           
  2844                           ; BSR set to: 0
  2845  00186E  0E02               	movlw	2
  2846  001870  0100               	movlb	0	; () banked
  2847  001872  65C8               	cpfsgt	main@i_435& (0+255),b
  2848  001874  D001               	goto	l5520
  2849  001876  D081               	goto	l5540
  2850  001878                     l5520:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;main.c: 477: eeprom_min = Eeprom_ReadByte(address_min + 10);
  2854  001878  0100               	movlb	0	; () banked
  2855  00187A  51E7               	movf	main@address_min& (0+255),w,b
  2856  00187C  0F0A               	addlw	10
  2857  00187E  EC76  F021         	call	_Eeprom_ReadByte
  2858  001882  0100               	movlb	0	; () banked
  2859  001884  6FB3               	movwf	main@eeprom_min& (0+255),b
  2860                           
  2861                           ;main.c: 478: Eeprom_WriteByte(address_min, eeprom_min);
  2862  001886  C0B3  F080         	movff	main@eeprom_min,Eeprom_WriteByte@data
  2863  00188A  0100               	movlb	0	; () banked
  2864  00188C  51E7               	movf	main@address_min& (0+255),w,b
  2865  00188E  EC3A  F021         	call	_Eeprom_WriteByte
  2866                           
  2867                           ;main.c: 479: eeprom_seconds = Eeprom_ReadByte(address_seconds + 10);
  2868  001892  0100               	movlb	0	; () banked
  2869  001894  51E0               	movf	main@address_seconds& (0+255),w,b
  2870  001896  0F0A               	addlw	10
  2871  001898  EC76  F021         	call	_Eeprom_ReadByte
  2872  00189C  0100               	movlb	0	; () banked
  2873  00189E  6FB4               	movwf	main@eeprom_seconds& (0+255),b
  2874                           
  2875                           ;main.c: 480: Eeprom_WriteByte(address_seconds, eeprom_seconds);
  2876  0018A0  C0B4  F080         	movff	main@eeprom_seconds,Eeprom_WriteByte@data
  2877  0018A4  0100               	movlb	0	; () banked
  2878  0018A6  51E0               	movf	main@address_seconds& (0+255),w,b
  2879  0018A8  EC3A  F021         	call	_Eeprom_WriteByte
  2880                           
  2881                           ;main.c: 481: eeprom_AA = Eeprom_ReadByte(address_AA + 10);
  2882  0018AC  0100               	movlb	0	; () banked
  2883  0018AE  51E1               	movf	main@address_AA& (0+255),w,b
  2884  0018B0  0F0A               	addlw	10
  2885  0018B2  EC76  F021         	call	_Eeprom_ReadByte
  2886  0018B6  0100               	movlb	0	; () banked
  2887  0018B8  6FB5               	movwf	main@eeprom_AA& (0+255),b
  2888                           
  2889                           ;main.c: 482: Eeprom_WriteByte(address_AA, eeprom_AA);
  2890  0018BA  C0B5  F080         	movff	main@eeprom_AA,Eeprom_WriteByte@data
  2891  0018BE  0100               	movlb	0	; () banked
  2892  0018C0  51E1               	movf	main@address_AA& (0+255),w,b
  2893  0018C2  EC3A  F021         	call	_Eeprom_WriteByte
  2894                           
  2895                           ;main.c: 483: eeprom_9V = Eeprom_ReadByte(address_9V + 10);
  2896  0018C6  0100               	movlb	0	; () banked
  2897  0018C8  51E2               	movf	main@address_9V& (0+255),w,b
  2898  0018CA  0F0A               	addlw	10
  2899  0018CC  EC76  F021         	call	_Eeprom_ReadByte
  2900  0018D0  0100               	movlb	0	; () banked
  2901  0018D2  6FB6               	movwf	main@eeprom_9V& (0+255),b
  2902                           
  2903                           ;main.c: 484: Eeprom_WriteByte(address_9V, eeprom_9V);
  2904  0018D4  C0B6  F080         	movff	main@eeprom_9V,Eeprom_WriteByte@data
  2905  0018D8  0100               	movlb	0	; () banked
  2906  0018DA  51E2               	movf	main@address_9V& (0+255),w,b
  2907  0018DC  EC3A  F021         	call	_Eeprom_WriteByte
  2908                           
  2909                           ;main.c: 485: eeprom_C = Eeprom_ReadByte(address_C + 10);
  2910  0018E0  0100               	movlb	0	; () banked
  2911  0018E2  51E3               	movf	main@address_C& (0+255),w,b
  2912  0018E4  0F0A               	addlw	10
  2913  0018E6  EC76  F021         	call	_Eeprom_ReadByte
  2914  0018EA  0100               	movlb	0	; () banked
  2915  0018EC  6FB7               	movwf	main@eeprom_C& (0+255),b
  2916                           
  2917                           ;main.c: 486: Eeprom_WriteByte(address_C, eeprom_C);
  2918  0018EE  C0B7  F080         	movff	main@eeprom_C,Eeprom_WriteByte@data
  2919  0018F2  0100               	movlb	0	; () banked
  2920  0018F4  51E3               	movf	main@address_C& (0+255),w,b
  2921  0018F6  EC3A  F021         	call	_Eeprom_WriteByte
  2922                           
  2923                           ;main.c: 487: eeprom_drained = Eeprom_ReadByte(address_drained + 10);
  2924  0018FA  0100               	movlb	0	; () banked
  2925  0018FC  51E4               	movf	main@address_drained& (0+255),w,b
  2926  0018FE  0F0A               	addlw	10
  2927  001900  EC76  F021         	call	_Eeprom_ReadByte
  2928  001904  0100               	movlb	0	; () banked
  2929  001906  6FB8               	movwf	main@eeprom_drained& (0+255),b
  2930                           
  2931                           ;main.c: 488: Eeprom_WriteByte(address_drained, eeprom_drained);
  2932  001908  C0B8  F080         	movff	main@eeprom_drained,Eeprom_WriteByte@data
  2933  00190C  0100               	movlb	0	; () banked
  2934  00190E  51E4               	movf	main@address_drained& (0+255),w,b
  2935  001910  EC3A  F021         	call	_Eeprom_WriteByte
  2936                           
  2937                           ;main.c: 489: eeprom_total = Eeprom_ReadByte(address_total + 10);
  2938  001914  0100               	movlb	0	; () banked
  2939  001916  51E5               	movf	main@address_total& (0+255),w,b
  2940  001918  0F0A               	addlw	10
  2941  00191A  EC76  F021         	call	_Eeprom_ReadByte
  2942  00191E  0100               	movlb	0	; () banked
  2943  001920  6FB9               	movwf	main@eeprom_total& (0+255),b
  2944                           
  2945                           ;main.c: 490: Eeprom_WriteByte(address_total, eeprom_total);
  2946  001922  C0B9  F080         	movff	main@eeprom_total,Eeprom_WriteByte@data
  2947  001926  0100               	movlb	0	; () banked
  2948  001928  51E5               	movf	main@address_total& (0+255),w,b
  2949  00192A  EC3A  F021         	call	_Eeprom_WriteByte
  2950                           
  2951                           ;main.c: 492: address_min = address_min + 10;
  2952  00192E  0100               	movlb	0	; () banked
  2953  001930  51E7               	movf	main@address_min& (0+255),w,b
  2954  001932  0F0A               	addlw	10
  2955  001934  0100               	movlb	0	; () banked
  2956  001936  6FE7               	movwf	main@address_min& (0+255),b
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;main.c: 493: address_seconds = address_seconds + 10;
  2960  001938  0100               	movlb	0	; () banked
  2961  00193A  51E0               	movf	main@address_seconds& (0+255),w,b
  2962  00193C  0F0A               	addlw	10
  2963  00193E  0100               	movlb	0	; () banked
  2964  001940  6FE0               	movwf	main@address_seconds& (0+255),b
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;main.c: 494: address_AA = address_AA + 10;
  2968  001942  0100               	movlb	0	; () banked
  2969  001944  51E1               	movf	main@address_AA& (0+255),w,b
  2970  001946  0F0A               	addlw	10
  2971  001948  0100               	movlb	0	; () banked
  2972  00194A  6FE1               	movwf	main@address_AA& (0+255),b
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;main.c: 495: address_9V = address_9V + 10;
  2976  00194C  0100               	movlb	0	; () banked
  2977  00194E  51E2               	movf	main@address_9V& (0+255),w,b
  2978  001950  0F0A               	addlw	10
  2979  001952  0100               	movlb	0	; () banked
  2980  001954  6FE2               	movwf	main@address_9V& (0+255),b
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;main.c: 496: address_C = address_C + 10;
  2984  001956  0100               	movlb	0	; () banked
  2985  001958  51E3               	movf	main@address_C& (0+255),w,b
  2986  00195A  0F0A               	addlw	10
  2987  00195C  0100               	movlb	0	; () banked
  2988  00195E  6FE3               	movwf	main@address_C& (0+255),b
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;main.c: 497: address_drained = address_drained + 10;
  2992  001960  0100               	movlb	0	; () banked
  2993  001962  51E4               	movf	main@address_drained& (0+255),w,b
  2994  001964  0F0A               	addlw	10
  2995  001966  0100               	movlb	0	; () banked
  2996  001968  6FE4               	movwf	main@address_drained& (0+255),b
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;main.c: 498: address_total = address_total + 10;
  3000  00196A  0100               	movlb	0	; () banked
  3001  00196C  51E5               	movf	main@address_total& (0+255),w,b
  3002  00196E  0F0A               	addlw	10
  3003  001970  0100               	movlb	0	; () banked
  3004  001972  6FE5               	movwf	main@address_total& (0+255),b
  3005                           
  3006                           ; BSR set to: 0
  3007  001974  0100               	movlb	0	; () banked
  3008  001976  2BC8               	incf	main@i_435& (0+255),f,b
  3009  001978  D77A               	goto	l5516
  3010  00197A                     l5540:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;main.c: 499: }
  3014                           ;main.c: 501: Eeprom_WriteByte(address_min, count_min);
  3015  00197A  C0E6  F080         	movff	main@count_min,Eeprom_WriteByte@data
  3016  00197E  0100               	movlb	0	; () banked
  3017  001980  51E7               	movf	main@address_min& (0+255),w,b
  3018  001982  EC3A  F021         	call	_Eeprom_WriteByte
  3019                           
  3020                           ;main.c: 502: Eeprom_WriteByte(address_seconds, count_seconds);
  3021  001986  C0DF  F080         	movff	main@count_seconds,Eeprom_WriteByte@data
  3022  00198A  0100               	movlb	0	; () banked
  3023  00198C  51E0               	movf	main@address_seconds& (0+255),w,b
  3024  00198E  EC3A  F021         	call	_Eeprom_WriteByte
  3025                           
  3026                           ;main.c: 503: Eeprom_WriteByte(address_AA, count_AA);
  3027  001992  C0F4  F080         	movff	_count_AA,Eeprom_WriteByte@data	;volatile
  3028  001996  0100               	movlb	0	; () banked
  3029  001998  51E1               	movf	main@address_AA& (0+255),w,b
  3030  00199A  EC3A  F021         	call	_Eeprom_WriteByte
  3031                           
  3032                           ;main.c: 504: Eeprom_WriteByte(address_9V, count_9V);
  3033  00199E  C0F2  F080         	movff	_count_9V,Eeprom_WriteByte@data	;volatile
  3034  0019A2  0100               	movlb	0	; () banked
  3035  0019A4  51E2               	movf	main@address_9V& (0+255),w,b
  3036  0019A6  EC3A  F021         	call	_Eeprom_WriteByte
  3037                           
  3038                           ;main.c: 505: Eeprom_WriteByte(address_C, count_C);
  3039  0019AA  C0F0  F080         	movff	_count_C,Eeprom_WriteByte@data	;volatile
  3040  0019AE  0100               	movlb	0	; () banked
  3041  0019B0  51E3               	movf	main@address_C& (0+255),w,b
  3042  0019B2  EC3A  F021         	call	_Eeprom_WriteByte
  3043                           
  3044                           ;main.c: 506: Eeprom_WriteByte(address_drained, count_drained);
  3045  0019B6  C0EE  F080         	movff	_count_drained,Eeprom_WriteByte@data	;volatile
  3046  0019BA  0100               	movlb	0	; () banked
  3047  0019BC  51E4               	movf	main@address_drained& (0+255),w,b
  3048  0019BE  EC3A  F021         	call	_Eeprom_WriteByte
  3049                           
  3050                           ;main.c: 507: Eeprom_WriteByte(address_total, count_AA + count_9V + count_C + count_drai
      +                          ned);
  3051  0019C2  0100               	movlb	0	; () banked
  3052  0019C4  51F4               	movf	_count_AA& (0+255),w,b	;volatile
  3053  0019C6  0100               	movlb	0	; () banked
  3054  0019C8  25F2               	addwf	_count_9V& (0+255),w,b	;volatile
  3055  0019CA  0100               	movlb	0	; () banked
  3056  0019CC  25F0               	addwf	_count_C& (0+255),w,b	;volatile
  3057  0019CE  0100               	movlb	0	; () banked
  3058  0019D0  25EE               	addwf	_count_drained& (0+255),w,b	;volatile
  3059  0019D2  0100               	movlb	0	; () banked
  3060  0019D4  6F80               	movwf	Eeprom_WriteByte@data& (0+255),b
  3061  0019D6  0100               	movlb	0	; () banked
  3062  0019D8  51E5               	movf	main@address_total& (0+255),w,b
  3063  0019DA  EC3A  F021         	call	_Eeprom_WriteByte
  3064                           
  3065                           ;main.c: 509: initLCD();
  3066  0019DE  EC17  F021         	call	_initLCD	;wreg free
  3067                           
  3068                           ;main.c: 510: printf("%02d", count_min);
  3069  0019E2  0E9C               	movlw	low (STR_12+4)
  3070  0019E4  0100               	movlb	0	; () banked
  3071  0019E6  6F8C               	movwf	printf@f& (0+255),b
  3072  0019E8  0E10               	movlw	high (STR_12+4)
  3073  0019EA  0100               	movlb	0	; () banked
  3074  0019EC  6F8D               	movwf	(printf@f+1)& (0+255),b
  3075  0019EE  0100               	movlb	0	; () banked
  3076  0019F0  51E6               	movf	main@count_min& (0+255),w,b
  3077  0019F2  0100               	movlb	0	; () banked
  3078  0019F4  6F8E               	movwf	(?_printf+2)& (0+255),b
  3079  0019F6  6B8F               	clrf	(?_printf+3)& (0+255),b
  3080  0019F8  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3081  0019FA  078F               	decf	(?_printf+3)& (0+255),f,b
  3082  0019FC  ECAB  F014         	call	_printf	;wreg free
  3083                           
  3084                           ;main.c: 511: printf(" minutes");
  3085  001A00  0EAA               	movlw	low STR_8
  3086  001A02  0100               	movlb	0	; () banked
  3087  001A04  6F8C               	movwf	printf@f& (0+255),b
  3088  001A06  0E10               	movlw	high STR_8
  3089  001A08  0100               	movlb	0	; () banked
  3090  001A0A  6F8D               	movwf	(printf@f+1)& (0+255),b
  3091  001A0C  ECAB  F014         	call	_printf	;wreg free
  3092                           
  3093                           ;main.c: 512: lcdInst(0b11000000);;
  3094  001A10  0EC0               	movlw	192
  3095  001A12  EC30  F022         	call	_lcdInst
  3096                           
  3097                           ;main.c: 513: printf("%02d", count_seconds);
  3098  001A16  0E9C               	movlw	low (STR_12+4)
  3099  001A18  0100               	movlb	0	; () banked
  3100  001A1A  6F8C               	movwf	printf@f& (0+255),b
  3101  001A1C  0E10               	movlw	high (STR_12+4)
  3102  001A1E  0100               	movlb	0	; () banked
  3103  001A20  6F8D               	movwf	(printf@f+1)& (0+255),b
  3104  001A22  0100               	movlb	0	; () banked
  3105  001A24  51DF               	movf	main@count_seconds& (0+255),w,b
  3106  001A26  0100               	movlb	0	; () banked
  3107  001A28  6F8E               	movwf	(?_printf+2)& (0+255),b
  3108  001A2A  6B8F               	clrf	(?_printf+3)& (0+255),b
  3109  001A2C  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3110  001A2E  078F               	decf	(?_printf+3)& (0+255),f,b
  3111  001A30  ECAB  F014         	call	_printf	;wreg free
  3112                           
  3113                           ;main.c: 514: printf(" seconds");
  3114  001A34  0EA1               	movlw	low STR_10
  3115  001A36  0100               	movlb	0	; () banked
  3116  001A38  6F8C               	movwf	printf@f& (0+255),b
  3117  001A3A  0E10               	movlw	high STR_10
  3118  001A3C  0100               	movlb	0	; () banked
  3119  001A3E  6F8D               	movwf	(printf@f+1)& (0+255),b
  3120  001A40  ECAB  F014         	call	_printf	;wreg free
  3121                           
  3122                           ;main.c: 515: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3123  001A44  0E00               	movlw	0
  3124  001A46  0100               	movlb	0	; () banked
  3125  001A48  6FC9               	movwf	main@i_440& (0+255),b
  3126  001A4A                     l5552:
  3127                           
  3128                           ; BSR set to: 0
  3129  001A4A  0E09               	movlw	9
  3130  001A4C  0100               	movlb	0	; () banked
  3131  001A4E  65C9               	cpfsgt	main@i_440& (0+255),b
  3132  001A50  D001               	goto	l5556
  3133  001A52  D00C               	goto	l5560
  3134  001A54                     l5556:
  3135                           
  3136                           ; BSR set to: 0
  3137  001A54  0EFF               	movlw	255
  3138  001A56  0100               	movlb	0	; () banked
  3139  001A58  6FB1               	movwf	??_main& (0+255),b
  3140  001A5A  0E8A               	movlw	138
  3141  001A5C                     u6227:
  3142  001A5C  2EE8               	decfsz	wreg,f,c
  3143  001A5E  D7FE               	bra	u6227
  3144  001A60  2FB1               	decfsz	??_main& (0+255),f,b
  3145  001A62  D7FC               	bra	u6227
  3146  001A64  F000               	nop	
  3147  001A66  0100               	movlb	0	; () banked
  3148  001A68  2BC9               	incf	main@i_440& (0+255),f,b
  3149  001A6A  D7EF               	goto	l5552
  3150  001A6C                     l5560:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;main.c: 516: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3154  001A6C  0E00               	movlw	0
  3155  001A6E  0100               	movlb	0	; () banked
  3156  001A70  6FCA               	movwf	main@i_441& (0+255),b
  3157  001A72                     l5562:
  3158                           
  3159                           ; BSR set to: 0
  3160  001A72  0E09               	movlw	9
  3161  001A74  0100               	movlb	0	; () banked
  3162  001A76  65CA               	cpfsgt	main@i_441& (0+255),b
  3163  001A78  D001               	goto	l5566
  3164  001A7A  D00C               	goto	l5570
  3165  001A7C                     l5566:
  3166                           
  3167                           ; BSR set to: 0
  3168  001A7C  0EFF               	movlw	255
  3169  001A7E  0100               	movlb	0	; () banked
  3170  001A80  6FB1               	movwf	??_main& (0+255),b
  3171  001A82  0E8A               	movlw	138
  3172  001A84                     u6237:
  3173  001A84  2EE8               	decfsz	wreg,f,c
  3174  001A86  D7FE               	bra	u6237
  3175  001A88  2FB1               	decfsz	??_main& (0+255),f,b
  3176  001A8A  D7FC               	bra	u6237
  3177  001A8C  F000               	nop	
  3178  001A8E  0100               	movlb	0	; () banked
  3179  001A90  2BCA               	incf	main@i_441& (0+255),f,b
  3180  001A92  D7EF               	goto	l5562
  3181  001A94                     l5570:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;main.c: 517: initLCD();
  3185  001A94  EC17  F021         	call	_initLCD	;wreg free
  3186                           
  3187                           ;main.c: 518: printf("AA: %02d ", count_AA);
  3188  001A98  0E8E               	movlw	low STR_11
  3189  001A9A  0100               	movlb	0	; () banked
  3190  001A9C  6F8C               	movwf	printf@f& (0+255),b
  3191  001A9E  0E10               	movlw	high STR_11
  3192  001AA0  0100               	movlb	0	; () banked
  3193  001AA2  6F8D               	movwf	(printf@f+1)& (0+255),b
  3194  001AA4  C0F4  F08E         	movff	_count_AA,?_printf+2	;volatile
  3195  001AA8  C0F5  F08F         	movff	_count_AA+1,?_printf+3	;volatile
  3196  001AAC  ECAB  F014         	call	_printf	;wreg free
  3197                           
  3198                           ;main.c: 519: printf("9V: %02d", count_9V);
  3199  001AB0  0E98               	movlw	low STR_12
  3200  001AB2  0100               	movlb	0	; () banked
  3201  001AB4  6F8C               	movwf	printf@f& (0+255),b
  3202  001AB6  0E10               	movlw	high STR_12
  3203  001AB8  0100               	movlb	0	; () banked
  3204  001ABA  6F8D               	movwf	(printf@f+1)& (0+255),b
  3205  001ABC  C0F2  F08E         	movff	_count_9V,?_printf+2	;volatile
  3206  001AC0  C0F3  F08F         	movff	_count_9V+1,?_printf+3	;volatile
  3207  001AC4  ECAB  F014         	call	_printf	;wreg free
  3208                           
  3209                           ;main.c: 520: lcdInst(0b11000000);;
  3210  001AC8  0EC0               	movlw	192
  3211  001ACA  EC30  F022         	call	_lcdInst
  3212                           
  3213                           ;main.c: 521: printf(" C: %02d  ", count_C);
  3214  001ACE  0E78               	movlw	low STR_13
  3215  001AD0  0100               	movlb	0	; () banked
  3216  001AD2  6F8C               	movwf	printf@f& (0+255),b
  3217  001AD4  0E10               	movlw	high STR_13
  3218  001AD6  0100               	movlb	0	; () banked
  3219  001AD8  6F8D               	movwf	(printf@f+1)& (0+255),b
  3220  001ADA  C0F0  F08E         	movff	_count_C,?_printf+2	;volatile
  3221  001ADE  C0F1  F08F         	movff	_count_C+1,?_printf+3	;volatile
  3222  001AE2  ECAB  F014         	call	_printf	;wreg free
  3223                           
  3224                           ;main.c: 522: printf("X: %02d", count_drained);
  3225  001AE6  0EB3               	movlw	low STR_14
  3226  001AE8  0100               	movlb	0	; () banked
  3227  001AEA  6F8C               	movwf	printf@f& (0+255),b
  3228  001AEC  0E10               	movlw	high STR_14
  3229  001AEE  0100               	movlb	0	; () banked
  3230  001AF0  6F8D               	movwf	(printf@f+1)& (0+255),b
  3231  001AF2  C0EE  F08E         	movff	_count_drained,?_printf+2	;volatile
  3232  001AF6  C0EF  F08F         	movff	_count_drained+1,?_printf+3	;volatile
  3233  001AFA  ECAB  F014         	call	_printf	;wreg free
  3234                           
  3235                           ;main.c: 523: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3236  001AFE  0E00               	movlw	0
  3237  001B00  0100               	movlb	0	; () banked
  3238  001B02  6FCB               	movwf	main@i_446& (0+255),b
  3239  001B04                     l5582:
  3240                           
  3241                           ; BSR set to: 0
  3242  001B04  0E09               	movlw	9
  3243  001B06  0100               	movlb	0	; () banked
  3244  001B08  65CB               	cpfsgt	main@i_446& (0+255),b
  3245  001B0A  D001               	goto	l5586
  3246  001B0C  D00C               	goto	l5590
  3247  001B0E                     l5586:
  3248                           
  3249                           ; BSR set to: 0
  3250  001B0E  0EFF               	movlw	255
  3251  001B10  0100               	movlb	0	; () banked
  3252  001B12  6FB1               	movwf	??_main& (0+255),b
  3253  001B14  0E8A               	movlw	138
  3254  001B16                     u6247:
  3255  001B16  2EE8               	decfsz	wreg,f,c
  3256  001B18  D7FE               	bra	u6247
  3257  001B1A  2FB1               	decfsz	??_main& (0+255),f,b
  3258  001B1C  D7FC               	bra	u6247
  3259  001B1E  F000               	nop	
  3260  001B20  0100               	movlb	0	; () banked
  3261  001B22  2BCB               	incf	main@i_446& (0+255),f,b
  3262  001B24  D7EF               	goto	l5582
  3263  001B26                     l5590:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;main.c: 524: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3267  001B26  0E00               	movlw	0
  3268  001B28  0100               	movlb	0	; () banked
  3269  001B2A  6FCC               	movwf	main@i_447& (0+255),b
  3270  001B2C                     l5592:
  3271                           
  3272                           ; BSR set to: 0
  3273  001B2C  0E09               	movlw	9
  3274  001B2E  0100               	movlb	0	; () banked
  3275  001B30  65CC               	cpfsgt	main@i_447& (0+255),b
  3276  001B32  D001               	goto	l5596
  3277  001B34  D00C               	goto	l5600
  3278  001B36                     l5596:
  3279                           
  3280                           ; BSR set to: 0
  3281  001B36  0EFF               	movlw	255
  3282  001B38  0100               	movlb	0	; () banked
  3283  001B3A  6FB1               	movwf	??_main& (0+255),b
  3284  001B3C  0E8A               	movlw	138
  3285  001B3E                     u6257:
  3286  001B3E  2EE8               	decfsz	wreg,f,c
  3287  001B40  D7FE               	bra	u6257
  3288  001B42  2FB1               	decfsz	??_main& (0+255),f,b
  3289  001B44  D7FC               	bra	u6257
  3290  001B46  F000               	nop	
  3291  001B48  0100               	movlb	0	; () banked
  3292  001B4A  2BCC               	incf	main@i_447& (0+255),f,b
  3293  001B4C  D7EF               	goto	l5592
  3294  001B4E                     l5600:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 525: initLCD();
  3298  001B4E  EC17  F021         	call	_initLCD	;wreg free
  3299                           
  3300                           ;main.c: 526: printf("total: %02d", (count_AA + count_9V + count_C + count_drained));
  3301  001B52  0E6C               	movlw	low STR_15
  3302  001B54  0100               	movlb	0	; () banked
  3303  001B56  6F8C               	movwf	printf@f& (0+255),b
  3304  001B58  0E10               	movlw	high STR_15
  3305  001B5A  0100               	movlb	0	; () banked
  3306  001B5C  6F8D               	movwf	(printf@f+1)& (0+255),b
  3307  001B5E  0100               	movlb	0	; () banked
  3308  001B60  51F2               	movf	_count_9V& (0+255),w,b	;volatile
  3309  001B62  0100               	movlb	0	; () banked
  3310  001B64  25F4               	addwf	_count_AA& (0+255),w,b	;volatile
  3311  001B66  0100               	movlb	0	; () banked
  3312  001B68  6FB1               	movwf	??_main& (0+255),b
  3313  001B6A  0100               	movlb	0	; () banked
  3314  001B6C  51F3               	movf	(_count_9V+1)& (0+255),w,b	;volatile
  3315  001B6E  0100               	movlb	0	; () banked
  3316  001B70  21F5               	addwfc	(_count_AA+1)& (0+255),w,b	;volatile
  3317  001B72  0100               	movlb	0	; () banked
  3318  001B74  6FB2               	movwf	(??_main+1)& (0+255),b
  3319  001B76  0100               	movlb	0	; () banked
  3320  001B78  51F0               	movf	_count_C& (0+255),w,b	;volatile
  3321  001B7A  0100               	movlb	0	; () banked
  3322  001B7C  27B1               	addwf	??_main& (0+255),f,b
  3323  001B7E  0100               	movlb	0	; () banked
  3324  001B80  51F1               	movf	(_count_C+1)& (0+255),w,b	;volatile
  3325  001B82  0100               	movlb	0	; () banked
  3326  001B84  23B2               	addwfc	(??_main+1)& (0+255),f,b
  3327  001B86  0100               	movlb	0	; () banked
  3328  001B88  51EE               	movf	_count_drained& (0+255),w,b	;volatile
  3329  001B8A  0100               	movlb	0	; () banked
  3330  001B8C  25B1               	addwf	??_main& (0+255),w,b
  3331  001B8E  0100               	movlb	0	; () banked
  3332  001B90  6F8E               	movwf	(?_printf+2)& (0+255),b
  3333  001B92  0100               	movlb	0	; () banked
  3334  001B94  51EF               	movf	(_count_drained+1)& (0+255),w,b	;volatile
  3335  001B96  0100               	movlb	0	; () banked
  3336  001B98  21B2               	addwfc	(??_main+1)& (0+255),w,b
  3337  001B9A  0100               	movlb	0	; () banked
  3338  001B9C  6F8F               	movwf	(?_printf+3)& (0+255),b
  3339  001B9E  ECAB  F014         	call	_printf	;wreg free
  3340                           
  3341                           ;main.c: 527: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3342  001BA2  0E00               	movlw	0
  3343  001BA4  0100               	movlb	0	; () banked
  3344  001BA6  6FCD               	movwf	main@i_449& (0+255),b
  3345  001BA8                     l5606:
  3346                           
  3347                           ; BSR set to: 0
  3348  001BA8  0E09               	movlw	9
  3349  001BAA  0100               	movlb	0	; () banked
  3350  001BAC  65CD               	cpfsgt	main@i_449& (0+255),b
  3351  001BAE  D001               	goto	l5610
  3352  001BB0  D00C               	goto	l5614
  3353  001BB2                     l5610:
  3354                           
  3355                           ; BSR set to: 0
  3356  001BB2  0EFF               	movlw	255
  3357  001BB4  0100               	movlb	0	; () banked
  3358  001BB6  6FB1               	movwf	??_main& (0+255),b
  3359  001BB8  0E8A               	movlw	138
  3360  001BBA                     u6267:
  3361  001BBA  2EE8               	decfsz	wreg,f,c
  3362  001BBC  D7FE               	bra	u6267
  3363  001BBE  2FB1               	decfsz	??_main& (0+255),f,b
  3364  001BC0  D7FC               	bra	u6267
  3365  001BC2  F000               	nop	
  3366  001BC4  0100               	movlb	0	; () banked
  3367  001BC6  2BCD               	incf	main@i_449& (0+255),f,b
  3368  001BC8  D7EF               	goto	l5606
  3369  001BCA                     l5614:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;main.c: 528: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3373  001BCA  0E00               	movlw	0
  3374  001BCC  0100               	movlb	0	; () banked
  3375  001BCE  6FCE               	movwf	main@i_450& (0+255),b
  3376  001BD0                     l5616:
  3377                           
  3378                           ; BSR set to: 0
  3379  001BD0  0E09               	movlw	9
  3380  001BD2  0100               	movlb	0	; () banked
  3381  001BD4  65CE               	cpfsgt	main@i_450& (0+255),b
  3382  001BD6  D002               	goto	l5620
  3383  001BD8  EFA1  F008         	goto	l5284
  3384  001BDC                     l5620:
  3385                           
  3386                           ; BSR set to: 0
  3387  001BDC  0EFF               	movlw	255
  3388  001BDE  0100               	movlb	0	; () banked
  3389  001BE0  6FB1               	movwf	??_main& (0+255),b
  3390  001BE2  0E8A               	movlw	138
  3391  001BE4                     u6277:
  3392  001BE4  2EE8               	decfsz	wreg,f,c
  3393  001BE6  D7FE               	bra	u6277
  3394  001BE8  2FB1               	decfsz	??_main& (0+255),f,b
  3395  001BEA  D7FC               	bra	u6277
  3396  001BEC  F000               	nop	
  3397  001BEE  0100               	movlb	0	; () banked
  3398  001BF0  2BCE               	incf	main@i_450& (0+255),f,b
  3399  001BF2  D7EE               	goto	l5616
  3400  001BF4                     l5624:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;main.c: 531: else if (keys[keypress] == keys[1]){
  3404  001BF4  0100               	movlb	0	; () banked
  3405  001BF6  51DC               	movf	main@keypress& (0+255),w,b
  3406  001BF8  0D01               	mullw	1
  3407  001BFA  0E01               	movlw	low _keys
  3408  001BFC  24F3               	addwf	prodl,w,c
  3409  001BFE  6EF6               	movwf	tblptrl,c
  3410  001C00  0E10               	movlw	high _keys
  3411  001C02  20F4               	addwfc	prodh,w,c
  3412  001C04  6EF7               	movwf	tblptrh,c
  3413  001C06                     	if	0	;There are less than 3 active tblptr bytes
  3414  001C06                     	endif
  3415  001C06  0008               	tblrd		*
  3416  001C08  CFF5 F0B1          	movff	tablat,??_main
  3417  001C0C  0E02               	movlw	low (_keys+1)
  3418  001C0E  6EF6               	movwf	tblptrl,c
  3419  001C10  0E10               	movlw	high (_keys+1)
  3420  001C12  6EF7               	movwf	tblptrh,c
  3421  001C14                     	if	0	;tblptru may be non-zero
  3422  001C14                     	endif
  3423  001C14                     	if	0	;tblptru may be non-zero
  3424  001C14                     	endif
  3425  001C14  0008               	tblrd		*
  3426  001C16  50F5               	movf	tablat,w,c
  3427  001C18  0100               	movlb	0	; () banked
  3428  001C1A  19B1               	xorwf	??_main& (0+255),w,b
  3429  001C1C  A4D8               	btfss	status,2,c
  3430  001C1E  EFA1  F008         	goto	l5284
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;main.c: 533: address_min = address_min + 30;
  3434  001C22  0100               	movlb	0	; () banked
  3435  001C24  51E7               	movf	main@address_min& (0+255),w,b
  3436  001C26  0F1E               	addlw	30
  3437  001C28  0100               	movlb	0	; () banked
  3438  001C2A  6FE7               	movwf	main@address_min& (0+255),b
  3439                           
  3440                           ;main.c: 534: address_seconds = address_seconds + 30;
  3441  001C2C  0100               	movlb	0	; () banked
  3442  001C2E  51E0               	movf	main@address_seconds& (0+255),w,b
  3443  001C30  0F1E               	addlw	30
  3444  001C32  0100               	movlb	0	; () banked
  3445  001C34  6FE0               	movwf	main@address_seconds& (0+255),b
  3446                           
  3447                           ;main.c: 535: address_total = address_total + 30;
  3448  001C36  0100               	movlb	0	; () banked
  3449  001C38  51E5               	movf	main@address_total& (0+255),w,b
  3450  001C3A  0F1E               	addlw	30
  3451  001C3C  0100               	movlb	0	; () banked
  3452  001C3E  6FE5               	movwf	main@address_total& (0+255),b
  3453                           
  3454                           ;main.c: 536: address_AA = address_AA + 30;
  3455  001C40  0100               	movlb	0	; () banked
  3456  001C42  51E1               	movf	main@address_AA& (0+255),w,b
  3457  001C44  0F1E               	addlw	30
  3458  001C46  0100               	movlb	0	; () banked
  3459  001C48  6FE1               	movwf	main@address_AA& (0+255),b
  3460                           
  3461                           ;main.c: 537: address_9V = address_9V + 30;
  3462  001C4A  0100               	movlb	0	; () banked
  3463  001C4C  51E2               	movf	main@address_9V& (0+255),w,b
  3464  001C4E  0F1E               	addlw	30
  3465  001C50  0100               	movlb	0	; () banked
  3466  001C52  6FE2               	movwf	main@address_9V& (0+255),b
  3467                           
  3468                           ;main.c: 538: address_C = address_C + 30;
  3469  001C54  0100               	movlb	0	; () banked
  3470  001C56  51E3               	movf	main@address_C& (0+255),w,b
  3471  001C58  0F1E               	addlw	30
  3472  001C5A  0100               	movlb	0	; () banked
  3473  001C5C  6FE3               	movwf	main@address_C& (0+255),b
  3474                           
  3475                           ;main.c: 539: address_drained = address_drained + 30;
  3476  001C5E  0100               	movlb	0	; () banked
  3477  001C60  51E4               	movf	main@address_drained& (0+255),w,b
  3478  001C62  0F1E               	addlw	30
  3479  001C64  0100               	movlb	0	; () banked
  3480  001C66  6FE4               	movwf	main@address_drained& (0+255),b
  3481                           
  3482                           ;main.c: 541: while(keys[keypress] != keys[13]){
  3483  001C68  D14B               	goto	l5666
  3484  001C6A                     l5628:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;main.c: 543: past_min = Eeprom_ReadByte(address_min);
  3488  001C6A  0100               	movlb	0	; () banked
  3489  001C6C  51E7               	movf	main@address_min& (0+255),w,b
  3490  001C6E  EC76  F021         	call	_Eeprom_ReadByte
  3491  001C72  0100               	movlb	0	; () banked
  3492  001C74  6FBA               	movwf	main@past_min& (0+255),b
  3493                           
  3494                           ;main.c: 544: past_seconds = Eeprom_ReadByte(address_seconds);
  3495  001C76  0100               	movlb	0	; () banked
  3496  001C78  51E0               	movf	main@address_seconds& (0+255),w,b
  3497  001C7A  EC76  F021         	call	_Eeprom_ReadByte
  3498  001C7E  0100               	movlb	0	; () banked
  3499  001C80  6FBB               	movwf	main@past_seconds& (0+255),b
  3500                           
  3501                           ;main.c: 545: past_total = Eeprom_ReadByte(address_total);
  3502  001C82  0100               	movlb	0	; () banked
  3503  001C84  51E5               	movf	main@address_total& (0+255),w,b
  3504  001C86  EC76  F021         	call	_Eeprom_ReadByte
  3505  001C8A  0100               	movlb	0	; () banked
  3506  001C8C  6FBC               	movwf	main@past_total& (0+255),b
  3507                           
  3508                           ;main.c: 546: past_AA = Eeprom_ReadByte(address_AA);
  3509  001C8E  0100               	movlb	0	; () banked
  3510  001C90  51E1               	movf	main@address_AA& (0+255),w,b
  3511  001C92  EC76  F021         	call	_Eeprom_ReadByte
  3512  001C96  0100               	movlb	0	; () banked
  3513  001C98  6FBD               	movwf	main@past_AA& (0+255),b
  3514                           
  3515                           ;main.c: 547: past_9V = Eeprom_ReadByte(address_9V);
  3516  001C9A  0100               	movlb	0	; () banked
  3517  001C9C  51E2               	movf	main@address_9V& (0+255),w,b
  3518  001C9E  EC76  F021         	call	_Eeprom_ReadByte
  3519  001CA2  0100               	movlb	0	; () banked
  3520  001CA4  6FBE               	movwf	main@past_9V& (0+255),b
  3521                           
  3522                           ;main.c: 548: past_C = Eeprom_ReadByte(address_C);
  3523  001CA6  0100               	movlb	0	; () banked
  3524  001CA8  51E3               	movf	main@address_C& (0+255),w,b
  3525  001CAA  EC76  F021         	call	_Eeprom_ReadByte
  3526  001CAE  0100               	movlb	0	; () banked
  3527  001CB0  6FBF               	movwf	main@past_C& (0+255),b
  3528                           
  3529                           ;main.c: 549: past_drained = Eeprom_ReadByte(address_drained);
  3530  001CB2  0100               	movlb	0	; () banked
  3531  001CB4  51E4               	movf	main@address_drained& (0+255),w,b
  3532  001CB6  EC76  F021         	call	_Eeprom_ReadByte
  3533  001CBA  0100               	movlb	0	; () banked
  3534  001CBC  6FC0               	movwf	main@past_drained& (0+255),b
  3535                           
  3536                           ;main.c: 551: initLCD();
  3537  001CBE  EC17  F021         	call	_initLCD	;wreg free
  3538                           
  3539                           ;main.c: 552: printf("%02d", past_min);
  3540  001CC2  0E9C               	movlw	low (STR_12+4)
  3541  001CC4  0100               	movlb	0	; () banked
  3542  001CC6  6F8C               	movwf	printf@f& (0+255),b
  3543  001CC8  0E10               	movlw	high (STR_12+4)
  3544  001CCA  0100               	movlb	0	; () banked
  3545  001CCC  6F8D               	movwf	(printf@f+1)& (0+255),b
  3546  001CCE  0100               	movlb	0	; () banked
  3547  001CD0  51BA               	movf	main@past_min& (0+255),w,b
  3548  001CD2  0100               	movlb	0	; () banked
  3549  001CD4  6F8E               	movwf	(?_printf+2)& (0+255),b
  3550  001CD6  6B8F               	clrf	(?_printf+3)& (0+255),b
  3551  001CD8  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3552  001CDA  078F               	decf	(?_printf+3)& (0+255),f,b
  3553  001CDC  ECAB  F014         	call	_printf	;wreg free
  3554                           
  3555                           ;main.c: 553: printf(" min  ");
  3556  001CE0  0EC3               	movlw	low STR_17
  3557  001CE2  0100               	movlb	0	; () banked
  3558  001CE4  6F8C               	movwf	printf@f& (0+255),b
  3559  001CE6  0E10               	movlw	high STR_17
  3560  001CE8  0100               	movlb	0	; () banked
  3561  001CEA  6F8D               	movwf	(printf@f+1)& (0+255),b
  3562  001CEC  ECAB  F014         	call	_printf	;wreg free
  3563                           
  3564                           ;main.c: 555: printf("%02d", past_seconds);
  3565  001CF0  0E9C               	movlw	low (STR_12+4)
  3566  001CF2  0100               	movlb	0	; () banked
  3567  001CF4  6F8C               	movwf	printf@f& (0+255),b
  3568  001CF6  0E10               	movlw	high (STR_12+4)
  3569  001CF8  0100               	movlb	0	; () banked
  3570  001CFA  6F8D               	movwf	(printf@f+1)& (0+255),b
  3571  001CFC  0100               	movlb	0	; () banked
  3572  001CFE  51BB               	movf	main@past_seconds& (0+255),w,b
  3573  001D00  0100               	movlb	0	; () banked
  3574  001D02  6F8E               	movwf	(?_printf+2)& (0+255),b
  3575  001D04  6B8F               	clrf	(?_printf+3)& (0+255),b
  3576  001D06  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3577  001D08  078F               	decf	(?_printf+3)& (0+255),f,b
  3578  001D0A  ECAB  F014         	call	_printf	;wreg free
  3579                           
  3580                           ;main.c: 556: printf(" sec");
  3581  001D0E  0ED1               	movlw	low STR_19
  3582  001D10  0100               	movlb	0	; () banked
  3583  001D12  6F8C               	movwf	printf@f& (0+255),b
  3584  001D14  0E10               	movlw	high STR_19
  3585  001D16  0100               	movlb	0	; () banked
  3586  001D18  6F8D               	movwf	(printf@f+1)& (0+255),b
  3587  001D1A  ECAB  F014         	call	_printf	;wreg free
  3588                           
  3589                           ;main.c: 558: lcdInst(0b11000000);;
  3590  001D1E  0EC0               	movlw	192
  3591  001D20  EC30  F022         	call	_lcdInst
  3592                           
  3593                           ;main.c: 560: printf("total: %02d", past_total);
  3594  001D24  0E6C               	movlw	low STR_15
  3595  001D26  0100               	movlb	0	; () banked
  3596  001D28  6F8C               	movwf	printf@f& (0+255),b
  3597  001D2A  0E10               	movlw	high STR_15
  3598  001D2C  0100               	movlb	0	; () banked
  3599  001D2E  6F8D               	movwf	(printf@f+1)& (0+255),b
  3600  001D30  0100               	movlb	0	; () banked
  3601  001D32  51BC               	movf	main@past_total& (0+255),w,b
  3602  001D34  0100               	movlb	0	; () banked
  3603  001D36  6F8E               	movwf	(?_printf+2)& (0+255),b
  3604  001D38  6B8F               	clrf	(?_printf+3)& (0+255),b
  3605  001D3A  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3606  001D3C  078F               	decf	(?_printf+3)& (0+255),f,b
  3607  001D3E  ECAB  F014         	call	_printf	;wreg free
  3608  001D42                     l232:
  3609  001D42  A281               	btfss	3969,1,c	;volatile
  3610  001D44  D7FE               	goto	l232
  3611                           
  3612                           ;main.c: 564: }
  3613                           ;main.c: 566: keypress = (PORTB & 0xF0)>>4;
  3614  001D46  3881               	swapf	3969,w,c	;volatile
  3615  001D48  0B0F               	andlw	15
  3616  001D4A  0B0F               	andlw	15
  3617  001D4C  0100               	movlb	0	; () banked
  3618  001D4E  6FDC               	movwf	main@keypress& (0+255),b
  3619  001D50                     l235:
  3620  001D50  B281               	btfsc	3969,1,c	;volatile
  3621  001D52  D7FE               	goto	l235
  3622                           
  3623                           ;main.c: 570: }
  3624                           ;main.c: 572: if(keys[keypress] == keys[3]){
  3625  001D54  0100               	movlb	0	; () banked
  3626  001D56  51DC               	movf	main@keypress& (0+255),w,b
  3627  001D58  0D01               	mullw	1
  3628  001D5A  0E01               	movlw	low _keys
  3629  001D5C  24F3               	addwf	prodl,w,c
  3630  001D5E  6EF6               	movwf	tblptrl,c
  3631  001D60  0E10               	movlw	high _keys
  3632  001D62  20F4               	addwfc	prodh,w,c
  3633  001D64  6EF7               	movwf	tblptrh,c
  3634  001D66                     	if	0	;There are less than 3 active tblptr bytes
  3635  001D66                     	endif
  3636  001D66  0008               	tblrd		*
  3637  001D68  CFF5 F0B1          	movff	tablat,??_main
  3638  001D6C  0E04               	movlw	low (_keys+3)
  3639  001D6E  6EF6               	movwf	tblptrl,c
  3640  001D70  0E10               	movlw	high (_keys+3)
  3641  001D72  6EF7               	movwf	tblptrh,c
  3642  001D74                     	if	0	;tblptru may be non-zero
  3643  001D74                     	endif
  3644  001D74                     	if	0	;tblptru may be non-zero
  3645  001D74                     	endif
  3646  001D74  0008               	tblrd		*
  3647  001D76  50F5               	movf	tablat,w,c
  3648  001D78  0100               	movlb	0	; () banked
  3649  001D7A  19B1               	xorwf	??_main& (0+255),w,b
  3650  001D7C  A4D8               	btfss	status,2,c
  3651  001D7E  D045               	goto	l5654
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;main.c: 574: initLCD();
  3655  001D80  EC17  F021         	call	_initLCD	;wreg free
  3656                           
  3657                           ;main.c: 575: printf("AA: %02d ", past_AA);
  3658  001D84  0E8E               	movlw	low STR_11
  3659  001D86  0100               	movlb	0	; () banked
  3660  001D88  6F8C               	movwf	printf@f& (0+255),b
  3661  001D8A  0E10               	movlw	high STR_11
  3662  001D8C  0100               	movlb	0	; () banked
  3663  001D8E  6F8D               	movwf	(printf@f+1)& (0+255),b
  3664  001D90  0100               	movlb	0	; () banked
  3665  001D92  51BD               	movf	main@past_AA& (0+255),w,b
  3666  001D94  0100               	movlb	0	; () banked
  3667  001D96  6F8E               	movwf	(?_printf+2)& (0+255),b
  3668  001D98  6B8F               	clrf	(?_printf+3)& (0+255),b
  3669  001D9A  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3670  001D9C  078F               	decf	(?_printf+3)& (0+255),f,b
  3671  001D9E  ECAB  F014         	call	_printf	;wreg free
  3672                           
  3673                           ;main.c: 576: printf("9V: %02d", past_9V);
  3674  001DA2  0E98               	movlw	low STR_12
  3675  001DA4  0100               	movlb	0	; () banked
  3676  001DA6  6F8C               	movwf	printf@f& (0+255),b
  3677  001DA8  0E10               	movlw	high STR_12
  3678  001DAA  0100               	movlb	0	; () banked
  3679  001DAC  6F8D               	movwf	(printf@f+1)& (0+255),b
  3680  001DAE  0100               	movlb	0	; () banked
  3681  001DB0  51BE               	movf	main@past_9V& (0+255),w,b
  3682  001DB2  0100               	movlb	0	; () banked
  3683  001DB4  6F8E               	movwf	(?_printf+2)& (0+255),b
  3684  001DB6  6B8F               	clrf	(?_printf+3)& (0+255),b
  3685  001DB8  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3686  001DBA  078F               	decf	(?_printf+3)& (0+255),f,b
  3687  001DBC  ECAB  F014         	call	_printf	;wreg free
  3688                           
  3689                           ;main.c: 577: lcdInst(0b11000000);;
  3690  001DC0  0EC0               	movlw	192
  3691  001DC2  EC30  F022         	call	_lcdInst
  3692                           
  3693                           ;main.c: 578: printf(" C: %02d  ", past_C);
  3694  001DC6  0E78               	movlw	low STR_13
  3695  001DC8  0100               	movlb	0	; () banked
  3696  001DCA  6F8C               	movwf	printf@f& (0+255),b
  3697  001DCC  0E10               	movlw	high STR_13
  3698  001DCE  0100               	movlb	0	; () banked
  3699  001DD0  6F8D               	movwf	(printf@f+1)& (0+255),b
  3700  001DD2  0100               	movlb	0	; () banked
  3701  001DD4  51BF               	movf	main@past_C& (0+255),w,b
  3702  001DD6  0100               	movlb	0	; () banked
  3703  001DD8  6F8E               	movwf	(?_printf+2)& (0+255),b
  3704  001DDA  6B8F               	clrf	(?_printf+3)& (0+255),b
  3705  001DDC  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3706  001DDE  078F               	decf	(?_printf+3)& (0+255),f,b
  3707  001DE0  ECAB  F014         	call	_printf	;wreg free
  3708                           
  3709                           ;main.c: 579: printf("X: %02d", past_drained);
  3710  001DE4  0EB3               	movlw	low STR_14
  3711  001DE6  0100               	movlb	0	; () banked
  3712  001DE8  6F8C               	movwf	printf@f& (0+255),b
  3713  001DEA  0E10               	movlw	high STR_14
  3714  001DEC  0100               	movlb	0	; () banked
  3715  001DEE  6F8D               	movwf	(printf@f+1)& (0+255),b
  3716  001DF0  0100               	movlb	0	; () banked
  3717  001DF2  51C0               	movf	main@past_drained& (0+255),w,b
  3718  001DF4  0100               	movlb	0	; () banked
  3719  001DF6  6F8E               	movwf	(?_printf+2)& (0+255),b
  3720  001DF8  6B8F               	clrf	(?_printf+3)& (0+255),b
  3721  001DFA  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
  3722  001DFC  078F               	decf	(?_printf+3)& (0+255),f,b
  3723  001DFE  ECAB  F014         	call	_printf	;wreg free
  3724  001E02                     l239:
  3725  001E02  A281               	btfss	3969,1,c	;volatile
  3726  001E04  D7FE               	goto	l239
  3727  001E06                     l242:
  3728  001E06  B281               	btfsc	3969,1,c	;volatile
  3729  001E08  D7FE               	goto	l242
  3730  001E0A                     l5654:
  3731                           
  3732                           ;main.c: 587: }
  3733                           ;main.c: 588: }
  3734                           ;main.c: 590: if(keys[keypress] == keys[12]){
  3735  001E0A  0100               	movlb	0	; () banked
  3736  001E0C  51DC               	movf	main@keypress& (0+255),w,b
  3737  001E0E  0D01               	mullw	1
  3738  001E10  0E01               	movlw	low _keys
  3739  001E12  24F3               	addwf	prodl,w,c
  3740  001E14  6EF6               	movwf	tblptrl,c
  3741  001E16  0E10               	movlw	high _keys
  3742  001E18  20F4               	addwfc	prodh,w,c
  3743  001E1A  6EF7               	movwf	tblptrh,c
  3744  001E1C                     	if	0	;There are less than 3 active tblptr bytes
  3745  001E1C                     	endif
  3746  001E1C  0008               	tblrd		*
  3747  001E1E  CFF5 F0B1          	movff	tablat,??_main
  3748  001E22  0E0D               	movlw	low (_keys+12)
  3749  001E24  6EF6               	movwf	tblptrl,c
  3750  001E26  0E10               	movlw	high (_keys+12)
  3751  001E28  6EF7               	movwf	tblptrh,c
  3752  001E2A                     	if	0	;tblptru may be non-zero
  3753  001E2A                     	endif
  3754  001E2A                     	if	0	;tblptru may be non-zero
  3755  001E2A                     	endif
  3756  001E2A  0008               	tblrd		*
  3757  001E2C  50F5               	movf	tablat,w,c
  3758  001E2E  0100               	movlb	0	; () banked
  3759  001E30  19B1               	xorwf	??_main& (0+255),w,b
  3760  001E32  A4D8               	btfss	status,2,c
  3761  001E34  D027               	goto	l5660
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;main.c: 591: if(address_min < 0x00+30){
  3765  001E36  0E1E               	movlw	30
  3766  001E38  0100               	movlb	0	; () banked
  3767  001E3A  61E7               	cpfslt	main@address_min& (0+255),b
  3768  001E3C  D023               	goto	l5660
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;main.c: 592: address_min = address_min + 10;
  3772  001E3E  0100               	movlb	0	; () banked
  3773  001E40  51E7               	movf	main@address_min& (0+255),w,b
  3774  001E42  0F0A               	addlw	10
  3775  001E44  0100               	movlb	0	; () banked
  3776  001E46  6FE7               	movwf	main@address_min& (0+255),b
  3777                           
  3778                           ;main.c: 593: address_seconds = address_seconds + 10;
  3779  001E48  0100               	movlb	0	; () banked
  3780  001E4A  51E0               	movf	main@address_seconds& (0+255),w,b
  3781  001E4C  0F0A               	addlw	10
  3782  001E4E  0100               	movlb	0	; () banked
  3783  001E50  6FE0               	movwf	main@address_seconds& (0+255),b
  3784                           
  3785                           ;main.c: 594: address_AA = address_AA + 10;
  3786  001E52  0100               	movlb	0	; () banked
  3787  001E54  51E1               	movf	main@address_AA& (0+255),w,b
  3788  001E56  0F0A               	addlw	10
  3789  001E58  0100               	movlb	0	; () banked
  3790  001E5A  6FE1               	movwf	main@address_AA& (0+255),b
  3791                           
  3792                           ;main.c: 595: address_9V = address_9V + 10;
  3793  001E5C  0100               	movlb	0	; () banked
  3794  001E5E  51E2               	movf	main@address_9V& (0+255),w,b
  3795  001E60  0F0A               	addlw	10
  3796  001E62  0100               	movlb	0	; () banked
  3797  001E64  6FE2               	movwf	main@address_9V& (0+255),b
  3798                           
  3799                           ;main.c: 596: address_C = address_C + 10;
  3800  001E66  0100               	movlb	0	; () banked
  3801  001E68  51E3               	movf	main@address_C& (0+255),w,b
  3802  001E6A  0F0A               	addlw	10
  3803  001E6C  0100               	movlb	0	; () banked
  3804  001E6E  6FE3               	movwf	main@address_C& (0+255),b
  3805                           
  3806                           ;main.c: 597: address_drained = address_drained + 10;
  3807  001E70  0100               	movlb	0	; () banked
  3808  001E72  51E4               	movf	main@address_drained& (0+255),w,b
  3809  001E74  0F0A               	addlw	10
  3810  001E76  0100               	movlb	0	; () banked
  3811  001E78  6FE4               	movwf	main@address_drained& (0+255),b
  3812                           
  3813                           ;main.c: 598: address_total = address_total + 10;
  3814  001E7A  0100               	movlb	0	; () banked
  3815  001E7C  51E5               	movf	main@address_total& (0+255),w,b
  3816  001E7E  0F0A               	addlw	10
  3817  001E80  0100               	movlb	0	; () banked
  3818  001E82  6FE5               	movwf	main@address_total& (0+255),b
  3819  001E84                     l5660:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;main.c: 599: }
  3823                           ;main.c: 600: }
  3824                           ;main.c: 602: if(keys[keypress] == keys[14]){
  3825  001E84  0100               	movlb	0	; () banked
  3826  001E86  51DC               	movf	main@keypress& (0+255),w,b
  3827  001E88  0D01               	mullw	1
  3828  001E8A  0E01               	movlw	low _keys
  3829  001E8C  24F3               	addwf	prodl,w,c
  3830  001E8E  6EF6               	movwf	tblptrl,c
  3831  001E90  0E10               	movlw	high _keys
  3832  001E92  20F4               	addwfc	prodh,w,c
  3833  001E94  6EF7               	movwf	tblptrh,c
  3834  001E96                     	if	0	;There are less than 3 active tblptr bytes
  3835  001E96                     	endif
  3836  001E96  0008               	tblrd		*
  3837  001E98  CFF5 F0B1          	movff	tablat,??_main
  3838  001E9C  0E0F               	movlw	low (_keys+14)
  3839  001E9E  6EF6               	movwf	tblptrl,c
  3840  001EA0  0E10               	movlw	high (_keys+14)
  3841  001EA2  6EF7               	movwf	tblptrh,c
  3842  001EA4                     	if	0	;tblptru may be non-zero
  3843  001EA4                     	endif
  3844  001EA4                     	if	0	;tblptru may be non-zero
  3845  001EA4                     	endif
  3846  001EA4  0008               	tblrd		*
  3847  001EA6  50F5               	movf	tablat,w,c
  3848  001EA8  0100               	movlb	0	; () banked
  3849  001EAA  19B1               	xorwf	??_main& (0+255),w,b
  3850  001EAC  A4D8               	btfss	status,2,c
  3851  001EAE  D028               	goto	l5666
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;main.c: 603: if(address_min > 0x00){
  3855  001EB0  0100               	movlb	0	; () banked
  3856  001EB2  51E7               	movf	main@address_min& (0+255),w,b
  3857  001EB4  0100               	movlb	0	; () banked
  3858  001EB6  B4D8               	btfsc	status,2,c
  3859  001EB8  D023               	goto	l5666
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;main.c: 604: address_min = address_min - 10;
  3863  001EBA  0100               	movlb	0	; () banked
  3864  001EBC  51E7               	movf	main@address_min& (0+255),w,b
  3865  001EBE  0FF6               	addlw	246
  3866  001EC0  0100               	movlb	0	; () banked
  3867  001EC2  6FE7               	movwf	main@address_min& (0+255),b
  3868                           
  3869                           ;main.c: 605: address_seconds = address_seconds - 10;
  3870  001EC4  0100               	movlb	0	; () banked
  3871  001EC6  51E0               	movf	main@address_seconds& (0+255),w,b
  3872  001EC8  0FF6               	addlw	246
  3873  001ECA  0100               	movlb	0	; () banked
  3874  001ECC  6FE0               	movwf	main@address_seconds& (0+255),b
  3875                           
  3876                           ;main.c: 606: address_AA = address_AA - 10;
  3877  001ECE  0100               	movlb	0	; () banked
  3878  001ED0  51E1               	movf	main@address_AA& (0+255),w,b
  3879  001ED2  0FF6               	addlw	246
  3880  001ED4  0100               	movlb	0	; () banked
  3881  001ED6  6FE1               	movwf	main@address_AA& (0+255),b
  3882                           
  3883                           ;main.c: 607: address_9V = address_9V - 10;
  3884  001ED8  0100               	movlb	0	; () banked
  3885  001EDA  51E2               	movf	main@address_9V& (0+255),w,b
  3886  001EDC  0FF6               	addlw	246
  3887  001EDE  0100               	movlb	0	; () banked
  3888  001EE0  6FE2               	movwf	main@address_9V& (0+255),b
  3889                           
  3890                           ;main.c: 608: address_C = address_C - 10;
  3891  001EE2  0100               	movlb	0	; () banked
  3892  001EE4  51E3               	movf	main@address_C& (0+255),w,b
  3893  001EE6  0FF6               	addlw	246
  3894  001EE8  0100               	movlb	0	; () banked
  3895  001EEA  6FE3               	movwf	main@address_C& (0+255),b
  3896                           
  3897                           ;main.c: 609: address_drained = address_drained - 10;
  3898  001EEC  0100               	movlb	0	; () banked
  3899  001EEE  51E4               	movf	main@address_drained& (0+255),w,b
  3900  001EF0  0FF6               	addlw	246
  3901  001EF2  0100               	movlb	0	; () banked
  3902  001EF4  6FE4               	movwf	main@address_drained& (0+255),b
  3903                           
  3904                           ;main.c: 610: address_total = address_total - 10;
  3905  001EF6  0100               	movlb	0	; () banked
  3906  001EF8  51E5               	movf	main@address_total& (0+255),w,b
  3907  001EFA  0FF6               	addlw	246
  3908  001EFC  0100               	movlb	0	; () banked
  3909  001EFE  6FE5               	movwf	main@address_total& (0+255),b
  3910  001F00                     l5666:
  3911                           
  3912                           ; BSR set to: 0
  3913  001F00  0100               	movlb	0	; () banked
  3914  001F02  51DC               	movf	main@keypress& (0+255),w,b
  3915  001F04  0D01               	mullw	1
  3916  001F06  0E01               	movlw	low _keys
  3917  001F08  24F3               	addwf	prodl,w,c
  3918  001F0A  6EF6               	movwf	tblptrl,c
  3919  001F0C  0E10               	movlw	high _keys
  3920  001F0E  20F4               	addwfc	prodh,w,c
  3921  001F10  6EF7               	movwf	tblptrh,c
  3922  001F12                     	if	0	;There are less than 3 active tblptr bytes
  3923  001F12                     	endif
  3924  001F12  0008               	tblrd		*
  3925  001F14  CFF5 F0B1          	movff	tablat,??_main
  3926  001F18  0E0E               	movlw	low (_keys+13)
  3927  001F1A  6EF6               	movwf	tblptrl,c
  3928  001F1C  0E10               	movlw	high (_keys+13)
  3929  001F1E  6EF7               	movwf	tblptrh,c
  3930  001F20                     	if	0	;tblptru may be non-zero
  3931  001F20                     	endif
  3932  001F20                     	if	0	;tblptru may be non-zero
  3933  001F20                     	endif
  3934  001F20  0008               	tblrd		*
  3935  001F22  50F5               	movf	tablat,w,c
  3936  001F24  0100               	movlb	0	; () banked
  3937  001F26  19B1               	xorwf	??_main& (0+255),w,b
  3938  001F28  B4D8               	btfsc	status,2,c
  3939  001F2A  EFA1  F008         	goto	l5284
  3940  001F2E  D69D               	goto	l5628
  3941  001F30                     __end_of_main:
  3942                           	opt stack 0
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           intcon	equ	0xFF2
  3950                           intcon2	equ	0xFF1
  3951                           postinc0	equ	0xFEE
  3952                           wreg	equ	0xFE8
  3953                           indf2	equ	0xFDF
  3954                           fsr2h	equ	0xFDA
  3955                           fsr2l	equ	0xFD9
  3956                           status	equ	0xFD8
  3957                           
  3958 ;; *************** function _set_external_interrupt3 *****************
  3959 ;; Defined at:
  3960 ;;		line 109 in file "interrupt.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  time            2    8[BANK0 ] int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  set_time        2   10[BANK0 ] unsigned int 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        4 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    7
  3981 ;; This function calls:
  3982 ;;		___awdiv
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text1
  3989  003E40                     __ptext1:
  3990                           	opt stack 0
  3991  003E40                     _set_external_interrupt3:
  3992                           	opt stack 23
  3993                           
  3994                           ;interrupt.c: 111: unsigned int set_time = 65535 - (time*2/4);
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;incstack = 0
  3998  003E40  90D8               	bcf	status,0,c
  3999  003E42  0100               	movlb	0	; () banked
  4000  003E44  3588               	rlcf	set_external_interrupt3@time& (0+255),w,b
  4001  003E46  0100               	movlb	0	; () banked
  4002  003E48  6F80               	movwf	___awdiv@dividend& (0+255),b
  4003  003E4A  0100               	movlb	0	; () banked
  4004  003E4C  3589               	rlcf	(set_external_interrupt3@time+1)& (0+255),w,b
  4005  003E4E  0100               	movlb	0	; () banked
  4006  003E50  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
  4007  003E52  0E00               	movlw	0
  4008  003E54  0100               	movlb	0	; () banked
  4009  003E56  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4010  003E58  0E04               	movlw	4
  4011  003E5A  6F82               	movwf	___awdiv@divisor& (0+255),b
  4012  003E5C  ECFD  F01C         	call	___awdiv	;wreg free
  4013  003E60  0100               	movlb	0	; () banked
  4014  003E62  1F80               	comf	?___awdiv& (0+255),f,b
  4015  003E64  0100               	movlb	0	; () banked
  4016  003E66  1F81               	comf	(?___awdiv+1)& (0+255),f,b
  4017  003E68  0100               	movlb	0	; () banked
  4018  003E6A  4B80               	infsnz	?___awdiv& (0+255),f,b
  4019  003E6C  2B81               	incf	(?___awdiv+1)& (0+255),f,b
  4020  003E6E  0EFF               	movlw	255
  4021  003E70  0100               	movlb	0	; () banked
  4022  003E72  2580               	addwf	?___awdiv& (0+255),w,b
  4023  003E74  0100               	movlb	0	; () banked
  4024  003E76  6F8A               	movwf	set_external_interrupt3@set_time& (0+255),b
  4025  003E78  0EFF               	movlw	255
  4026  003E7A  0100               	movlb	0	; () banked
  4027  003E7C  2181               	addwfc	(?___awdiv+1)& (0+255),w,b
  4028  003E7E  0100               	movlb	0	; () banked
  4029  003E80  6F8B               	movwf	(set_external_interrupt3@set_time+1)& (0+255),b
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;interrupt.c: 113: TMR3H = set_time >> 8;
  4033  003E82  0100               	movlb	0	; () banked
  4034  003E84  518B               	movf	(set_external_interrupt3@set_time+1)& (0+255),w,b
  4035  003E86  6EB3               	movwf	4019,c	;volatile
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;interrupt.c: 114: TMR3L = set_time & 0b11111111;
  4039  003E88  C08A  FFB2         	movff	set_external_interrupt3@set_time,4018	;volatile
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;interrupt.c: 116: TMR3ON = 1;
  4043  003E8C  80B1               	bsf	4017,0,c	;volatile
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;interrupt.c: 117: if(isr1 == 1){
  4047  003E8E  0100               	movlb	0	; () banked
  4048  003E90  05FB               	decf	_isr1& (0+255),w,b	;volatile
  4049  003E92  A4D8               	btfss	status,2,c
  4050  003E94  D00A               	goto	l4560
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;interrupt.c: 119: set_time = 65535 - (20000*2/4);
  4054  003E96  0E18               	movlw	24
  4055  003E98  0100               	movlb	0	; () banked
  4056  003E9A  6F8B               	movwf	(set_external_interrupt3@set_time+1)& (0+255),b
  4057  003E9C  0EEF               	movlw	239
  4058  003E9E  6F8A               	movwf	set_external_interrupt3@set_time& (0+255),b
  4059                           
  4060                           ;interrupt.c: 121: TMR1H = set_time >> 8;
  4061  003EA0  0100               	movlb	0	; () banked
  4062  003EA2  518B               	movf	(set_external_interrupt3@set_time+1)& (0+255),w,b
  4063  003EA4  6ECF               	movwf	4047,c	;volatile
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;interrupt.c: 122: TMR1L = set_time & 0b11111111;
  4067  003EA6  C08A  FFCE         	movff	set_external_interrupt3@set_time,4046	;volatile
  4068  003EAA                     l4560:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;interrupt.c: 124: }
  4072                           ;interrupt.c: 126: if(process1 == 1){
  4073  003EAA  0100               	movlb	0	; () banked
  4074  003EAC  05F7               	decf	_process1& (0+255),w,b	;volatile
  4075  003EAE  A4D8               	btfss	status,2,c
  4076  003EB0  0012               	return	
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;interrupt.c: 127: TMR1ON = 1;
  4080  003EB2  80CD               	bsf	4045,0,c	;volatile
  4081  003EB4  0012               	return	
  4082  003EB6                     __end_of_set_external_interrupt3:
  4083                           	opt stack 0
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           prodh	equ	0xFF4
  4089                           prodl	equ	0xFF3
  4090                           intcon	equ	0xFF2
  4091                           intcon2	equ	0xFF1
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           indf2	equ	0xFDF
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _set_external_interrupt1 *****************
  4100 ;; Defined at:
  4101 ;;		line 85 in file "interrupt.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  time            2    8[BANK0 ] int 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  set_time        2   10[BANK0 ] unsigned int 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;Total ram usage:        4 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    7
  4122 ;; This function calls:
  4123 ;;		___awdiv
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text2
  4130  003EB6                     __ptext2:
  4131                           	opt stack 0
  4132  003EB6                     _set_external_interrupt1:
  4133                           	opt stack 23
  4134                           
  4135                           ;interrupt.c: 87: unsigned int set_time = 65535 - (time*2/4);
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;incstack = 0
  4139  003EB6  90D8               	bcf	status,0,c
  4140  003EB8  0100               	movlb	0	; () banked
  4141  003EBA  3588               	rlcf	set_external_interrupt1@time& (0+255),w,b
  4142  003EBC  0100               	movlb	0	; () banked
  4143  003EBE  6F80               	movwf	___awdiv@dividend& (0+255),b
  4144  003EC0  0100               	movlb	0	; () banked
  4145  003EC2  3589               	rlcf	(set_external_interrupt1@time+1)& (0+255),w,b
  4146  003EC4  0100               	movlb	0	; () banked
  4147  003EC6  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
  4148  003EC8  0E00               	movlw	0
  4149  003ECA  0100               	movlb	0	; () banked
  4150  003ECC  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4151  003ECE  0E04               	movlw	4
  4152  003ED0  6F82               	movwf	___awdiv@divisor& (0+255),b
  4153  003ED2  ECFD  F01C         	call	___awdiv	;wreg free
  4154  003ED6  0100               	movlb	0	; () banked
  4155  003ED8  1F80               	comf	?___awdiv& (0+255),f,b
  4156  003EDA  0100               	movlb	0	; () banked
  4157  003EDC  1F81               	comf	(?___awdiv+1)& (0+255),f,b
  4158  003EDE  0100               	movlb	0	; () banked
  4159  003EE0  4B80               	infsnz	?___awdiv& (0+255),f,b
  4160  003EE2  2B81               	incf	(?___awdiv+1)& (0+255),f,b
  4161  003EE4  0EFF               	movlw	255
  4162  003EE6  0100               	movlb	0	; () banked
  4163  003EE8  2580               	addwf	?___awdiv& (0+255),w,b
  4164  003EEA  0100               	movlb	0	; () banked
  4165  003EEC  6F8A               	movwf	set_external_interrupt1@set_time& (0+255),b
  4166  003EEE  0EFF               	movlw	255
  4167  003EF0  0100               	movlb	0	; () banked
  4168  003EF2  2181               	addwfc	(?___awdiv+1)& (0+255),w,b
  4169  003EF4  0100               	movlb	0	; () banked
  4170  003EF6  6F8B               	movwf	(set_external_interrupt1@set_time+1)& (0+255),b
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;interrupt.c: 89: TMR1H = set_time >> 8;
  4174  003EF8  0100               	movlb	0	; () banked
  4175  003EFA  518B               	movf	(set_external_interrupt1@set_time+1)& (0+255),w,b
  4176  003EFC  6ECF               	movwf	4047,c	;volatile
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;interrupt.c: 90: TMR1L = set_time & 0b11111111;
  4180  003EFE  C08A  FFCE         	movff	set_external_interrupt1@set_time,4046	;volatile
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;interrupt.c: 91: TMR1ON = 1;
  4184  003F02  80CD               	bsf	4045,0,c	;volatile
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;interrupt.c: 93: if(isr3 == 1){
  4188  003F04  0100               	movlb	0	; () banked
  4189  003F06  05FA               	decf	_isr3& (0+255),w,b	;volatile
  4190  003F08  A4D8               	btfss	status,2,c
  4191  003F0A  D00A               	goto	l4542
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;interrupt.c: 95: set_time = 65535 - (20000*2/4);
  4195  003F0C  0E18               	movlw	24
  4196  003F0E  0100               	movlb	0	; () banked
  4197  003F10  6F8B               	movwf	(set_external_interrupt1@set_time+1)& (0+255),b
  4198  003F12  0EEF               	movlw	239
  4199  003F14  6F8A               	movwf	set_external_interrupt1@set_time& (0+255),b
  4200                           
  4201                           ;interrupt.c: 97: TMR3H = set_time >> 8;
  4202  003F16  0100               	movlb	0	; () banked
  4203  003F18  518B               	movf	(set_external_interrupt1@set_time+1)& (0+255),w,b
  4204  003F1A  6EB3               	movwf	4019,c	;volatile
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;interrupt.c: 98: TMR3L = set_time & 0b11111111;
  4208  003F1C  C08A  FFB2         	movff	set_external_interrupt1@set_time,4018	;volatile
  4209  003F20                     l4542:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;interrupt.c: 100: }
  4213                           ;interrupt.c: 102: if(process3 == 1){
  4214  003F20  0100               	movlb	0	; () banked
  4215  003F22  05F6               	decf	_process3& (0+255),w,b	;volatile
  4216  003F24  A4D8               	btfss	status,2,c
  4217  003F26  0012               	return	
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;interrupt.c: 103: TMR3ON = 1;
  4221  003F28  80B1               	bsf	4017,0,c	;volatile
  4222  003F2A  0012               	return	
  4223  003F2C                     __end_of_set_external_interrupt1:
  4224                           	opt stack 0
  4225                           tblptru	equ	0xFF8
  4226                           tblptrh	equ	0xFF7
  4227                           tblptrl	equ	0xFF6
  4228                           tablat	equ	0xFF5
  4229                           prodh	equ	0xFF4
  4230                           prodl	equ	0xFF3
  4231                           intcon	equ	0xFF2
  4232                           intcon2	equ	0xFF1
  4233                           postinc0	equ	0xFEE
  4234                           wreg	equ	0xFE8
  4235                           indf2	equ	0xFDF
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8
  4239                           
  4240 ;; *************** function ___awdiv *****************
  4241 ;; Defined at:
  4242 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awdiv.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  dividend        2    0[BANK0 ] int 
  4245 ;;  divisor         2    2[BANK0 ] int 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  quotient        2    6[BANK0 ] int 
  4248 ;;  sign            1    5[BANK0 ] unsigned char 
  4249 ;;  counter         1    4[BANK0 ] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  2    0[BANK0 ] int 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4259 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;Total ram usage:        8 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    6
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_set_external_interrupt1
  4270 ;;		_set_external_interrupt3
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text3
  4275  0039FA                     __ptext3:
  4276                           	opt stack 0
  4277  0039FA                     ___awdiv:
  4278                           	opt stack 23
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;incstack = 0
  4282  0039FA  0E00               	movlw	0
  4283  0039FC  0100               	movlb	0	; () banked
  4284  0039FE  6F85               	movwf	___awdiv@sign& (0+255),b
  4285                           
  4286                           ; BSR set to: 0
  4287  003A00  0100               	movlb	0	; () banked
  4288  003A02  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4289  003A04  D008               	goto	l4168
  4290                           
  4291                           ; BSR set to: 0
  4292  003A06  0100               	movlb	0	; () banked
  4293  003A08  6D82               	negf	___awdiv@divisor& (0+255),b
  4294  003A0A  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4295  003A0C  B0D8               	btfsc	status,0,c
  4296  003A0E  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4297                           
  4298                           ; BSR set to: 0
  4299  003A10  0E01               	movlw	1
  4300  003A12  0100               	movlb	0	; () banked
  4301  003A14  6F85               	movwf	___awdiv@sign& (0+255),b
  4302  003A16                     l4168:
  4303                           
  4304                           ; BSR set to: 0
  4305  003A16  0100               	movlb	0	; () banked
  4306  003A18  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4307  003A1A  D008               	goto	l4174
  4308                           
  4309                           ; BSR set to: 0
  4310  003A1C  0100               	movlb	0	; () banked
  4311  003A1E  6D80               	negf	___awdiv@dividend& (0+255),b
  4312  003A20  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4313  003A22  B0D8               	btfsc	status,0,c
  4314  003A24  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4315                           
  4316                           ; BSR set to: 0
  4317  003A26  0E01               	movlw	1
  4318  003A28  0100               	movlb	0	; () banked
  4319  003A2A  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4320  003A2C                     l4174:
  4321                           
  4322                           ; BSR set to: 0
  4323  003A2C  0E00               	movlw	0
  4324  003A2E  0100               	movlb	0	; () banked
  4325  003A30  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4326  003A32  0E00               	movlw	0
  4327  003A34  6F86               	movwf	___awdiv@quotient& (0+255),b
  4328                           
  4329                           ; BSR set to: 0
  4330  003A36  0100               	movlb	0	; () banked
  4331  003A38  5182               	movf	___awdiv@divisor& (0+255),w,b
  4332  003A3A  0100               	movlb	0	; () banked
  4333  003A3C  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4334  003A3E  B4D8               	btfsc	status,2,c
  4335  003A40  D02C               	goto	l4196
  4336                           
  4337                           ; BSR set to: 0
  4338  003A42  0E01               	movlw	1
  4339  003A44  0100               	movlb	0	; () banked
  4340  003A46  6F84               	movwf	___awdiv@counter& (0+255),b
  4341  003A48  D006               	goto	l4182
  4342  003A4A                     l4180:
  4343                           
  4344                           ; BSR set to: 0
  4345  003A4A  0100               	movlb	0	; () banked
  4346  003A4C  90D8               	bcf	status,0,c
  4347  003A4E  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4348  003A50  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4349  003A52  0100               	movlb	0	; () banked
  4350  003A54  2B84               	incf	___awdiv@counter& (0+255),f,b
  4351  003A56                     l4182:
  4352                           
  4353                           ; BSR set to: 0
  4354  003A56  0100               	movlb	0	; () banked
  4355  003A58  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4356  003A5A  D7F7               	goto	l4180
  4357  003A5C                     l4184:
  4358                           
  4359                           ; BSR set to: 0
  4360  003A5C  0100               	movlb	0	; () banked
  4361  003A5E  90D8               	bcf	status,0,c
  4362  003A60  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4363  003A62  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4364                           
  4365                           ; BSR set to: 0
  4366  003A64  0100               	movlb	0	; () banked
  4367  003A66  5182               	movf	___awdiv@divisor& (0+255),w,b
  4368  003A68  0100               	movlb	0	; () banked
  4369  003A6A  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4370  003A6C  0100               	movlb	0	; () banked
  4371  003A6E  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4372  003A70  0100               	movlb	0	; () banked
  4373  003A72  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4374  003A74  A0D8               	btfss	status,0,c
  4375  003A76  D00A               	goto	l4192
  4376                           
  4377                           ; BSR set to: 0
  4378  003A78  0100               	movlb	0	; () banked
  4379  003A7A  5182               	movf	___awdiv@divisor& (0+255),w,b
  4380  003A7C  0100               	movlb	0	; () banked
  4381  003A7E  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4382  003A80  0100               	movlb	0	; () banked
  4383  003A82  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4384  003A84  0100               	movlb	0	; () banked
  4385  003A86  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4386                           
  4387                           ; BSR set to: 0
  4388  003A88  0100               	movlb	0	; () banked
  4389  003A8A  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4390  003A8C                     l4192:
  4391                           
  4392                           ; BSR set to: 0
  4393  003A8C  0100               	movlb	0	; () banked
  4394  003A8E  90D8               	bcf	status,0,c
  4395  003A90  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4396  003A92  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4397                           
  4398                           ; BSR set to: 0
  4399  003A94  0100               	movlb	0	; () banked
  4400  003A96  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4401  003A98  D7E1               	goto	l4184
  4402  003A9A                     l4196:
  4403                           
  4404                           ; BSR set to: 0
  4405  003A9A  0100               	movlb	0	; () banked
  4406  003A9C  5185               	movf	___awdiv@sign& (0+255),w,b
  4407  003A9E  0100               	movlb	0	; () banked
  4408  003AA0  B4D8               	btfsc	status,2,c
  4409  003AA2  D005               	goto	l4200
  4410                           
  4411                           ; BSR set to: 0
  4412  003AA4  0100               	movlb	0	; () banked
  4413  003AA6  6D86               	negf	___awdiv@quotient& (0+255),b
  4414  003AA8  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4415  003AAA  B0D8               	btfsc	status,0,c
  4416  003AAC  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4417  003AAE                     l4200:
  4418                           
  4419                           ; BSR set to: 0
  4420  003AAE  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4421  003AB2  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4422  003AB6  0012               	return	
  4423  003AB8                     __end_of___awdiv:
  4424                           	opt stack 0
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           intcon	equ	0xFF2
  4432                           intcon2	equ	0xFF1
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           indf2	equ	0xFDF
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _readADC *****************
  4441 ;; Defined at:
  4442 ;;		line 35 in file "ADC.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  channel         1    wreg     unsigned char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  channel         1   48[BANK0 ] unsigned char 
  4447 ;;  i               1   44[BANK0 ] unsigned char 
  4448 ;;  a               3   45[BANK0 ] float 
  4449 ;;  volt            3   41[BANK0 ] float 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  3   38[BANK0 ] float 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4459 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;Total ram usage:       11 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    9
  4466 ;; This function calls:
  4467 ;;		___ftadd
  4468 ;;		___ftdiv
  4469 ;;		___ftmul
  4470 ;;		___lwtoft
  4471 ;;		_abs
  4472 ;;		_read
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text4
  4479  00327C                     __ptext4:
  4480                           	opt stack 0
  4481  00327C                     _readADC:
  4482                           	opt stack 21
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;incstack = 0
  4486                           ;readADC@channel stored from wreg
  4487  00327C  0100               	movlb	0	; () banked
  4488  00327E  6FB0               	movwf	readADC@channel& (0+255),b
  4489                           
  4490                           ;ADC.c: 37: signed float a = 0;
  4491  003280  0E00               	movlw	0
  4492  003282  0100               	movlb	0	; () banked
  4493  003284  6FAD               	movwf	readADC@a& (0+255),b
  4494  003286  0E00               	movlw	0
  4495  003288  0100               	movlb	0	; () banked
  4496  00328A  6FAE               	movwf	(readADC@a+1)& (0+255),b
  4497  00328C  0E00               	movlw	0
  4498  00328E  0100               	movlb	0	; () banked
  4499  003290  6FAF               	movwf	(readADC@a+2)& (0+255),b
  4500                           
  4501                           ;ADC.c: 39: for(unsigned char i = 0; i < 100; i++){
  4502  003292  0E00               	movlw	0
  4503  003294  0100               	movlb	0	; () banked
  4504  003296  6FAC               	movwf	readADC@i& (0+255),b
  4505  003298                     l4566:
  4506                           
  4507                           ; BSR set to: 0
  4508  003298  0E63               	movlw	99
  4509  00329A  0100               	movlb	0	; () banked
  4510  00329C  65AC               	cpfsgt	readADC@i& (0+255),b
  4511  00329E  D001               	goto	l4570
  4512  0032A0  D022               	goto	l4578
  4513  0032A2                     l4570:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;ADC.c: 41: read(channel);
  4517  0032A2  0100               	movlb	0	; () banked
  4518  0032A4  51B0               	movf	readADC@channel& (0+255),w,b
  4519  0032A6  ECA6  F021         	call	_read
  4520                           
  4521                           ;ADC.c: 42: a = a + ADRES;
  4522  0032AA  CFC3 F088          	movff	4035,___lwtoft@c	;volatile
  4523  0032AE  CFC4 F089          	movff	4036,___lwtoft@c+1	;volatile
  4524  0032B2  ECBC  F021         	call	___lwtoft	;wreg free
  4525  0032B6  C088  F08B         	movff	?___lwtoft,___ftadd@f1
  4526  0032BA  C089  F08C         	movff	?___lwtoft+1,___ftadd@f1+1
  4527  0032BE  C08A  F08D         	movff	?___lwtoft+2,___ftadd@f1+2
  4528  0032C2  C0AD  F08E         	movff	readADC@a,___ftadd@f2
  4529  0032C6  C0AE  F08F         	movff	readADC@a+1,___ftadd@f2+1
  4530  0032CA  C0AF  F090         	movff	readADC@a+2,___ftadd@f2+2
  4531  0032CE  EC85  F016         	call	___ftadd	;wreg free
  4532  0032D2  C08B  F0AD         	movff	?___ftadd,readADC@a
  4533  0032D6  C08C  F0AE         	movff	?___ftadd+1,readADC@a+1
  4534  0032DA  C08D  F0AF         	movff	?___ftadd+2,readADC@a+2
  4535                           
  4536                           ;ADC.c: 44: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4537  0032DE  D000               	nop2		;2 cycle nop
  4538  0032E0  0100               	movlb	0	; () banked
  4539  0032E2  2BAC               	incf	readADC@i& (0+255),f,b
  4540  0032E4  D7D9               	goto	l4566
  4541  0032E6                     l4578:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;ADC.c: 45: }
  4545                           ;ADC.c: 47: a = a/100;
  4546  0032E6  C0AD  F097         	movff	readADC@a,___ftdiv@f1
  4547  0032EA  C0AE  F098         	movff	readADC@a+1,___ftdiv@f1+1
  4548  0032EE  C0AF  F099         	movff	readADC@a+2,___ftdiv@f1+2
  4549  0032F2  0E00               	movlw	0
  4550  0032F4  0100               	movlb	0	; () banked
  4551  0032F6  6F9A               	movwf	___ftdiv@f2& (0+255),b
  4552  0032F8  0EC8               	movlw	200
  4553  0032FA  0100               	movlb	0	; () banked
  4554  0032FC  6F9B               	movwf	(___ftdiv@f2+1)& (0+255),b
  4555  0032FE  0E42               	movlw	66
  4556  003300  0100               	movlb	0	; () banked
  4557  003302  6F9C               	movwf	(___ftdiv@f2+2)& (0+255),b
  4558  003304  ECEB  F019         	call	___ftdiv	;wreg free
  4559  003308  C097  F0AD         	movff	?___ftdiv,readADC@a
  4560  00330C  C098  F0AE         	movff	?___ftdiv+1,readADC@a+1
  4561  003310  C099  F0AF         	movff	?___ftdiv+2,readADC@a+2
  4562                           
  4563                           ;ADC.c: 49: signed float volt = a*4.957152/1023;
  4564  003314  0EA1               	movlw	161
  4565  003316  0100               	movlb	0	; () banked
  4566  003318  6F8B               	movwf	___ftmul@f2& (0+255),b
  4567  00331A  0E9E               	movlw	158
  4568  00331C  0100               	movlb	0	; () banked
  4569  00331E  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  4570  003320  0E40               	movlw	64
  4571  003322  0100               	movlb	0	; () banked
  4572  003324  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  4573  003326  C0AD  F088         	movff	readADC@a,___ftmul@f1
  4574  00332A  C0AE  F089         	movff	readADC@a+1,___ftmul@f1+1
  4575  00332E  C0AF  F08A         	movff	readADC@a+2,___ftmul@f1+2
  4576  003332  EC8F  F018         	call	___ftmul	;wreg free
  4577  003336  C088  F097         	movff	?___ftmul,___ftdiv@f1
  4578  00333A  C089  F098         	movff	?___ftmul+1,___ftdiv@f1+1
  4579  00333E  C08A  F099         	movff	?___ftmul+2,___ftdiv@f1+2
  4580  003342  0EC0               	movlw	192
  4581  003344  0100               	movlb	0	; () banked
  4582  003346  6F9A               	movwf	___ftdiv@f2& (0+255),b
  4583  003348  0E7F               	movlw	127
  4584  00334A  0100               	movlb	0	; () banked
  4585  00334C  6F9B               	movwf	(___ftdiv@f2+1)& (0+255),b
  4586  00334E  0E44               	movlw	68
  4587  003350  0100               	movlb	0	; () banked
  4588  003352  6F9C               	movwf	(___ftdiv@f2+2)& (0+255),b
  4589  003354  ECEB  F019         	call	___ftdiv	;wreg free
  4590  003358  C097  F0A9         	movff	?___ftdiv,readADC@volt
  4591  00335C  C098  F0AA         	movff	?___ftdiv+1,readADC@volt+1
  4592  003360  C099  F0AB         	movff	?___ftdiv+2,readADC@volt+2
  4593                           
  4594                           ;ADC.c: 51: if(channel == 1 || channel == 2 || channel == 5 || channel == 6){
  4595  003364  0100               	movlb	0	; () banked
  4596  003366  05B0               	decf	readADC@channel& (0+255),w,b
  4597  003368  B4D8               	btfsc	status,2,c
  4598  00336A  D00F               	goto	l4588
  4599                           
  4600                           ; BSR set to: 0
  4601  00336C  0E02               	movlw	2
  4602  00336E  0100               	movlb	0	; () banked
  4603  003370  19B0               	xorwf	readADC@channel& (0+255),w,b
  4604  003372  B4D8               	btfsc	status,2,c
  4605  003374  D00A               	goto	l4588
  4606                           
  4607                           ; BSR set to: 0
  4608  003376  0E05               	movlw	5
  4609  003378  0100               	movlb	0	; () banked
  4610  00337A  19B0               	xorwf	readADC@channel& (0+255),w,b
  4611  00337C  B4D8               	btfsc	status,2,c
  4612  00337E  D005               	goto	l4588
  4613                           
  4614                           ; BSR set to: 0
  4615  003380  0E06               	movlw	6
  4616  003382  0100               	movlb	0	; () banked
  4617  003384  19B0               	xorwf	readADC@channel& (0+255),w,b
  4618  003386  A4D8               	btfss	status,2,c
  4619  003388  D01F               	goto	l4590
  4620  00338A                     l4588:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;ADC.c: 52: volt = abs(volt - 2.5);
  4624  00338A  C0A9  F08B         	movff	readADC@volt,___ftadd@f1
  4625  00338E  C0AA  F08C         	movff	readADC@volt+1,___ftadd@f1+1
  4626  003392  C0AB  F08D         	movff	readADC@volt+2,___ftadd@f1+2
  4627  003396  0E00               	movlw	0
  4628  003398  0100               	movlb	0	; () banked
  4629  00339A  6F8E               	movwf	___ftadd@f2& (0+255),b
  4630  00339C  0E20               	movlw	32
  4631  00339E  0100               	movlb	0	; () banked
  4632  0033A0  6F8F               	movwf	(___ftadd@f2+1)& (0+255),b
  4633  0033A2  0EC0               	movlw	192
  4634  0033A4  0100               	movlb	0	; () banked
  4635  0033A6  6F90               	movwf	(___ftadd@f2+2)& (0+255),b
  4636  0033A8  EC85  F016         	call	___ftadd	;wreg free
  4637  0033AC  C08B  F097         	movff	?___ftadd,abs@num
  4638  0033B0  C08C  F098         	movff	?___ftadd+1,abs@num+1
  4639  0033B4  C08D  F099         	movff	?___ftadd+2,abs@num+2
  4640  0033B8  ECFF  F01F         	call	_abs	;wreg free
  4641  0033BC  C097  F0A9         	movff	?_abs,readADC@volt
  4642  0033C0  C098  F0AA         	movff	?_abs+1,readADC@volt+1
  4643  0033C4  C099  F0AB         	movff	?_abs+2,readADC@volt+2
  4644  0033C8                     l4590:
  4645                           
  4646                           ;ADC.c: 53: }
  4647                           ;ADC.c: 55: return volt;
  4648  0033C8  C0A9  F0A6         	movff	readADC@volt,?_readADC
  4649  0033CC  C0AA  F0A7         	movff	readADC@volt+1,?_readADC+1
  4650  0033D0  C0AB  F0A8         	movff	readADC@volt+2,?_readADC+2
  4651  0033D4  0012               	return	
  4652  0033D6                     __end_of_readADC:
  4653                           	opt stack 0
  4654                           tblptru	equ	0xFF8
  4655                           tblptrh	equ	0xFF7
  4656                           tblptrl	equ	0xFF6
  4657                           tablat	equ	0xFF5
  4658                           prodh	equ	0xFF4
  4659                           prodl	equ	0xFF3
  4660                           intcon	equ	0xFF2
  4661                           intcon2	equ	0xFF1
  4662                           postinc0	equ	0xFEE
  4663                           wreg	equ	0xFE8
  4664                           indf2	equ	0xFDF
  4665                           fsr2h	equ	0xFDA
  4666                           fsr2l	equ	0xFD9
  4667                           status	equ	0xFD8
  4668                           
  4669 ;; *************** function _read *****************
  4670 ;; Defined at:
  4671 ;;		line 27 in file "ADC.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  channel2        1    wreg     unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  channel2        1    1[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    6
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_readADC
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text5
  4700  00434C                     __ptext5:
  4701                           	opt stack 0
  4702  00434C                     _read:
  4703                           	opt stack 23
  4704                           
  4705                           ;incstack = 0
  4706                           ;read@channel2 stored from wreg
  4707  00434C  0100               	movlb	0	; () banked
  4708  00434E  6F81               	movwf	read@channel2& (0+255),b
  4709                           
  4710                           ;ADC.c: 29: ADCON0 = ((channel2 << 2));
  4711  004350  0100               	movlb	0	; () banked
  4712  004352  4581               	rlncf	read@channel2& (0+255),w,b
  4713  004354  46E8               	rlncf	wreg,f,c
  4714  004356  0BFC               	andlw	252
  4715  004358  6EC2               	movwf	4034,c	;volatile
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;ADC.c: 30: ADON = 1;
  4719  00435A  80C2               	bsf	4034,0,c	;volatile
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;ADC.c: 31: ADCON0bits.GO = 1;
  4723  00435C  82C2               	bsf	4034,1,c	;volatile
  4724                           
  4725                           ;ADC.c: 32: while(ADCON0bits.GO_NOT_DONE){_delay((unsigned long)((2)*(8000000/4000.0)));
      +                          }
  4726  00435E  D009               	goto	l4016
  4727  004360                     l4014:
  4728  004360  0E06               	movlw	6
  4729  004362  0100               	movlb	0	; () banked
  4730  004364  6F80               	movwf	??_read& (0+255),b
  4731  004366  0E30               	movlw	48
  4732  004368                     u6287:
  4733  004368  2EE8               	decfsz	wreg,f,c
  4734  00436A  D7FE               	bra	u6287
  4735  00436C  2F80               	decfsz	??_read& (0+255),f,b
  4736  00436E  D7FC               	bra	u6287
  4737  004370  F000               	nop	
  4738  004372                     l4016:
  4739  004372  A2C2               	btfss	4034,1,c	;volatile
  4740  004374  0012               	return	
  4741  004376  D7F4               	goto	l4014
  4742  004378                     __end_of_read:
  4743                           	opt stack 0
  4744                           tblptru	equ	0xFF8
  4745                           tblptrh	equ	0xFF7
  4746                           tblptrl	equ	0xFF6
  4747                           tablat	equ	0xFF5
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           intcon	equ	0xFF2
  4751                           intcon2	equ	0xFF1
  4752                           postinc0	equ	0xFEE
  4753                           wreg	equ	0xFE8
  4754                           indf2	equ	0xFDF
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _abs *****************
  4760 ;; Defined at:
  4761 ;;		line 20 in file "ADC.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  num             3   23[BANK0 ] float 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  3   23[BANK0 ] float 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;Total ram usage:        3 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    8
  4782 ;; This function calls:
  4783 ;;		___ftge
  4784 ;;		___ftmul
  4785 ;; This function is called by:
  4786 ;;		_readADC
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text6
  4791  003FFE                     __ptext6:
  4792                           	opt stack 0
  4793  003FFE                     _abs:
  4794                           	opt stack 21
  4795                           
  4796                           ;ADC.c: 21: if(num > 0){
  4797                           
  4798                           ;incstack = 0
  4799  003FFE  0E00               	movlw	0
  4800  004000  0100               	movlb	0	; () banked
  4801  004002  6F80               	movwf	___ftge@ff1& (0+255),b
  4802  004004  0E00               	movlw	0
  4803  004006  0100               	movlb	0	; () banked
  4804  004008  6F81               	movwf	(___ftge@ff1+1)& (0+255),b
  4805  00400A  0E00               	movlw	0
  4806  00400C  0100               	movlb	0	; () banked
  4807  00400E  6F82               	movwf	(___ftge@ff1+2)& (0+255),b
  4808  004010  C097  F083         	movff	abs@num,___ftge@ff2
  4809  004014  C098  F084         	movff	abs@num+1,___ftge@ff2+1
  4810  004018  C099  F085         	movff	abs@num+2,___ftge@ff2+2
  4811  00401C  EC99  F01C         	call	___ftge	;wreg free
  4812  004020  0100               	movlb	0	; () banked
  4813  004022  B0D8               	btfsc	status,0,c
  4814  004024  D007               	goto	l4004
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;ADC.c: 22: return num;
  4818  004026  C097  F097         	movff	abs@num,?_abs
  4819  00402A  C098  F098         	movff	abs@num+1,?_abs+1
  4820  00402E  C099  F099         	movff	abs@num+2,?_abs+2
  4821  004032  0012               	return	
  4822  004034                     l4004:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;ADC.c: 23: }
  4826                           ;ADC.c: 24: return (-1)*num;
  4827  004034  C097  F088         	movff	abs@num,___ftmul@f1
  4828  004038  C098  F089         	movff	abs@num+1,___ftmul@f1+1
  4829  00403C  C099  F08A         	movff	abs@num+2,___ftmul@f1+2
  4830  004040  0E00               	movlw	0
  4831  004042  0100               	movlb	0	; () banked
  4832  004044  6F8B               	movwf	___ftmul@f2& (0+255),b
  4833  004046  0E80               	movlw	128
  4834  004048  0100               	movlb	0	; () banked
  4835  00404A  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  4836  00404C  0EBF               	movlw	191
  4837  00404E  0100               	movlb	0	; () banked
  4838  004050  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  4839  004052  EC8F  F018         	call	___ftmul	;wreg free
  4840  004056  C088  F097         	movff	?___ftmul,?_abs
  4841  00405A  C089  F098         	movff	?___ftmul+1,?_abs+1
  4842  00405E  C08A  F099         	movff	?___ftmul+2,?_abs+2
  4843  004062  0012               	return	
  4844  004064                     __end_of_abs:
  4845                           	opt stack 0
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           prodh	equ	0xFF4
  4851                           prodl	equ	0xFF3
  4852                           intcon	equ	0xFF2
  4853                           intcon2	equ	0xFF1
  4854                           postinc0	equ	0xFEE
  4855                           wreg	equ	0xFE8
  4856                           indf2	equ	0xFDF
  4857                           fsr2h	equ	0xFDA
  4858                           fsr2l	equ	0xFD9
  4859                           status	equ	0xFD8
  4860                           
  4861 ;; *************** function ___ftmul *****************
  4862 ;; Defined at:
  4863 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  f1              3    8[BANK0 ] float 
  4866 ;;  f2              3   11[BANK0 ] float 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4869 ;;  sign            1   22[BANK0 ] unsigned char 
  4870 ;;  cntr            1   21[BANK0 ] unsigned char 
  4871 ;;  exp             1   17[BANK0 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  3    8[BANK0 ] float 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4881 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;Total ram usage:       15 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    7
  4888 ;; This function calls:
  4889 ;;		___ftpack
  4890 ;; This function is called by:
  4891 ;;		_abs
  4892 ;;		_readADC
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text7
  4897  00311E                     __ptext7:
  4898                           	opt stack 0
  4899  00311E                     ___ftmul:
  4900                           	opt stack 21
  4901                           
  4902                           ;incstack = 0
  4903  00311E  C08A  F08E         	movff	___ftmul@f1+2,??___ftmul
  4904  003122  0100               	movlb	0	; () banked
  4905  003124  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  4906  003126  6B90               	clrf	(??___ftmul+2)& (0+255),b
  4907  003128  0100               	movlb	0	; () banked
  4908  00312A  3589               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4909  00312C  0100               	movlb	0	; () banked
  4910  00312E  378E               	rlcf	??___ftmul& (0+255),f,b
  4911  003130  E301               	bnc	u3351
  4912  003132  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  4913  003134                     u3351:
  4914  003134  0100               	movlb	0	; () banked
  4915  003136  518E               	movf	??___ftmul& (0+255),w,b
  4916  003138  0100               	movlb	0	; () banked
  4917  00313A  6F91               	movwf	___ftmul@exp& (0+255),b
  4918  00313C  0100               	movlb	0	; () banked
  4919  00313E  5191               	movf	___ftmul@exp& (0+255),w,b
  4920  003140  A4D8               	btfss	status,2,c
  4921  003142  D00A               	goto	l3754
  4922                           
  4923                           ; BSR set to: 0
  4924  003144  0E00               	movlw	0
  4925  003146  0100               	movlb	0	; () banked
  4926  003148  6F88               	movwf	?___ftmul& (0+255),b
  4927  00314A  0E00               	movlw	0
  4928  00314C  0100               	movlb	0	; () banked
  4929  00314E  6F89               	movwf	(?___ftmul+1)& (0+255),b
  4930  003150  0E00               	movlw	0
  4931  003152  0100               	movlb	0	; () banked
  4932  003154  6F8A               	movwf	(?___ftmul+2)& (0+255),b
  4933                           
  4934                           ; BSR set to: 0
  4935  003156  0012               	return	
  4936  003158                     l3754:
  4937                           
  4938                           ; BSR set to: 0
  4939  003158  C08D  F08E         	movff	___ftmul@f2+2,??___ftmul
  4940  00315C  0100               	movlb	0	; () banked
  4941  00315E  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  4942  003160  6B90               	clrf	(??___ftmul+2)& (0+255),b
  4943  003162  0100               	movlb	0	; () banked
  4944  003164  358C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4945  003166  0100               	movlb	0	; () banked
  4946  003168  378E               	rlcf	??___ftmul& (0+255),f,b
  4947  00316A  E301               	bnc	u3371
  4948  00316C  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  4949  00316E                     u3371:
  4950  00316E  0100               	movlb	0	; () banked
  4951  003170  518E               	movf	??___ftmul& (0+255),w,b
  4952  003172  0100               	movlb	0	; () banked
  4953  003174  6F96               	movwf	___ftmul@sign& (0+255),b
  4954  003176  0100               	movlb	0	; () banked
  4955  003178  5196               	movf	___ftmul@sign& (0+255),w,b
  4956  00317A  A4D8               	btfss	status,2,c
  4957  00317C  D00A               	goto	l3760
  4958                           
  4959                           ; BSR set to: 0
  4960  00317E  0E00               	movlw	0
  4961  003180  0100               	movlb	0	; () banked
  4962  003182  6F88               	movwf	?___ftmul& (0+255),b
  4963  003184  0E00               	movlw	0
  4964  003186  0100               	movlb	0	; () banked
  4965  003188  6F89               	movwf	(?___ftmul+1)& (0+255),b
  4966  00318A  0E00               	movlw	0
  4967  00318C  0100               	movlb	0	; () banked
  4968  00318E  6F8A               	movwf	(?___ftmul+2)& (0+255),b
  4969                           
  4970                           ; BSR set to: 0
  4971  003190  0012               	return	
  4972  003192                     l3760:
  4973                           
  4974                           ; BSR set to: 0
  4975  003192  0100               	movlb	0	; () banked
  4976  003194  5196               	movf	___ftmul@sign& (0+255),w,b
  4977  003196  0F7B               	addlw	123
  4978  003198  0100               	movlb	0	; () banked
  4979  00319A  2791               	addwf	___ftmul@exp& (0+255),f,b
  4980                           
  4981                           ; BSR set to: 0
  4982  00319C  C08A  F096         	movff	___ftmul@f1+2,___ftmul@sign
  4983  0031A0  0100               	movlb	0	; () banked
  4984  0031A2  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4985  0031A4  0100               	movlb	0	; () banked
  4986  0031A6  1B96               	xorwf	___ftmul@sign& (0+255),f,b
  4987  0031A8  0E80               	movlw	128
  4988  0031AA  0100               	movlb	0	; () banked
  4989  0031AC  1796               	andwf	___ftmul@sign& (0+255),f,b
  4990                           
  4991                           ; BSR set to: 0
  4992  0031AE  0100               	movlb	0	; () banked
  4993  0031B0  8F89               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4994                           
  4995                           ; BSR set to: 0
  4996  0031B2  0100               	movlb	0	; () banked
  4997  0031B4  8F8C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4998                           
  4999                           ; BSR set to: 0
  5000  0031B6  0EFF               	movlw	255
  5001  0031B8  0100               	movlb	0	; () banked
  5002  0031BA  178B               	andwf	___ftmul@f2& (0+255),f,b
  5003  0031BC  0EFF               	movlw	255
  5004  0031BE  0100               	movlb	0	; () banked
  5005  0031C0  178C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5006  0031C2  0E00               	movlw	0
  5007  0031C4  0100               	movlb	0	; () banked
  5008  0031C6  178D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5009                           
  5010                           ; BSR set to: 0
  5011  0031C8  0E00               	movlw	0
  5012  0031CA  0100               	movlb	0	; () banked
  5013  0031CC  6F92               	movwf	___ftmul@f3_as_product& (0+255),b
  5014  0031CE  0E00               	movlw	0
  5015  0031D0  0100               	movlb	0	; () banked
  5016  0031D2  6F93               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5017  0031D4  0E00               	movlw	0
  5018  0031D6  0100               	movlb	0	; () banked
  5019  0031D8  6F94               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5020                           
  5021                           ; BSR set to: 0
  5022  0031DA  0E07               	movlw	7
  5023  0031DC  0100               	movlb	0	; () banked
  5024  0031DE  6F95               	movwf	___ftmul@cntr& (0+255),b
  5025  0031E0                     l3774:
  5026                           
  5027                           ; BSR set to: 0
  5028  0031E0  0100               	movlb	0	; () banked
  5029  0031E2  A188               	btfss	___ftmul@f1& (0+255),0,b
  5030  0031E4  D00C               	goto	l3778
  5031                           
  5032                           ; BSR set to: 0
  5033  0031E6  0100               	movlb	0	; () banked
  5034  0031E8  518B               	movf	___ftmul@f2& (0+255),w,b
  5035  0031EA  0100               	movlb	0	; () banked
  5036  0031EC  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5037  0031EE  0100               	movlb	0	; () banked
  5038  0031F0  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  5039  0031F2  0100               	movlb	0	; () banked
  5040  0031F4  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5041  0031F6  0100               	movlb	0	; () banked
  5042  0031F8  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  5043  0031FA  0100               	movlb	0	; () banked
  5044  0031FC  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5045  0031FE                     l3778:
  5046                           
  5047                           ; BSR set to: 0
  5048  0031FE  0100               	movlb	0	; () banked
  5049  003200  90D8               	bcf	status,0,c
  5050  003202  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5051  003204  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5052  003206  3388               	rrcf	___ftmul@f1& (0+255),f,b
  5053  003208  0100               	movlb	0	; () banked
  5054  00320A  90D8               	bcf	status,0,c
  5055  00320C  378B               	rlcf	___ftmul@f2& (0+255),f,b
  5056  00320E  378C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5057  003210  378D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5058                           
  5059                           ; BSR set to: 0
  5060  003212  0100               	movlb	0	; () banked
  5061  003214  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  5062  003216  D7E4               	goto	l3774
  5063                           
  5064                           ; BSR set to: 0
  5065                           
  5066                           ; BSR set to: 0
  5067  003218  0E09               	movlw	9
  5068  00321A  0100               	movlb	0	; () banked
  5069  00321C  6F95               	movwf	___ftmul@cntr& (0+255),b
  5070  00321E                     l3784:
  5071                           
  5072                           ; BSR set to: 0
  5073  00321E  0100               	movlb	0	; () banked
  5074  003220  A188               	btfss	___ftmul@f1& (0+255),0,b
  5075  003222  D00C               	goto	l3788
  5076                           
  5077                           ; BSR set to: 0
  5078  003224  0100               	movlb	0	; () banked
  5079  003226  518B               	movf	___ftmul@f2& (0+255),w,b
  5080  003228  0100               	movlb	0	; () banked
  5081  00322A  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5082  00322C  0100               	movlb	0	; () banked
  5083  00322E  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  5084  003230  0100               	movlb	0	; () banked
  5085  003232  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5086  003234  0100               	movlb	0	; () banked
  5087  003236  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  5088  003238  0100               	movlb	0	; () banked
  5089  00323A  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5090  00323C                     l3788:
  5091                           
  5092                           ; BSR set to: 0
  5093  00323C  0100               	movlb	0	; () banked
  5094  00323E  90D8               	bcf	status,0,c
  5095  003240  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5096  003242  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5097  003244  3388               	rrcf	___ftmul@f1& (0+255),f,b
  5098  003246  0100               	movlb	0	; () banked
  5099  003248  90D8               	bcf	status,0,c
  5100  00324A  3394               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5101  00324C  3393               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5102  00324E  3392               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5103                           
  5104                           ; BSR set to: 0
  5105  003250  0100               	movlb	0	; () banked
  5106  003252  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  5107  003254  D7E4               	goto	l3784
  5108                           
  5109                           ; BSR set to: 0
  5110                           
  5111                           ; BSR set to: 0
  5112  003256  C092  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  5113  00325A  C093  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5114  00325E  C094  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5115  003262  C091  F083         	movff	___ftmul@exp,___ftpack@exp
  5116  003266  C096  F084         	movff	___ftmul@sign,___ftpack@sign
  5117  00326A  EC26  F01B         	call	___ftpack	;wreg free
  5118  00326E  C080  F088         	movff	?___ftpack,?___ftmul
  5119  003272  C081  F089         	movff	?___ftpack+1,?___ftmul+1
  5120  003276  C082  F08A         	movff	?___ftpack+2,?___ftmul+2
  5121  00327A  0012               	return	
  5122  00327C                     __end_of___ftmul:
  5123                           	opt stack 0
  5124                           tblptru	equ	0xFF8
  5125                           tblptrh	equ	0xFF7
  5126                           tblptrl	equ	0xFF6
  5127                           tablat	equ	0xFF5
  5128                           prodh	equ	0xFF4
  5129                           prodl	equ	0xFF3
  5130                           intcon	equ	0xFF2
  5131                           intcon2	equ	0xFF1
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           indf2	equ	0xFDF
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function ___ftge *****************
  5140 ;; Defined at:
  5141 ;;		line 4 in file "/Applications/microchip/xc8/v1.41/sources/common/ftge.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  ff1             3    0[BANK0 ] float 
  5144 ;;  ff2             3    3[BANK0 ] float 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;		None               void
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5156 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;Total ram usage:        9 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    6
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_main
  5167 ;;		_abs
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text8
  5172  003932                     __ptext8:
  5173                           	opt stack 0
  5174  003932                     ___ftge:
  5175                           	opt stack 22
  5176                           
  5177                           ;incstack = 0
  5178  003932  0100               	movlb	0	; () banked
  5179  003934  AF82               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5180  003936  D01D               	goto	l3800
  5181                           
  5182                           ; BSR set to: 0
  5183  003938  C080  F086         	movff	___ftge@ff1,??___ftge
  5184  00393C  C081  F087         	movff	___ftge@ff1+1,??___ftge+1
  5185  003940  C082  F088         	movff	___ftge@ff1+2,??___ftge+2
  5186  003944  0100               	movlb	0	; () banked
  5187  003946  1F86               	comf	??___ftge& (0+255),f,b
  5188  003948  1F87               	comf	(??___ftge+1)& (0+255),f,b
  5189  00394A  1F88               	comf	(??___ftge+2)& (0+255),f,b
  5190  00394C  2B86               	incf	??___ftge& (0+255),f,b
  5191  00394E  0E00               	movlw	0
  5192  003950  2387               	addwfc	(??___ftge+1)& (0+255),f,b
  5193  003952  2388               	addwfc	(??___ftge+2)& (0+255),f,b
  5194  003954  0E00               	movlw	0
  5195  003956  0100               	movlb	0	; () banked
  5196  003958  2586               	addwf	??___ftge& (0+255),w,b
  5197  00395A  0100               	movlb	0	; () banked
  5198  00395C  6F80               	movwf	___ftge@ff1& (0+255),b
  5199  00395E  0E00               	movlw	0
  5200  003960  0100               	movlb	0	; () banked
  5201  003962  2187               	addwfc	(??___ftge+1)& (0+255),w,b
  5202  003964  0100               	movlb	0	; () banked
  5203  003966  6F81               	movwf	(___ftge@ff1+1)& (0+255),b
  5204  003968  0E80               	movlw	128
  5205  00396A  0100               	movlb	0	; () banked
  5206  00396C  2188               	addwfc	(??___ftge+2)& (0+255),w,b
  5207  00396E  0100               	movlb	0	; () banked
  5208  003970  6F82               	movwf	(___ftge@ff1+2)& (0+255),b
  5209  003972                     l3800:
  5210                           
  5211                           ; BSR set to: 0
  5212  003972  0100               	movlb	0	; () banked
  5213  003974  AF85               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5214  003976  D01D               	goto	l3804
  5215                           
  5216                           ; BSR set to: 0
  5217  003978  C083  F086         	movff	___ftge@ff2,??___ftge
  5218  00397C  C084  F087         	movff	___ftge@ff2+1,??___ftge+1
  5219  003980  C085  F088         	movff	___ftge@ff2+2,??___ftge+2
  5220  003984  0100               	movlb	0	; () banked
  5221  003986  1F86               	comf	??___ftge& (0+255),f,b
  5222  003988  1F87               	comf	(??___ftge+1)& (0+255),f,b
  5223  00398A  1F88               	comf	(??___ftge+2)& (0+255),f,b
  5224  00398C  2B86               	incf	??___ftge& (0+255),f,b
  5225  00398E  0E00               	movlw	0
  5226  003990  2387               	addwfc	(??___ftge+1)& (0+255),f,b
  5227  003992  2388               	addwfc	(??___ftge+2)& (0+255),f,b
  5228  003994  0E00               	movlw	0
  5229  003996  0100               	movlb	0	; () banked
  5230  003998  2586               	addwf	??___ftge& (0+255),w,b
  5231  00399A  0100               	movlb	0	; () banked
  5232  00399C  6F83               	movwf	___ftge@ff2& (0+255),b
  5233  00399E  0E00               	movlw	0
  5234  0039A0  0100               	movlb	0	; () banked
  5235  0039A2  2187               	addwfc	(??___ftge+1)& (0+255),w,b
  5236  0039A4  0100               	movlb	0	; () banked
  5237  0039A6  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  5238  0039A8  0E80               	movlw	128
  5239  0039AA  0100               	movlb	0	; () banked
  5240  0039AC  2188               	addwfc	(??___ftge+2)& (0+255),w,b
  5241  0039AE  0100               	movlb	0	; () banked
  5242  0039B0  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  5243  0039B2                     l3804:
  5244                           
  5245                           ; BSR set to: 0
  5246  0039B2  0E00               	movlw	0
  5247  0039B4  0100               	movlb	0	; () banked
  5248  0039B6  1B80               	xorwf	___ftge@ff1& (0+255),f,b
  5249  0039B8  0E00               	movlw	0
  5250  0039BA  0100               	movlb	0	; () banked
  5251  0039BC  1B81               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5252  0039BE  0E80               	movlw	128
  5253  0039C0  0100               	movlb	0	; () banked
  5254  0039C2  1B82               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5255                           
  5256                           ; BSR set to: 0
  5257  0039C4  0E00               	movlw	0
  5258  0039C6  0100               	movlb	0	; () banked
  5259  0039C8  1B83               	xorwf	___ftge@ff2& (0+255),f,b
  5260  0039CA  0E00               	movlw	0
  5261  0039CC  0100               	movlb	0	; () banked
  5262  0039CE  1B84               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5263  0039D0  0E80               	movlw	128
  5264  0039D2  0100               	movlb	0	; () banked
  5265  0039D4  1B85               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5266  0039D6  0100               	movlb	0	; () banked
  5267  0039D8  5183               	movf	___ftge@ff2& (0+255),w,b
  5268  0039DA  0100               	movlb	0	; () banked
  5269  0039DC  5D80               	subwf	___ftge@ff1& (0+255),w,b
  5270  0039DE  0100               	movlb	0	; () banked
  5271  0039E0  5184               	movf	(___ftge@ff2+1)& (0+255),w,b
  5272  0039E2  0100               	movlb	0	; () banked
  5273  0039E4  5981               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5274  0039E6  0100               	movlb	0	; () banked
  5275  0039E8  5185               	movf	(___ftge@ff2+2)& (0+255),w,b
  5276  0039EA  0100               	movlb	0	; () banked
  5277  0039EC  5982               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5278  0039EE  B0D8               	btfsc	status,0,c
  5279  0039F0  D002               	goto	l3810
  5280                           
  5281                           ; BSR set to: 0
  5282  0039F2  90D8               	bcf	status,0,c
  5283  0039F4  0012               	return	
  5284  0039F6                     l3810:
  5285                           
  5286                           ; BSR set to: 0
  5287  0039F6  80D8               	bsf	status,0,c
  5288                           
  5289                           ; BSR set to: 0
  5290  0039F8  0012               	return	
  5291  0039FA                     __end_of___ftge:
  5292                           	opt stack 0
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           intcon2	equ	0xFF1
  5301                           postinc0	equ	0xFEE
  5302                           wreg	equ	0xFE8
  5303                           indf2	equ	0xFDF
  5304                           fsr2h	equ	0xFDA
  5305                           fsr2l	equ	0xFD9
  5306                           status	equ	0xFD8
  5307                           
  5308 ;; *************** function ___lwtoft *****************
  5309 ;; Defined at:
  5310 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  c               2    8[BANK0 ] unsigned int 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  3    8[BANK0 ] float 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5324 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;Total ram usage:        3 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    7
  5331 ;; This function calls:
  5332 ;;		___ftpack
  5333 ;; This function is called by:
  5334 ;;		_readADC
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text9
  5339  004378                     __ptext9:
  5340                           	opt stack 0
  5341  004378                     ___lwtoft:
  5342                           	opt stack 22
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;incstack = 0
  5346  004378  C088  F080         	movff	___lwtoft@c,___ftpack@arg
  5347  00437C  C089  F081         	movff	___lwtoft@c+1,___ftpack@arg+1
  5348  004380  0100               	movlb	0	; () banked
  5349  004382  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
  5350  004384  0E8E               	movlw	142
  5351  004386  0100               	movlb	0	; () banked
  5352  004388  6F83               	movwf	___ftpack@exp& (0+255),b
  5353  00438A  0E00               	movlw	0
  5354  00438C  0100               	movlb	0	; () banked
  5355  00438E  6F84               	movwf	___ftpack@sign& (0+255),b
  5356  004390  EC26  F01B         	call	___ftpack	;wreg free
  5357  004394  C080  F088         	movff	?___ftpack,?___lwtoft
  5358  004398  C081  F089         	movff	?___ftpack+1,?___lwtoft+1
  5359  00439C  C082  F08A         	movff	?___ftpack+2,?___lwtoft+2
  5360  0043A0  0012               	return	
  5361  0043A2                     __end_of___lwtoft:
  5362                           	opt stack 0
  5363                           tblptru	equ	0xFF8
  5364                           tblptrh	equ	0xFF7
  5365                           tblptrl	equ	0xFF6
  5366                           tablat	equ	0xFF5
  5367                           prodh	equ	0xFF4
  5368                           prodl	equ	0xFF3
  5369                           intcon	equ	0xFF2
  5370                           intcon2	equ	0xFF1
  5371                           postinc0	equ	0xFEE
  5372                           wreg	equ	0xFE8
  5373                           indf2	equ	0xFDF
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function ___ftdiv *****************
  5379 ;; Defined at:
  5380 ;;		line 54 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  f1              3   23[BANK0 ] float 
  5383 ;;  f2              3   26[BANK0 ] float 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  f3              3   33[BANK0 ] float 
  5386 ;;  sign            1   37[BANK0 ] unsigned char 
  5387 ;;  exp             1   36[BANK0 ] unsigned char 
  5388 ;;  cntr            1   32[BANK0 ] unsigned char 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  3   23[BANK0 ] float 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5398 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;Total ram usage:       15 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    7
  5405 ;; This function calls:
  5406 ;;		___ftpack
  5407 ;; This function is called by:
  5408 ;;		_readADC
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text10
  5413  0033D6                     __ptext10:
  5414                           	opt stack 0
  5415  0033D6                     ___ftdiv:
  5416                           	opt stack 22
  5417                           
  5418                           ;incstack = 0
  5419  0033D6  C099  F09D         	movff	___ftdiv@f1+2,??___ftdiv
  5420  0033DA  0100               	movlb	0	; () banked
  5421  0033DC  6B9E               	clrf	(??___ftdiv+1)& (0+255),b
  5422  0033DE  6B9F               	clrf	(??___ftdiv+2)& (0+255),b
  5423  0033E0  0100               	movlb	0	; () banked
  5424  0033E2  3598               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5425  0033E4  0100               	movlb	0	; () banked
  5426  0033E6  379D               	rlcf	??___ftdiv& (0+255),f,b
  5427  0033E8  E301               	bnc	u4051
  5428  0033EA  819E               	bsf	(??___ftdiv+1)& (0+255),0,b
  5429  0033EC                     u4051:
  5430  0033EC  0100               	movlb	0	; () banked
  5431  0033EE  519D               	movf	??___ftdiv& (0+255),w,b
  5432  0033F0  0100               	movlb	0	; () banked
  5433  0033F2  6FA4               	movwf	___ftdiv@exp& (0+255),b
  5434  0033F4  0100               	movlb	0	; () banked
  5435  0033F6  51A4               	movf	___ftdiv@exp& (0+255),w,b
  5436  0033F8  A4D8               	btfss	status,2,c
  5437  0033FA  D00A               	goto	l4120
  5438                           
  5439                           ; BSR set to: 0
  5440  0033FC  0E00               	movlw	0
  5441  0033FE  0100               	movlb	0	; () banked
  5442  003400  6F97               	movwf	?___ftdiv& (0+255),b
  5443  003402  0E00               	movlw	0
  5444  003404  0100               	movlb	0	; () banked
  5445  003406  6F98               	movwf	(?___ftdiv+1)& (0+255),b
  5446  003408  0E00               	movlw	0
  5447  00340A  0100               	movlb	0	; () banked
  5448  00340C  6F99               	movwf	(?___ftdiv+2)& (0+255),b
  5449                           
  5450                           ; BSR set to: 0
  5451  00340E  0012               	return	
  5452  003410                     l4120:
  5453                           
  5454                           ; BSR set to: 0
  5455  003410  C09C  F09D         	movff	___ftdiv@f2+2,??___ftdiv
  5456  003414  0100               	movlb	0	; () banked
  5457  003416  6B9E               	clrf	(??___ftdiv+1)& (0+255),b
  5458  003418  6B9F               	clrf	(??___ftdiv+2)& (0+255),b
  5459  00341A  0100               	movlb	0	; () banked
  5460  00341C  359B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5461  00341E  0100               	movlb	0	; () banked
  5462  003420  379D               	rlcf	??___ftdiv& (0+255),f,b
  5463  003422  E301               	bnc	u4071
  5464  003424  819E               	bsf	(??___ftdiv+1)& (0+255),0,b
  5465  003426                     u4071:
  5466  003426  0100               	movlb	0	; () banked
  5467  003428  519D               	movf	??___ftdiv& (0+255),w,b
  5468  00342A  0100               	movlb	0	; () banked
  5469  00342C  6FA5               	movwf	___ftdiv@sign& (0+255),b
  5470  00342E  0100               	movlb	0	; () banked
  5471  003430  51A5               	movf	___ftdiv@sign& (0+255),w,b
  5472  003432  A4D8               	btfss	status,2,c
  5473  003434  D00A               	goto	l4126
  5474                           
  5475                           ; BSR set to: 0
  5476  003436  0E00               	movlw	0
  5477  003438  0100               	movlb	0	; () banked
  5478  00343A  6F97               	movwf	?___ftdiv& (0+255),b
  5479  00343C  0E00               	movlw	0
  5480  00343E  0100               	movlb	0	; () banked
  5481  003440  6F98               	movwf	(?___ftdiv+1)& (0+255),b
  5482  003442  0E00               	movlw	0
  5483  003444  0100               	movlb	0	; () banked
  5484  003446  6F99               	movwf	(?___ftdiv+2)& (0+255),b
  5485                           
  5486                           ; BSR set to: 0
  5487  003448  0012               	return	
  5488  00344A                     l4126:
  5489                           
  5490                           ; BSR set to: 0
  5491  00344A  0E00               	movlw	0
  5492  00344C  0100               	movlb	0	; () banked
  5493  00344E  6FA1               	movwf	___ftdiv@f3& (0+255),b
  5494  003450  0E00               	movlw	0
  5495  003452  0100               	movlb	0	; () banked
  5496  003454  6FA2               	movwf	(___ftdiv@f3+1)& (0+255),b
  5497  003456  0E00               	movlw	0
  5498  003458  0100               	movlb	0	; () banked
  5499  00345A  6FA3               	movwf	(___ftdiv@f3+2)& (0+255),b
  5500                           
  5501                           ; BSR set to: 0
  5502  00345C  0100               	movlb	0	; () banked
  5503  00345E  51A5               	movf	___ftdiv@sign& (0+255),w,b
  5504  003460  0F89               	addlw	137
  5505  003462  0100               	movlb	0	; () banked
  5506  003464  5FA4               	subwf	___ftdiv@exp& (0+255),f,b
  5507                           
  5508                           ; BSR set to: 0
  5509  003466  C099  F0A5         	movff	___ftdiv@f1+2,___ftdiv@sign
  5510                           
  5511                           ; BSR set to: 0
  5512  00346A  0100               	movlb	0	; () banked
  5513  00346C  519C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5514  00346E  0100               	movlb	0	; () banked
  5515  003470  1BA5               	xorwf	___ftdiv@sign& (0+255),f,b
  5516                           
  5517                           ; BSR set to: 0
  5518  003472  0E80               	movlw	128
  5519  003474  0100               	movlb	0	; () banked
  5520  003476  17A5               	andwf	___ftdiv@sign& (0+255),f,b
  5521                           
  5522                           ; BSR set to: 0
  5523  003478  0100               	movlb	0	; () banked
  5524  00347A  8F98               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5525                           
  5526                           ; BSR set to: 0
  5527  00347C  0EFF               	movlw	255
  5528  00347E  0100               	movlb	0	; () banked
  5529  003480  1797               	andwf	___ftdiv@f1& (0+255),f,b
  5530  003482  0EFF               	movlw	255
  5531  003484  0100               	movlb	0	; () banked
  5532  003486  1798               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5533  003488  0E00               	movlw	0
  5534  00348A  0100               	movlb	0	; () banked
  5535  00348C  1799               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5536                           
  5537                           ; BSR set to: 0
  5538  00348E  0100               	movlb	0	; () banked
  5539  003490  8F9B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5540                           
  5541                           ; BSR set to: 0
  5542  003492  0EFF               	movlw	255
  5543  003494  0100               	movlb	0	; () banked
  5544  003496  179A               	andwf	___ftdiv@f2& (0+255),f,b
  5545  003498  0EFF               	movlw	255
  5546  00349A  0100               	movlb	0	; () banked
  5547  00349C  179B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5548  00349E  0E00               	movlw	0
  5549  0034A0  0100               	movlb	0	; () banked
  5550  0034A2  179C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5551                           
  5552                           ; BSR set to: 0
  5553  0034A4  0E18               	movlw	24
  5554  0034A6  0100               	movlb	0	; () banked
  5555  0034A8  6FA0               	movwf	___ftdiv@cntr& (0+255),b
  5556  0034AA                     l4146:
  5557                           
  5558                           ; BSR set to: 0
  5559  0034AA  0100               	movlb	0	; () banked
  5560  0034AC  90D8               	bcf	status,0,c
  5561  0034AE  37A1               	rlcf	___ftdiv@f3& (0+255),f,b
  5562  0034B0  37A2               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5563  0034B2  37A3               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5564                           
  5565                           ; BSR set to: 0
  5566  0034B4  0100               	movlb	0	; () banked
  5567  0034B6  519A               	movf	___ftdiv@f2& (0+255),w,b
  5568  0034B8  0100               	movlb	0	; () banked
  5569  0034BA  5D97               	subwf	___ftdiv@f1& (0+255),w,b
  5570  0034BC  0100               	movlb	0	; () banked
  5571  0034BE  519B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5572  0034C0  0100               	movlb	0	; () banked
  5573  0034C2  5998               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5574  0034C4  0100               	movlb	0	; () banked
  5575  0034C6  519C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5576  0034C8  0100               	movlb	0	; () banked
  5577  0034CA  5999               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5578  0034CC  A0D8               	btfss	status,0,c
  5579  0034CE  D00E               	goto	l1100
  5580                           
  5581                           ; BSR set to: 0
  5582  0034D0  0100               	movlb	0	; () banked
  5583  0034D2  519A               	movf	___ftdiv@f2& (0+255),w,b
  5584  0034D4  0100               	movlb	0	; () banked
  5585  0034D6  5F97               	subwf	___ftdiv@f1& (0+255),f,b
  5586  0034D8  0100               	movlb	0	; () banked
  5587  0034DA  519B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5588  0034DC  0100               	movlb	0	; () banked
  5589  0034DE  5B98               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5590  0034E0  0100               	movlb	0	; () banked
  5591  0034E2  519C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5592  0034E4  0100               	movlb	0	; () banked
  5593  0034E6  5B99               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5594                           
  5595                           ; BSR set to: 0
  5596  0034E8  0100               	movlb	0	; () banked
  5597  0034EA  81A1               	bsf	___ftdiv@f3& (0+255),0,b
  5598  0034EC                     l1100:
  5599                           
  5600                           ; BSR set to: 0
  5601  0034EC  0100               	movlb	0	; () banked
  5602  0034EE  90D8               	bcf	status,0,c
  5603  0034F0  3797               	rlcf	___ftdiv@f1& (0+255),f,b
  5604  0034F2  3798               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5605  0034F4  3799               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5606                           
  5607                           ; BSR set to: 0
  5608  0034F6  0100               	movlb	0	; () banked
  5609  0034F8  2FA0               	decfsz	___ftdiv@cntr& (0+255),f,b
  5610  0034FA  D7D7               	goto	l4146
  5611                           
  5612                           ; BSR set to: 0
  5613                           
  5614                           ; BSR set to: 0
  5615  0034FC  C0A1  F080         	movff	___ftdiv@f3,___ftpack@arg
  5616  003500  C0A2  F081         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5617  003504  C0A3  F082         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5618  003508  C0A4  F083         	movff	___ftdiv@exp,___ftpack@exp
  5619  00350C  C0A5  F084         	movff	___ftdiv@sign,___ftpack@sign
  5620  003510  EC26  F01B         	call	___ftpack	;wreg free
  5621  003514  C080  F097         	movff	?___ftpack,?___ftdiv
  5622  003518  C081  F098         	movff	?___ftpack+1,?___ftdiv+1
  5623  00351C  C082  F099         	movff	?___ftpack+2,?___ftdiv+2
  5624  003520  0012               	return	
  5625  003522                     __end_of___ftdiv:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           intcon	equ	0xFF2
  5634                           intcon2	equ	0xFF1
  5635                           postinc0	equ	0xFEE
  5636                           wreg	equ	0xFE8
  5637                           indf2	equ	0xFDF
  5638                           fsr2h	equ	0xFDA
  5639                           fsr2l	equ	0xFD9
  5640                           status	equ	0xFD8
  5641                           
  5642 ;; *************** function ___ftadd *****************
  5643 ;; Defined at:
  5644 ;;		line 86 in file "/Applications/microchip/xc8/v1.41/sources/common/ftadd.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  f1              3   11[BANK0 ] float 
  5647 ;;  f2              3   14[BANK0 ] float 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  exp1            1   22[BANK0 ] unsigned char 
  5650 ;;  exp2            1   21[BANK0 ] unsigned char 
  5651 ;;  sign            1   20[BANK0 ] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  3   11[BANK0 ] float 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:       12 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    7
  5668 ;; This function calls:
  5669 ;;		___ftpack
  5670 ;; This function is called by:
  5671 ;;		_readADC
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text11
  5676  002D0A                     __ptext11:
  5677                           	opt stack 0
  5678  002D0A                     ___ftadd:
  5679                           	opt stack 22
  5680                           
  5681                           ;incstack = 0
  5682  002D0A  C08D  F091         	movff	___ftadd@f1+2,??___ftadd
  5683  002D0E  0100               	movlb	0	; () banked
  5684  002D10  6B92               	clrf	(??___ftadd+1)& (0+255),b
  5685  002D12  6B93               	clrf	(??___ftadd+2)& (0+255),b
  5686  002D14  0100               	movlb	0	; () banked
  5687  002D16  358C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5688  002D18  0100               	movlb	0	; () banked
  5689  002D1A  3791               	rlcf	??___ftadd& (0+255),f,b
  5690  002D1C  E301               	bnc	u3841
  5691  002D1E  8192               	bsf	(??___ftadd+1)& (0+255),0,b
  5692  002D20                     u3841:
  5693  002D20  0100               	movlb	0	; () banked
  5694  002D22  5191               	movf	??___ftadd& (0+255),w,b
  5695  002D24  0100               	movlb	0	; () banked
  5696  002D26  6F96               	movwf	___ftadd@exp1& (0+255),b
  5697  002D28  C090  F091         	movff	___ftadd@f2+2,??___ftadd
  5698  002D2C  0100               	movlb	0	; () banked
  5699  002D2E  6B92               	clrf	(??___ftadd+1)& (0+255),b
  5700  002D30  6B93               	clrf	(??___ftadd+2)& (0+255),b
  5701  002D32  0100               	movlb	0	; () banked
  5702  002D34  358F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5703  002D36  0100               	movlb	0	; () banked
  5704  002D38  3791               	rlcf	??___ftadd& (0+255),f,b
  5705  002D3A  E301               	bnc	u3851
  5706  002D3C  8192               	bsf	(??___ftadd+1)& (0+255),0,b
  5707  002D3E                     u3851:
  5708  002D3E  0100               	movlb	0	; () banked
  5709  002D40  5191               	movf	??___ftadd& (0+255),w,b
  5710  002D42  0100               	movlb	0	; () banked
  5711  002D44  6F95               	movwf	___ftadd@exp2& (0+255),b
  5712                           
  5713                           ; BSR set to: 0
  5714  002D46  0100               	movlb	0	; () banked
  5715  002D48  5196               	movf	___ftadd@exp1& (0+255),w,b
  5716  002D4A  0100               	movlb	0	; () banked
  5717  002D4C  B4D8               	btfsc	status,2,c
  5718  002D4E  D011               	goto	l1065
  5719                           
  5720                           ; BSR set to: 0
  5721  002D50  0100               	movlb	0	; () banked
  5722  002D52  5195               	movf	___ftadd@exp2& (0+255),w,b
  5723  002D54  0100               	movlb	0	; () banked
  5724  002D56  5D96               	subwf	___ftadd@exp1& (0+255),w,b
  5725  002D58  B0D8               	btfsc	status,0,c
  5726  002D5A  D012               	goto	l4052
  5727                           
  5728                           ; BSR set to: 0
  5729  002D5C  0100               	movlb	0	; () banked
  5730  002D5E  5196               	movf	___ftadd@exp1& (0+255),w,b
  5731  002D60  0800               	sublw	0
  5732  002D62  0100               	movlb	0	; () banked
  5733  002D64  2595               	addwf	___ftadd@exp2& (0+255),w,b
  5734  002D66  0100               	movlb	0	; () banked
  5735  002D68  6F91               	movwf	??___ftadd& (0+255),b
  5736  002D6A  0E18               	movlw	24
  5737  002D6C  0100               	movlb	0	; () banked
  5738  002D6E  6591               	cpfsgt	??___ftadd& (0+255),b
  5739  002D70  D007               	goto	l4052
  5740  002D72                     l1065:
  5741                           
  5742                           ; BSR set to: 0
  5743  002D72  C08E  F08B         	movff	___ftadd@f2,?___ftadd
  5744  002D76  C08F  F08C         	movff	___ftadd@f2+1,?___ftadd+1
  5745  002D7A  C090  F08D         	movff	___ftadd@f2+2,?___ftadd+2
  5746  002D7E  0012               	return	
  5747  002D80                     l4052:
  5748                           
  5749                           ; BSR set to: 0
  5750  002D80  0100               	movlb	0	; () banked
  5751  002D82  5195               	movf	___ftadd@exp2& (0+255),w,b
  5752  002D84  0100               	movlb	0	; () banked
  5753  002D86  B4D8               	btfsc	status,2,c
  5754  002D88  D011               	goto	l1069
  5755                           
  5756                           ; BSR set to: 0
  5757  002D8A  0100               	movlb	0	; () banked
  5758  002D8C  5196               	movf	___ftadd@exp1& (0+255),w,b
  5759  002D8E  0100               	movlb	0	; () banked
  5760  002D90  5D95               	subwf	___ftadd@exp2& (0+255),w,b
  5761  002D92  B0D8               	btfsc	status,0,c
  5762  002D94  D012               	goto	l4058
  5763                           
  5764                           ; BSR set to: 0
  5765  002D96  0100               	movlb	0	; () banked
  5766  002D98  5195               	movf	___ftadd@exp2& (0+255),w,b
  5767  002D9A  0800               	sublw	0
  5768  002D9C  0100               	movlb	0	; () banked
  5769  002D9E  2596               	addwf	___ftadd@exp1& (0+255),w,b
  5770  002DA0  0100               	movlb	0	; () banked
  5771  002DA2  6F91               	movwf	??___ftadd& (0+255),b
  5772  002DA4  0E18               	movlw	24
  5773  002DA6  0100               	movlb	0	; () banked
  5774  002DA8  6591               	cpfsgt	??___ftadd& (0+255),b
  5775  002DAA  D007               	goto	l4058
  5776  002DAC                     l1069:
  5777                           
  5778                           ; BSR set to: 0
  5779  002DAC  C08B  F08B         	movff	___ftadd@f1,?___ftadd
  5780  002DB0  C08C  F08C         	movff	___ftadd@f1+1,?___ftadd+1
  5781  002DB4  C08D  F08D         	movff	___ftadd@f1+2,?___ftadd+2
  5782  002DB8  0012               	return	
  5783  002DBA                     l4058:
  5784                           
  5785                           ; BSR set to: 0
  5786  002DBA  0E06               	movlw	6
  5787  002DBC  0100               	movlb	0	; () banked
  5788  002DBE  6F94               	movwf	___ftadd@sign& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791  002DC0  0100               	movlb	0	; () banked
  5792  002DC2  AF8D               	btfss	(___ftadd@f1+2)& (0+255),7,b
  5793  002DC4  D002               	goto	l4064
  5794                           
  5795                           ; BSR set to: 0
  5796  002DC6  0100               	movlb	0	; () banked
  5797  002DC8  8F94               	bsf	___ftadd@sign& (0+255),7,b
  5798  002DCA                     l4064:
  5799                           
  5800                           ; BSR set to: 0
  5801  002DCA  0100               	movlb	0	; () banked
  5802  002DCC  AF90               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5803  002DCE  D002               	goto	l1071
  5804                           
  5805                           ; BSR set to: 0
  5806  002DD0  0100               	movlb	0	; () banked
  5807  002DD2  8D94               	bsf	___ftadd@sign& (0+255),6,b
  5808  002DD4                     l1071:
  5809                           
  5810                           ; BSR set to: 0
  5811  002DD4  0100               	movlb	0	; () banked
  5812  002DD6  8F8C               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5813                           
  5814                           ; BSR set to: 0
  5815  002DD8  0EFF               	movlw	255
  5816  002DDA  0100               	movlb	0	; () banked
  5817  002DDC  178B               	andwf	___ftadd@f1& (0+255),f,b
  5818  002DDE  0EFF               	movlw	255
  5819  002DE0  0100               	movlb	0	; () banked
  5820  002DE2  178C               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5821  002DE4  0E00               	movlw	0
  5822  002DE6  0100               	movlb	0	; () banked
  5823  002DE8  178D               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5824  002DEA  0100               	movlb	0	; () banked
  5825  002DEC  8F8F               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5826                           
  5827                           ; BSR set to: 0
  5828  002DEE  0EFF               	movlw	255
  5829  002DF0  0100               	movlb	0	; () banked
  5830  002DF2  178E               	andwf	___ftadd@f2& (0+255),f,b
  5831  002DF4  0EFF               	movlw	255
  5832  002DF6  0100               	movlb	0	; () banked
  5833  002DF8  178F               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5834  002DFA  0E00               	movlw	0
  5835  002DFC  0100               	movlb	0	; () banked
  5836  002DFE  1790               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5837                           
  5838                           ; BSR set to: 0
  5839  002E00  0100               	movlb	0	; () banked
  5840  002E02  5195               	movf	___ftadd@exp2& (0+255),w,b
  5841  002E04  0100               	movlb	0	; () banked
  5842  002E06  5D96               	subwf	___ftadd@exp1& (0+255),w,b
  5843  002E08  B0D8               	btfsc	status,0,c
  5844  002E0A  D025               	goto	l4084
  5845  002E0C                     l4074:
  5846                           
  5847                           ; BSR set to: 0
  5848  002E0C  0100               	movlb	0	; () banked
  5849  002E0E  90D8               	bcf	status,0,c
  5850  002E10  378E               	rlcf	___ftadd@f2& (0+255),f,b
  5851  002E12  378F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5852  002E14  3790               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5853  002E16  0100               	movlb	0	; () banked
  5854  002E18  0795               	decf	___ftadd@exp2& (0+255),f,b
  5855                           
  5856                           ; BSR set to: 0
  5857  002E1A  0100               	movlb	0	; () banked
  5858  002E1C  5196               	movf	___ftadd@exp1& (0+255),w,b
  5859  002E1E  0100               	movlb	0	; () banked
  5860  002E20  1995               	xorwf	___ftadd@exp2& (0+255),w,b
  5861  002E22  B4D8               	btfsc	status,2,c
  5862  002E24  D011               	goto	l4082
  5863                           
  5864                           ; BSR set to: 0
  5865  002E26  0100               	movlb	0	; () banked
  5866  002E28  0794               	decf	___ftadd@sign& (0+255),f,b
  5867  002E2A  C094  F091         	movff	___ftadd@sign,??___ftadd
  5868  002E2E  0E07               	movlw	7
  5869  002E30  0100               	movlb	0	; () banked
  5870  002E32  1791               	andwf	??___ftadd& (0+255),f,b
  5871  002E34  B4D8               	btfsc	status,2,c
  5872  002E36  D008               	goto	l4082
  5873  002E38  D7E9               	goto	l4074
  5874  002E3A                     l4080:
  5875                           
  5876                           ; BSR set to: 0
  5877  002E3A  0100               	movlb	0	; () banked
  5878  002E3C  90D8               	bcf	status,0,c
  5879  002E3E  338D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5880  002E40  338C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5881  002E42  338B               	rrcf	___ftadd@f1& (0+255),f,b
  5882  002E44  0100               	movlb	0	; () banked
  5883  002E46  2B96               	incf	___ftadd@exp1& (0+255),f,b
  5884  002E48                     l4082:
  5885                           
  5886                           ; BSR set to: 0
  5887  002E48  0100               	movlb	0	; () banked
  5888  002E4A  5195               	movf	___ftadd@exp2& (0+255),w,b
  5889  002E4C  0100               	movlb	0	; () banked
  5890  002E4E  1996               	xorwf	___ftadd@exp1& (0+255),w,b
  5891  002E50  B4D8               	btfsc	status,2,c
  5892  002E52  D02B               	goto	l1080
  5893  002E54  D7F2               	goto	l4080
  5894  002E56                     l4084:
  5895                           
  5896                           ; BSR set to: 0
  5897  002E56  0100               	movlb	0	; () banked
  5898  002E58  5196               	movf	___ftadd@exp1& (0+255),w,b
  5899  002E5A  0100               	movlb	0	; () banked
  5900  002E5C  5D95               	subwf	___ftadd@exp2& (0+255),w,b
  5901  002E5E  B0D8               	btfsc	status,0,c
  5902  002E60  D024               	goto	l1080
  5903  002E62                     l4086:
  5904                           
  5905                           ; BSR set to: 0
  5906  002E62  0100               	movlb	0	; () banked
  5907  002E64  90D8               	bcf	status,0,c
  5908  002E66  378B               	rlcf	___ftadd@f1& (0+255),f,b
  5909  002E68  378C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5910  002E6A  378D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5911  002E6C  0100               	movlb	0	; () banked
  5912  002E6E  0796               	decf	___ftadd@exp1& (0+255),f,b
  5913                           
  5914                           ; BSR set to: 0
  5915  002E70  0100               	movlb	0	; () banked
  5916  002E72  5196               	movf	___ftadd@exp1& (0+255),w,b
  5917  002E74  0100               	movlb	0	; () banked
  5918  002E76  1995               	xorwf	___ftadd@exp2& (0+255),w,b
  5919  002E78  B4D8               	btfsc	status,2,c
  5920  002E7A  D011               	goto	l4094
  5921                           
  5922                           ; BSR set to: 0
  5923  002E7C  0100               	movlb	0	; () banked
  5924  002E7E  0794               	decf	___ftadd@sign& (0+255),f,b
  5925  002E80  C094  F091         	movff	___ftadd@sign,??___ftadd
  5926  002E84  0E07               	movlw	7
  5927  002E86  0100               	movlb	0	; () banked
  5928  002E88  1791               	andwf	??___ftadd& (0+255),f,b
  5929  002E8A  B4D8               	btfsc	status,2,c
  5930  002E8C  D008               	goto	l4094
  5931  002E8E  D7E9               	goto	l4086
  5932  002E90                     l4092:
  5933                           
  5934                           ; BSR set to: 0
  5935  002E90  0100               	movlb	0	; () banked
  5936  002E92  90D8               	bcf	status,0,c
  5937  002E94  3390               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5938  002E96  338F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5939  002E98  338E               	rrcf	___ftadd@f2& (0+255),f,b
  5940  002E9A  0100               	movlb	0	; () banked
  5941  002E9C  2B95               	incf	___ftadd@exp2& (0+255),f,b
  5942  002E9E                     l4094:
  5943                           
  5944                           ; BSR set to: 0
  5945  002E9E  0100               	movlb	0	; () banked
  5946  002EA0  5195               	movf	___ftadd@exp2& (0+255),w,b
  5947  002EA2  0100               	movlb	0	; () banked
  5948  002EA4  1996               	xorwf	___ftadd@exp1& (0+255),w,b
  5949  002EA6  A4D8               	btfss	status,2,c
  5950  002EA8  D7F3               	goto	l4092
  5951  002EAA                     l1080:
  5952                           
  5953                           ; BSR set to: 0
  5954  002EAA  0100               	movlb	0	; () banked
  5955  002EAC  AF94               	btfss	___ftadd@sign& (0+255),7,b
  5956  002EAE  D012               	goto	l1089
  5957                           
  5958                           ; BSR set to: 0
  5959  002EB0  0EFF               	movlw	255
  5960  002EB2  0100               	movlb	0	; () banked
  5961  002EB4  1B8B               	xorwf	___ftadd@f1& (0+255),f,b
  5962  002EB6  0EFF               	movlw	255
  5963  002EB8  0100               	movlb	0	; () banked
  5964  002EBA  1B8C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5965  002EBC  0EFF               	movlw	255
  5966  002EBE  0100               	movlb	0	; () banked
  5967  002EC0  1B8D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5968  002EC2  0E01               	movlw	1
  5969  002EC4  0100               	movlb	0	; () banked
  5970  002EC6  278B               	addwf	___ftadd@f1& (0+255),f,b
  5971  002EC8  0E00               	movlw	0
  5972  002ECA  0100               	movlb	0	; () banked
  5973  002ECC  238C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5974  002ECE  0E00               	movlw	0
  5975  002ED0  0100               	movlb	0	; () banked
  5976  002ED2  238D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5977  002ED4                     l1089:
  5978                           
  5979                           ; BSR set to: 0
  5980  002ED4  0100               	movlb	0	; () banked
  5981  002ED6  AD94               	btfss	___ftadd@sign& (0+255),6,b
  5982  002ED8  D012               	goto	l4100
  5983                           
  5984                           ; BSR set to: 0
  5985  002EDA  0EFF               	movlw	255
  5986  002EDC  0100               	movlb	0	; () banked
  5987  002EDE  1B8E               	xorwf	___ftadd@f2& (0+255),f,b
  5988  002EE0  0EFF               	movlw	255
  5989  002EE2  0100               	movlb	0	; () banked
  5990  002EE4  1B8F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5991  002EE6  0EFF               	movlw	255
  5992  002EE8  0100               	movlb	0	; () banked
  5993  002EEA  1B90               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5994  002EEC  0E01               	movlw	1
  5995  002EEE  0100               	movlb	0	; () banked
  5996  002EF0  278E               	addwf	___ftadd@f2& (0+255),f,b
  5997  002EF2  0E00               	movlw	0
  5998  002EF4  0100               	movlb	0	; () banked
  5999  002EF6  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6000  002EF8  0E00               	movlw	0
  6001  002EFA  0100               	movlb	0	; () banked
  6002  002EFC  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6003  002EFE                     l4100:
  6004                           
  6005                           ; BSR set to: 0
  6006  002EFE  0E00               	movlw	0
  6007  002F00  0100               	movlb	0	; () banked
  6008  002F02  6F94               	movwf	___ftadd@sign& (0+255),b
  6009                           
  6010                           ; BSR set to: 0
  6011  002F04  0100               	movlb	0	; () banked
  6012  002F06  518B               	movf	___ftadd@f1& (0+255),w,b
  6013  002F08  0100               	movlb	0	; () banked
  6014  002F0A  278E               	addwf	___ftadd@f2& (0+255),f,b
  6015  002F0C  0100               	movlb	0	; () banked
  6016  002F0E  518C               	movf	(___ftadd@f1+1)& (0+255),w,b
  6017  002F10  0100               	movlb	0	; () banked
  6018  002F12  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6019  002F14  0100               	movlb	0	; () banked
  6020  002F16  518D               	movf	(___ftadd@f1+2)& (0+255),w,b
  6021  002F18  0100               	movlb	0	; () banked
  6022  002F1A  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6023                           
  6024                           ; BSR set to: 0
  6025  002F1C  0100               	movlb	0	; () banked
  6026  002F1E  AF90               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6027  002F20  D015               	goto	l4110
  6028                           
  6029                           ; BSR set to: 0
  6030  002F22  0EFF               	movlw	255
  6031  002F24  0100               	movlb	0	; () banked
  6032  002F26  1B8E               	xorwf	___ftadd@f2& (0+255),f,b
  6033  002F28  0EFF               	movlw	255
  6034  002F2A  0100               	movlb	0	; () banked
  6035  002F2C  1B8F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6036  002F2E  0EFF               	movlw	255
  6037  002F30  0100               	movlb	0	; () banked
  6038  002F32  1B90               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6039  002F34  0E01               	movlw	1
  6040  002F36  0100               	movlb	0	; () banked
  6041  002F38  278E               	addwf	___ftadd@f2& (0+255),f,b
  6042  002F3A  0E00               	movlw	0
  6043  002F3C  0100               	movlb	0	; () banked
  6044  002F3E  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6045  002F40  0E00               	movlw	0
  6046  002F42  0100               	movlb	0	; () banked
  6047  002F44  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6048                           
  6049                           ; BSR set to: 0
  6050  002F46  0E01               	movlw	1
  6051  002F48  0100               	movlb	0	; () banked
  6052  002F4A  6F94               	movwf	___ftadd@sign& (0+255),b
  6053  002F4C                     l4110:
  6054                           
  6055                           ; BSR set to: 0
  6056  002F4C  C08E  F080         	movff	___ftadd@f2,___ftpack@arg
  6057  002F50  C08F  F081         	movff	___ftadd@f2+1,___ftpack@arg+1
  6058  002F54  C090  F082         	movff	___ftadd@f2+2,___ftpack@arg+2
  6059  002F58  C096  F083         	movff	___ftadd@exp1,___ftpack@exp
  6060  002F5C  C094  F084         	movff	___ftadd@sign,___ftpack@sign
  6061  002F60  EC26  F01B         	call	___ftpack	;wreg free
  6062  002F64  C080  F08B         	movff	?___ftpack,?___ftadd
  6063  002F68  C081  F08C         	movff	?___ftpack+1,?___ftadd+1
  6064  002F6C  C082  F08D         	movff	?___ftpack+2,?___ftadd+2
  6065  002F70  0012               	return	
  6066  002F72                     __end_of___ftadd:
  6067                           	opt stack 0
  6068                           tblptru	equ	0xFF8
  6069                           tblptrh	equ	0xFF7
  6070                           tblptrl	equ	0xFF6
  6071                           tablat	equ	0xFF5
  6072                           prodh	equ	0xFF4
  6073                           prodl	equ	0xFF3
  6074                           intcon	equ	0xFF2
  6075                           intcon2	equ	0xFF1
  6076                           postinc0	equ	0xFEE
  6077                           wreg	equ	0xFE8
  6078                           indf2	equ	0xFDF
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function ___ftpack *****************
  6084 ;; Defined at:
  6085 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  arg             3    0[BANK0 ] unsigned um
  6088 ;;  exp             1    3[BANK0 ] unsigned char 
  6089 ;;  sign            1    4[BANK0 ] unsigned char 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  3    0[BANK0 ] float 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6101 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;Total ram usage:        8 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    6
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		___ftadd
  6112 ;;		___ftdiv
  6113 ;;		___ftmul
  6114 ;;		___lwtoft
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text12
  6119  00364C                     __ptext12:
  6120                           	opt stack 0
  6121  00364C                     ___ftpack:
  6122                           	opt stack 21
  6123                           
  6124                           ;incstack = 0
  6125  00364C  0100               	movlb	0	; () banked
  6126  00364E  5183               	movf	___ftpack@exp& (0+255),w,b
  6127  003650  0100               	movlb	0	; () banked
  6128  003652  B4D8               	btfsc	status,2,c
  6129  003654  D008               	goto	l3632
  6130                           
  6131                           ; BSR set to: 0
  6132  003656  0100               	movlb	0	; () banked
  6133  003658  5180               	movf	___ftpack@arg& (0+255),w,b
  6134  00365A  0100               	movlb	0	; () banked
  6135  00365C  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  6136  00365E  0100               	movlb	0	; () banked
  6137  003660  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  6138  003662  A4D8               	btfss	status,2,c
  6139  003664  D011               	goto	l3638
  6140  003666                     l3632:
  6141                           
  6142                           ; BSR set to: 0
  6143  003666  0E00               	movlw	0
  6144  003668  0100               	movlb	0	; () banked
  6145  00366A  6F80               	movwf	?___ftpack& (0+255),b
  6146  00366C  0E00               	movlw	0
  6147  00366E  0100               	movlb	0	; () banked
  6148  003670  6F81               	movwf	(?___ftpack+1)& (0+255),b
  6149  003672  0E00               	movlw	0
  6150  003674  0100               	movlb	0	; () banked
  6151  003676  6F82               	movwf	(?___ftpack+2)& (0+255),b
  6152                           
  6153                           ; BSR set to: 0
  6154  003678  0012               	return	
  6155  00367A                     l3636:
  6156                           
  6157                           ; BSR set to: 0
  6158  00367A  0100               	movlb	0	; () banked
  6159  00367C  2B83               	incf	___ftpack@exp& (0+255),f,b
  6160  00367E  0100               	movlb	0	; () banked
  6161  003680  90D8               	bcf	status,0,c
  6162  003682  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6163  003684  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6164  003686  3380               	rrcf	___ftpack@arg& (0+255),f,b
  6165  003688                     l3638:
  6166                           
  6167                           ; BSR set to: 0
  6168  003688  0E00               	movlw	0
  6169  00368A  0100               	movlb	0	; () banked
  6170  00368C  1580               	andwf	___ftpack@arg& (0+255),w,b
  6171  00368E  0100               	movlb	0	; () banked
  6172  003690  6F85               	movwf	??___ftpack& (0+255),b
  6173  003692  0E00               	movlw	0
  6174  003694  0100               	movlb	0	; () banked
  6175  003696  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6176  003698  0100               	movlb	0	; () banked
  6177  00369A  6F86               	movwf	(??___ftpack+1)& (0+255),b
  6178  00369C  0EFE               	movlw	254
  6179  00369E  0100               	movlb	0	; () banked
  6180  0036A0  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6181  0036A2  0100               	movlb	0	; () banked
  6182  0036A4  6F87               	movwf	(??___ftpack+2)& (0+255),b
  6183  0036A6  0100               	movlb	0	; () banked
  6184  0036A8  5185               	movf	??___ftpack& (0+255),w,b
  6185  0036AA  0100               	movlb	0	; () banked
  6186  0036AC  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  6187  0036AE  0100               	movlb	0	; () banked
  6188  0036B0  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  6189  0036B2  B4D8               	btfsc	status,2,c
  6190  0036B4  D011               	goto	l3644
  6191  0036B6  D7E1               	goto	l3636
  6192  0036B8                     l3640:
  6193                           
  6194                           ; BSR set to: 0
  6195  0036B8  0100               	movlb	0	; () banked
  6196  0036BA  2B83               	incf	___ftpack@exp& (0+255),f,b
  6197                           
  6198                           ; BSR set to: 0
  6199  0036BC  0E01               	movlw	1
  6200  0036BE  0100               	movlb	0	; () banked
  6201  0036C0  2780               	addwf	___ftpack@arg& (0+255),f,b
  6202  0036C2  0E00               	movlw	0
  6203  0036C4  0100               	movlb	0	; () banked
  6204  0036C6  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  6205  0036C8  0E00               	movlw	0
  6206  0036CA  0100               	movlb	0	; () banked
  6207  0036CC  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  6208  0036CE  0100               	movlb	0	; () banked
  6209  0036D0  90D8               	bcf	status,0,c
  6210  0036D2  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6211  0036D4  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6212  0036D6  3380               	rrcf	___ftpack@arg& (0+255),f,b
  6213  0036D8                     l3644:
  6214                           
  6215                           ; BSR set to: 0
  6216  0036D8  0E00               	movlw	0
  6217  0036DA  0100               	movlb	0	; () banked
  6218  0036DC  1580               	andwf	___ftpack@arg& (0+255),w,b
  6219  0036DE  0100               	movlb	0	; () banked
  6220  0036E0  6F85               	movwf	??___ftpack& (0+255),b
  6221  0036E2  0E00               	movlw	0
  6222  0036E4  0100               	movlb	0	; () banked
  6223  0036E6  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6224  0036E8  0100               	movlb	0	; () banked
  6225  0036EA  6F86               	movwf	(??___ftpack+1)& (0+255),b
  6226  0036EC  0EFF               	movlw	255
  6227  0036EE  0100               	movlb	0	; () banked
  6228  0036F0  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6229  0036F2  0100               	movlb	0	; () banked
  6230  0036F4  6F87               	movwf	(??___ftpack+2)& (0+255),b
  6231  0036F6  0100               	movlb	0	; () banked
  6232  0036F8  5185               	movf	??___ftpack& (0+255),w,b
  6233  0036FA  0100               	movlb	0	; () banked
  6234  0036FC  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  6235  0036FE  0100               	movlb	0	; () banked
  6236  003700  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  6237  003702  B4D8               	btfsc	status,2,c
  6238  003704  D008               	goto	l3648
  6239  003706  D7D8               	goto	l3640
  6240  003708                     l3646:
  6241                           
  6242                           ; BSR set to: 0
  6243  003708  0100               	movlb	0	; () banked
  6244  00370A  0783               	decf	___ftpack@exp& (0+255),f,b
  6245  00370C  0100               	movlb	0	; () banked
  6246  00370E  90D8               	bcf	status,0,c
  6247  003710  3780               	rlcf	___ftpack@arg& (0+255),f,b
  6248  003712  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  6249  003714  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  6250  003716                     l3648:
  6251                           
  6252                           ; BSR set to: 0
  6253  003716  0100               	movlb	0	; () banked
  6254  003718  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  6255  00371A  D004               	goto	l1042
  6256                           
  6257                           ; BSR set to: 0
  6258  00371C  0E02               	movlw	2
  6259  00371E  0100               	movlb	0	; () banked
  6260  003720  6183               	cpfslt	___ftpack@exp& (0+255),b
  6261  003722  D7F2               	goto	l3646
  6262  003724                     l1042:
  6263                           
  6264                           ; BSR set to: 0
  6265  003724  0100               	movlb	0	; () banked
  6266  003726  B183               	btfsc	___ftpack@exp& (0+255),0,b
  6267  003728  D002               	goto	l3654
  6268                           
  6269                           ; BSR set to: 0
  6270  00372A  0100               	movlb	0	; () banked
  6271  00372C  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
  6272  00372E                     l3654:
  6273                           
  6274                           ; BSR set to: 0
  6275  00372E  0100               	movlb	0	; () banked
  6276  003730  90D8               	bcf	status,0,c
  6277  003732  3383               	rrcf	___ftpack@exp& (0+255),f,b
  6278  003734  0100               	movlb	0	; () banked
  6279  003736  5183               	movf	___ftpack@exp& (0+255),w,b
  6280  003738  0100               	movlb	0	; () banked
  6281  00373A  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6282                           
  6283                           ; BSR set to: 0
  6284  00373C  0100               	movlb	0	; () banked
  6285  00373E  5184               	movf	___ftpack@sign& (0+255),w,b
  6286  003740  0100               	movlb	0	; () banked
  6287  003742  B4D8               	btfsc	status,2,c
  6288  003744  D002               	goto	l3660
  6289                           
  6290                           ; BSR set to: 0
  6291  003746  0100               	movlb	0	; () banked
  6292  003748  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6293  00374A                     l3660:
  6294                           
  6295                           ; BSR set to: 0
  6296  00374A  C080  F080         	movff	___ftpack@arg,?___ftpack
  6297  00374E  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
  6298  003752  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
  6299  003756  0012               	return	
  6300  003758                     __end_of___ftpack:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           prodh	equ	0xFF4
  6307                           prodl	equ	0xFF3
  6308                           intcon	equ	0xFF2
  6309                           intcon2	equ	0xFF1
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           indf2	equ	0xFDF
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           
  6317 ;; *************** function _printf *****************
  6318 ;; Defined at:
  6319 ;;		line 464 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  6322 ;;		 -> STR_24(8), STR_23(11), STR_22(9), STR_21(10), 
  6323 ;;		 -> STR_20(12), STR_19(5), STR_18(5), STR_17(7), 
  6324 ;;		 -> STR_16(5), STR_15(12), STR_14(8), STR_13(11), 
  6325 ;;		 -> STR_12(9), STR_11(10), STR_10(9), STR_9(5), 
  6326 ;;		 -> STR_8(9), STR_7(5), STR_6(11), STR_5(16), 
  6327 ;;		 -> STR_4(7), STR_3(16), STR_2(8), STR_1(16), 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  idx             1   24[BANK0 ] unsigned char 
  6330 ;;  tmpval          4    0        struct .
  6331 ;;  cp              3    0        PTR const unsigned char 
  6332 ;;  width           2   31[BANK0 ] int 
  6333 ;;  val             2   28[BANK0 ] unsigned int 
  6334 ;;  ap              2   25[BANK0 ] PTR void [1]
  6335 ;;		 -> ?_printf(2), 
  6336 ;;  len             2    0        unsigned int 
  6337 ;;  c               1   33[BANK0 ] char 
  6338 ;;  flag            1   30[BANK0 ] unsigned char 
  6339 ;;  prec            1   27[BANK0 ] char 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  2   12[BANK0 ] int 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6349 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;Total ram usage:       22 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    8
  6356 ;; This function calls:
  6357 ;;		___lwdiv
  6358 ;;		___lwmod
  6359 ;;		___wmul
  6360 ;;		_isdigit
  6361 ;;		_putch
  6362 ;; This function is called by:
  6363 ;;		_main
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text13
  6368  002956                     __ptext13:
  6369                           	opt stack 0
  6370  002956                     _printf:
  6371                           	opt stack 22
  6372                           
  6373                           ;doprnt.c: 466: va_list ap;
  6374                           ;doprnt.c: 499: signed char c;
  6375                           ;doprnt.c: 501: int width;
  6376                           ;doprnt.c: 506: signed char prec;
  6377                           ;doprnt.c: 508: unsigned char flag;
  6378                           ;doprnt.c: 523: union {
  6379                           ;doprnt.c: 524: unsigned long vd;
  6380                           ;doprnt.c: 525: double integ;
  6381                           ;doprnt.c: 526: } tmpval;
  6382                           ;doprnt.c: 528: unsigned int val;
  6383                           ;doprnt.c: 529: unsigned len;
  6384                           ;doprnt.c: 530: const char * cp;
  6385                           ;doprnt.c: 533: *ap = __va_start();
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;incstack = 0
  6389  002956  0E8E               	movlw	low (?_printf+2)
  6390  002958  0100               	movlb	0	; () banked
  6391  00295A  6F99               	movwf	printf@ap& (0+255),b
  6392  00295C  0E00               	movlw	high (?_printf+2)
  6393  00295E  0100               	movlb	0	; () banked
  6394  002960  6F9A               	movwf	(printf@ap+1)& (0+255),b
  6395                           
  6396                           ;doprnt.c: 536: while(c = *f++) {
  6397  002962  D1C4               	goto	l4510
  6398  002964                     l4384:
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;doprnt.c: 538: if(c != '%')
  6402  002964  0E25               	movlw	37
  6403  002966  0100               	movlb	0	; () banked
  6404  002968  19A1               	xorwf	printf@c& (0+255),w,b
  6405  00296A  B4D8               	btfsc	status,2,c
  6406  00296C  D005               	goto	l4388
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;doprnt.c: 540: {
  6410                           ;doprnt.c: 541: (putch(c) );
  6411  00296E  0100               	movlb	0	; () banked
  6412  002970  51A1               	movf	printf@c& (0+255),w,b
  6413  002972  EC28  F022         	call	_putch
  6414                           
  6415                           ;doprnt.c: 542: continue;
  6416  002976  D1BA               	goto	l4510
  6417  002978                     l4388:
  6418                           
  6419                           ;doprnt.c: 543: }
  6420                           ;doprnt.c: 546: width = 0;
  6421  002978  0E00               	movlw	0
  6422  00297A  0100               	movlb	0	; () banked
  6423  00297C  6FA0               	movwf	(printf@width+1)& (0+255),b
  6424  00297E  0E00               	movlw	0
  6425  002980  6F9F               	movwf	printf@width& (0+255),b
  6426                           
  6427                           ;doprnt.c: 548: flag = 0;
  6428  002982  0E00               	movlw	0
  6429  002984  0100               	movlb	0	; () banked
  6430  002986  6F9E               	movwf	printf@flag& (0+255),b
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;doprnt.c: 551: switch(*f) {
  6434                           
  6435                           ;doprnt.c: 550: for(;;) {
  6436  002988  D005               	goto	l4394
  6437  00298A                     l4390:
  6438                           
  6439                           ;doprnt.c: 580: flag |= 0x04;
  6440  00298A  0100               	movlb	0	; () banked
  6441  00298C  859E               	bsf	printf@flag& (0+255),2,b
  6442                           
  6443                           ;doprnt.c: 581: f++;
  6444  00298E  0100               	movlb	0	; () banked
  6445  002990  4B8C               	infsnz	printf@f& (0+255),f,b
  6446  002992  2B8D               	incf	(printf@f+1)& (0+255),f,b
  6447  002994                     l4394:
  6448  002994  C08C  FFF6         	movff	printf@f,tblptrl
  6449  002998  C08D  FFF7         	movff	printf@f+1,tblptrh
  6450  00299C                     	if	0	;tblptru may be non-zero
  6451  00299C                     	endif
  6452  00299C                     	if	0	;tblptru may be non-zero
  6453  00299C                     	endif
  6454  00299C  0008               	tblrd		*
  6455  00299E  50F5               	movf	tablat,w,c
  6456                           
  6457                           ; Switch size 1, requested type "space"
  6458                           ; Number of cases is 1, Range of values is 48 to 48
  6459                           ; switch strategies available:
  6460                           ; Name         Instructions Cycles
  6461                           ; simple_byte            4     3 (average)
  6462                           ;	Chosen strategy is simple_byte
  6463  0029A0  0A30               	xorlw	48	; case 48
  6464  0029A2  B4D8               	btfsc	status,2,c
  6465  0029A4  D7F2               	goto	l4390
  6466                           
  6467                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6468                           
  6469                           ;doprnt.c: 586: }
  6470                           
  6471                           ;doprnt.c: 585: break;
  6472  0029A6  C08C  FFF6         	movff	printf@f,tblptrl
  6473  0029AA  C08D  FFF7         	movff	printf@f+1,tblptrh
  6474  0029AE                     	if	0	;tblptru may be non-zero
  6475  0029AE                     	endif
  6476  0029AE                     	if	0	;tblptru may be non-zero
  6477  0029AE                     	endif
  6478  0029AE  0008               	tblrd		*
  6479  0029B0  50F5               	movf	tablat,w,c
  6480  0029B2  ECD1  F021         	call	_isdigit
  6481  0029B6  A0D8               	btfss	status,0,c
  6482  0029B8  D044               	goto	l4412
  6483                           
  6484                           ;doprnt.c: 598: width = 0;
  6485  0029BA  0E00               	movlw	0
  6486  0029BC  0100               	movlb	0	; () banked
  6487  0029BE  6FA0               	movwf	(printf@width+1)& (0+255),b
  6488  0029C0  0E00               	movlw	0
  6489  0029C2  6F9F               	movwf	printf@width& (0+255),b
  6490  0029C4                     l4400:
  6491                           
  6492                           ;doprnt.c: 600: width *= 10;
  6493  0029C4  C09F  F080         	movff	printf@width,___wmul@multiplier
  6494  0029C8  C0A0  F081         	movff	printf@width+1,___wmul@multiplier+1
  6495  0029CC  0E00               	movlw	0
  6496  0029CE  0100               	movlb	0	; () banked
  6497  0029D0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6498  0029D2  0E0A               	movlw	10
  6499  0029D4  6F82               	movwf	___wmul@multiplicand& (0+255),b
  6500  0029D6  EC5B  F021         	call	___wmul	;wreg free
  6501  0029DA  C080  F09F         	movff	?___wmul,printf@width
  6502  0029DE  C081  F0A0         	movff	?___wmul+1,printf@width+1
  6503                           
  6504                           ;doprnt.c: 601: width += *f++ - '0';
  6505  0029E2  0ED0               	movlw	208
  6506  0029E4  0100               	movlb	0	; () banked
  6507  0029E6  6F94               	movwf	??_printf& (0+255),b
  6508  0029E8  0EFF               	movlw	255
  6509  0029EA  0100               	movlb	0	; () banked
  6510  0029EC  6F95               	movwf	(??_printf+1)& (0+255),b
  6511  0029EE  C08C  FFF6         	movff	printf@f,tblptrl
  6512  0029F2  C08D  FFF7         	movff	printf@f+1,tblptrh
  6513  0029F6                     	if	0	;tblptru may be non-zero
  6514  0029F6                     	endif
  6515  0029F6                     	if	0	;tblptru may be non-zero
  6516  0029F6                     	endif
  6517  0029F6  0008               	tblrd		*
  6518  0029F8  50F5               	movf	tablat,w,c
  6519  0029FA  0100               	movlb	0	; () banked
  6520  0029FC  6F96               	movwf	(??_printf+2)& (0+255),b
  6521  0029FE  6B97               	clrf	(??_printf+3)& (0+255),b
  6522  002A00  0100               	movlb	0	; () banked
  6523  002A02  5194               	movf	??_printf& (0+255),w,b
  6524  002A04  0100               	movlb	0	; () banked
  6525  002A06  2796               	addwf	(??_printf+2)& (0+255),f,b
  6526  002A08  0100               	movlb	0	; () banked
  6527  002A0A  5195               	movf	(??_printf+1)& (0+255),w,b
  6528  002A0C  0100               	movlb	0	; () banked
  6529  002A0E  2397               	addwfc	(??_printf+3)& (0+255),f,b
  6530  002A10  0100               	movlb	0	; () banked
  6531  002A12  5196               	movf	(??_printf+2)& (0+255),w,b
  6532  002A14  0100               	movlb	0	; () banked
  6533  002A16  279F               	addwf	printf@width& (0+255),f,b
  6534  002A18  0100               	movlb	0	; () banked
  6535  002A1A  5197               	movf	(??_printf+3)& (0+255),w,b
  6536  002A1C  0100               	movlb	0	; () banked
  6537  002A1E  23A0               	addwfc	(printf@width+1)& (0+255),f,b
  6538                           
  6539                           ; BSR set to: 0
  6540  002A20  0100               	movlb	0	; () banked
  6541  002A22  4B8C               	infsnz	printf@f& (0+255),f,b
  6542  002A24  2B8D               	incf	(printf@f+1)& (0+255),f,b
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6546  002A26  C08C  FFF6         	movff	printf@f,tblptrl
  6547  002A2A  C08D  FFF7         	movff	printf@f+1,tblptrh
  6548  002A2E                     	if	0	;tblptru may be non-zero
  6549  002A2E                     	endif
  6550  002A2E                     	if	0	;tblptru may be non-zero
  6551  002A2E                     	endif
  6552  002A2E  0008               	tblrd		*
  6553  002A30  50F5               	movf	tablat,w,c
  6554  002A32  ECD1  F021         	call	_isdigit
  6555  002A36  A0D8               	btfss	status,0,c
  6556  002A38  D004               	goto	l4412
  6557  002A3A  D7C4               	goto	l4400
  6558  002A3C                     l4408:
  6559                           
  6560                           ;doprnt.c: 721: flag |= 0x80;
  6561  002A3C  0100               	movlb	0	; () banked
  6562  002A3E  8F9E               	bsf	printf@flag& (0+255),7,b
  6563                           
  6564                           ;doprnt.c: 723: break;
  6565  002A40  D019               	goto	l780
  6566  002A42                     l4412:
  6567  002A42  C08C  FFF6         	movff	printf@f,tblptrl
  6568  002A46  C08D  FFF7         	movff	printf@f+1,tblptrh
  6569  002A4A  0100               	movlb	0	; () banked
  6570  002A4C  4B8C               	infsnz	printf@f& (0+255),f,b
  6571  002A4E  2B8D               	incf	(printf@f+1)& (0+255),f,b
  6572  002A50                     	if	0	;tblptru may be non-zero
  6573  002A50                     	endif
  6574  002A50                     	if	0	;tblptru may be non-zero
  6575  002A50                     	endif
  6576  002A50  0008               	tblrd		*
  6577  002A52  CFF5 F0A1          	movff	tablat,printf@c
  6578  002A56  0100               	movlb	0	; () banked
  6579  002A58  51A1               	movf	printf@c& (0+255),w,b
  6580                           
  6581                           ; Switch size 1, requested type "space"
  6582                           ; Number of cases is 4, Range of values is 0 to 120
  6583                           ; switch strategies available:
  6584                           ; Name         Instructions Cycles
  6585                           ; simple_byte           13     7 (average)
  6586                           ;	Chosen strategy is simple_byte
  6587  002A5A  0A00               	xorlw	0	; case 0
  6588  002A5C  B4D8               	btfsc	status,2,c
  6589  002A5E  0012               	return	
  6590  002A60  0A64               	xorlw	100	; case 100
  6591  002A62  B4D8               	btfsc	status,2,c
  6592  002A64  D007               	goto	l780
  6593  002A66  0A0D               	xorlw	13	; case 105
  6594  002A68  B4D8               	btfsc	status,2,c
  6595  002A6A  D004               	goto	l780
  6596  002A6C  0A11               	xorlw	17	; case 120
  6597  002A6E  B4D8               	btfsc	status,2,c
  6598  002A70  D7E5               	goto	l4408
  6599  002A72  D13C               	goto	l4510
  6600  002A74                     l780:
  6601                           
  6602                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  6603  002A74  0100               	movlb	0	; () banked
  6604  002A76  BF9E               	btfsc	printf@flag& (0+255),7,b
  6605  002A78  D019               	goto	l4424
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;doprnt.c: 1253: {
  6609                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6610  002A7A  C099  FFD9         	movff	printf@ap,fsr2l
  6611  002A7E  C09A  FFDA         	movff	printf@ap+1,fsr2h
  6612  002A82  CFDE F09C          	movff	postinc2,printf@val
  6613  002A86  CFDD F09D          	movff	postdec2,printf@val+1
  6614                           
  6615                           ; BSR set to: 0
  6616  002A8A  0E02               	movlw	2
  6617  002A8C  0100               	movlb	0	; () banked
  6618  002A8E  2799               	addwf	printf@ap& (0+255),f,b
  6619  002A90  0E00               	movlw	0
  6620  002A92  239A               	addwfc	(printf@ap+1)& (0+255),f,b
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;doprnt.c: 1261: if((int)val < 0) {
  6624  002A94  0100               	movlb	0	; () banked
  6625  002A96  AF9D               	btfss	(printf@val+1)& (0+255),7,b
  6626  002A98  D053               	goto	l4458
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;doprnt.c: 1262: flag |= 0x03;
  6630  002A9A  0E03               	movlw	3
  6631  002A9C  0100               	movlb	0	; () banked
  6632  002A9E  139E               	iorwf	printf@flag& (0+255),f,b
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;doprnt.c: 1263: val = -val;
  6636  002AA0  0100               	movlb	0	; () banked
  6637  002AA2  6D9C               	negf	printf@val& (0+255),b
  6638  002AA4  1F9D               	comf	(printf@val+1)& (0+255),f,b
  6639  002AA6  B0D8               	btfsc	status,0,c
  6640  002AA8  2B9D               	incf	(printf@val+1)& (0+255),f,b
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;doprnt.c: 1264: }
  6644                           ;doprnt.c: 1266: }
  6645  002AAA  D04A               	goto	l4458
  6646  002AAC                     l4424:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;doprnt.c: 1268: else
  6650                           ;doprnt.c: 1273: {
  6651                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6652  002AAC  C099  FFD9         	movff	printf@ap,fsr2l
  6653  002AB0  C09A  FFDA         	movff	printf@ap+1,fsr2h
  6654  002AB4  CFDE F09C          	movff	postinc2,printf@val
  6655  002AB8  CFDD F09D          	movff	postdec2,printf@val+1
  6656                           
  6657                           ; BSR set to: 0
  6658  002ABC  0E02               	movlw	2
  6659  002ABE  0100               	movlb	0	; () banked
  6660  002AC0  2799               	addwf	printf@ap& (0+255),f,b
  6661  002AC2  0E00               	movlw	0
  6662  002AC4  239A               	addwfc	(printf@ap+1)& (0+255),f,b
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;doprnt.c: 1287: }
  6666                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6667  002AC6  D03C               	goto	l4458
  6668  002AC8                     l4428:
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6672  002AC8  0E01               	movlw	1
  6673  002ACA  0100               	movlb	0	; () banked
  6674  002ACC  6FA1               	movwf	printf@c& (0+255),b
  6675  002ACE                     l4430:
  6676                           
  6677                           ; BSR set to: 0
  6678  002ACE  0E05               	movlw	5
  6679  002AD0  0100               	movlb	0	; () banked
  6680  002AD2  19A1               	xorwf	printf@c& (0+255),w,b
  6681  002AD4  B4D8               	btfsc	status,2,c
  6682  002AD6  D03D               	goto	l4460
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;doprnt.c: 1306: if(val < dpowers[c])
  6686                           
  6687                           ; BSR set to: 0
  6688                           
  6689                           ; BSR set to: 0
  6690  002AD8  0100               	movlb	0	; () banked
  6691  002ADA  51A1               	movf	printf@c& (0+255),w,b
  6692  002ADC  0D02               	mullw	2
  6693  002ADE  0E12               	movlw	low _dpowers
  6694  002AE0  24F3               	addwf	prodl,w,c
  6695  002AE2  6EF6               	movwf	tblptrl,c
  6696  002AE4  0E10               	movlw	high _dpowers
  6697  002AE6  20F4               	addwfc	prodh,w,c
  6698  002AE8  6EF7               	movwf	tblptrh,c
  6699  002AEA                     	if	0	;There are less than 3 active tblptr bytes
  6700  002AEA                     	endif
  6701  002AEA  0009               	tblrd		*+
  6702  002AEC  50F5               	movf	tablat,w,c
  6703  002AEE  0100               	movlb	0	; () banked
  6704  002AF0  5D9C               	subwf	printf@val& (0+255),w,b
  6705  002AF2  0009               	tblrd		*+
  6706  002AF4  50F5               	movf	tablat,w,c
  6707  002AF6  0100               	movlb	0	; () banked
  6708  002AF8  599D               	subwfb	(printf@val+1)& (0+255),w,b
  6709  002AFA  A0D8               	btfss	status,0,c
  6710  002AFC  D02A               	goto	l4460
  6711                           
  6712                           ; BSR set to: 0
  6713                           
  6714                           ; BSR set to: 0
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;doprnt.c: 1307: break;
  6718  002AFE  0100               	movlb	0	; () banked
  6719  002B00  2BA1               	incf	printf@c& (0+255),f,b
  6720  002B02  D7E5               	goto	l4430
  6721  002B04                     l4442:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6725  002B04  0E01               	movlw	1
  6726  002B06  0100               	movlb	0	; () banked
  6727  002B08  6FA1               	movwf	printf@c& (0+255),b
  6728  002B0A                     l4444:
  6729                           
  6730                           ; BSR set to: 0
  6731  002B0A  0E04               	movlw	4
  6732  002B0C  0100               	movlb	0	; () banked
  6733  002B0E  19A1               	xorwf	printf@c& (0+255),w,b
  6734  002B10  B4D8               	btfsc	status,2,c
  6735  002B12  D01F               	goto	l4460
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6739                           
  6740                           ; BSR set to: 0
  6741                           
  6742                           ; BSR set to: 0
  6743  002B14  0100               	movlb	0	; () banked
  6744  002B16  51A1               	movf	printf@c& (0+255),w,b
  6745  002B18  0D02               	mullw	2
  6746  002B1A  0E1C               	movlw	low _hexpowers
  6747  002B1C  24F3               	addwf	prodl,w,c
  6748  002B1E  6EF6               	movwf	tblptrl,c
  6749  002B20  0E10               	movlw	high _hexpowers
  6750  002B22  20F4               	addwfc	prodh,w,c
  6751  002B24  6EF7               	movwf	tblptrh,c
  6752  002B26                     	if	0	;There are less than 3 active tblptr bytes
  6753  002B26                     	endif
  6754  002B26  0009               	tblrd		*+
  6755  002B28  50F5               	movf	tablat,w,c
  6756  002B2A  0100               	movlb	0	; () banked
  6757  002B2C  5D9C               	subwf	printf@val& (0+255),w,b
  6758  002B2E  0009               	tblrd		*+
  6759  002B30  50F5               	movf	tablat,w,c
  6760  002B32  0100               	movlb	0	; () banked
  6761  002B34  599D               	subwfb	(printf@val+1)& (0+255),w,b
  6762  002B36  A0D8               	btfss	status,0,c
  6763  002B38  D00C               	goto	l4460
  6764                           
  6765                           ; BSR set to: 0
  6766                           
  6767                           ; BSR set to: 0
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;doprnt.c: 1318: break;
  6771  002B3A  0100               	movlb	0	; () banked
  6772  002B3C  2BA1               	incf	printf@c& (0+255),f,b
  6773  002B3E  D7E5               	goto	l4444
  6774  002B40                     l4458:
  6775                           
  6776                           ; BSR set to: 0
  6777  002B40  0100               	movlb	0	; () banked
  6778  002B42  519E               	movf	printf@flag& (0+255),w,b
  6779  002B44  0B80               	andlw	128
  6780                           
  6781                           ; Switch size 1, requested type "space"
  6782                           ; Number of cases is 2, Range of values is 0 to 128
  6783                           ; switch strategies available:
  6784                           ; Name         Instructions Cycles
  6785                           ; simple_byte            7     4 (average)
  6786                           ;	Chosen strategy is simple_byte
  6787  002B46  0A00               	xorlw	0	; case 0
  6788  002B48  B4D8               	btfsc	status,2,c
  6789  002B4A  D7BE               	goto	l4428
  6790  002B4C  0A80               	xorlw	128	; case 128
  6791  002B4E  B4D8               	btfsc	status,2,c
  6792  002B50  D7D9               	goto	l4442
  6793  002B52                     l4460:
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6797  002B52  0100               	movlb	0	; () banked
  6798  002B54  519F               	movf	printf@width& (0+255),w,b
  6799  002B56  0100               	movlb	0	; () banked
  6800  002B58  11A0               	iorwf	(printf@width+1)& (0+255),w,b
  6801  002B5A  B4D8               	btfsc	status,2,c
  6802  002B5C  D00B               	goto	l4466
  6803                           
  6804                           ; BSR set to: 0
  6805  002B5E  C09E  F094         	movff	printf@flag,??_printf
  6806  002B62  0E03               	movlw	3
  6807  002B64  0100               	movlb	0	; () banked
  6808  002B66  1794               	andwf	??_printf& (0+255),f,b
  6809  002B68  B4D8               	btfsc	status,2,c
  6810  002B6A  D004               	goto	l4466
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;doprnt.c: 1346: width--;
  6814  002B6C  0100               	movlb	0	; () banked
  6815  002B6E  079F               	decf	printf@width& (0+255),f,b
  6816  002B70  A0D8               	btfss	status,0,c
  6817  002B72  07A0               	decf	(printf@width+1)& (0+255),f,b
  6818  002B74                     l4466:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;doprnt.c: 1381: if(width > c)
  6822  002B74  0E80               	movlw	128
  6823  002B76  0100               	movlb	0	; () banked
  6824  002B78  BFA1               	btfsc	printf@c& (0+255),7,b
  6825  002B7A  0E7F               	movlw	127
  6826  002B7C  0100               	movlb	0	; () banked
  6827  002B7E  6F94               	movwf	??_printf& (0+255),b
  6828  002B80  0100               	movlb	0	; () banked
  6829  002B82  519F               	movf	printf@width& (0+255),w,b
  6830  002B84  0100               	movlb	0	; () banked
  6831  002B86  5DA1               	subwf	printf@c& (0+255),w,b
  6832  002B88  0100               	movlb	0	; () banked
  6833  002B8A  51A0               	movf	(printf@width+1)& (0+255),w,b
  6834  002B8C  0A80               	xorlw	128
  6835  002B8E  0100               	movlb	0	; () banked
  6836  002B90  5994               	subwfb	??_printf& (0+255),w,b
  6837  002B92  B0D8               	btfsc	status,0,c
  6838  002B94  D00B               	goto	l4470
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;doprnt.c: 1382: width -= c;
  6842  002B96  0100               	movlb	0	; () banked
  6843  002B98  51A1               	movf	printf@c& (0+255),w,b
  6844  002B9A  0100               	movlb	0	; () banked
  6845  002B9C  5F9F               	subwf	printf@width& (0+255),f,b
  6846  002B9E  0E00               	movlw	0
  6847  002BA0  0100               	movlb	0	; () banked
  6848  002BA2  BFA1               	btfsc	printf@c& (0+255),7,b
  6849  002BA4  0EFF               	movlw	255
  6850  002BA6  0100               	movlb	0	; () banked
  6851  002BA8  5BA0               	subwfb	(printf@width+1)& (0+255),f,b
  6852  002BAA  D005               	goto	l4472
  6853  002BAC                     l4470:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;doprnt.c: 1383: else
  6857                           ;doprnt.c: 1384: width = 0;
  6858  002BAC  0E00               	movlw	0
  6859  002BAE  0100               	movlb	0	; () banked
  6860  002BB0  6FA0               	movwf	(printf@width+1)& (0+255),b
  6861  002BB2  0E00               	movlw	0
  6862  002BB4  6F9F               	movwf	printf@width& (0+255),b
  6863  002BB6                     l4472:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;doprnt.c: 1387: if(flag & 0x04) {
  6867  002BB6  0100               	movlb	0	; () banked
  6868  002BB8  A59E               	btfss	printf@flag& (0+255),2,b
  6869  002BBA  D018               	goto	l4484
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;doprnt.c: 1392: if(flag & 0x03)
  6873  002BBC  C09E  F094         	movff	printf@flag,??_printf
  6874  002BC0  0E03               	movlw	3
  6875  002BC2  0100               	movlb	0	; () banked
  6876  002BC4  1794               	andwf	??_printf& (0+255),f,b
  6877  002BC6  B4D8               	btfsc	status,2,c
  6878  002BC8  D003               	goto	l4478
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;doprnt.c: 1393: (putch('-') );
  6882  002BCA  0E2D               	movlw	45
  6883  002BCC  EC28  F022         	call	_putch
  6884  002BD0                     l4478:
  6885                           
  6886                           ;doprnt.c: 1415: if(width)
  6887  002BD0  0100               	movlb	0	; () banked
  6888  002BD2  519F               	movf	printf@width& (0+255),w,b
  6889  002BD4  0100               	movlb	0	; () banked
  6890  002BD6  11A0               	iorwf	(printf@width+1)& (0+255),w,b
  6891  002BD8  B4D8               	btfsc	status,2,c
  6892  002BDA  D025               	goto	l4494
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;doprnt.c: 1417: (putch('0') );
  6896                           
  6897                           ; BSR set to: 0
  6898                           
  6899                           ;doprnt.c: 1416: do
  6900  002BDC  0E30               	movlw	48
  6901  002BDE  EC28  F022         	call	_putch
  6902                           
  6903                           ;doprnt.c: 1418: while(--width);
  6904  002BE2  0100               	movlb	0	; () banked
  6905  002BE4  079F               	decf	printf@width& (0+255),f,b
  6906  002BE6  A0D8               	btfss	status,0,c
  6907  002BE8  07A0               	decf	(printf@width+1)& (0+255),f,b
  6908  002BEA  D7F2               	goto	l4478
  6909  002BEC                     l4484:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;doprnt.c: 1422: {
  6913                           ;doprnt.c: 1424: if(width
  6914                           ;doprnt.c: 1428: )
  6915  002BEC  0100               	movlb	0	; () banked
  6916  002BEE  519F               	movf	printf@width& (0+255),w,b
  6917  002BF0  0100               	movlb	0	; () banked
  6918  002BF2  11A0               	iorwf	(printf@width+1)& (0+255),w,b
  6919  002BF4  B4D8               	btfsc	status,2,c
  6920  002BF6  D00D               	goto	l4490
  6921  002BF8                     l4486:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;doprnt.c: 1430: (putch(' ') );
  6925  002BF8  0E20               	movlw	32
  6926  002BFA  EC28  F022         	call	_putch
  6927                           
  6928                           ;doprnt.c: 1431: while(--width);
  6929  002BFE  0100               	movlb	0	; () banked
  6930  002C00  079F               	decf	printf@width& (0+255),f,b
  6931  002C02  A0D8               	btfss	status,0,c
  6932  002C04  07A0               	decf	(printf@width+1)& (0+255),f,b
  6933  002C06  0100               	movlb	0	; () banked
  6934  002C08  519F               	movf	printf@width& (0+255),w,b
  6935  002C0A  0100               	movlb	0	; () banked
  6936  002C0C  11A0               	iorwf	(printf@width+1)& (0+255),w,b
  6937  002C0E  A4D8               	btfss	status,2,c
  6938  002C10  D7F3               	goto	l4486
  6939  002C12                     l4490:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;doprnt.c: 1438: if(flag & 0x03)
  6943  002C12  C09E  F094         	movff	printf@flag,??_printf
  6944  002C16  0E03               	movlw	3
  6945  002C18  0100               	movlb	0	; () banked
  6946  002C1A  1794               	andwf	??_printf& (0+255),f,b
  6947  002C1C  B4D8               	btfsc	status,2,c
  6948  002C1E  D003               	goto	l4494
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;doprnt.c: 1439: (putch('-') );
  6952  002C20  0E2D               	movlw	45
  6953  002C22  EC28  F022         	call	_putch
  6954  002C26                     l4494:
  6955                           
  6956                           ;doprnt.c: 1469: }
  6957                           ;doprnt.c: 1472: prec = c;
  6958  002C26  C0A1  F09B         	movff	printf@c,printf@prec
  6959                           
  6960                           ;doprnt.c: 1474: while(prec--) {
  6961  002C2A  D05A               	goto	l4508
  6962  002C2C                     l4496:
  6963                           
  6964                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6965  002C2C  0100               	movlb	0	; () banked
  6966  002C2E  519B               	movf	printf@prec& (0+255),w,b
  6967  002C30  0D02               	mullw	2
  6968  002C32  0E12               	movlw	low _dpowers
  6969  002C34  24F3               	addwf	prodl,w,c
  6970  002C36  6EF6               	movwf	tblptrl,c
  6971  002C38  0E10               	movlw	high _dpowers
  6972  002C3A  20F4               	addwfc	prodh,w,c
  6973  002C3C  6EF7               	movwf	tblptrh,c
  6974  002C3E                     	if	0	;There are less than 3 active tblptr bytes
  6975  002C3E                     	endif
  6976  002C3E  0009               	tblrd		*+
  6977  002C40  CFF5 F082          	movff	tablat,___lwdiv@divisor
  6978  002C44  000A               	tblrd		*-
  6979  002C46  CFF5 F083          	movff	tablat,___lwdiv@divisor+1
  6980  002C4A  C09C  F080         	movff	printf@val,___lwdiv@dividend
  6981  002C4E  C09D  F081         	movff	printf@val+1,___lwdiv@dividend+1
  6982  002C52  ECE4  F01E         	call	___lwdiv	;wreg free
  6983  002C56  C080  F087         	movff	?___lwdiv,___lwmod@dividend
  6984  002C5A  C081  F088         	movff	?___lwdiv+1,___lwmod@dividend+1
  6985  002C5E  0E00               	movlw	0
  6986  002C60  0100               	movlb	0	; () banked
  6987  002C62  6F8A               	movwf	(___lwmod@divisor+1)& (0+255),b
  6988  002C64  0E0A               	movlw	10
  6989  002C66  6F89               	movwf	___lwmod@divisor& (0+255),b
  6990  002C68  EC32  F020         	call	___lwmod	;wreg free
  6991  002C6C  0100               	movlb	0	; () banked
  6992  002C6E  5187               	movf	?___lwmod& (0+255),w,b
  6993  002C70  0F30               	addlw	48
  6994  002C72  0100               	movlb	0	; () banked
  6995  002C74  6FA1               	movwf	printf@c& (0+255),b
  6996                           
  6997                           ;doprnt.c: 1491: break;
  6998  002C76  D030               	goto	l4506
  6999  002C78                     l4498:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;doprnt.c: 1499: {
  7003                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7004  002C78  C09C  F080         	movff	printf@val,___lwdiv@dividend
  7005  002C7C  C09D  F081         	movff	printf@val+1,___lwdiv@dividend+1
  7006  002C80  0100               	movlb	0	; () banked
  7007  002C82  519B               	movf	printf@prec& (0+255),w,b
  7008  002C84  0D02               	mullw	2
  7009  002C86  0E1C               	movlw	low _hexpowers
  7010  002C88  24F3               	addwf	prodl,w,c
  7011  002C8A  6EF6               	movwf	tblptrl,c
  7012  002C8C  0E10               	movlw	high _hexpowers
  7013  002C8E  20F4               	addwfc	prodh,w,c
  7014  002C90  6EF7               	movwf	tblptrh,c
  7015  002C92                     	if	0	;There are less than 3 active tblptr bytes
  7016  002C92                     	endif
  7017  002C92  0009               	tblrd		*+
  7018  002C94  CFF5 F082          	movff	tablat,___lwdiv@divisor
  7019  002C98  000A               	tblrd		*-
  7020  002C9A  CFF5 F083          	movff	tablat,___lwdiv@divisor+1
  7021  002C9E  ECE4  F01E         	call	___lwdiv	;wreg free
  7022  002CA2  0100               	movlb	0	; () banked
  7023  002CA4  5180               	movf	?___lwdiv& (0+255),w,b
  7024  002CA6  0B0F               	andlw	15
  7025  002CA8  0100               	movlb	0	; () banked
  7026  002CAA  6F98               	movwf	printf@idx& (0+255),b
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  7030  002CAC  0100               	movlb	0	; () banked
  7031  002CAE  5198               	movf	printf@idx& (0+255),w,b
  7032  002CB0  0D01               	mullw	1
  7033  002CB2  0E2B               	movlw	low STR_25
  7034  002CB4  24F3               	addwf	prodl,w,c
  7035  002CB6  6EF6               	movwf	tblptrl,c
  7036  002CB8  0E10               	movlw	high STR_25
  7037  002CBA  20F4               	addwfc	prodh,w,c
  7038  002CBC  6EF7               	movwf	tblptrh,c
  7039  002CBE                     	if	0	;There are less than 3 active tblptr bytes
  7040  002CBE                     	endif
  7041  002CBE  0008               	tblrd		*
  7042  002CC0  CFF5 F0A1          	movff	tablat,printf@c
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;doprnt.c: 1523: }
  7046                           
  7047                           ;doprnt.c: 1508: }
  7048                           ;doprnt.c: 1510: break;
  7049  002CC4  D009               	goto	l4506
  7050  002CC6                     l4504:
  7051  002CC6  0100               	movlb	0	; () banked
  7052  002CC8  519E               	movf	printf@flag& (0+255),w,b
  7053  002CCA  0B80               	andlw	128
  7054                           
  7055                           ; Switch size 1, requested type "space"
  7056                           ; Number of cases is 2, Range of values is 0 to 128
  7057                           ; switch strategies available:
  7058                           ; Name         Instructions Cycles
  7059                           ; simple_byte            7     4 (average)
  7060                           ;	Chosen strategy is simple_byte
  7061  002CCC  0A00               	xorlw	0	; case 0
  7062  002CCE  B4D8               	btfsc	status,2,c
  7063  002CD0  D7AD               	goto	l4496
  7064  002CD2  0A80               	xorlw	128	; case 128
  7065  002CD4  B4D8               	btfsc	status,2,c
  7066  002CD6  D7D0               	goto	l4498
  7067  002CD8                     l4506:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;doprnt.c: 1524: (putch(c) );
  7071  002CD8  0100               	movlb	0	; () banked
  7072  002CDA  51A1               	movf	printf@c& (0+255),w,b
  7073  002CDC  EC28  F022         	call	_putch
  7074  002CE0                     l4508:
  7075  002CE0  0100               	movlb	0	; () banked
  7076  002CE2  079B               	decf	printf@prec& (0+255),f,b
  7077  002CE4  0100               	movlb	0	; () banked
  7078  002CE6  299B               	incf	printf@prec& (0+255),w,b
  7079  002CE8  A4D8               	btfss	status,2,c
  7080  002CEA  D7ED               	goto	l4504
  7081  002CEC                     l4510:
  7082  002CEC  C08C  FFF6         	movff	printf@f,tblptrl
  7083  002CF0  C08D  FFF7         	movff	printf@f+1,tblptrh
  7084  002CF4  0100               	movlb	0	; () banked
  7085  002CF6  4B8C               	infsnz	printf@f& (0+255),f,b
  7086  002CF8  2B8D               	incf	(printf@f+1)& (0+255),f,b
  7087  002CFA                     	if	0	;tblptru may be non-zero
  7088  002CFA                     	endif
  7089  002CFA                     	if	0	;tblptru may be non-zero
  7090  002CFA                     	endif
  7091  002CFA  0008               	tblrd		*
  7092  002CFC  CFF5 F0A1          	movff	tablat,printf@c
  7093  002D00  0100               	movlb	0	; () banked
  7094  002D02  51A1               	movf	printf@c& (0+255),w,b
  7095  002D04  B4D8               	btfsc	status,2,c
  7096  002D06  0012               	return	
  7097  002D08  D62D               	goto	l4384
  7098  002D0A                     __end_of_printf:
  7099                           	opt stack 0
  7100                           tblptru	equ	0xFF8
  7101                           tblptrh	equ	0xFF7
  7102                           tblptrl	equ	0xFF6
  7103                           tablat	equ	0xFF5
  7104                           prodh	equ	0xFF4
  7105                           prodl	equ	0xFF3
  7106                           intcon	equ	0xFF2
  7107                           intcon2	equ	0xFF1
  7108                           postinc0	equ	0xFEE
  7109                           wreg	equ	0xFE8
  7110                           indf2	equ	0xFDF
  7111                           postinc2	equ	0xFDE
  7112                           postdec2	equ	0xFDD
  7113                           fsr2h	equ	0xFDA
  7114                           fsr2l	equ	0xFD9
  7115                           status	equ	0xFD8
  7116                           
  7117 ;; *************** function _putch *****************
  7118 ;; Defined at:
  7119 ;;		line 30 in file "lcd.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  data            1    wreg     unsigned char 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  data            1    2[BANK0 ] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;Total ram usage:        1 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    7
  7140 ;; This function calls:
  7141 ;;		_lcdNibble
  7142 ;; This function is called by:
  7143 ;;		_printf
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text14
  7148  004450                     __ptext14:
  7149                           	opt stack 0
  7150  004450                     _putch:
  7151                           	opt stack 22
  7152                           
  7153                           ;incstack = 0
  7154                           ;putch@data stored from wreg
  7155  004450  0100               	movlb	0	; () banked
  7156  004452  6F82               	movwf	putch@data& (0+255),b
  7157                           
  7158                           ;lcd.c: 31: LATDbits.LATD2 = 1;
  7159  004454  848C               	bsf	3980,2,c	;volatile
  7160                           
  7161                           ;lcd.c: 32: lcdNibble(data);
  7162  004456  0100               	movlb	0	; () banked
  7163  004458  5182               	movf	putch@data& (0+255),w,b
  7164  00445A  ECCB  F01F         	call	_lcdNibble
  7165  00445E  0012               	return		;funcret
  7166  004460                     __end_of_putch:
  7167                           	opt stack 0
  7168                           tblptru	equ	0xFF8
  7169                           tblptrh	equ	0xFF7
  7170                           tblptrl	equ	0xFF6
  7171                           tablat	equ	0xFF5
  7172                           prodh	equ	0xFF4
  7173                           prodl	equ	0xFF3
  7174                           intcon	equ	0xFF2
  7175                           intcon2	equ	0xFF1
  7176                           postinc0	equ	0xFEE
  7177                           wreg	equ	0xFE8
  7178                           indf2	equ	0xFDF
  7179                           postinc2	equ	0xFDE
  7180                           postdec2	equ	0xFDD
  7181                           fsr2h	equ	0xFDA
  7182                           fsr2l	equ	0xFD9
  7183                           status	equ	0xFD8
  7184                           
  7185 ;; *************** function _isdigit *****************
  7186 ;; Defined at:
  7187 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/isdigit.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  c               1    wreg     unsigned char 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  c               1    2[BANK0 ] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;		None               void
  7194 ;; Registers used:
  7195 ;;		wreg, status,2, status,0
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;Total ram usage:        3 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    6
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_printf
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text15
  7216  0043A2                     __ptext15:
  7217                           	opt stack 0
  7218  0043A2                     _isdigit:
  7219                           	opt stack 23
  7220                           
  7221                           ;incstack = 0
  7222                           ;isdigit@c stored from wreg
  7223  0043A2  0100               	movlb	0	; () banked
  7224  0043A4  6F82               	movwf	isdigit@c& (0+255),b
  7225  0043A6  0E00               	movlw	0
  7226  0043A8  0100               	movlb	0	; () banked
  7227  0043AA  6F81               	movwf	_isdigit$1184& (0+255),b
  7228                           
  7229                           ; BSR set to: 0
  7230  0043AC  0E3A               	movlw	58
  7231  0043AE  0100               	movlb	0	; () banked
  7232  0043B0  6182               	cpfslt	isdigit@c& (0+255),b
  7233  0043B2  D007               	goto	l4034
  7234                           
  7235                           ; BSR set to: 0
  7236  0043B4  0E2F               	movlw	47
  7237  0043B6  0100               	movlb	0	; () banked
  7238  0043B8  6582               	cpfsgt	isdigit@c& (0+255),b
  7239  0043BA  D003               	goto	l4034
  7240                           
  7241                           ; BSR set to: 0
  7242  0043BC  0E01               	movlw	1
  7243  0043BE  0100               	movlb	0	; () banked
  7244  0043C0  6F81               	movwf	_isdigit$1184& (0+255),b
  7245  0043C2                     l4034:
  7246                           
  7247                           ; BSR set to: 0
  7248  0043C2  C081  F080         	movff	_isdigit$1184,??_isdigit
  7249  0043C6  0100               	movlb	0	; () banked
  7250  0043C8  3180               	rrcf	??_isdigit& (0+255),w,b
  7251  0043CA  0012               	return	
  7252  0043CC                     __end_of_isdigit:
  7253                           	opt stack 0
  7254                           tblptru	equ	0xFF8
  7255                           tblptrh	equ	0xFF7
  7256                           tblptrl	equ	0xFF6
  7257                           tablat	equ	0xFF5
  7258                           prodh	equ	0xFF4
  7259                           prodl	equ	0xFF3
  7260                           intcon	equ	0xFF2
  7261                           intcon2	equ	0xFF1
  7262                           postinc0	equ	0xFEE
  7263                           wreg	equ	0xFE8
  7264                           indf2	equ	0xFDF
  7265                           postinc2	equ	0xFDE
  7266                           postdec2	equ	0xFDD
  7267                           fsr2h	equ	0xFDA
  7268                           fsr2l	equ	0xFD9
  7269                           status	equ	0xFD8
  7270                           
  7271 ;; *************** function ___wmul *****************
  7272 ;; Defined at:
  7273 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/Umul16.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7276 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  product         2    4[BANK0 ] unsigned int 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  2    0[BANK0 ] unsigned int 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0, prodl, prodh
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7288 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;Total ram usage:        6 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    6
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_printf
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text16
  7303  0042B6                     __ptext16:
  7304                           	opt stack 0
  7305  0042B6                     ___wmul:
  7306                           	opt stack 23
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;incstack = 0
  7310  0042B6  0100               	movlb	0	; () banked
  7311  0042B8  5180               	movf	___wmul@multiplier& (0+255),w,b
  7312  0042BA  0100               	movlb	0	; () banked
  7313  0042BC  0382               	mulwf	___wmul@multiplicand& (0+255),b
  7314  0042BE  CFF3 F084          	movff	prodl,___wmul@product
  7315  0042C2  CFF4 F085          	movff	prodh,___wmul@product+1
  7316  0042C6  0100               	movlb	0	; () banked
  7317  0042C8  5180               	movf	___wmul@multiplier& (0+255),w,b
  7318  0042CA  0100               	movlb	0	; () banked
  7319  0042CC  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7320  0042CE  50F3               	movf	prodl,w,c
  7321  0042D0  0100               	movlb	0	; () banked
  7322  0042D2  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  7323  0042D4  0100               	movlb	0	; () banked
  7324  0042D6  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7325  0042D8  0100               	movlb	0	; () banked
  7326  0042DA  0382               	mulwf	___wmul@multiplicand& (0+255),b
  7327  0042DC  50F3               	movf	prodl,w,c
  7328  0042DE  0100               	movlb	0	; () banked
  7329  0042E0  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  7330                           
  7331                           ; BSR set to: 0
  7332  0042E2  C084  F080         	movff	___wmul@product,?___wmul
  7333  0042E6  C085  F081         	movff	___wmul@product+1,?___wmul+1
  7334  0042EA  0012               	return	
  7335  0042EC                     __end_of___wmul:
  7336                           	opt stack 0
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           intcon2	equ	0xFF1
  7345                           postinc0	equ	0xFEE
  7346                           wreg	equ	0xFE8
  7347                           indf2	equ	0xFDF
  7348                           postinc2	equ	0xFDE
  7349                           postdec2	equ	0xFDD
  7350                           fsr2h	equ	0xFDA
  7351                           fsr2l	equ	0xFD9
  7352                           status	equ	0xFD8
  7353                           
  7354 ;; *************** function ___lwmod *****************
  7355 ;; Defined at:
  7356 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lwmod.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  dividend        2    7[BANK0 ] unsigned int 
  7359 ;;  divisor         2    9[BANK0 ] unsigned int 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  counter         1   11[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  2    7[BANK0 ] unsigned int 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7371 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;Total ram usage:        5 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    6
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_printf
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text17
  7386  004064                     __ptext17:
  7387                           	opt stack 0
  7388  004064                     ___lwmod:
  7389                           	opt stack 23
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;incstack = 0
  7393  004064  0100               	movlb	0	; () banked
  7394  004066  5189               	movf	___lwmod@divisor& (0+255),w,b
  7395  004068  0100               	movlb	0	; () banked
  7396  00406A  118A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7397  00406C  B4D8               	btfsc	status,2,c
  7398  00406E  D026               	goto	l1235
  7399                           
  7400                           ; BSR set to: 0
  7401  004070  0E01               	movlw	1
  7402  004072  0100               	movlb	0	; () banked
  7403  004074  6F8B               	movwf	___lwmod@counter& (0+255),b
  7404  004076  D006               	goto	l4254
  7405  004078                     l4252:
  7406                           
  7407                           ; BSR set to: 0
  7408  004078  0100               	movlb	0	; () banked
  7409  00407A  90D8               	bcf	status,0,c
  7410  00407C  3789               	rlcf	___lwmod@divisor& (0+255),f,b
  7411  00407E  378A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7412  004080  0100               	movlb	0	; () banked
  7413  004082  2B8B               	incf	___lwmod@counter& (0+255),f,b
  7414  004084                     l4254:
  7415                           
  7416                           ; BSR set to: 0
  7417  004084  0100               	movlb	0	; () banked
  7418  004086  AF8A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7419  004088  D7F7               	goto	l4252
  7420  00408A                     l4256:
  7421                           
  7422                           ; BSR set to: 0
  7423  00408A  0100               	movlb	0	; () banked
  7424  00408C  5189               	movf	___lwmod@divisor& (0+255),w,b
  7425  00408E  0100               	movlb	0	; () banked
  7426  004090  5D87               	subwf	___lwmod@dividend& (0+255),w,b
  7427  004092  0100               	movlb	0	; () banked
  7428  004094  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7429  004096  0100               	movlb	0	; () banked
  7430  004098  5988               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7431  00409A  A0D8               	btfss	status,0,c
  7432  00409C  D008               	goto	l4260
  7433                           
  7434                           ; BSR set to: 0
  7435  00409E  0100               	movlb	0	; () banked
  7436  0040A0  5189               	movf	___lwmod@divisor& (0+255),w,b
  7437  0040A2  0100               	movlb	0	; () banked
  7438  0040A4  5F87               	subwf	___lwmod@dividend& (0+255),f,b
  7439  0040A6  0100               	movlb	0	; () banked
  7440  0040A8  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7441  0040AA  0100               	movlb	0	; () banked
  7442  0040AC  5B88               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7443  0040AE                     l4260:
  7444                           
  7445                           ; BSR set to: 0
  7446  0040AE  0100               	movlb	0	; () banked
  7447  0040B0  90D8               	bcf	status,0,c
  7448  0040B2  338A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7449  0040B4  3389               	rrcf	___lwmod@divisor& (0+255),f,b
  7450                           
  7451                           ; BSR set to: 0
  7452  0040B6  0100               	movlb	0	; () banked
  7453  0040B8  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  7454  0040BA  D7E7               	goto	l4256
  7455  0040BC                     l1235:
  7456                           
  7457                           ; BSR set to: 0
  7458  0040BC  C087  F087         	movff	___lwmod@dividend,?___lwmod
  7459  0040C0  C088  F088         	movff	___lwmod@dividend+1,?___lwmod+1
  7460                           
  7461                           ; BSR set to: 0
  7462  0040C4  0012               	return		;funcret
  7463  0040C6                     __end_of___lwmod:
  7464                           	opt stack 0
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           intcon	equ	0xFF2
  7472                           intcon2	equ	0xFF1
  7473                           postinc0	equ	0xFEE
  7474                           wreg	equ	0xFE8
  7475                           indf2	equ	0xFDF
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           fsr2h	equ	0xFDA
  7479                           fsr2l	equ	0xFD9
  7480                           status	equ	0xFD8
  7481                           
  7482 ;; *************** function ___lwdiv *****************
  7483 ;; Defined at:
  7484 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lwdiv.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  dividend        2    0[BANK0 ] unsigned int 
  7487 ;;  divisor         2    2[BANK0 ] unsigned int 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  quotient        2    4[BANK0 ] unsigned int 
  7490 ;;  counter         1    6[BANK0 ] unsigned char 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  2    0[BANK0 ] unsigned int 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;Total ram usage:        7 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    6
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_printf
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text18
  7515  003DC8                     __ptext18:
  7516                           	opt stack 0
  7517  003DC8                     ___lwdiv:
  7518                           	opt stack 23
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;incstack = 0
  7522  003DC8  0E00               	movlw	0
  7523  003DCA  0100               	movlb	0	; () banked
  7524  003DCC  6F85               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7525  003DCE  0E00               	movlw	0
  7526  003DD0  6F84               	movwf	___lwdiv@quotient& (0+255),b
  7527                           
  7528                           ; BSR set to: 0
  7529  003DD2  0100               	movlb	0	; () banked
  7530  003DD4  5182               	movf	___lwdiv@divisor& (0+255),w,b
  7531  003DD6  0100               	movlb	0	; () banked
  7532  003DD8  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7533  003DDA  B4D8               	btfsc	status,2,c
  7534  003DDC  D02C               	goto	l1225
  7535                           
  7536                           ; BSR set to: 0
  7537  003DDE  0E01               	movlw	1
  7538  003DE0  0100               	movlb	0	; () banked
  7539  003DE2  6F86               	movwf	___lwdiv@counter& (0+255),b
  7540  003DE4  D006               	goto	l4234
  7541  003DE6                     l4232:
  7542                           
  7543                           ; BSR set to: 0
  7544  003DE6  0100               	movlb	0	; () banked
  7545  003DE8  90D8               	bcf	status,0,c
  7546  003DEA  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  7547  003DEC  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7548  003DEE  0100               	movlb	0	; () banked
  7549  003DF0  2B86               	incf	___lwdiv@counter& (0+255),f,b
  7550  003DF2                     l4234:
  7551                           
  7552                           ; BSR set to: 0
  7553  003DF2  0100               	movlb	0	; () banked
  7554  003DF4  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7555  003DF6  D7F7               	goto	l4232
  7556  003DF8                     l4236:
  7557                           
  7558                           ; BSR set to: 0
  7559  003DF8  0100               	movlb	0	; () banked
  7560  003DFA  90D8               	bcf	status,0,c
  7561  003DFC  3784               	rlcf	___lwdiv@quotient& (0+255),f,b
  7562  003DFE  3785               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7563                           
  7564                           ; BSR set to: 0
  7565  003E00  0100               	movlb	0	; () banked
  7566  003E02  5182               	movf	___lwdiv@divisor& (0+255),w,b
  7567  003E04  0100               	movlb	0	; () banked
  7568  003E06  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  7569  003E08  0100               	movlb	0	; () banked
  7570  003E0A  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7571  003E0C  0100               	movlb	0	; () banked
  7572  003E0E  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7573  003E10  A0D8               	btfss	status,0,c
  7574  003E12  D00A               	goto	l4244
  7575                           
  7576                           ; BSR set to: 0
  7577  003E14  0100               	movlb	0	; () banked
  7578  003E16  5182               	movf	___lwdiv@divisor& (0+255),w,b
  7579  003E18  0100               	movlb	0	; () banked
  7580  003E1A  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  7581  003E1C  0100               	movlb	0	; () banked
  7582  003E1E  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7583  003E20  0100               	movlb	0	; () banked
  7584  003E22  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7585                           
  7586                           ; BSR set to: 0
  7587  003E24  0100               	movlb	0	; () banked
  7588  003E26  8184               	bsf	___lwdiv@quotient& (0+255),0,b
  7589  003E28                     l4244:
  7590                           
  7591                           ; BSR set to: 0
  7592  003E28  0100               	movlb	0	; () banked
  7593  003E2A  90D8               	bcf	status,0,c
  7594  003E2C  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7595  003E2E  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  7596                           
  7597                           ; BSR set to: 0
  7598  003E30  0100               	movlb	0	; () banked
  7599  003E32  2F86               	decfsz	___lwdiv@counter& (0+255),f,b
  7600  003E34  D7E1               	goto	l4236
  7601  003E36                     l1225:
  7602                           
  7603                           ; BSR set to: 0
  7604  003E36  C084  F080         	movff	___lwdiv@quotient,?___lwdiv
  7605  003E3A  C085  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7606                           
  7607                           ; BSR set to: 0
  7608  003E3E  0012               	return		;funcret
  7609  003E40                     __end_of___lwdiv:
  7610                           	opt stack 0
  7611                           tblptru	equ	0xFF8
  7612                           tblptrh	equ	0xFF7
  7613                           tblptrl	equ	0xFF6
  7614                           tablat	equ	0xFF5
  7615                           prodh	equ	0xFF4
  7616                           prodl	equ	0xFF3
  7617                           intcon	equ	0xFF2
  7618                           intcon2	equ	0xFF1
  7619                           postinc0	equ	0xFEE
  7620                           wreg	equ	0xFE8
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           
  7628 ;; *************** function _initLCD *****************
  7629 ;; Defined at:
  7630 ;;		line 14 in file "lcd.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;		None
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;Total ram usage:        1 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    8
  7651 ;; This function calls:
  7652 ;;		_lcdInst
  7653 ;; This function is called by:
  7654 ;;		_main
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text19
  7659  00422E                     __ptext19:
  7660                           	opt stack 0
  7661  00422E                     _initLCD:
  7662                           	opt stack 22
  7663                           
  7664                           ;lcd.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;incstack = 0
  7668  00422E  0E27               	movlw	39
  7669  004230  0100               	movlb	0	; () banked
  7670  004232  6F83               	movwf	??_initLCD& (0+255),b
  7671  004234  0EF5               	movlw	245
  7672  004236                     u6297:
  7673  004236  2EE8               	decfsz	wreg,f,c
  7674  004238  D7FE               	bra	u6297
  7675  00423A  2F83               	decfsz	??_initLCD& (0+255),f,b
  7676  00423C  D7FC               	bra	u6297
  7677                           
  7678                           ;lcd.c: 16: lcdInst(0b00110011);
  7679  00423E  0E33               	movlw	51
  7680  004240  EC30  F022         	call	_lcdInst
  7681                           
  7682                           ;lcd.c: 17: lcdInst(0b00110010);
  7683  004244  0E32               	movlw	50
  7684  004246  EC30  F022         	call	_lcdInst
  7685                           
  7686                           ;lcd.c: 18: lcdInst(0b00101000);
  7687  00424A  0E28               	movlw	40
  7688  00424C  EC30  F022         	call	_lcdInst
  7689                           
  7690                           ;lcd.c: 19: lcdInst(0b00001111);
  7691  004250  0E0F               	movlw	15
  7692  004252  EC30  F022         	call	_lcdInst
  7693                           
  7694                           ;lcd.c: 20: lcdInst(0b00000110);
  7695  004256  0E06               	movlw	6
  7696  004258  EC30  F022         	call	_lcdInst
  7697                           
  7698                           ;lcd.c: 21: lcdInst(0b00000001);
  7699  00425C  0E01               	movlw	1
  7700  00425E  EC30  F022         	call	_lcdInst
  7701                           
  7702                           ;lcd.c: 22: _delay((unsigned long)((15)*(8000000/4000.0)));
  7703  004262  0E27               	movlw	39
  7704  004264  0100               	movlb	0	; () banked
  7705  004266  6F83               	movwf	??_initLCD& (0+255),b
  7706  004268  0EF5               	movlw	245
  7707  00426A                     u6307:
  7708  00426A  2EE8               	decfsz	wreg,f,c
  7709  00426C  D7FE               	bra	u6307
  7710  00426E  2F83               	decfsz	??_initLCD& (0+255),f,b
  7711  004270  D7FC               	bra	u6307
  7712  004272  0012               	return		;funcret
  7713  004274                     __end_of_initLCD:
  7714                           	opt stack 0
  7715                           tblptru	equ	0xFF8
  7716                           tblptrh	equ	0xFF7
  7717                           tblptrl	equ	0xFF6
  7718                           tablat	equ	0xFF5
  7719                           prodh	equ	0xFF4
  7720                           prodl	equ	0xFF3
  7721                           intcon	equ	0xFF2
  7722                           intcon2	equ	0xFF1
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           indf2	equ	0xFDF
  7726                           postinc2	equ	0xFDE
  7727                           postdec2	equ	0xFDD
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8
  7731                           
  7732 ;; *************** function _lcdInst *****************
  7733 ;; Defined at:
  7734 ;;		line 25 in file "lcd.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  data            1    wreg     unsigned char 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  data            1    2[BANK0 ] unsigned char 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, status,0, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;Total ram usage:        1 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    7
  7755 ;; This function calls:
  7756 ;;		_lcdNibble
  7757 ;; This function is called by:
  7758 ;;		_main
  7759 ;;		_initLCD
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text20
  7764  004460                     __ptext20:
  7765                           	opt stack 0
  7766  004460                     _lcdInst:
  7767                           	opt stack 23
  7768                           
  7769                           ;incstack = 0
  7770                           ;lcdInst@data stored from wreg
  7771  004460  0100               	movlb	0	; () banked
  7772  004462  6F82               	movwf	lcdInst@data& (0+255),b
  7773                           
  7774                           ;lcd.c: 26: LATDbits.LATD2 = 0;
  7775  004464  948C               	bcf	3980,2,c	;volatile
  7776                           
  7777                           ;lcd.c: 27: lcdNibble(data);
  7778  004466  0100               	movlb	0	; () banked
  7779  004468  5182               	movf	lcdInst@data& (0+255),w,b
  7780  00446A  ECCB  F01F         	call	_lcdNibble
  7781  00446E  0012               	return		;funcret
  7782  004470                     __end_of_lcdInst:
  7783                           	opt stack 0
  7784                           tblptru	equ	0xFF8
  7785                           tblptrh	equ	0xFF7
  7786                           tblptrl	equ	0xFF6
  7787                           tablat	equ	0xFF5
  7788                           prodh	equ	0xFF4
  7789                           prodl	equ	0xFF3
  7790                           intcon	equ	0xFF2
  7791                           intcon2	equ	0xFF1
  7792                           postinc0	equ	0xFEE
  7793                           wreg	equ	0xFE8
  7794                           indf2	equ	0xFDF
  7795                           postinc2	equ	0xFDE
  7796                           postdec2	equ	0xFDD
  7797                           fsr2h	equ	0xFDA
  7798                           fsr2l	equ	0xFD9
  7799                           status	equ	0xFD8
  7800                           
  7801 ;; *************** function _lcdNibble *****************
  7802 ;; Defined at:
  7803 ;;		line 35 in file "lcd.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  data            1    wreg     unsigned char 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  data            1    1[BANK0 ] unsigned char 
  7808 ;;  temp            1    0[BANK0 ] unsigned char 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;Total ram usage:        2 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    6
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_lcdInst
  7829 ;;		_putch
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text21
  7834  003F96                     __ptext21:
  7835                           	opt stack 0
  7836  003F96                     _lcdNibble:
  7837                           	opt stack 22
  7838                           
  7839                           ;incstack = 0
  7840                           ;lcdNibble@data stored from wreg
  7841  003F96  0100               	movlb	0	; () banked
  7842  003F98  6F81               	movwf	lcdNibble@data& (0+255),b
  7843                           
  7844                           ;lcd.c: 37: char temp = data & 0xF0;
  7845  003F9A  0100               	movlb	0	; () banked
  7846  003F9C  5181               	movf	lcdNibble@data& (0+255),w,b
  7847  003F9E  0BF0               	andlw	240
  7848  003FA0  0100               	movlb	0	; () banked
  7849  003FA2  6F80               	movwf	lcdNibble@temp& (0+255),b
  7850                           
  7851                           ;lcd.c: 38: LATD = LATD & 0x0F;
  7852  003FA4  508C               	movf	3980,w,c	;volatile
  7853  003FA6  0B0F               	andlw	15
  7854  003FA8  6E8C               	movwf	3980,c	;volatile
  7855                           
  7856                           ;lcd.c: 39: LATD = temp | LATD;
  7857  003FAA  0100               	movlb	0	; () banked
  7858  003FAC  5180               	movf	lcdNibble@temp& (0+255),w,b
  7859  003FAE  108C               	iorwf	3980,w,c	;volatile
  7860  003FB0  6E8C               	movwf	3980,c	;volatile
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;lcd.c: 41: LATDbits.LATD3 = 0;
  7864  003FB2  968C               	bcf	3980,3,c	;volatile
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;lcd.c: 42: _delay((unsigned long)((25)*(8000000/4000000.0)));
  7868  003FB4  0E10               	movlw	16
  7869  003FB6                     u6317:
  7870  003FB6  2EE8               	decfsz	wreg,f,c
  7871  003FB8  D7FE               	bra	u6317
  7872  003FBA  D000               	nop2	
  7873                           
  7874                           ;lcd.c: 43: LATDbits.LATD3 = 1;
  7875  003FBC  868C               	bsf	3980,3,c	;volatile
  7876                           
  7877                           ;lcd.c: 44: _delay((unsigned long)((25)*(8000000/4000000.0)));
  7878  003FBE  0E10               	movlw	16
  7879  003FC0                     u6327:
  7880  003FC0  2EE8               	decfsz	wreg,f,c
  7881  003FC2  D7FE               	bra	u6327
  7882  003FC4  D000               	nop2	
  7883                           
  7884                           ;lcd.c: 46: data = data << 4;
  7885  003FC6  0100               	movlb	0	; () banked
  7886  003FC8  3981               	swapf	lcdNibble@data& (0+255),w,b
  7887  003FCA  0BF0               	andlw	240
  7888  003FCC  0100               	movlb	0	; () banked
  7889  003FCE  6F81               	movwf	lcdNibble@data& (0+255),b
  7890                           
  7891                           ;lcd.c: 48: temp = data & 0xF0;
  7892  003FD0  0100               	movlb	0	; () banked
  7893  003FD2  5181               	movf	lcdNibble@data& (0+255),w,b
  7894  003FD4  0BF0               	andlw	240
  7895  003FD6  0100               	movlb	0	; () banked
  7896  003FD8  6F80               	movwf	lcdNibble@temp& (0+255),b
  7897                           
  7898                           ;lcd.c: 49: LATD = LATD & 0x0F;
  7899  003FDA  508C               	movf	3980,w,c	;volatile
  7900  003FDC  0B0F               	andlw	15
  7901  003FDE  6E8C               	movwf	3980,c	;volatile
  7902                           
  7903                           ;lcd.c: 50: LATD = temp | LATD;
  7904  003FE0  0100               	movlb	0	; () banked
  7905  003FE2  5180               	movf	lcdNibble@temp& (0+255),w,b
  7906  003FE4  108C               	iorwf	3980,w,c	;volatile
  7907  003FE6  6E8C               	movwf	3980,c	;volatile
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  7911  003FE8  968C               	bcf	3980,3,c	;volatile
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;lcd.c: 53: _delay((unsigned long)((25)*(8000000/4000000.0)));
  7915  003FEA  0E10               	movlw	16
  7916  003FEC                     u6337:
  7917  003FEC  2EE8               	decfsz	wreg,f,c
  7918  003FEE  D7FE               	bra	u6337
  7919  003FF0  D000               	nop2	
  7920                           
  7921                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  7922  003FF2  868C               	bsf	3980,3,c	;volatile
  7923                           
  7924                           ;lcd.c: 55: _delay((unsigned long)((25)*(8000000/4000000.0)));
  7925  003FF4  0E10               	movlw	16
  7926  003FF6                     u6347:
  7927  003FF6  2EE8               	decfsz	wreg,f,c
  7928  003FF8  D7FE               	bra	u6347
  7929  003FFA  D000               	nop2	
  7930  003FFC  0012               	return		;funcret
  7931  003FFE                     __end_of_lcdNibble:
  7932                           	opt stack 0
  7933                           tblptru	equ	0xFF8
  7934                           tblptrh	equ	0xFF7
  7935                           tblptrl	equ	0xFF6
  7936                           tablat	equ	0xFF5
  7937                           prodh	equ	0xFF4
  7938                           prodl	equ	0xFF3
  7939                           intcon	equ	0xFF2
  7940                           intcon2	equ	0xFF1
  7941                           postinc0	equ	0xFEE
  7942                           wreg	equ	0xFE8
  7943                           indf2	equ	0xFDF
  7944                           postinc2	equ	0xFDE
  7945                           postdec2	equ	0xFDD
  7946                           fsr2h	equ	0xFDA
  7947                           fsr2l	equ	0xFD9
  7948                           status	equ	0xFD8
  7949                           
  7950 ;; *************** function _delay_1s_interrupt *****************
  7951 ;; Defined at:
  7952 ;;		line 72 in file "I2C.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  n               1    wreg     unsigned char 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;  n               1    5[BANK0 ] unsigned char 
  7957 ;;  i               1    6[BANK0 ] unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  2    0[BANK0 ] int 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;Total ram usage:        7 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    6
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text22
  7982  003F2C                     __ptext22:
  7983                           	opt stack 0
  7984  003F2C                     _delay_1s_interrupt:
  7985                           	opt stack 24
  7986                           
  7987                           ;incstack = 0
  7988                           ;delay_1s_interrupt@n stored from wreg
  7989  003F2C  0100               	movlb	0	; () banked
  7990  003F2E  6F85               	movwf	delay_1s_interrupt@n& (0+255),b
  7991                           
  7992                           ;I2C.c: 73: for(char i=0;i<(10*n);i++){
  7993  003F30  0E00               	movlw	0
  7994  003F32  0100               	movlb	0	; () banked
  7995  003F34  6F86               	movwf	delay_1s_interrupt@i& (0+255),b
  7996  003F36  D013               	goto	l4522
  7997  003F38                     l745:
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;I2C.c: 74: if (PORTBbits.RB1 == 1){
  8001  003F38  A281               	btfss	3969,1,c	;volatile
  8002  003F3A  D006               	goto	l4518
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;I2C.c: 75: return 1;
  8006  003F3C  0E00               	movlw	0
  8007  003F3E  0100               	movlb	0	; () banked
  8008  003F40  6F81               	movwf	(?_delay_1s_interrupt+1)& (0+255),b
  8009  003F42  0E01               	movlw	1
  8010  003F44  6F80               	movwf	?_delay_1s_interrupt& (0+255),b
  8011                           
  8012                           ; BSR set to: 0
  8013  003F46  0012               	return	
  8014  003F48                     l4518:
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;I2C.c: 76: }
  8018                           ;I2C.c: 77: _delay((unsigned long)((98)*(8000000/4000.0)));
  8019  003F48  0EFF               	movlw	255
  8020  003F4A  0100               	movlb	0	; () banked
  8021  003F4C  6F82               	movwf	??_delay_1s_interrupt& (0+255),b
  8022  003F4E  0E8A               	movlw	138
  8023  003F50                     u6357:
  8024  003F50  2EE8               	decfsz	wreg,f,c
  8025  003F52  D7FE               	bra	u6357
  8026  003F54  2F82               	decfsz	??_delay_1s_interrupt& (0+255),f,b
  8027  003F56  D7FC               	bra	u6357
  8028  003F58  F000               	nop	
  8029  003F5A  0100               	movlb	0	; () banked
  8030  003F5C  2B86               	incf	delay_1s_interrupt@i& (0+255),f,b
  8031  003F5E                     l4522:
  8032                           
  8033                           ; BSR set to: 0
  8034  003F5E  0100               	movlb	0	; () banked
  8035  003F60  5185               	movf	delay_1s_interrupt@n& (0+255),w,b
  8036  003F62  0D0A               	mullw	10
  8037  003F64  0100               	movlb	0	; () banked
  8038  003F66  5186               	movf	delay_1s_interrupt@i& (0+255),w,b
  8039  003F68  0100               	movlb	0	; () banked
  8040  003F6A  6F82               	movwf	??_delay_1s_interrupt& (0+255),b
  8041  003F6C  6B83               	clrf	(??_delay_1s_interrupt+1)& (0+255),b
  8042  003F6E  50F3               	movf	prodl,w,c
  8043  003F70  0100               	movlb	0	; () banked
  8044  003F72  5D82               	subwf	??_delay_1s_interrupt& (0+255),w,b
  8045  003F74  0100               	movlb	0	; () banked
  8046  003F76  5183               	movf	(??_delay_1s_interrupt+1)& (0+255),w,b
  8047  003F78  0A80               	xorlw	128
  8048  003F7A  0100               	movlb	0	; () banked
  8049  003F7C  6F84               	movwf	(??_delay_1s_interrupt+2)& (0+255),b
  8050  003F7E  50F4               	movf	prodh,w,c
  8051  003F80  0A80               	xorlw	128
  8052  003F82  0100               	movlb	0	; () banked
  8053  003F84  5984               	subwfb	(??_delay_1s_interrupt+2)& (0+255),w,b
  8054  003F86  A0D8               	btfss	status,0,c
  8055  003F88  D7D7               	goto	l745
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;I2C.c: 78: }
  8059                           ;I2C.c: 79: return 0;
  8060                           
  8061                           ; BSR set to: 0
  8062  003F8A  0E00               	movlw	0
  8063  003F8C  0100               	movlb	0	; () banked
  8064  003F8E  6F81               	movwf	(?_delay_1s_interrupt+1)& (0+255),b
  8065  003F90  0E00               	movlw	0
  8066  003F92  6F80               	movwf	?_delay_1s_interrupt& (0+255),b
  8067  003F94  0012               	return	
  8068  003F96                     __end_of_delay_1s_interrupt:
  8069                           	opt stack 0
  8070                           tblptru	equ	0xFF8
  8071                           tblptrh	equ	0xFF7
  8072                           tblptrl	equ	0xFF6
  8073                           tablat	equ	0xFF5
  8074                           prodh	equ	0xFF4
  8075                           prodl	equ	0xFF3
  8076                           intcon	equ	0xFF2
  8077                           intcon2	equ	0xFF1
  8078                           postinc0	equ	0xFEE
  8079                           wreg	equ	0xFE8
  8080                           indf2	equ	0xFDF
  8081                           postinc2	equ	0xFDE
  8082                           postdec2	equ	0xFDD
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function _I2C_Master_Write *****************
  8088 ;; Defined at:
  8089 ;;		line 47 in file "I2C.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  d               2    1[BANK0 ] unsigned int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;Total ram usage:        2 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    7
  8110 ;; This function calls:
  8111 ;;		_I2C_Master_Wait
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;;		_set_time
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           	psect	text23
  8119  004470                     __ptext23:
  8120                           	opt stack 0
  8121  004470                     _I2C_Master_Write:
  8122                           	opt stack 23
  8123                           
  8124                           ;I2C.c: 49: I2C_Master_Wait();
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;incstack = 0
  8128  004470  EC1E  F022         	call	_I2C_Master_Wait	;wreg free
  8129                           
  8130                           ;I2C.c: 50: SSPBUF = d;
  8131  004474  C081  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  8132  004478  0012               	return		;funcret
  8133  00447A                     __end_of_I2C_Master_Write:
  8134                           	opt stack 0
  8135                           tblptru	equ	0xFF8
  8136                           tblptrh	equ	0xFF7
  8137                           tblptrl	equ	0xFF6
  8138                           tablat	equ	0xFF5
  8139                           prodh	equ	0xFF4
  8140                           prodl	equ	0xFF3
  8141                           intcon	equ	0xFF2
  8142                           intcon2	equ	0xFF1
  8143                           postinc0	equ	0xFEE
  8144                           wreg	equ	0xFE8
  8145                           indf2	equ	0xFDF
  8146                           postinc2	equ	0xFDE
  8147                           postdec2	equ	0xFDD
  8148                           fsr2h	equ	0xFDA
  8149                           fsr2l	equ	0xFD9
  8150                           status	equ	0xFD8
  8151                           
  8152 ;; *************** function _I2C_Master_Stop *****************
  8153 ;; Defined at:
  8154 ;;		line 41 in file "I2C.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      void 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;Total ram usage:        0 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    7
  8175 ;; This function calls:
  8176 ;;		_I2C_Master_Wait
  8177 ;; This function is called by:
  8178 ;;		_main
  8179 ;;		_set_time
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text24
  8184  00447A                     __ptext24:
  8185                           	opt stack 0
  8186  00447A                     _I2C_Master_Stop:
  8187                           	opt stack 23
  8188                           
  8189                           ;I2C.c: 43: I2C_Master_Wait();
  8190                           
  8191                           ;incstack = 0
  8192  00447A  EC1E  F022         	call	_I2C_Master_Wait	;wreg free
  8193                           
  8194                           ;I2C.c: 44: PEN = 1;
  8195  00447E  84C5               	bsf	4037,2,c	;volatile
  8196  004480  0012               	return		;funcret
  8197  004482                     __end_of_I2C_Master_Stop:
  8198                           	opt stack 0
  8199                           tblptru	equ	0xFF8
  8200                           tblptrh	equ	0xFF7
  8201                           tblptrl	equ	0xFF6
  8202                           tablat	equ	0xFF5
  8203                           prodh	equ	0xFF4
  8204                           prodl	equ	0xFF3
  8205                           intcon	equ	0xFF2
  8206                           intcon2	equ	0xFF1
  8207                           postinc0	equ	0xFEE
  8208                           wreg	equ	0xFE8
  8209                           indf2	equ	0xFDF
  8210                           postinc2	equ	0xFDE
  8211                           postdec2	equ	0xFDD
  8212                           fsr2h	equ	0xFDA
  8213                           fsr2l	equ	0xFD9
  8214                           status	equ	0xFD8
  8215                           
  8216 ;; *************** function _I2C_Master_Start *****************
  8217 ;; Defined at:
  8218 ;;		line 29 in file "I2C.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;		None
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  2   60[None  ] int 
  8225 ;; Registers used:
  8226 ;;		wreg, status,2, status,0, cstack
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;Total ram usage:        0 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; Hardware stack levels required when called:    7
  8239 ;; This function calls:
  8240 ;;		_I2C_Master_Wait
  8241 ;; This function is called by:
  8242 ;;		_main
  8243 ;;		_set_time
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text25
  8248  004482                     __ptext25:
  8249                           	opt stack 0
  8250  004482                     _I2C_Master_Start:
  8251                           	opt stack 23
  8252                           
  8253                           ;I2C.c: 31: I2C_Master_Wait();
  8254                           
  8255                           ;incstack = 0
  8256  004482  EC1E  F022         	call	_I2C_Master_Wait	;wreg free
  8257                           
  8258                           ;I2C.c: 32: SEN = 1;
  8259  004486  80C5               	bsf	4037,0,c	;volatile
  8260  004488  0012               	return		;funcret
  8261  00448A                     __end_of_I2C_Master_Start:
  8262                           	opt stack 0
  8263                           tblptru	equ	0xFF8
  8264                           tblptrh	equ	0xFF7
  8265                           tblptrl	equ	0xFF6
  8266                           tablat	equ	0xFF5
  8267                           prodh	equ	0xFF4
  8268                           prodl	equ	0xFF3
  8269                           intcon	equ	0xFF2
  8270                           intcon2	equ	0xFF1
  8271                           postinc0	equ	0xFEE
  8272                           wreg	equ	0xFE8
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function _I2C_Master_Read *****************
  8281 ;; Defined at:
  8282 ;;		line 53 in file "I2C.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  a               1    wreg     unsigned char 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  a               1    1[BANK0 ] unsigned char 
  8287 ;;  temp            1    2[BANK0 ] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      unsigned char 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;Total ram usage:        2 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    7
  8304 ;; This function calls:
  8305 ;;		_I2C_Master_Wait
  8306 ;; This function is called by:
  8307 ;;		_main
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text26
  8312  00431E                     __ptext26:
  8313                           	opt stack 0
  8314  00431E                     _I2C_Master_Read:
  8315                           	opt stack 23
  8316                           
  8317                           ;incstack = 0
  8318                           ;I2C_Master_Read@a stored from wreg
  8319  00431E  0100               	movlb	0	; () banked
  8320  004320  6F81               	movwf	I2C_Master_Read@a& (0+255),b
  8321                           
  8322                           ;I2C.c: 55: unsigned char temp;
  8323                           ;I2C.c: 56: I2C_Master_Wait();
  8324  004322  EC1E  F022         	call	_I2C_Master_Wait	;wreg free
  8325                           
  8326                           ;I2C.c: 57: RCEN = 1;
  8327  004326  86C5               	bsf	4037,3,c	;volatile
  8328                           
  8329                           ;I2C.c: 58: I2C_Master_Wait();
  8330  004328  EC1E  F022         	call	_I2C_Master_Wait	;wreg free
  8331                           
  8332                           ;I2C.c: 59: temp = SSPBUF;
  8333  00432C  CFC9 F082          	movff	4041,I2C_Master_Read@temp	;volatile
  8334                           
  8335                           ;I2C.c: 60: I2C_Master_Wait();
  8336  004330  EC1E  F022         	call	_I2C_Master_Wait	;wreg free
  8337                           
  8338                           ;I2C.c: 61: ACKDT = (a)?0:1;
  8339  004334  0100               	movlb	0	; () banked
  8340  004336  5181               	movf	I2C_Master_Read@a& (0+255),w,b
  8341  004338  0100               	movlb	0	; () banked
  8342  00433A  A4D8               	btfss	status,2,c
  8343  00433C  D002               	goto	u4360
  8344  00433E  8AC5               	bsf	4037,5,c	;volatile
  8345  004340  D001               	goto	l4376
  8346  004342                     u4360:
  8347  004342  9AC5               	bcf	4037,5,c	;volatile
  8348  004344                     l4376:
  8349                           
  8350                           ;I2C.c: 62: ACKEN = 1;
  8351  004344  88C5               	bsf	4037,4,c	;volatile
  8352                           
  8353                           ;I2C.c: 63: return temp;
  8354  004346  0100               	movlb	0	; () banked
  8355  004348  5182               	movf	I2C_Master_Read@temp& (0+255),w,b
  8356  00434A  0012               	return	
  8357  00434C                     __end_of_I2C_Master_Read:
  8358                           	opt stack 0
  8359                           tblptru	equ	0xFF8
  8360                           tblptrh	equ	0xFF7
  8361                           tblptrl	equ	0xFF6
  8362                           tablat	equ	0xFF5
  8363                           prodh	equ	0xFF4
  8364                           prodl	equ	0xFF3
  8365                           intcon	equ	0xFF2
  8366                           intcon2	equ	0xFF1
  8367                           postinc0	equ	0xFEE
  8368                           wreg	equ	0xFE8
  8369                           indf2	equ	0xFDF
  8370                           postinc2	equ	0xFDE
  8371                           postdec2	equ	0xFDD
  8372                           fsr2h	equ	0xFDA
  8373                           fsr2l	equ	0xFD9
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _I2C_Master_Wait *****************
  8377 ;; Defined at:
  8378 ;;		line 24 in file "I2C.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;Total ram usage:        1 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    6
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_I2C_Master_Start
  8403 ;;		_I2C_Master_Stop
  8404 ;;		_I2C_Master_Write
  8405 ;;		_I2C_Master_Read
  8406 ;;		_I2C_Master_RepeatedStart
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text27
  8411  00443C                     __ptext27:
  8412                           	opt stack 0
  8413  00443C                     _I2C_Master_Wait:
  8414                           	opt stack 23
  8415  00443C                     l717:
  8416  00443C  B4C7               	btfsc	4039,2,c	;volatile
  8417  00443E  D7FE               	goto	l717
  8418  004440  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
  8419  004444  0E1F               	movlw	31
  8420  004446  0100               	movlb	0	; () banked
  8421  004448  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
  8422  00444A  B4D8               	btfsc	status,2,c
  8423  00444C  0012               	return	
  8424  00444E  D7F6               	goto	l717
  8425  004450                     __end_of_I2C_Master_Wait:
  8426                           	opt stack 0
  8427                           tblptru	equ	0xFF8
  8428                           tblptrh	equ	0xFF7
  8429                           tblptrl	equ	0xFF6
  8430                           tablat	equ	0xFF5
  8431                           prodh	equ	0xFF4
  8432                           prodl	equ	0xFF3
  8433                           intcon	equ	0xFF2
  8434                           intcon2	equ	0xFF1
  8435                           postinc0	equ	0xFEE
  8436                           wreg	equ	0xFE8
  8437                           indf2	equ	0xFDF
  8438                           postinc2	equ	0xFDE
  8439                           postdec2	equ	0xFDD
  8440                           fsr2h	equ	0xFDA
  8441                           fsr2l	equ	0xFD9
  8442                           status	equ	0xFD8
  8443                           
  8444 ;; *************** function _I2C_Master_Init *****************
  8445 ;; Defined at:
  8446 ;;		line 13 in file "I2C.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  c               4   13[BANK0 ] const unsigned long 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;Total ram usage:        8 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    7
  8467 ;; This function calls:
  8468 ;;		___lldiv
  8469 ;; This function is called by:
  8470 ;;		_main
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text28
  8475  0040C6                     __ptext28:
  8476                           	opt stack 0
  8477  0040C6                     _I2C_Master_Init:
  8478                           	opt stack 23
  8479                           
  8480                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;incstack = 0
  8484  0040C6  0E00               	movlw	0
  8485  0040C8  6EC7               	movwf	4039,c	;volatile
  8486                           
  8487                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  8488  0040CA  0E28               	movlw	40
  8489  0040CC  6EC6               	movwf	4038,c	;volatile
  8490                           
  8491                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  8492  0040CE  0E00               	movlw	0
  8493  0040D0  6EC5               	movwf	4037,c	;volatile
  8494                           
  8495                           ;I2C.c: 19: SSPADD = (8000000/(4*c))-1;
  8496  0040D2  0E00               	movlw	0
  8497  0040D4  0100               	movlb	0	; () banked
  8498  0040D6  6F80               	movwf	___lldiv@dividend& (0+255),b
  8499  0040D8  0E12               	movlw	18
  8500  0040DA  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
  8501  0040DC  0E7A               	movlw	122
  8502  0040DE  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
  8503  0040E0  0E00               	movlw	0
  8504  0040E2  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
  8505  0040E4  C08D  F091         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  8506  0040E8  C08E  F092         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  8507  0040EC  C08F  F093         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  8508  0040F0  C090  F094         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  8509  0040F4  0E02               	movlw	2
  8510  0040F6                     u4355:
  8511  0040F6  90D8               	bcf	status,0,c
  8512  0040F8  0100               	movlb	0	; () banked
  8513  0040FA  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
  8514  0040FC  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  8515  0040FE  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  8516  004100  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  8517  004102  2EE8               	decfsz	wreg,f,c
  8518  004104  D7F8               	goto	u4355
  8519  004106  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
  8520  00410A  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  8521  00410E  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  8522  004112  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  8523  004116  EC5C  F01D         	call	___lldiv	;wreg free
  8524  00411A  0100               	movlb	0	; () banked
  8525  00411C  0580               	decf	?___lldiv& (0+255),w,b
  8526  00411E  6EC8               	movwf	4040,c	;volatile
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;I2C.c: 20: TRISC3 = 1;
  8530  004120  8694               	bsf	3988,3,c	;volatile
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;I2C.c: 21: TRISC4 = 1;
  8534  004122  8894               	bsf	3988,4,c	;volatile
  8535                           
  8536                           ; BSR set to: 0
  8537  004124  0012               	return		;funcret
  8538  004126                     __end_of_I2C_Master_Init:
  8539                           	opt stack 0
  8540                           tblptru	equ	0xFF8
  8541                           tblptrh	equ	0xFF7
  8542                           tblptrl	equ	0xFF6
  8543                           tablat	equ	0xFF5
  8544                           prodh	equ	0xFF4
  8545                           prodl	equ	0xFF3
  8546                           intcon	equ	0xFF2
  8547                           intcon2	equ	0xFF1
  8548                           postinc0	equ	0xFEE
  8549                           wreg	equ	0xFE8
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           postdec2	equ	0xFDD
  8553                           fsr2h	equ	0xFDA
  8554                           fsr2l	equ	0xFD9
  8555                           status	equ	0xFD8
  8556                           
  8557 ;; *************** function ___lldiv *****************
  8558 ;; Defined at:
  8559 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lldiv.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  dividend        4    0[BANK0 ] unsigned long 
  8562 ;;  divisor         4    4[BANK0 ] unsigned long 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;  quotient        4    8[BANK0 ] unsigned long 
  8565 ;;  counter         1   12[BANK0 ] unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  4    0[BANK0 ] unsigned long 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8575 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;Total ram usage:       13 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    6
  8582 ;; This function calls:
  8583 ;;		Nothing
  8584 ;; This function is called by:
  8585 ;;		_I2C_Master_Init
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text29
  8590  003AB8                     __ptext29:
  8591                           	opt stack 0
  8592  003AB8                     ___lldiv:
  8593                           	opt stack 23
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;incstack = 0
  8597  003AB8  0E00               	movlw	0
  8598  003ABA  0100               	movlb	0	; () banked
  8599  003ABC  6F88               	movwf	___lldiv@quotient& (0+255),b
  8600  003ABE  0E00               	movlw	0
  8601  003AC0  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  8602  003AC2  0E00               	movlw	0
  8603  003AC4  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8604  003AC6  0E00               	movlw	0
  8605  003AC8  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8606                           
  8607                           ; BSR set to: 0
  8608  003ACA  0100               	movlb	0	; () banked
  8609  003ACC  5184               	movf	___lldiv@divisor& (0+255),w,b
  8610  003ACE  0100               	movlb	0	; () banked
  8611  003AD0  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8612  003AD2  0100               	movlb	0	; () banked
  8613  003AD4  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8614  003AD6  0100               	movlb	0	; () banked
  8615  003AD8  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8616  003ADA  B4D8               	btfsc	status,2,c
  8617  003ADC  D042               	goto	l1172
  8618                           
  8619                           ; BSR set to: 0
  8620  003ADE  0E01               	movlw	1
  8621  003AE0  0100               	movlb	0	; () banked
  8622  003AE2  6F8C               	movwf	___lldiv@counter& (0+255),b
  8623  003AE4  D008               	goto	l4212
  8624  003AE6                     l4210:
  8625                           
  8626                           ; BSR set to: 0
  8627  003AE6  0100               	movlb	0	; () banked
  8628  003AE8  90D8               	bcf	status,0,c
  8629  003AEA  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  8630  003AEC  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8631  003AEE  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8632  003AF0  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8633  003AF2  0100               	movlb	0	; () banked
  8634  003AF4  2B8C               	incf	___lldiv@counter& (0+255),f,b
  8635  003AF6                     l4212:
  8636                           
  8637                           ; BSR set to: 0
  8638  003AF6  0100               	movlb	0	; () banked
  8639  003AF8  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8640  003AFA  D7F5               	goto	l4210
  8641  003AFC                     l4214:
  8642                           
  8643                           ; BSR set to: 0
  8644  003AFC  0100               	movlb	0	; () banked
  8645  003AFE  90D8               	bcf	status,0,c
  8646  003B00  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  8647  003B02  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8648  003B04  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8649  003B06  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8650                           
  8651                           ; BSR set to: 0
  8652  003B08  0100               	movlb	0	; () banked
  8653  003B0A  5184               	movf	___lldiv@divisor& (0+255),w,b
  8654  003B0C  0100               	movlb	0	; () banked
  8655  003B0E  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  8656  003B10  0100               	movlb	0	; () banked
  8657  003B12  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8658  003B14  0100               	movlb	0	; () banked
  8659  003B16  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8660  003B18  0100               	movlb	0	; () banked
  8661  003B1A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8662  003B1C  0100               	movlb	0	; () banked
  8663  003B1E  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8664  003B20  0100               	movlb	0	; () banked
  8665  003B22  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8666  003B24  0100               	movlb	0	; () banked
  8667  003B26  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8668  003B28  A0D8               	btfss	status,0,c
  8669  003B2A  D012               	goto	l4222
  8670                           
  8671                           ; BSR set to: 0
  8672  003B2C  0100               	movlb	0	; () banked
  8673  003B2E  5184               	movf	___lldiv@divisor& (0+255),w,b
  8674  003B30  0100               	movlb	0	; () banked
  8675  003B32  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  8676  003B34  0100               	movlb	0	; () banked
  8677  003B36  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8678  003B38  0100               	movlb	0	; () banked
  8679  003B3A  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8680  003B3C  0100               	movlb	0	; () banked
  8681  003B3E  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8682  003B40  0100               	movlb	0	; () banked
  8683  003B42  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8684  003B44  0100               	movlb	0	; () banked
  8685  003B46  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8686  003B48  0100               	movlb	0	; () banked
  8687  003B4A  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8688                           
  8689                           ; BSR set to: 0
  8690  003B4C  0100               	movlb	0	; () banked
  8691  003B4E  8188               	bsf	___lldiv@quotient& (0+255),0,b
  8692  003B50                     l4222:
  8693                           
  8694                           ; BSR set to: 0
  8695  003B50  0100               	movlb	0	; () banked
  8696  003B52  90D8               	bcf	status,0,c
  8697  003B54  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8698  003B56  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8699  003B58  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8700  003B5A  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  8701                           
  8702                           ; BSR set to: 0
  8703  003B5C  0100               	movlb	0	; () banked
  8704  003B5E  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  8705  003B60  D7CD               	goto	l4214
  8706  003B62                     l1172:
  8707                           
  8708                           ; BSR set to: 0
  8709  003B62  C088  F080         	movff	___lldiv@quotient,?___lldiv
  8710  003B66  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  8711  003B6A  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  8712  003B6E  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  8713                           
  8714                           ; BSR set to: 0
  8715  003B72  0012               	return		;funcret
  8716  003B74                     __end_of___lldiv:
  8717                           	opt stack 0
  8718                           tblptru	equ	0xFF8
  8719                           tblptrh	equ	0xFF7
  8720                           tblptrl	equ	0xFF6
  8721                           tablat	equ	0xFF5
  8722                           prodh	equ	0xFF4
  8723                           prodl	equ	0xFF3
  8724                           intcon	equ	0xFF2
  8725                           intcon2	equ	0xFF1
  8726                           postinc0	equ	0xFEE
  8727                           wreg	equ	0xFE8
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           
  8735 ;; *************** function _Eeprom_WriteByte *****************
  8736 ;; Defined at:
  8737 ;;		line 40 in file "eeprom.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  address         1    wreg     char 
  8740 ;;  data            1    0[BANK0 ] char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  address         1    3[BANK0 ] char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8752 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;Total ram usage:        4 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    6
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_main
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text30
  8767  004274                     __ptext30:
  8768                           	opt stack 0
  8769  004274                     _Eeprom_WriteByte:
  8770                           	opt stack 24
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;incstack = 0
  8774                           ;Eeprom_WriteByte@address stored from wreg
  8775  004274  0100               	movlb	0	; () banked
  8776  004276  6F83               	movwf	Eeprom_WriteByte@address& (0+255),b
  8777                           
  8778                           ;eeprom.c: 43: EEADRH = (signed char)(address >> 8);
  8779  004278  C083  F081         	movff	Eeprom_WriteByte@address,??_Eeprom_WriteByte
  8780  00427C  0E08               	movlw	8
  8781  00427E  0100               	movlb	0	; () banked
  8782  004280  6F82               	movwf	(??_Eeprom_WriteByte+1)& (0+255),b
  8783  004282                     u4755:
  8784  004282  0100               	movlb	0	; () banked
  8785  004284  3581               	rlcf	??_Eeprom_WriteByte& (0+255),w,b
  8786  004286  3381               	rrcf	??_Eeprom_WriteByte& (0+255),f,b
  8787  004288  0100               	movlb	0	; () banked
  8788  00428A  2F82               	decfsz	(??_Eeprom_WriteByte+1)& (0+255),f,b
  8789  00428C  D7FA               	goto	u4755
  8790  00428E  0100               	movlb	0	; () banked
  8791  004290  5181               	movf	??_Eeprom_WriteByte& (0+255),w,b
  8792  004292  6EAA               	movwf	4010,c	;volatile
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;eeprom.c: 44: EEADR = (signed char)address;
  8796  004294  C083  FFA9         	movff	Eeprom_WriteByte@address,4009	;volatile
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;eeprom.c: 46: EEDATA = data;
  8800  004298  C080  FFA8         	movff	Eeprom_WriteByte@data,4008	;volatile
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;eeprom.c: 47: EECON1bits.EEPGD = 0;
  8804  00429C  9EA6               	bcf	4006,7,c	;volatile
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;eeprom.c: 48: EECON1bits.CFGS = 0;
  8808  00429E  9CA6               	bcf	4006,6,c	;volatile
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;eeprom.c: 49: EECON1bits.WREN = 1;
  8812  0042A0  84A6               	bsf	4006,2,c	;volatile
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;eeprom.c: 53: EECON2 = 0x55;
  8816  0042A2  0E55               	movlw	85
  8817  0042A4  6EA7               	movwf	4007,c	;volatile
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;eeprom.c: 54: EECON2 = 0xAA;
  8821  0042A6  0EAA               	movlw	170
  8822  0042A8  6EA7               	movwf	4007,c	;volatile
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;eeprom.c: 55: EECON1bits.WR = 1;
  8826  0042AA  82A6               	bsf	4006,1,c	;volatile
  8827  0042AC                     l678:
  8828  0042AC  A8A1               	btfss	4001,4,c	;volatile
  8829  0042AE  D7FE               	goto	l678
  8830                           
  8831                           ;eeprom.c: 61: }
  8832                           ;eeprom.c: 63: PIR2bits.EEIF = 0;
  8833  0042B0  98A1               	bcf	4001,4,c	;volatile
  8834                           
  8835                           ;eeprom.c: 64: EECON1bits.WREN = 0;
  8836  0042B2  94A6               	bcf	4006,2,c	;volatile
  8837  0042B4  0012               	return		;funcret
  8838  0042B6                     __end_of_Eeprom_WriteByte:
  8839                           	opt stack 0
  8840                           tblptru	equ	0xFF8
  8841                           tblptrh	equ	0xFF7
  8842                           tblptrl	equ	0xFF6
  8843                           tablat	equ	0xFF5
  8844                           prodh	equ	0xFF4
  8845                           prodl	equ	0xFF3
  8846                           intcon	equ	0xFF2
  8847                           intcon2	equ	0xFF1
  8848                           postinc0	equ	0xFEE
  8849                           wreg	equ	0xFE8
  8850                           indf2	equ	0xFDF
  8851                           postinc2	equ	0xFDE
  8852                           postdec2	equ	0xFDD
  8853                           fsr2h	equ	0xFDA
  8854                           fsr2l	equ	0xFD9
  8855                           status	equ	0xFD8
  8856                           
  8857 ;; *************** function _Eeprom_ReadByte *****************
  8858 ;; Defined at:
  8859 ;;		line 21 in file "eeprom.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  address         1    wreg     char 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  address         1    2[BANK0 ] char 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      char 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;Total ram usage:        3 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    6
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_main
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text31
  8888  0042EC                     __ptext31:
  8889                           	opt stack 0
  8890  0042EC                     _Eeprom_ReadByte:
  8891                           	opt stack 24
  8892                           
  8893                           ;incstack = 0
  8894                           ;Eeprom_ReadByte@address stored from wreg
  8895  0042EC  0100               	movlb	0	; () banked
  8896  0042EE  6F82               	movwf	Eeprom_ReadByte@address& (0+255),b
  8897                           
  8898                           ;eeprom.c: 25: EEADRH = (signed char)(address >> 8);
  8899  0042F0  C082  F080         	movff	Eeprom_ReadByte@address,??_Eeprom_ReadByte
  8900  0042F4  0E08               	movlw	8
  8901  0042F6  0100               	movlb	0	; () banked
  8902  0042F8  6F81               	movwf	(??_Eeprom_ReadByte+1)& (0+255),b
  8903  0042FA                     u4735:
  8904  0042FA  0100               	movlb	0	; () banked
  8905  0042FC  3580               	rlcf	??_Eeprom_ReadByte& (0+255),w,b
  8906  0042FE  3380               	rrcf	??_Eeprom_ReadByte& (0+255),f,b
  8907  004300  0100               	movlb	0	; () banked
  8908  004302  2F81               	decfsz	(??_Eeprom_ReadByte+1)& (0+255),f,b
  8909  004304  D7FA               	goto	u4735
  8910  004306  0100               	movlb	0	; () banked
  8911  004308  5180               	movf	??_Eeprom_ReadByte& (0+255),w,b
  8912  00430A  6EAA               	movwf	4010,c	;volatile
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;eeprom.c: 26: EEADR = (signed char)address;
  8916  00430C  C082  FFA9         	movff	Eeprom_ReadByte@address,4009	;volatile
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;eeprom.c: 28: EECON1bits.EEPGD = 0;
  8920  004310  9EA6               	bcf	4006,7,c	;volatile
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;eeprom.c: 29: EECON1bits.CFGS = 0;
  8924  004312  9CA6               	bcf	4006,6,c	;volatile
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;eeprom.c: 30: EECON1bits.RD = 1;
  8928  004314  80A6               	bsf	4006,0,c	;volatile
  8929  004316                     l672:
  8930  004316  B0A6               	btfsc	4006,0,c	;volatile
  8931  004318  D7FE               	goto	l672
  8932                           
  8933                           ;eeprom.c: 36: return EEDATA;
  8934  00431A  50A8               	movf	4008,w,c	;volatile
  8935  00431C  0012               	return	
  8936  00431E                     __end_of_Eeprom_ReadByte:
  8937                           	opt stack 0
  8938                           tblptru	equ	0xFF8
  8939                           tblptrh	equ	0xFF7
  8940                           tblptrl	equ	0xFF6
  8941                           tablat	equ	0xFF5
  8942                           prodh	equ	0xFF4
  8943                           prodl	equ	0xFF3
  8944                           intcon	equ	0xFF2
  8945                           intcon2	equ	0xFF1
  8946                           postinc0	equ	0xFEE
  8947                           wreg	equ	0xFE8
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _IRQ *****************
  8956 ;; Defined at:
  8957 ;;		line 644 in file "main.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;Total ram usage:       14 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    5
  8978 ;; This function calls:
  8979 ;;		_servo_ISR_1
  8980 ;;		_servo_ISR_3
  8981 ;; This function is called by:
  8982 ;;		Interrupt level 2
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	intcode
  8987  000008                     __pintcode:
  8988                           	opt stack 0
  8989  000008                     _IRQ:
  8990                           	opt stack 21
  8991                           
  8992                           ;incstack = 0
  8993  000008  826C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8994  00000A  ED11  F01E         	call	int_func,f	;refresh shadow registers
  8995                           tblptru	equ	0xFF8
  8996                           tblptrh	equ	0xFF7
  8997                           tblptrl	equ	0xFF6
  8998                           tablat	equ	0xFF5
  8999                           prodh	equ	0xFF4
  9000                           prodl	equ	0xFF3
  9001                           intcon	equ	0xFF2
  9002                           intcon2	equ	0xFF1
  9003                           postinc0	equ	0xFEE
  9004                           wreg	equ	0xFE8
  9005                           indf2	equ	0xFDF
  9006                           postinc2	equ	0xFDE
  9007                           postdec2	equ	0xFDD
  9008                           fsr2h	equ	0xFDA
  9009                           fsr2l	equ	0xFD9
  9010                           status	equ	0xFD8
  9011                           
  9012                           	psect	intcode_body
  9013  003C22                     __pintcode_body:
  9014                           	opt stack 21
  9015  003C22                     int_func:
  9016                           	opt stack 21
  9017  003C22  0006               	pop		; remove dummy address from shadow register refresh
  9018  003C24  CFFA F034          	movff	pclath,??_IRQ
  9019  003C28  CFFB F035          	movff	pclatu,??_IRQ+1
  9020  003C2C  CFE9 F036          	movff	fsr0l,??_IRQ+2
  9021  003C30  CFEA F037          	movff	fsr0h,??_IRQ+3
  9022  003C34  CFE1 F038          	movff	fsr1l,??_IRQ+4
  9023  003C38  CFE2 F039          	movff	fsr1h,??_IRQ+5
  9024  003C3C  CFD9 F03A          	movff	fsr2l,??_IRQ+6
  9025  003C40  CFDA F03B          	movff	fsr2h,??_IRQ+7
  9026  003C44  CFF3 F03C          	movff	prodl,??_IRQ+8
  9027  003C48  CFF4 F03D          	movff	prodh,??_IRQ+9
  9028  003C4C  CFF6 F03E          	movff	tblptrl,??_IRQ+10
  9029  003C50  CFF7 F03F          	movff	tblptrh,??_IRQ+11
  9030  003C54  CFF8 F040          	movff	tblptru,??_IRQ+12
  9031  003C58  CFF5 F041          	movff	tablat,??_IRQ+13
  9032                           
  9033                           ;main.c: 645: (INTCONbits.GIE = 0);
  9034  003C5C  9EF2               	bcf	intcon,7,c	;volatile
  9035                           
  9036                           ;main.c: 646: TMR3ON = 0;
  9037  003C5E  90B1               	bcf	4017,0,c	;volatile
  9038                           
  9039                           ;main.c: 647: _delay((unsigned long)((1)*(8000000/4000000.0)));
  9040  003C60  D000               	nop2		;2 cycle nop
  9041                           
  9042                           ;main.c: 648: TMR1ON = 0;
  9043  003C62  90CD               	bcf	4045,0,c	;volatile
  9044                           
  9045                           ;main.c: 649: if (TMR1IF) {
  9046  003C64  A09E               	btfss	3998,0,c	;volatile
  9047  003C66  D003               	goto	i2l260
  9048                           
  9049                           ;main.c: 650: servo_ISR_1();
  9050  003C68  EC98  F00F         	call	_servo_ISR_1	;wreg free
  9051  003C6C  D004               	goto	i2l5694
  9052  003C6E                     i2l260:
  9053                           
  9054                           ;main.c: 653: }
  9055                           ;main.c: 654: if (TMR3IF) {
  9056  003C6E  A2A1               	btfss	4001,1,c	;volatile
  9057  003C70  D003               	goto	i2l261
  9058                           
  9059                           ;main.c: 655: servo_ISR_3();
  9060  003C72  ECC2  F012         	call	_servo_ISR_3	;wreg free
  9061  003C76                     i2l5694:
  9062                           
  9063                           ;main.c: 656: (INTCONbits.GIE = 1);
  9064  003C76  8EF2               	bsf	intcon,7,c	;volatile
  9065  003C78                     i2l261:
  9066  003C78  C041  FFF5         	movff	??_IRQ+13,tablat
  9067  003C7C  C040  FFF8         	movff	??_IRQ+12,tblptru
  9068  003C80  C03F  FFF7         	movff	??_IRQ+11,tblptrh
  9069  003C84  C03E  FFF6         	movff	??_IRQ+10,tblptrl
  9070  003C88  C03D  FFF4         	movff	??_IRQ+9,prodh
  9071  003C8C  C03C  FFF3         	movff	??_IRQ+8,prodl
  9072  003C90  C03B  FFDA         	movff	??_IRQ+7,fsr2h
  9073  003C94  C03A  FFD9         	movff	??_IRQ+6,fsr2l
  9074  003C98  C039  FFE2         	movff	??_IRQ+5,fsr1h
  9075  003C9C  C038  FFE1         	movff	??_IRQ+4,fsr1l
  9076  003CA0  C037  FFEA         	movff	??_IRQ+3,fsr0h
  9077  003CA4  C036  FFE9         	movff	??_IRQ+2,fsr0l
  9078  003CA8  C035  FFFB         	movff	??_IRQ+1,pclatu
  9079  003CAC  C034  FFFA         	movff	??_IRQ,pclath
  9080  003CB0  926C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9081  003CB2  0011               	retfie		f
  9082  003CB4                     __end_of_IRQ:
  9083                           	opt stack 0
  9084                           pclatu	equ	0xFFB
  9085                           pclath	equ	0xFFA
  9086                           tblptru	equ	0xFF8
  9087                           tblptrh	equ	0xFF7
  9088                           tblptrl	equ	0xFF6
  9089                           tablat	equ	0xFF5
  9090                           prodh	equ	0xFF4
  9091                           prodl	equ	0xFF3
  9092                           intcon	equ	0xFF2
  9093                           intcon2	equ	0xFF1
  9094                           postinc0	equ	0xFEE
  9095                           fsr0h	equ	0xFEA
  9096                           fsr0l	equ	0xFE9
  9097                           wreg	equ	0xFE8
  9098                           fsr1h	equ	0xFE2
  9099                           fsr1l	equ	0xFE1
  9100                           indf2	equ	0xFDF
  9101                           postinc2	equ	0xFDE
  9102                           postdec2	equ	0xFDD
  9103                           fsr2h	equ	0xFDA
  9104                           fsr2l	equ	0xFD9
  9105                           status	equ	0xFD8
  9106                           
  9107 ;; *************** function _servo_ISR_3 *****************
  9108 ;; Defined at:
  9109 ;;		line 494 in file "interrupt.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    4
  9130 ;; This function calls:
  9131 ;;		i2___ftge
  9132 ;;		i2_readADC
  9133 ;;		i2_set_external_interrupt3
  9134 ;; This function is called by:
  9135 ;;		_IRQ
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text33
  9140  002584                     __ptext33:
  9141                           	opt stack 0
  9142  002584                     _servo_ISR_3:
  9143                           	opt stack 21
  9144                           
  9145                           ;interrupt.c: 496: TMR3IF = 0;
  9146                           
  9147                           ;incstack = 0
  9148  002584  92A1               	bcf	4001,1,c	;volatile
  9149                           
  9150                           ;interrupt.c: 498: if(LATCbits.LATC1 == 1){
  9151  002586  A28B               	btfss	3979,1,c	;volatile
  9152  002588  D00D               	goto	i2l5018
  9153                           
  9154                           ;interrupt.c: 499: TMR1ON = 1;
  9155  00258A  80CD               	bsf	4045,0,c	;volatile
  9156  00258C                     i2l431:
  9157  00258C  A09E               	btfss	3998,0,c	;volatile
  9158  00258E  D7FE               	goto	i2l431
  9159                           
  9160                           ;interrupt.c: 502: }
  9161                           ;interrupt.c: 503: TMR1IF = 0;
  9162  002590  909E               	bcf	3998,0,c	;volatile
  9163                           
  9164                           ;interrupt.c: 504: TMR1ON = 0;
  9165  002592  90CD               	bcf	4045,0,c	;volatile
  9166                           
  9167                           ;interrupt.c: 505: count1++;
  9168  002594  4A53               	infsnz	_count1,f,c	;volatile
  9169  002596  2A54               	incf	_count1+1,f,c	;volatile
  9170                           
  9171                           ;interrupt.c: 506: current_state1 = 0;
  9172  002598  0E00               	movlw	0
  9173  00259A  6E65               	movwf	_current_state1,c	;volatile
  9174                           
  9175                           ;interrupt.c: 507: LATCbits.LATC1 = 0;
  9176  00259C  928B               	bcf	3979,1,c	;volatile
  9177                           
  9178                           ;interrupt.c: 508: isr1 = 1;
  9179  00259E  0E01               	movlw	1
  9180  0025A0  0100               	movlb	0	; () banked
  9181  0025A2  6FFB               	movwf	_isr1& (0+255),b	;volatile
  9182  0025A4                     i2l5018:
  9183                           
  9184                           ;interrupt.c: 509: }
  9185                           ;interrupt.c: 511: if(LATCbits.LATC6 == 1){
  9186  0025A4  AC8B               	btfss	3979,6,c	;volatile
  9187  0025A6  D00D               	goto	i2l5030
  9188                           
  9189                           ;interrupt.c: 512: TMR1ON = 1;
  9190  0025A8  80CD               	bsf	4045,0,c	;volatile
  9191  0025AA                     i2l435:
  9192  0025AA  A09E               	btfss	3998,0,c	;volatile
  9193  0025AC  D7FE               	goto	i2l435
  9194                           
  9195                           ;interrupt.c: 515: }
  9196                           ;interrupt.c: 516: TMR1IF = 0;
  9197  0025AE  909E               	bcf	3998,0,c	;volatile
  9198                           
  9199                           ;interrupt.c: 517: TMR1ON = 0;
  9200  0025B0  90CD               	bcf	4045,0,c	;volatile
  9201                           
  9202                           ;interrupt.c: 518: count1++;
  9203  0025B2  4A53               	infsnz	_count1,f,c	;volatile
  9204  0025B4  2A54               	incf	_count1+1,f,c	;volatile
  9205                           
  9206                           ;interrupt.c: 519: current_state1 = 0;
  9207  0025B6  0E00               	movlw	0
  9208  0025B8  6E65               	movwf	_current_state1,c	;volatile
  9209                           
  9210                           ;interrupt.c: 520: LATCbits.LATC6 = 0;
  9211  0025BA  9C8B               	bcf	3979,6,c	;volatile
  9212                           
  9213                           ;interrupt.c: 521: isr1 = 1;
  9214  0025BC  0E01               	movlw	1
  9215  0025BE  0100               	movlb	0	; () banked
  9216  0025C0  6FFB               	movwf	_isr1& (0+255),b	;volatile
  9217  0025C2                     i2l5030:
  9218                           
  9219                           ;interrupt.c: 522: }
  9220                           ;interrupt.c: 524: if(stage3 == 1){
  9221  0025C2  0462               	decf	_stage3,w,c	;volatile
  9222  0025C4  A4D8               	btfss	status,2,c
  9223  0025C6  D06E               	goto	i2l5084
  9224                           
  9225                           ;interrupt.c: 526: if(volt_check3 == 0){
  9226  0025C8  505D               	movf	_volt_check3,w,c	;volatile
  9227  0025CA  A4D8               	btfss	status,2,c
  9228  0025CC  D02D               	goto	i2l5050
  9229                           
  9230                           ;interrupt.c: 528: voltage_4 = readADC(4);
  9231  0025CE  0E04               	movlw	4
  9232  0025D0  EC91  F01A         	call	i2_readADC
  9233  0025D4  C027  F0E8         	movff	?i2_readADC,_voltage_4	;volatile
  9234  0025D8  C028  F0E9         	movff	?i2_readADC+1,_voltage_4+1	;volatile
  9235  0025DC  C029  F0EA         	movff	?i2_readADC+2,_voltage_4+2	;volatile
  9236                           
  9237                           ;interrupt.c: 529: volt_check3 = 1;
  9238  0025E0  0E01               	movlw	1
  9239  0025E2  6E5D               	movwf	_volt_check3,c	;volatile
  9240                           
  9241                           ;interrupt.c: 530: if(voltage_4 > 3.5){
  9242  0025E4  0E00               	movlw	0
  9243  0025E6  6E01               	movwf	i2___ftge@ff1,c
  9244  0025E8  0E60               	movlw	96
  9245  0025EA  6E02               	movwf	i2___ftge@ff1+1,c
  9246  0025EC  0E40               	movlw	64
  9247  0025EE  6E03               	movwf	i2___ftge@ff1+2,c
  9248  0025F0  C0E8  F004         	movff	_voltage_4,i2___ftge@ff2	;volatile
  9249  0025F4  C0E9  F005         	movff	_voltage_4+1,i2___ftge@ff2+1	;volatile
  9250  0025F8  C0EA  F006         	movff	_voltage_4+2,i2___ftge@ff2+2	;volatile
  9251  0025FC  EC5A  F01E         	call	i2___ftge	;wreg free
  9252  002600  B0D8               	btfsc	status,0,c
  9253  002602  D00B               	goto	i2l5046
  9254                           
  9255                           ;interrupt.c: 531: process3 = 0;
  9256  002604  0E00               	movlw	0
  9257  002606  0100               	movlb	0	; () banked
  9258  002608  6FF6               	movwf	_process3& (0+255),b	;volatile
  9259                           
  9260                           ;interrupt.c: 532: volt_check3 = 0;
  9261  00260A  0E00               	movlw	0
  9262  00260C  6E5D               	movwf	_volt_check3,c	;volatile
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;interrupt.c: 533: if(process1 == 1){
  9266  00260E  0100               	movlb	0	; () banked
  9267  002610  05F7               	decf	_process1& (0+255),w,b	;volatile
  9268  002612  A4D8               	btfss	status,2,c
  9269  002614  0012               	return	
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;interrupt.c: 534: TMR1ON = 1;
  9273  002616  80CD               	bsf	4045,0,c	;volatile
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;interrupt.c: 535: }
  9277                           ;interrupt.c: 536: return;
  9278  002618  0012               	return	
  9279  00261A                     i2l5046:
  9280                           
  9281                           ;interrupt.c: 537: }
  9282                           ;interrupt.c: 538: set_external_interrupt3(1000);
  9283  00261A  0E03               	movlw	3
  9284  00261C  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9285  00261E  0EE8               	movlw	232
  9286  002620  6E09               	movwf	i2set_external_interrupt3@time,c
  9287  002622  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9288                           
  9289                           ;interrupt.c: 539: return;
  9290  002626  0012               	return	
  9291  002628                     i2l5050:
  9292                           
  9293                           ;interrupt.c: 541: }
  9294                           ;interrupt.c: 543: if (count3 < 40){
  9295  002628  BE52               	btfsc	_count3+1,7,c	;volatile
  9296  00262A  D006               	goto	i2l5052
  9297  00262C  5052               	movf	_count3+1,w,c	;volatile
  9298  00262E  E128               	bnz	i2l5072
  9299  002630  0E28               	movlw	40
  9300  002632  5C51               	subwf	_count3,w,c	;volatile
  9301  002634  B0D8               	btfsc	status,0,c
  9302  002636  D024               	goto	i2l5072
  9303  002638                     i2l5052:
  9304                           
  9305                           ;interrupt.c: 544: if(current_state3 == 1){
  9306  002638  0464               	decf	_current_state3,w,c	;volatile
  9307  00263A  A4D8               	btfss	status,2,c
  9308  00263C  D00E               	goto	i2l5060
  9309                           
  9310                           ;interrupt.c: 546: current_state3 = 0;
  9311  00263E  0E00               	movlw	0
  9312  002640  6E64               	movwf	_current_state3,c	;volatile
  9313                           
  9314                           ;interrupt.c: 547: down_period3 = 20000;
  9315  002642  0E4E               	movlw	78
  9316  002644  6E56               	movwf	_down_period3+1,c	;volatile
  9317  002646  0E20               	movlw	32
  9318  002648  6E55               	movwf	_down_period3,c	;volatile
  9319                           
  9320                           ;interrupt.c: 548: LATCbits.LATC2 = 0;
  9321  00264A  948B               	bcf	3979,2,c	;volatile
  9322                           
  9323                           ;interrupt.c: 549: set_external_interrupt3(down_period3);
  9324  00264C  C055  F009         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
  9325  002650  C056  F00A         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
  9326  002654  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9327                           
  9328                           ;interrupt.c: 551: }
  9329  002658  D010               	goto	i2l5068
  9330  00265A                     i2l5060:
  9331                           
  9332                           ;interrupt.c: 552: else if (current_state3 == 0){
  9333  00265A  5064               	movf	_current_state3,w,c	;volatile
  9334  00265C  A4D8               	btfss	status,2,c
  9335  00265E  D00D               	goto	i2l5068
  9336                           
  9337                           ;interrupt.c: 554: current_state3 = 1;
  9338  002660  0E01               	movlw	1
  9339  002662  6E64               	movwf	_current_state3,c	;volatile
  9340                           
  9341                           ;interrupt.c: 555: up_period3 = 1620;
  9342  002664  0E06               	movlw	6
  9343  002666  6E58               	movwf	_up_period3+1,c	;volatile
  9344  002668  0E54               	movlw	84
  9345  00266A  6E57               	movwf	_up_period3,c	;volatile
  9346                           
  9347                           ;interrupt.c: 556: LATCbits.LATC2 = 1;
  9348  00266C  848B               	bsf	3979,2,c	;volatile
  9349                           
  9350                           ;interrupt.c: 557: set_external_interrupt3(up_period3);
  9351  00266E  C057  F009         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
  9352  002672  C058  F00A         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
  9353  002676  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9354  00267A                     i2l5068:
  9355                           
  9356                           ;interrupt.c: 559: }
  9357                           ;interrupt.c: 560: count3++;
  9358  00267A  4A51               	infsnz	_count3,f,c	;volatile
  9359  00267C  2A52               	incf	_count3+1,f,c	;volatile
  9360                           
  9361                           ;interrupt.c: 561: return;
  9362  00267E  0012               	return	
  9363  002680                     i2l5072:
  9364                           
  9365                           ;interrupt.c: 562: }
  9366                           ;interrupt.c: 563: count3 = 0;
  9367  002680  0E00               	movlw	0
  9368  002682  6E52               	movwf	_count3+1,c	;volatile
  9369  002684  0E00               	movlw	0
  9370  002686  6E51               	movwf	_count3,c	;volatile
  9371                           
  9372                           ;interrupt.c: 564: LATCbits.LATC2 = 0;
  9373  002688  948B               	bcf	3979,2,c	;volatile
  9374                           
  9375                           ;interrupt.c: 565: current_state3 = 0;
  9376  00268A  0E00               	movlw	0
  9377  00268C  6E64               	movwf	_current_state3,c	;volatile
  9378                           
  9379                           ;interrupt.c: 566: set_external_interrupt3(20000);
  9380  00268E  0E4E               	movlw	78
  9381  002690  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9382  002692  0E20               	movlw	32
  9383  002694  6E09               	movwf	i2set_external_interrupt3@time,c
  9384  002696  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9385                           
  9386                           ;interrupt.c: 567: volt_check3 = 0;
  9387  00269A  0E00               	movlw	0
  9388  00269C  6E5D               	movwf	_volt_check3,c	;volatile
  9389                           
  9390                           ;interrupt.c: 568: stage3 = 2;
  9391  00269E  0E02               	movlw	2
  9392  0026A0  6E62               	movwf	_stage3,c	;volatile
  9393                           
  9394                           ;interrupt.c: 569: return;
  9395  0026A2  0012               	return	
  9396  0026A4                     i2l5084:
  9397                           
  9398                           ;interrupt.c: 570: }
  9399                           ;interrupt.c: 572: if(stage3 == 2){
  9400  0026A4  0E02               	movlw	2
  9401  0026A6  1862               	xorwf	_stage3,w,c	;volatile
  9402  0026A8  A4D8               	btfss	status,2,c
  9403  0026AA  D081               	goto	i2l5150
  9404                           
  9405                           ;interrupt.c: 574: if(volt_check3 == 0){
  9406  0026AC  505D               	movf	_volt_check3,w,c	;volatile
  9407  0026AE  A4D8               	btfss	status,2,c
  9408  0026B0  D01F               	goto	i2l5102
  9409                           
  9410                           ;interrupt.c: 576: LATCbits.LATC5 = 1;
  9411  0026B2  8A8B               	bsf	3979,5,c	;volatile
  9412                           
  9413                           ;interrupt.c: 577: _delay((unsigned long)((500)*(8000000/4000.0)));
  9414  0026B4  0E06               	movlw	6
  9415  0026B6  6E33               	movwf	(??_servo_ISR_3+1)& (0+255),c
  9416  0026B8  0E13               	movlw	19
  9417  0026BA  6E32               	movwf	??_servo_ISR_3& (0+255),c
  9418  0026BC  0EAE               	movlw	174
  9419  0026BE                     i2u636_47:
  9420  0026BE  2EE8               	decfsz	wreg,f,c
  9421  0026C0  D7FE               	bra	i2u636_47
  9422  0026C2  2E32               	decfsz	??_servo_ISR_3& (0+255),f,c
  9423  0026C4  D7FC               	bra	i2u636_47
  9424  0026C6  2E33               	decfsz	(??_servo_ISR_3+1)& (0+255),f,c
  9425  0026C8  D7FA               	bra	i2u636_47
  9426                           
  9427                           ;interrupt.c: 579: voltage_C = readADC(5);
  9428  0026CA  0E05               	movlw	5
  9429  0026CC  EC91  F01A         	call	i2_readADC
  9430  0026D0  C027  F042         	movff	?i2_readADC,_voltage_C	;volatile
  9431  0026D4  C028  F043         	movff	?i2_readADC+1,_voltage_C+1	;volatile
  9432  0026D8  C029  F044         	movff	?i2_readADC+2,_voltage_C+2	;volatile
  9433                           
  9434                           ;interrupt.c: 584: volt_check3 = 1;
  9435  0026DC  0E01               	movlw	1
  9436  0026DE  6E5D               	movwf	_volt_check3,c	;volatile
  9437                           
  9438                           ;interrupt.c: 585: set_external_interrupt3(1000);
  9439  0026E0  0E03               	movlw	3
  9440  0026E2  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9441  0026E4  0EE8               	movlw	232
  9442  0026E6  6E09               	movwf	i2set_external_interrupt3@time,c
  9443  0026E8  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9444                           
  9445                           ;interrupt.c: 587: LATCbits.LATC5 = 0;
  9446  0026EC  9A8B               	bcf	3979,5,c	;volatile
  9447                           
  9448                           ;interrupt.c: 589: return;
  9449  0026EE  0012               	return	
  9450  0026F0                     i2l5102:
  9451                           
  9452                           ;interrupt.c: 590: }
  9453                           ;interrupt.c: 592: if(voltage_C > 1.23){
  9454  0026F0  0E71               	movlw	113
  9455  0026F2  6E01               	movwf	i2___ftge@ff1,c
  9456  0026F4  0E9D               	movlw	157
  9457  0026F6  6E02               	movwf	i2___ftge@ff1+1,c
  9458  0026F8  0E3F               	movlw	63
  9459  0026FA  6E03               	movwf	i2___ftge@ff1+2,c
  9460  0026FC  C042  F004         	movff	_voltage_C,i2___ftge@ff2	;volatile
  9461  002700  C043  F005         	movff	_voltage_C+1,i2___ftge@ff2+1	;volatile
  9462  002704  C044  F006         	movff	_voltage_C+2,i2___ftge@ff2+2	;volatile
  9463  002708  EC5A  F01E         	call	i2___ftge	;wreg free
  9464  00270C  B0D8               	btfsc	status,0,c
  9465  00270E  D00E               	goto	i2l5114
  9466                           
  9467                           ;interrupt.c: 593: stage3 = 4;
  9468  002710  0E04               	movlw	4
  9469  002712  6E62               	movwf	_stage3,c	;volatile
  9470                           
  9471                           ;interrupt.c: 594: count_C++;
  9472  002714  0100               	movlb	0	; () banked
  9473  002716  4BF0               	infsnz	_count_C& (0+255),f,b	;volatile
  9474  002718  2BF1               	incf	(_count_C+1)& (0+255),f,b	;volatile
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;interrupt.c: 595: volt_check3 = 0;
  9478  00271A  0E00               	movlw	0
  9479  00271C  6E5D               	movwf	_volt_check3,c	;volatile
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;interrupt.c: 596: set_external_interrupt3(1000);
  9483  00271E  0E03               	movlw	3
  9484  002720  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9485  002722  0EE8               	movlw	232
  9486  002724  6E09               	movwf	i2set_external_interrupt3@time,c
  9487  002726  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9488                           
  9489                           ;interrupt.c: 597: return;
  9490  00272A  0012               	return	
  9491  00272C                     i2l5114:
  9492                           
  9493                           ;interrupt.c: 598: }
  9494                           ;interrupt.c: 600: if (count3 < 40){
  9495  00272C  BE52               	btfsc	_count3+1,7,c	;volatile
  9496  00272E  D006               	goto	i2l5116
  9497  002730  5052               	movf	_count3+1,w,c	;volatile
  9498  002732  E128               	bnz	i2l5136
  9499  002734  0E28               	movlw	40
  9500  002736  5C51               	subwf	_count3,w,c	;volatile
  9501  002738  B0D8               	btfsc	status,0,c
  9502  00273A  D024               	goto	i2l5136
  9503  00273C                     i2l5116:
  9504                           
  9505                           ;interrupt.c: 601: if(current_state3 == 1){
  9506  00273C  0464               	decf	_current_state3,w,c	;volatile
  9507  00273E  A4D8               	btfss	status,2,c
  9508  002740  D00E               	goto	i2l5124
  9509                           
  9510                           ;interrupt.c: 603: current_state3 = 0;
  9511  002742  0E00               	movlw	0
  9512  002744  6E64               	movwf	_current_state3,c	;volatile
  9513                           
  9514                           ;interrupt.c: 604: down_period3 = 20000;
  9515  002746  0E4E               	movlw	78
  9516  002748  6E56               	movwf	_down_period3+1,c	;volatile
  9517  00274A  0E20               	movlw	32
  9518  00274C  6E55               	movwf	_down_period3,c	;volatile
  9519                           
  9520                           ;interrupt.c: 605: LATCbits.LATC2 = 0;
  9521  00274E  948B               	bcf	3979,2,c	;volatile
  9522                           
  9523                           ;interrupt.c: 606: set_external_interrupt3(down_period3);
  9524  002750  C055  F009         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
  9525  002754  C056  F00A         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
  9526  002758  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9527                           
  9528                           ;interrupt.c: 608: }
  9529  00275C  D010               	goto	i2l5132
  9530  00275E                     i2l5124:
  9531                           
  9532                           ;interrupt.c: 609: else if (current_state3 == 0){
  9533  00275E  5064               	movf	_current_state3,w,c	;volatile
  9534  002760  A4D8               	btfss	status,2,c
  9535  002762  D00D               	goto	i2l5132
  9536                           
  9537                           ;interrupt.c: 611: current_state3 = 1;
  9538  002764  0E01               	movlw	1
  9539  002766  6E64               	movwf	_current_state3,c	;volatile
  9540                           
  9541                           ;interrupt.c: 612: up_period3 = 900;
  9542  002768  0E03               	movlw	3
  9543  00276A  6E58               	movwf	_up_period3+1,c	;volatile
  9544  00276C  0E84               	movlw	132
  9545  00276E  6E57               	movwf	_up_period3,c	;volatile
  9546                           
  9547                           ;interrupt.c: 613: LATCbits.LATC2 = 1;
  9548  002770  848B               	bsf	3979,2,c	;volatile
  9549                           
  9550                           ;interrupt.c: 614: set_external_interrupt3(up_period3);
  9551  002772  C057  F009         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
  9552  002776  C058  F00A         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
  9553  00277A  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9554  00277E                     i2l5132:
  9555                           
  9556                           ;interrupt.c: 616: }
  9557                           ;interrupt.c: 617: count3++;
  9558  00277E  4A51               	infsnz	_count3,f,c	;volatile
  9559  002780  2A52               	incf	_count3+1,f,c	;volatile
  9560                           
  9561                           ;interrupt.c: 618: return;
  9562  002782  0012               	return	
  9563  002784                     i2l5136:
  9564                           
  9565                           ;interrupt.c: 619: }
  9566                           ;interrupt.c: 620: count3 = 0;
  9567  002784  0E00               	movlw	0
  9568  002786  6E52               	movwf	_count3+1,c	;volatile
  9569  002788  0E00               	movlw	0
  9570  00278A  6E51               	movwf	_count3,c	;volatile
  9571                           
  9572                           ;interrupt.c: 621: current_state3 = 0;
  9573  00278C  0E00               	movlw	0
  9574  00278E  6E64               	movwf	_current_state3,c	;volatile
  9575                           
  9576                           ;interrupt.c: 622: LATCbits.LATC2 = 0;
  9577  002790  948B               	bcf	3979,2,c	;volatile
  9578                           
  9579                           ;interrupt.c: 623: set_external_interrupt3(20000);
  9580  002792  0E4E               	movlw	78
  9581  002794  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9582  002796  0E20               	movlw	32
  9583  002798  6E09               	movwf	i2set_external_interrupt3@time,c
  9584  00279A  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9585                           
  9586                           ;interrupt.c: 625: count_drained++;
  9587  00279E  0100               	movlb	0	; () banked
  9588  0027A0  4BEE               	infsnz	_count_drained& (0+255),f,b	;volatile
  9589  0027A2  2BEF               	incf	(_count_drained+1)& (0+255),f,b	;volatile
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;interrupt.c: 626: volt_check3 = 0;
  9593  0027A4  0E00               	movlw	0
  9594  0027A6  6E5D               	movwf	_volt_check3,c	;volatile
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;interrupt.c: 627: stage3 = 3;
  9598  0027A8  0E03               	movlw	3
  9599  0027AA  6E62               	movwf	_stage3,c	;volatile
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;interrupt.c: 629: return;
  9603  0027AC  0012               	return	
  9604  0027AE                     i2l5150:
  9605                           
  9606                           ;interrupt.c: 630: }
  9607                           ;interrupt.c: 631: if(stage3 == 3){
  9608  0027AE  0E03               	movlw	3
  9609  0027B0  1862               	xorwf	_stage3,w,c	;volatile
  9610  0027B2  A4D8               	btfss	status,2,c
  9611  0027B4  D04C               	goto	i2l5188
  9612                           
  9613                           ;interrupt.c: 632: if (count3 < 60){
  9614  0027B6  BE52               	btfsc	_count3+1,7,c	;volatile
  9615  0027B8  D006               	goto	i2l5154
  9616  0027BA  5052               	movf	_count3+1,w,c	;volatile
  9617  0027BC  E128               	bnz	i2l5174
  9618  0027BE  0E3C               	movlw	60
  9619  0027C0  5C51               	subwf	_count3,w,c	;volatile
  9620  0027C2  B0D8               	btfsc	status,0,c
  9621  0027C4  D024               	goto	i2l5174
  9622  0027C6                     i2l5154:
  9623                           
  9624                           ;interrupt.c: 633: if(current_state3 == 1){
  9625  0027C6  0464               	decf	_current_state3,w,c	;volatile
  9626  0027C8  A4D8               	btfss	status,2,c
  9627  0027CA  D00E               	goto	i2l5162
  9628                           
  9629                           ;interrupt.c: 635: current_state3 = 0;
  9630  0027CC  0E00               	movlw	0
  9631  0027CE  6E64               	movwf	_current_state3,c	;volatile
  9632                           
  9633                           ;interrupt.c: 636: down_period3 = 20000;
  9634  0027D0  0E4E               	movlw	78
  9635  0027D2  6E56               	movwf	_down_period3+1,c	;volatile
  9636  0027D4  0E20               	movlw	32
  9637  0027D6  6E55               	movwf	_down_period3,c	;volatile
  9638                           
  9639                           ;interrupt.c: 637: LATCbits.LATC2 = 0;
  9640  0027D8  948B               	bcf	3979,2,c	;volatile
  9641                           
  9642                           ;interrupt.c: 638: set_external_interrupt3(down_period3);
  9643  0027DA  C055  F009         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
  9644  0027DE  C056  F00A         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
  9645  0027E2  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9646                           
  9647                           ;interrupt.c: 640: }
  9648  0027E6  D010               	goto	i2l5170
  9649  0027E8                     i2l5162:
  9650                           
  9651                           ;interrupt.c: 641: else if (current_state3 == 0){
  9652  0027E8  5064               	movf	_current_state3,w,c	;volatile
  9653  0027EA  A4D8               	btfss	status,2,c
  9654  0027EC  D00D               	goto	i2l5170
  9655                           
  9656                           ;interrupt.c: 643: current_state3 = 1;
  9657  0027EE  0E01               	movlw	1
  9658  0027F0  6E64               	movwf	_current_state3,c	;volatile
  9659                           
  9660                           ;interrupt.c: 644: up_period3 = 2405;
  9661  0027F2  0E09               	movlw	9
  9662  0027F4  6E58               	movwf	_up_period3+1,c	;volatile
  9663  0027F6  0E65               	movlw	101
  9664  0027F8  6E57               	movwf	_up_period3,c	;volatile
  9665                           
  9666                           ;interrupt.c: 645: LATCbits.LATC2 = 1;
  9667  0027FA  848B               	bsf	3979,2,c	;volatile
  9668                           
  9669                           ;interrupt.c: 646: set_external_interrupt3(up_period3);
  9670  0027FC  C057  F009         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
  9671  002800  C058  F00A         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
  9672  002804  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9673  002808                     i2l5170:
  9674                           
  9675                           ;interrupt.c: 648: }
  9676                           ;interrupt.c: 649: count3++;
  9677  002808  4A51               	infsnz	_count3,f,c	;volatile
  9678  00280A  2A52               	incf	_count3+1,f,c	;volatile
  9679                           
  9680                           ;interrupt.c: 650: return;
  9681  00280C  0012               	return	
  9682  00280E                     i2l5174:
  9683                           
  9684                           ;interrupt.c: 651: }
  9685                           ;interrupt.c: 653: count3 = 0;
  9686  00280E  0E00               	movlw	0
  9687  002810  6E52               	movwf	_count3+1,c	;volatile
  9688  002812  0E00               	movlw	0
  9689  002814  6E51               	movwf	_count3,c	;volatile
  9690                           
  9691                           ;interrupt.c: 654: LATCbits.LATC2 = 0;
  9692  002816  948B               	bcf	3979,2,c	;volatile
  9693                           
  9694                           ;interrupt.c: 655: current_state3 = 0;
  9695  002818  0E00               	movlw	0
  9696  00281A  6E64               	movwf	_current_state3,c	;volatile
  9697                           
  9698                           ;interrupt.c: 656: stage3 = 1;
  9699  00281C  0E01               	movlw	1
  9700  00281E  6E62               	movwf	_stage3,c	;volatile
  9701                           
  9702                           ;interrupt.c: 658: if(init3 == 0){
  9703  002820  0100               	movlb	0	; () banked
  9704  002822  51F8               	movf	_init3& (0+255),w,b	;volatile
  9705  002824  A4D8               	btfss	status,2,c
  9706  002826  D00C               	goto	i2l5184
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;interrupt.c: 659: init3 = 1;
  9710  002828  0E01               	movlw	1
  9711  00282A  0100               	movlb	0	; () banked
  9712  00282C  6FF8               	movwf	_init3& (0+255),b	;volatile
  9713                           
  9714                           ;interrupt.c: 660: process3 = 0;
  9715  00282E  0E00               	movlw	0
  9716  002830  0100               	movlb	0	; () banked
  9717  002832  6FF6               	movwf	_process3& (0+255),b	;volatile
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;interrupt.c: 661: if(process1 == 1){
  9721  002834  0100               	movlb	0	; () banked
  9722  002836  05F7               	decf	_process1& (0+255),w,b	;volatile
  9723  002838  A4D8               	btfss	status,2,c
  9724  00283A  0012               	return	
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;interrupt.c: 662: TMR1ON = 1;
  9728  00283C  80CD               	bsf	4045,0,c	;volatile
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;interrupt.c: 663: }
  9732                           ;interrupt.c: 664: return;
  9733  00283E  0012               	return	
  9734  002840                     i2l5184:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;interrupt.c: 665: }
  9738                           ;interrupt.c: 667: set_external_interrupt3(20000);
  9739  002840  0E4E               	movlw	78
  9740  002842  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9741  002844  0E20               	movlw	32
  9742  002846  6E09               	movwf	i2set_external_interrupt3@time,c
  9743  002848  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9744                           
  9745                           ;interrupt.c: 668: return;
  9746  00284C  0012               	return	
  9747  00284E                     i2l5188:
  9748                           
  9749                           ;interrupt.c: 669: }
  9750                           ;interrupt.c: 670: if(stage3 == 4){
  9751  00284E  0E04               	movlw	4
  9752  002850  1862               	xorwf	_stage3,w,c	;volatile
  9753  002852  A4D8               	btfss	status,2,c
  9754  002854  0012               	return	
  9755                           
  9756                           ;interrupt.c: 671: if(gate_status3 == 0){
  9757  002856  5060               	movf	_gate_status3,w,c	;volatile
  9758  002858  A4D8               	btfss	status,2,c
  9759  00285A  D03C               	goto	i2l5222
  9760                           
  9761                           ;interrupt.c: 672: if (count3 < 25){
  9762  00285C  BE52               	btfsc	_count3+1,7,c	;volatile
  9763  00285E  D006               	goto	i2l5194
  9764  002860  5052               	movf	_count3+1,w,c	;volatile
  9765  002862  E128               	bnz	i2l5214
  9766  002864  0E19               	movlw	25
  9767  002866  5C51               	subwf	_count3,w,c	;volatile
  9768  002868  B0D8               	btfsc	status,0,c
  9769  00286A  D024               	goto	i2l5214
  9770  00286C                     i2l5194:
  9771                           
  9772                           ;interrupt.c: 673: if(current_state3 == 1){
  9773  00286C  0464               	decf	_current_state3,w,c	;volatile
  9774  00286E  A4D8               	btfss	status,2,c
  9775  002870  D00E               	goto	i2l5202
  9776                           
  9777                           ;interrupt.c: 675: current_state3 = 0;
  9778  002872  0E00               	movlw	0
  9779  002874  6E64               	movwf	_current_state3,c	;volatile
  9780                           
  9781                           ;interrupt.c: 676: down_period3 = 20000;
  9782  002876  0E4E               	movlw	78
  9783  002878  6E56               	movwf	_down_period3+1,c	;volatile
  9784  00287A  0E20               	movlw	32
  9785  00287C  6E55               	movwf	_down_period3,c	;volatile
  9786                           
  9787                           ;interrupt.c: 677: LATCbits.LATC7 = 0;
  9788  00287E  9E8B               	bcf	3979,7,c	;volatile
  9789                           
  9790                           ;interrupt.c: 678: set_external_interrupt3(down_period3);
  9791  002880  C055  F009         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
  9792  002884  C056  F00A         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
  9793  002888  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9794                           
  9795                           ;interrupt.c: 680: }
  9796  00288C  D010               	goto	i2l5210
  9797  00288E                     i2l5202:
  9798                           
  9799                           ;interrupt.c: 681: else if (current_state3 == 0){
  9800  00288E  5064               	movf	_current_state3,w,c	;volatile
  9801  002890  A4D8               	btfss	status,2,c
  9802  002892  D00D               	goto	i2l5210
  9803                           
  9804                           ;interrupt.c: 683: current_state3 = 1;
  9805  002894  0E01               	movlw	1
  9806  002896  6E64               	movwf	_current_state3,c	;volatile
  9807                           
  9808                           ;interrupt.c: 684: up_period3 = 2000;
  9809  002898  0E07               	movlw	7
  9810  00289A  6E58               	movwf	_up_period3+1,c	;volatile
  9811  00289C  0ED0               	movlw	208
  9812  00289E  6E57               	movwf	_up_period3,c	;volatile
  9813                           
  9814                           ;interrupt.c: 685: LATCbits.LATC7 = 1;
  9815  0028A0  8E8B               	bsf	3979,7,c	;volatile
  9816                           
  9817                           ;interrupt.c: 686: set_external_interrupt3(up_period3);
  9818  0028A2  C057  F009         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
  9819  0028A6  C058  F00A         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
  9820  0028AA  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9821  0028AE                     i2l5210:
  9822                           
  9823                           ;interrupt.c: 688: }
  9824                           ;interrupt.c: 689: count3++;
  9825  0028AE  4A51               	infsnz	_count3,f,c	;volatile
  9826  0028B0  2A52               	incf	_count3+1,f,c	;volatile
  9827                           
  9828                           ;interrupt.c: 690: return;
  9829  0028B2  0012               	return	
  9830  0028B4                     i2l5214:
  9831                           
  9832                           ;interrupt.c: 691: }
  9833                           ;interrupt.c: 692: gate_status3 = 1;
  9834  0028B4  0E01               	movlw	1
  9835  0028B6  6E60               	movwf	_gate_status3,c	;volatile
  9836                           
  9837                           ;interrupt.c: 693: count3 = 0;
  9838  0028B8  0E00               	movlw	0
  9839  0028BA  6E52               	movwf	_count3+1,c	;volatile
  9840  0028BC  0E00               	movlw	0
  9841  0028BE  6E51               	movwf	_count3,c	;volatile
  9842                           
  9843                           ;interrupt.c: 694: LATCbits.LATC7 = 0;
  9844  0028C0  9E8B               	bcf	3979,7,c	;volatile
  9845                           
  9846                           ;interrupt.c: 695: current_state3 = 0;
  9847  0028C2  0E00               	movlw	0
  9848  0028C4  6E64               	movwf	_current_state3,c	;volatile
  9849                           
  9850                           ;interrupt.c: 696: set_external_interrupt3(20000);
  9851  0028C6  0E4E               	movlw	78
  9852  0028C8  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9853  0028CA  0E20               	movlw	32
  9854  0028CC  6E09               	movwf	i2set_external_interrupt3@time,c
  9855  0028CE  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9856                           
  9857                           ;interrupt.c: 697: return;
  9858  0028D2  0012               	return	
  9859  0028D4                     i2l5222:
  9860                           
  9861                           ;interrupt.c: 698: }
  9862                           ;interrupt.c: 699: if(gate_status3 == 1){
  9863  0028D4  0460               	decf	_gate_status3,w,c	;volatile
  9864  0028D6  A4D8               	btfss	status,2,c
  9865  0028D8  0012               	return	
  9866                           
  9867                           ;interrupt.c: 700: if (count3 < 25){
  9868  0028DA  BE52               	btfsc	_count3+1,7,c	;volatile
  9869  0028DC  D006               	goto	i2l5226
  9870  0028DE  5052               	movf	_count3+1,w,c	;volatile
  9871  0028E0  E128               	bnz	i2l5246
  9872  0028E2  0E19               	movlw	25
  9873  0028E4  5C51               	subwf	_count3,w,c	;volatile
  9874  0028E6  B0D8               	btfsc	status,0,c
  9875  0028E8  D024               	goto	i2l5246
  9876  0028EA                     i2l5226:
  9877                           
  9878                           ;interrupt.c: 701: if(current_state3 == 1){
  9879  0028EA  0464               	decf	_current_state3,w,c	;volatile
  9880  0028EC  A4D8               	btfss	status,2,c
  9881  0028EE  D00E               	goto	i2l5234
  9882                           
  9883                           ;interrupt.c: 703: current_state3 = 0;
  9884  0028F0  0E00               	movlw	0
  9885  0028F2  6E64               	movwf	_current_state3,c	;volatile
  9886                           
  9887                           ;interrupt.c: 704: down_period3 = 20000;
  9888  0028F4  0E4E               	movlw	78
  9889  0028F6  6E56               	movwf	_down_period3+1,c	;volatile
  9890  0028F8  0E20               	movlw	32
  9891  0028FA  6E55               	movwf	_down_period3,c	;volatile
  9892                           
  9893                           ;interrupt.c: 705: LATCbits.LATC7 = 0;
  9894  0028FC  9E8B               	bcf	3979,7,c	;volatile
  9895                           
  9896                           ;interrupt.c: 706: set_external_interrupt3(down_period3);
  9897  0028FE  C055  F009         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
  9898  002902  C056  F00A         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
  9899  002906  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9900                           
  9901                           ;interrupt.c: 708: }
  9902  00290A  D010               	goto	i2l5242
  9903  00290C                     i2l5234:
  9904                           
  9905                           ;interrupt.c: 709: else if (current_state3 == 0){
  9906  00290C  5064               	movf	_current_state3,w,c	;volatile
  9907  00290E  A4D8               	btfss	status,2,c
  9908  002910  D00D               	goto	i2l5242
  9909                           
  9910                           ;interrupt.c: 711: current_state3 = 1;
  9911  002912  0E01               	movlw	1
  9912  002914  6E64               	movwf	_current_state3,c	;volatile
  9913                           
  9914                           ;interrupt.c: 712: up_period3 = 3200;
  9915  002916  0E0C               	movlw	12
  9916  002918  6E58               	movwf	_up_period3+1,c	;volatile
  9917  00291A  0E80               	movlw	128
  9918  00291C  6E57               	movwf	_up_period3,c	;volatile
  9919                           
  9920                           ;interrupt.c: 713: LATCbits.LATC7 = 1;
  9921  00291E  8E8B               	bsf	3979,7,c	;volatile
  9922                           
  9923                           ;interrupt.c: 714: set_external_interrupt3(up_period3);
  9924  002920  C057  F009         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
  9925  002924  C058  F00A         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
  9926  002928  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9927  00292C                     i2l5242:
  9928                           
  9929                           ;interrupt.c: 716: }
  9930                           ;interrupt.c: 717: count3++;
  9931  00292C  4A51               	infsnz	_count3,f,c	;volatile
  9932  00292E  2A52               	incf	_count3+1,f,c	;volatile
  9933                           
  9934                           ;interrupt.c: 718: return;
  9935  002930  0012               	return	
  9936  002932                     i2l5246:
  9937                           
  9938                           ;interrupt.c: 719: }
  9939                           ;interrupt.c: 720: gate_status3 = 0;
  9940  002932  0E00               	movlw	0
  9941  002934  6E60               	movwf	_gate_status3,c	;volatile
  9942                           
  9943                           ;interrupt.c: 721: count3 = 0;
  9944  002936  0E00               	movlw	0
  9945  002938  6E52               	movwf	_count3+1,c	;volatile
  9946  00293A  0E00               	movlw	0
  9947  00293C  6E51               	movwf	_count3,c	;volatile
  9948                           
  9949                           ;interrupt.c: 722: LATCbits.LATC7 = 0;
  9950  00293E  9E8B               	bcf	3979,7,c	;volatile
  9951                           
  9952                           ;interrupt.c: 723: current_state3 = 0;
  9953  002940  0E00               	movlw	0
  9954  002942  6E64               	movwf	_current_state3,c	;volatile
  9955                           
  9956                           ;interrupt.c: 724: stage3 = 3;
  9957  002944  0E03               	movlw	3
  9958  002946  6E62               	movwf	_stage3,c	;volatile
  9959                           
  9960                           ;interrupt.c: 725: set_external_interrupt3(20000);
  9961  002948  0E4E               	movlw	78
  9962  00294A  6E0A               	movwf	i2set_external_interrupt3@time+1,c
  9963  00294C  0E20               	movlw	32
  9964  00294E  6E09               	movwf	i2set_external_interrupt3@time,c
  9965  002950  EC93  F020         	call	i2_set_external_interrupt3	;wreg free
  9966                           
  9967                           ;interrupt.c: 726: return;
  9968  002954  0012               	return	
  9969  002956                     __end_of_servo_ISR_3:
  9970                           	opt stack 0
  9971                           pclatu	equ	0xFFB
  9972                           pclath	equ	0xFFA
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           intcon	equ	0xFF2
  9980                           intcon2	equ	0xFF1
  9981                           postinc0	equ	0xFEE
  9982                           fsr0h	equ	0xFEA
  9983                           fsr0l	equ	0xFE9
  9984                           wreg	equ	0xFE8
  9985                           fsr1h	equ	0xFE2
  9986                           fsr1l	equ	0xFE1
  9987                           indf2	equ	0xFDF
  9988                           postinc2	equ	0xFDE
  9989                           postdec2	equ	0xFDD
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function i2_set_external_interrupt3 *****************
  9995 ;; Defined at:
  9996 ;;		line 109 in file "interrupt.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  time            2    8[COMRAM] int 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  set_external    2   10[COMRAM] unsigned int 
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;Total ram usage:        4 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    1
 10017 ;; This function calls:
 10018 ;;		i2___awdiv
 10019 ;; This function is called by:
 10020 ;;		_servo_ISR_3
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text34
 10025  004126                     __ptext34:
 10026                           	opt stack 0
 10027  004126                     i2_set_external_interrupt3:
 10028                           	opt stack 23
 10029                           
 10030                           ;interrupt.c: 111: unsigned int set_time = 65535 - (time*2/4);
 10031                           
 10032                           ;incstack = 0
 10033  004126  90D8               	bcf	status,0,c
 10034  004128  3409               	rlcf	i2set_external_interrupt3@time,w,c
 10035  00412A  6E01               	movwf	i2___awdiv@dividend,c
 10036  00412C  340A               	rlcf	i2set_external_interrupt3@time+1,w,c
 10037  00412E  6E02               	movwf	i2___awdiv@dividend+1,c
 10038  004130  0E00               	movlw	0
 10039  004132  6E04               	movwf	i2___awdiv@divisor+1,c
 10040  004134  0E04               	movlw	4
 10041  004136  6E03               	movwf	i2___awdiv@divisor,c
 10042  004138  ECA2  F01E         	call	i2___awdiv	;wreg free
 10043  00413C  1E01               	comf	?i2___awdiv,f,c
 10044  00413E  1E02               	comf	?i2___awdiv+1,f,c
 10045  004140  4A01               	infsnz	?i2___awdiv,f,c
 10046  004142  2A02               	incf	?i2___awdiv+1,f,c
 10047  004144  0EFF               	movlw	255
 10048  004146  2401               	addwf	?i2___awdiv,w,c
 10049  004148  6E0B               	movwf	i2set_external_interrupt3@set_time,c
 10050  00414A  0EFF               	movlw	255
 10051  00414C  2002               	addwfc	?i2___awdiv+1,w,c
 10052  00414E  6E0C               	movwf	i2set_external_interrupt3@set_time+1,c
 10053                           
 10054                           ;interrupt.c: 113: TMR3H = set_time >> 8;
 10055  004150  500C               	movf	i2set_external_interrupt3@set_time+1,w,c
 10056  004152  6EB3               	movwf	4019,c	;volatile
 10057                           
 10058                           ;interrupt.c: 114: TMR3L = set_time & 0b11111111;
 10059  004154  C00B  FFB2         	movff	i2set_external_interrupt3@set_time,4018	;volatile
 10060                           
 10061                           ;interrupt.c: 116: TMR3ON = 1;
 10062  004158  80B1               	bsf	4017,0,c	;volatile
 10063                           
 10064                           ;interrupt.c: 117: if(isr1 == 1){
 10065  00415A  0100               	movlb	0	; () banked
 10066  00415C  05FB               	decf	_isr1& (0+255),w,b	;volatile
 10067  00415E  A4D8               	btfss	status,2,c
 10068  004160  D008               	goto	i2l4300
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;interrupt.c: 119: set_time = 65535 - (20000*2/4);
 10072  004162  0E18               	movlw	24
 10073  004164  6E0C               	movwf	i2set_external_interrupt3@set_time+1,c
 10074  004166  0EEF               	movlw	239
 10075  004168  6E0B               	movwf	i2set_external_interrupt3@set_time,c
 10076                           
 10077                           ;interrupt.c: 121: TMR1H = set_time >> 8;
 10078  00416A  500C               	movf	i2set_external_interrupt3@set_time+1,w,c
 10079  00416C  6ECF               	movwf	4047,c	;volatile
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;interrupt.c: 122: TMR1L = set_time & 0b11111111;
 10083  00416E  C00B  FFCE         	movff	i2set_external_interrupt3@set_time,4046	;volatile
 10084  004172                     i2l4300:
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;interrupt.c: 124: }
 10088                           ;interrupt.c: 126: if(process1 == 1){
 10089  004172  0100               	movlb	0	; () banked
 10090  004174  05F7               	decf	_process1& (0+255),w,b	;volatile
 10091  004176  A4D8               	btfss	status,2,c
 10092  004178  0012               	return	
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;interrupt.c: 127: TMR1ON = 1;
 10096  00417A  80CD               	bsf	4045,0,c	;volatile
 10097  00417C  0012               	return	
 10098  00417E                     __end_ofi2_set_external_interrupt3:
 10099                           	opt stack 0
 10100                           pclatu	equ	0xFFB
 10101                           pclath	equ	0xFFA
 10102                           tblptru	equ	0xFF8
 10103                           tblptrh	equ	0xFF7
 10104                           tblptrl	equ	0xFF6
 10105                           tablat	equ	0xFF5
 10106                           prodh	equ	0xFF4
 10107                           prodl	equ	0xFF3
 10108                           intcon	equ	0xFF2
 10109                           intcon2	equ	0xFF1
 10110                           postinc0	equ	0xFEE
 10111                           fsr0h	equ	0xFEA
 10112                           fsr0l	equ	0xFE9
 10113                           wreg	equ	0xFE8
 10114                           fsr1h	equ	0xFE2
 10115                           fsr1l	equ	0xFE1
 10116                           indf2	equ	0xFDF
 10117                           postinc2	equ	0xFDE
 10118                           postdec2	equ	0xFDD
 10119                           fsr2h	equ	0xFDA
 10120                           fsr2l	equ	0xFD9
 10121                           status	equ	0xFD8
 10122                           
 10123 ;; *************** function _servo_ISR_1 *****************
 10124 ;; Defined at:
 10125 ;;		line 132 in file "interrupt.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;		None
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;		None
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;Total ram usage:        2 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    4
 10146 ;; This function calls:
 10147 ;;		i2___ftge
 10148 ;;		i2___ftmul
 10149 ;;		i2_readADC
 10150 ;;		i2_set_external_interrupt1
 10151 ;; This function is called by:
 10152 ;;		_IRQ
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text35
 10157  001F30                     __ptext35:
 10158                           	opt stack 0
 10159  001F30                     _servo_ISR_1:
 10160                           	opt stack 21
 10161                           
 10162                           ;interrupt.c: 133: TMR1IF = 0;
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;incstack = 0
 10166  001F30  909E               	bcf	3998,0,c	;volatile
 10167                           
 10168                           ;interrupt.c: 135: if(LATCbits.LATC2 == 1){
 10169  001F32  A48B               	btfss	3979,2,c	;volatile
 10170  001F34  D00D               	goto	i2l4638
 10171                           
 10172                           ;interrupt.c: 136: TMR3ON = 1;
 10173  001F36  80B1               	bsf	4017,0,c	;volatile
 10174  001F38                     i2l368:
 10175  001F38  A2A1               	btfss	4001,1,c	;volatile
 10176  001F3A  D7FE               	goto	i2l368
 10177                           
 10178                           ;interrupt.c: 139: }
 10179                           ;interrupt.c: 140: TMR3IF = 0;
 10180  001F3C  92A1               	bcf	4001,1,c	;volatile
 10181                           
 10182                           ;interrupt.c: 141: TMR3ON = 0;
 10183  001F3E  90B1               	bcf	4017,0,c	;volatile
 10184                           
 10185                           ;interrupt.c: 142: count3++;
 10186  001F40  4A51               	infsnz	_count3,f,c	;volatile
 10187  001F42  2A52               	incf	_count3+1,f,c	;volatile
 10188                           
 10189                           ;interrupt.c: 143: current_state3 = 0;
 10190  001F44  0E00               	movlw	0
 10191  001F46  6E64               	movwf	_current_state3,c	;volatile
 10192                           
 10193                           ;interrupt.c: 144: isr3 = 1;
 10194  001F48  0E01               	movlw	1
 10195  001F4A  0100               	movlb	0	; () banked
 10196  001F4C  6FFA               	movwf	_isr3& (0+255),b	;volatile
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;interrupt.c: 145: LATCbits.LATC2 = 0;
 10200  001F4E  948B               	bcf	3979,2,c	;volatile
 10201  001F50                     i2l4638:
 10202                           
 10203                           ;interrupt.c: 146: }
 10204                           ;interrupt.c: 148: if(LATCbits.LATC7 == 1){
 10205  001F50  AE8B               	btfss	3979,7,c	;volatile
 10206  001F52  D00D               	goto	i2l4650
 10207                           
 10208                           ;interrupt.c: 149: TMR3ON = 1;
 10209  001F54  80B1               	bsf	4017,0,c	;volatile
 10210  001F56                     i2l372:
 10211  001F56  A2A1               	btfss	4001,1,c	;volatile
 10212  001F58  D7FE               	goto	i2l372
 10213                           
 10214                           ;interrupt.c: 152: }
 10215                           ;interrupt.c: 153: TMR3IF = 0;
 10216  001F5A  92A1               	bcf	4001,1,c	;volatile
 10217                           
 10218                           ;interrupt.c: 154: TMR3ON = 0;
 10219  001F5C  90B1               	bcf	4017,0,c	;volatile
 10220                           
 10221                           ;interrupt.c: 155: count3++;
 10222  001F5E  4A51               	infsnz	_count3,f,c	;volatile
 10223  001F60  2A52               	incf	_count3+1,f,c	;volatile
 10224                           
 10225                           ;interrupt.c: 156: current_state3 = 0;
 10226  001F62  0E00               	movlw	0
 10227  001F64  6E64               	movwf	_current_state3,c	;volatile
 10228                           
 10229                           ;interrupt.c: 157: isr3 = 1;
 10230  001F66  0E01               	movlw	1
 10231  001F68  0100               	movlb	0	; () banked
 10232  001F6A  6FFA               	movwf	_isr3& (0+255),b	;volatile
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;interrupt.c: 158: LATCbits.LATC7 = 0;
 10236  001F6C  9E8B               	bcf	3979,7,c	;volatile
 10237  001F6E                     i2l4650:
 10238                           
 10239                           ;interrupt.c: 159: }
 10240                           ;interrupt.c: 161: if(stage1 == 1){
 10241  001F6E  0463               	decf	_stage1,w,c	;volatile
 10242  001F70  A4D8               	btfss	status,2,c
 10243  001F72  D076               	goto	i2l4708
 10244                           
 10245                           ;interrupt.c: 163: if(volt_check1 == 0){
 10246  001F74  505E               	movf	_volt_check1,w,c	;volatile
 10247  001F76  A4D8               	btfss	status,2,c
 10248  001F78  D02D               	goto	i2l4670
 10249                           
 10250                           ;interrupt.c: 165: voltage_3 = readADC(3);
 10251  001F7A  0E03               	movlw	3
 10252  001F7C  EC91  F01A         	call	i2_readADC
 10253  001F80  C027  F0EB         	movff	?i2_readADC,_voltage_3	;volatile
 10254  001F84  C028  F0EC         	movff	?i2_readADC+1,_voltage_3+1	;volatile
 10255  001F88  C029  F0ED         	movff	?i2_readADC+2,_voltage_3+2	;volatile
 10256                           
 10257                           ;interrupt.c: 167: volt_check1 = 1;
 10258  001F8C  0E01               	movlw	1
 10259  001F8E  6E5E               	movwf	_volt_check1,c	;volatile
 10260                           
 10261                           ;interrupt.c: 168: if(voltage_3 > 3.5){
 10262  001F90  0E00               	movlw	0
 10263  001F92  6E01               	movwf	i2___ftge@ff1,c
 10264  001F94  0E60               	movlw	96
 10265  001F96  6E02               	movwf	i2___ftge@ff1+1,c
 10266  001F98  0E40               	movlw	64
 10267  001F9A  6E03               	movwf	i2___ftge@ff1+2,c
 10268  001F9C  C0EB  F004         	movff	_voltage_3,i2___ftge@ff2	;volatile
 10269  001FA0  C0EC  F005         	movff	_voltage_3+1,i2___ftge@ff2+1	;volatile
 10270  001FA4  C0ED  F006         	movff	_voltage_3+2,i2___ftge@ff2+2	;volatile
 10271  001FA8  EC5A  F01E         	call	i2___ftge	;wreg free
 10272  001FAC  B0D8               	btfsc	status,0,c
 10273  001FAE  D00B               	goto	i2l4666
 10274                           
 10275                           ;interrupt.c: 169: process1 = 0;
 10276  001FB0  0E00               	movlw	0
 10277  001FB2  0100               	movlb	0	; () banked
 10278  001FB4  6FF7               	movwf	_process1& (0+255),b	;volatile
 10279                           
 10280                           ;interrupt.c: 170: volt_check1 = 0;
 10281  001FB6  0E00               	movlw	0
 10282  001FB8  6E5E               	movwf	_volt_check1,c	;volatile
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;interrupt.c: 171: if(process3 == 1){
 10286  001FBA  0100               	movlb	0	; () banked
 10287  001FBC  05F6               	decf	_process3& (0+255),w,b	;volatile
 10288  001FBE  A4D8               	btfss	status,2,c
 10289  001FC0  0012               	return	
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;interrupt.c: 172: TMR3ON = 1;
 10293  001FC2  80B1               	bsf	4017,0,c	;volatile
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;interrupt.c: 173: }
 10297                           ;interrupt.c: 174: return;
 10298  001FC4  0012               	return	
 10299  001FC6                     i2l4666:
 10300                           
 10301                           ;interrupt.c: 175: }
 10302                           ;interrupt.c: 176: set_external_interrupt1(1000);
 10303  001FC6  0E03               	movlw	3
 10304  001FC8  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10305  001FCA  0EE8               	movlw	232
 10306  001FCC  6E09               	movwf	i2set_external_interrupt1@time,c
 10307  001FCE  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10308                           
 10309                           ;interrupt.c: 177: return;
 10310  001FD2  0012               	return	
 10311  001FD4                     i2l4670:
 10312                           
 10313                           ;interrupt.c: 178: }
 10314                           ;interrupt.c: 180: if (count1 < 40){
 10315  001FD4  BE54               	btfsc	_count1+1,7,c	;volatile
 10316  001FD6  D006               	goto	i2l4672
 10317  001FD8  5054               	movf	_count1+1,w,c	;volatile
 10318  001FDA  E130               	bnz	i2l4696
 10319  001FDC  0E28               	movlw	40
 10320  001FDE  5C53               	subwf	_count1,w,c	;volatile
 10321  001FE0  B0D8               	btfsc	status,0,c
 10322  001FE2  D02C               	goto	i2l4696
 10323  001FE4                     i2l4672:
 10324                           
 10325                           ;interrupt.c: 181: if(current_state1 == 1){
 10326  001FE4  0465               	decf	_current_state1,w,c	;volatile
 10327  001FE6  A4D8               	btfss	status,2,c
 10328  001FE8  D00E               	goto	i2l4680
 10329                           
 10330                           ;interrupt.c: 183: current_state1 = 0;
 10331  001FEA  0E00               	movlw	0
 10332  001FEC  6E65               	movwf	_current_state1,c	;volatile
 10333                           
 10334                           ;interrupt.c: 184: down_period1 = 20000;
 10335  001FEE  0E4E               	movlw	78
 10336  001FF0  6E5A               	movwf	_down_period1+1,c	;volatile
 10337  001FF2  0E20               	movlw	32
 10338  001FF4  6E59               	movwf	_down_period1,c	;volatile
 10339                           
 10340                           ;interrupt.c: 185: LATCbits.LATC1 = 0;
 10341  001FF6  928B               	bcf	3979,1,c	;volatile
 10342                           
 10343                           ;interrupt.c: 186: set_external_interrupt1(down_period1);
 10344  001FF8  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 10345  001FFC  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 10346  002000  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10347                           
 10348                           ;interrupt.c: 188: }
 10349  002004  D018               	goto	i2l4692
 10350  002006                     i2l4680:
 10351                           
 10352                           ;interrupt.c: 189: else if (current_state1 == 0){
 10353  002006  5065               	movf	_current_state1,w,c	;volatile
 10354  002008  A4D8               	btfss	status,2,c
 10355  00200A  D015               	goto	i2l4692
 10356                           
 10357                           ;interrupt.c: 191: current_state1 = 1;
 10358  00200C  0E01               	movlw	1
 10359  00200E  6E65               	movwf	_current_state1,c	;volatile
 10360                           
 10361                           ;interrupt.c: 192: up_period1 = 1420;
 10362  002010  0E05               	movlw	5
 10363  002012  6E5C               	movwf	_up_period1+1,c	;volatile
 10364  002014  0E8C               	movlw	140
 10365  002016  6E5B               	movwf	_up_period1,c	;volatile
 10366                           
 10367                           ;interrupt.c: 193: if(process3 == 1){
 10368  002018  0100               	movlb	0	; () banked
 10369  00201A  05F6               	decf	_process3& (0+255),w,b	;volatile
 10370  00201C  A4D8               	btfss	status,2,c
 10371  00201E  D004               	goto	i2l4688
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;interrupt.c: 194: up_period1 = 1450;
 10375  002020  0E05               	movlw	5
 10376  002022  6E5C               	movwf	_up_period1+1,c	;volatile
 10377  002024  0EAA               	movlw	170
 10378  002026  6E5B               	movwf	_up_period1,c	;volatile
 10379  002028                     i2l4688:
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;interrupt.c: 195: }
 10383                           ;interrupt.c: 196: LATCbits.LATC1 = 1;
 10384  002028  828B               	bsf	3979,1,c	;volatile
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;interrupt.c: 197: set_external_interrupt1(up_period1);
 10388  00202A  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 10389  00202E  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 10390  002032  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10391  002036                     i2l4692:
 10392                           
 10393                           ;interrupt.c: 199: }
 10394                           ;interrupt.c: 200: count1++;
 10395  002036  4A53               	infsnz	_count1,f,c	;volatile
 10396  002038  2A54               	incf	_count1+1,f,c	;volatile
 10397                           
 10398                           ;interrupt.c: 201: return;
 10399  00203A  0012               	return	
 10400  00203C                     i2l4696:
 10401                           
 10402                           ;interrupt.c: 202: }
 10403                           ;interrupt.c: 204: count1 = 0;
 10404  00203C  0E00               	movlw	0
 10405  00203E  6E54               	movwf	_count1+1,c	;volatile
 10406  002040  0E00               	movlw	0
 10407  002042  6E53               	movwf	_count1,c	;volatile
 10408                           
 10409                           ;interrupt.c: 205: LATCbits.LATC1 = 0;
 10410  002044  928B               	bcf	3979,1,c	;volatile
 10411                           
 10412                           ;interrupt.c: 206: current_state1 = 0;
 10413  002046  0E00               	movlw	0
 10414  002048  6E65               	movwf	_current_state1,c	;volatile
 10415                           
 10416                           ;interrupt.c: 207: set_external_interrupt1(20000);
 10417  00204A  0E4E               	movlw	78
 10418  00204C  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10419  00204E  0E20               	movlw	32
 10420  002050  6E09               	movwf	i2set_external_interrupt1@time,c
 10421  002052  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10422                           
 10423                           ;interrupt.c: 208: volt_check1 = 0;
 10424  002056  0E00               	movlw	0
 10425  002058  6E5E               	movwf	_volt_check1,c	;volatile
 10426                           
 10427                           ;interrupt.c: 209: stage1 = 2;
 10428  00205A  0E02               	movlw	2
 10429  00205C  6E63               	movwf	_stage1,c	;volatile
 10430                           
 10431                           ;interrupt.c: 210: return;
 10432  00205E  0012               	return	
 10433  002060                     i2l4708:
 10434                           
 10435                           ;interrupt.c: 211: }
 10436                           ;interrupt.c: 213: if(stage1 == 2){
 10437  002060  0E02               	movlw	2
 10438  002062  1863               	xorwf	_stage1,w,c	;volatile
 10439  002064  A4D8               	btfss	status,2,c
 10440  002066  D1A2               	goto	i2l4888
 10441                           
 10442                           ;interrupt.c: 215: if(volt_check1 == 0){
 10443  002068  505E               	movf	_volt_check1,w,c	;volatile
 10444  00206A  A4D8               	btfss	status,2,c
 10445  00206C  D09F               	goto	i2l4760
 10446                           
 10447                           ;interrupt.c: 217: LATDbits.LATD1 = 1;
 10448  00206E  828C               	bsf	3980,1,c	;volatile
 10449                           
 10450                           ;interrupt.c: 218: _delay((unsigned long)((500)*(8000000/4000.0)));
 10451  002070  0E06               	movlw	6
 10452  002072  6E33               	movwf	(??_servo_ISR_1+1)& (0+255),c
 10453  002074  0E13               	movlw	19
 10454  002076  6E32               	movwf	??_servo_ISR_1& (0+255),c
 10455  002078  0EAE               	movlw	174
 10456  00207A                     i2u637_47:
 10457  00207A  2EE8               	decfsz	wreg,f,c
 10458  00207C  D7FE               	bra	i2u637_47
 10459  00207E  2E32               	decfsz	??_servo_ISR_1& (0+255),f,c
 10460  002080  D7FC               	bra	i2u637_47
 10461  002082  2E33               	decfsz	(??_servo_ISR_1+1)& (0+255),f,c
 10462  002084  D7FA               	bra	i2u637_47
 10463                           
 10464                           ;interrupt.c: 220: voltage_0 = readADC(0);
 10465  002086  0E00               	movlw	0
 10466  002088  EC91  F01A         	call	i2_readADC
 10467  00208C  C027  F04E         	movff	?i2_readADC,_voltage_0	;volatile
 10468  002090  C028  F04F         	movff	?i2_readADC+1,_voltage_0+1	;volatile
 10469  002094  C029  F050         	movff	?i2_readADC+2,_voltage_0+2	;volatile
 10470                           
 10471                           ;interrupt.c: 222: if(voltage_0 > 3.5){
 10472  002098  0E00               	movlw	0
 10473  00209A  6E01               	movwf	i2___ftge@ff1,c
 10474  00209C  0E60               	movlw	96
 10475  00209E  6E02               	movwf	i2___ftge@ff1+1,c
 10476  0020A0  0E40               	movlw	64
 10477  0020A2  6E03               	movwf	i2___ftge@ff1+2,c
 10478  0020A4  C04E  F004         	movff	_voltage_0,i2___ftge@ff2	;volatile
 10479  0020A8  C04F  F005         	movff	_voltage_0+1,i2___ftge@ff2+1	;volatile
 10480  0020AC  C050  F006         	movff	_voltage_0+2,i2___ftge@ff2+2	;volatile
 10481  0020B0  EC5A  F01E         	call	i2___ftge	;wreg free
 10482  0020B4  B0D8               	btfsc	status,0,c
 10483  0020B6  D029               	goto	i2l4740
 10484                           
 10485                           ;interrupt.c: 224: LATCbits.LATC0 = 1;
 10486  0020B8  808B               	bsf	3979,0,c	;volatile
 10487                           
 10488                           ;interrupt.c: 225: _delay((unsigned long)((100)*(8000000/4000.0)));
 10489  0020BA  0E02               	movlw	2
 10490  0020BC  6E33               	movwf	(??_servo_ISR_1+1)& (0+255),c
 10491  0020BE  0E04               	movlw	4
 10492  0020C0  6E32               	movwf	??_servo_ISR_1& (0+255),c
 10493  0020C2  0EBA               	movlw	186
 10494  0020C4                     i2u638_47:
 10495  0020C4  2EE8               	decfsz	wreg,f,c
 10496  0020C6  D7FE               	bra	i2u638_47
 10497  0020C8  2E32               	decfsz	??_servo_ISR_1& (0+255),f,c
 10498  0020CA  D7FC               	bra	i2u638_47
 10499  0020CC  2E33               	decfsz	(??_servo_ISR_1+1)& (0+255),f,c
 10500  0020CE  D7FA               	bra	i2u638_47
 10501  0020D0  D000               	nop2	
 10502                           
 10503                           ;interrupt.c: 226: voltage_6 = readADC(6);
 10504  0020D2  0E06               	movlw	6
 10505  0020D4  EC91  F01A         	call	i2_readADC
 10506  0020D8  C027  F04B         	movff	?i2_readADC,_voltage_6	;volatile
 10507  0020DC  C028  F04C         	movff	?i2_readADC+1,_voltage_6+1	;volatile
 10508  0020E0  C029  F04D         	movff	?i2_readADC+2,_voltage_6+2	;volatile
 10509                           
 10510                           ;interrupt.c: 227: AA_or_9V = 1;
 10511  0020E4  0E01               	movlw	1
 10512  0020E6  6E5F               	movwf	_AA_or_9V,c	;volatile
 10513                           
 10514                           ;interrupt.c: 228: voltage_AA = voltage_6;
 10515  0020E8  C04B  F048         	movff	_voltage_6,_voltage_AA	;volatile
 10516  0020EC  C04C  F049         	movff	_voltage_6+1,_voltage_AA+1	;volatile
 10517  0020F0  C04D  F04A         	movff	_voltage_6+2,_voltage_AA+2	;volatile
 10518                           
 10519                           ;interrupt.c: 229: volt_check1 = 1;
 10520  0020F4  0E01               	movlw	1
 10521  0020F6  6E5E               	movwf	_volt_check1,c	;volatile
 10522                           
 10523                           ;interrupt.c: 230: set_external_interrupt1(1000);
 10524  0020F8  0E03               	movlw	3
 10525  0020FA  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10526  0020FC  0EE8               	movlw	232
 10527  0020FE  6E09               	movwf	i2set_external_interrupt1@time,c
 10528  002100  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10529                           
 10530                           ;interrupt.c: 231: LATCbits.LATC0 = 0;
 10531  002104  908B               	bcf	3979,0,c	;volatile
 10532                           
 10533                           ;interrupt.c: 232: LATDbits.LATD1 = 0;
 10534  002106  928C               	bcf	3980,1,c	;volatile
 10535                           
 10536                           ;interrupt.c: 237: return;
 10537  002108  0012               	return	
 10538  00210A                     i2l4740:
 10539                           
 10540                           ;interrupt.c: 238: }
 10541                           ;interrupt.c: 240: AA_or_9V = 2;
 10542  00210A  0E02               	movlw	2
 10543  00210C  6E5F               	movwf	_AA_or_9V,c	;volatile
 10544                           
 10545                           ;interrupt.c: 242: voltage_1 = readADC(1);
 10546  00210E  0E01               	movlw	1
 10547  002110  EC91  F01A         	call	i2_readADC
 10548  002114  C027  F069         	movff	?i2_readADC,_voltage_1	;volatile
 10549  002118  C028  F06A         	movff	?i2_readADC+1,_voltage_1+1	;volatile
 10550  00211C  C029  F06B         	movff	?i2_readADC+2,_voltage_1+2	;volatile
 10551                           
 10552                           ;interrupt.c: 243: voltage_2 = readADC(2);
 10553  002120  0E02               	movlw	2
 10554  002122  EC91  F01A         	call	i2_readADC
 10555  002126  C027  F066         	movff	?i2_readADC,_voltage_2	;volatile
 10556  00212A  C028  F067         	movff	?i2_readADC+1,_voltage_2+1	;volatile
 10557  00212E  C029  F068         	movff	?i2_readADC+2,_voltage_2+2	;volatile
 10558                           
 10559                           ;interrupt.c: 253: if(voltage_1 >= voltage_2){
 10560  002132  C069  F001         	movff	_voltage_1,i2___ftge@ff1	;volatile
 10561  002136  C06A  F002         	movff	_voltage_1+1,i2___ftge@ff1+1	;volatile
 10562  00213A  C06B  F003         	movff	_voltage_1+2,i2___ftge@ff1+2	;volatile
 10563  00213E  C066  F004         	movff	_voltage_2,i2___ftge@ff2	;volatile
 10564  002142  C067  F005         	movff	_voltage_2+1,i2___ftge@ff2+1	;volatile
 10565  002146  C068  F006         	movff	_voltage_2+2,i2___ftge@ff2+2	;volatile
 10566  00214A  EC5A  F01E         	call	i2___ftge	;wreg free
 10567  00214E  A0D8               	btfss	status,0,c
 10568  002150  D00F               	goto	i2l4750
 10569                           
 10570                           ;interrupt.c: 254: voltage_9V = voltage_1*(1.33/1.26);
 10571  002152  C069  F009         	movff	_voltage_1,i2___ftmul@f1	;volatile
 10572  002156  C06A  F00A         	movff	_voltage_1+1,i2___ftmul@f1+1	;volatile
 10573  00215A  C06B  F00B         	movff	_voltage_1+2,i2___ftmul@f1+2	;volatile
 10574  00215E  0E1C               	movlw	28
 10575  002160  6E0C               	movwf	i2___ftmul@f2,c
 10576  002162  0E87               	movlw	135
 10577  002164  6E0D               	movwf	i2___ftmul@f2+1,c
 10578  002166  0E3F               	movlw	63
 10579  002168  6E0E               	movwf	i2___ftmul@f2+2,c
 10580  00216A  ECAC  F01B         	call	i2___ftmul	;wreg free
 10581  00216E  D00E               	goto	L1
 10582  002170                     i2l4750:
 10583                           
 10584                           ;interrupt.c: 256: else{
 10585                           ;interrupt.c: 257: voltage_9V = voltage_2*(1.3/1.2);
 10586  002170  C066  F009         	movff	_voltage_2,i2___ftmul@f1	;volatile
 10587  002174  C067  F00A         	movff	_voltage_2+1,i2___ftmul@f1+1	;volatile
 10588  002178  C068  F00B         	movff	_voltage_2+2,i2___ftmul@f1+2	;volatile
 10589  00217C  0EAB               	movlw	171
 10590  00217E  6E0C               	movwf	i2___ftmul@f2,c
 10591  002180  0E8A               	movlw	138
 10592  002182  6E0D               	movwf	i2___ftmul@f2+1,c
 10593  002184  0E3F               	movlw	63
 10594  002186  6E0E               	movwf	i2___ftmul@f2+2,c
 10595  002188  ECAC  F01B         	call	i2___ftmul	;wreg free
 10596  00218C                     L1:
 10597  00218C  C009  F045         	movff	?i2___ftmul,_voltage_9V	;volatile
 10598  002190  C00A  F046         	movff	?i2___ftmul+1,_voltage_9V+1	;volatile
 10599  002194  C00B  F047         	movff	?i2___ftmul+2,_voltage_9V+2	;volatile
 10600                           
 10601                           ;interrupt.c: 258: }
 10602                           ;interrupt.c: 263: volt_check1 = 1;
 10603  002198  0E01               	movlw	1
 10604  00219A  6E5E               	movwf	_volt_check1,c	;volatile
 10605                           
 10606                           ;interrupt.c: 264: set_external_interrupt1(1000);
 10607  00219C  0E03               	movlw	3
 10608  00219E  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10609  0021A0  0EE8               	movlw	232
 10610  0021A2  6E09               	movwf	i2set_external_interrupt1@time,c
 10611  0021A4  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10612                           
 10613                           ;interrupt.c: 265: LATDbits.LATD1 = 0;
 10614  0021A8  928C               	bcf	3980,1,c	;volatile
 10615                           
 10616                           ;interrupt.c: 267: return;
 10617  0021AA  0012               	return	
 10618  0021AC                     i2l4760:
 10619                           
 10620                           ;interrupt.c: 269: }
 10621                           ;interrupt.c: 271: if(AA_or_9V == 1){
 10622  0021AC  045F               	decf	_AA_or_9V,w,c	;volatile
 10623  0021AE  A4D8               	btfss	status,2,c
 10624  0021B0  D09A               	goto	i2l4838
 10625                           
 10626                           ;interrupt.c: 273: if(voltage_AA < 1.23){
 10627  0021B2  C048  F001         	movff	_voltage_AA,i2___ftge@ff1	;volatile
 10628  0021B6  C049  F002         	movff	_voltage_AA+1,i2___ftge@ff1+1	;volatile
 10629  0021BA  C04A  F003         	movff	_voltage_AA+2,i2___ftge@ff1+2	;volatile
 10630  0021BE  0E71               	movlw	113
 10631  0021C0  6E04               	movwf	i2___ftge@ff2,c
 10632  0021C2  0E9D               	movlw	157
 10633  0021C4  6E05               	movwf	i2___ftge@ff2+1,c
 10634  0021C6  0E3F               	movlw	63
 10635  0021C8  6E06               	movwf	i2___ftge@ff2+2,c
 10636  0021CA  EC5A  F01E         	call	i2___ftge	;wreg free
 10637  0021CE  B0D8               	btfsc	status,0,c
 10638  0021D0  D041               	goto	i2l4800
 10639                           
 10640                           ;interrupt.c: 275: if (count1 < 40){
 10641  0021D2  BE54               	btfsc	_count1+1,7,c	;volatile
 10642  0021D4  D006               	goto	i2l4766
 10643  0021D6  5054               	movf	_count1+1,w,c	;volatile
 10644  0021D8  E128               	bnz	i2l4786
 10645  0021DA  0E28               	movlw	40
 10646  0021DC  5C53               	subwf	_count1,w,c	;volatile
 10647  0021DE  B0D8               	btfsc	status,0,c
 10648  0021E0  D024               	goto	i2l4786
 10649  0021E2                     i2l4766:
 10650                           
 10651                           ;interrupt.c: 276: if(current_state1 == 1){
 10652  0021E2  0465               	decf	_current_state1,w,c	;volatile
 10653  0021E4  A4D8               	btfss	status,2,c
 10654  0021E6  D00E               	goto	i2l4774
 10655                           
 10656                           ;interrupt.c: 278: current_state1 = 0;
 10657  0021E8  0E00               	movlw	0
 10658  0021EA  6E65               	movwf	_current_state1,c	;volatile
 10659                           
 10660                           ;interrupt.c: 279: down_period1 = 20000;
 10661  0021EC  0E4E               	movlw	78
 10662  0021EE  6E5A               	movwf	_down_period1+1,c	;volatile
 10663  0021F0  0E20               	movlw	32
 10664  0021F2  6E59               	movwf	_down_period1,c	;volatile
 10665                           
 10666                           ;interrupt.c: 280: LATCbits.LATC1 = 0;
 10667  0021F4  928B               	bcf	3979,1,c	;volatile
 10668                           
 10669                           ;interrupt.c: 281: set_external_interrupt1(down_period1);
 10670  0021F6  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 10671  0021FA  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 10672  0021FE  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10673                           
 10674                           ;interrupt.c: 283: }
 10675  002202  D010               	goto	i2l4782
 10676  002204                     i2l4774:
 10677                           
 10678                           ;interrupt.c: 284: else if (current_state1 == 0){
 10679  002204  5065               	movf	_current_state1,w,c	;volatile
 10680  002206  A4D8               	btfss	status,2,c
 10681  002208  D00D               	goto	i2l4782
 10682                           
 10683                           ;interrupt.c: 286: current_state1 = 1;
 10684  00220A  0E01               	movlw	1
 10685  00220C  6E65               	movwf	_current_state1,c	;volatile
 10686                           
 10687                           ;interrupt.c: 287: up_period1 = 1800;
 10688  00220E  0E07               	movlw	7
 10689  002210  6E5C               	movwf	_up_period1+1,c	;volatile
 10690  002212  0E08               	movlw	8
 10691  002214  6E5B               	movwf	_up_period1,c	;volatile
 10692                           
 10693                           ;interrupt.c: 288: LATCbits.LATC1 = 1;
 10694  002216  828B               	bsf	3979,1,c	;volatile
 10695                           
 10696                           ;interrupt.c: 289: set_external_interrupt1(up_period1);
 10697  002218  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 10698  00221C  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 10699  002220  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10700  002224                     i2l4782:
 10701                           
 10702                           ;interrupt.c: 291: }
 10703                           ;interrupt.c: 292: count1++;
 10704  002224  4A53               	infsnz	_count1,f,c	;volatile
 10705  002226  2A54               	incf	_count1+1,f,c	;volatile
 10706                           
 10707                           ;interrupt.c: 293: return;
 10708  002228  0012               	return	
 10709  00222A                     i2l4786:
 10710                           
 10711                           ;interrupt.c: 294: }
 10712                           ;interrupt.c: 296: count1 = 0;
 10713  00222A  0E00               	movlw	0
 10714  00222C  6E54               	movwf	_count1+1,c	;volatile
 10715  00222E  0E00               	movlw	0
 10716  002230  6E53               	movwf	_count1,c	;volatile
 10717                           
 10718                           ;interrupt.c: 297: current_state1 = 0;
 10719  002232  0E00               	movlw	0
 10720  002234  6E65               	movwf	_current_state1,c	;volatile
 10721                           
 10722                           ;interrupt.c: 298: LATCbits.LATC1 = 0;
 10723  002236  928B               	bcf	3979,1,c	;volatile
 10724                           
 10725                           ;interrupt.c: 299: set_external_interrupt1(20000);
 10726  002238  0E4E               	movlw	78
 10727  00223A  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10728  00223C  0E20               	movlw	32
 10729  00223E  6E09               	movwf	i2set_external_interrupt1@time,c
 10730  002240  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10731                           
 10732                           ;interrupt.c: 301: stage1 = 3;
 10733  002244  0E03               	movlw	3
 10734  002246  6E63               	movwf	_stage1,c	;volatile
 10735                           
 10736                           ;interrupt.c: 302: count_drained++;
 10737  002248  0100               	movlb	0	; () banked
 10738  00224A  4BEE               	infsnz	_count_drained& (0+255),f,b	;volatile
 10739  00224C  2BEF               	incf	(_count_drained+1)& (0+255),f,b	;volatile
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;interrupt.c: 303: volt_check1 = 0;
 10743  00224E  0E00               	movlw	0
 10744  002250  6E5E               	movwf	_volt_check1,c	;volatile
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;interrupt.c: 304: return;
 10748  002252  0012               	return	
 10749  002254                     i2l4800:
 10750                           
 10751                           ;interrupt.c: 306: }
 10752                           ;interrupt.c: 307: if (count1 < 40){
 10753  002254  BE54               	btfsc	_count1+1,7,c	;volatile
 10754  002256  D006               	goto	i2l4802
 10755  002258  5054               	movf	_count1+1,w,c	;volatile
 10756  00225A  E130               	bnz	i2l4826
 10757  00225C  0E28               	movlw	40
 10758  00225E  5C53               	subwf	_count1,w,c	;volatile
 10759  002260  B0D8               	btfsc	status,0,c
 10760  002262  D02C               	goto	i2l4826
 10761  002264                     i2l4802:
 10762                           
 10763                           ;interrupt.c: 308: if(current_state1 == 1){
 10764  002264  0465               	decf	_current_state1,w,c	;volatile
 10765  002266  A4D8               	btfss	status,2,c
 10766  002268  D00E               	goto	i2l4810
 10767                           
 10768                           ;interrupt.c: 310: current_state1 = 0;
 10769  00226A  0E00               	movlw	0
 10770  00226C  6E65               	movwf	_current_state1,c	;volatile
 10771                           
 10772                           ;interrupt.c: 311: down_period1 = 20000;
 10773  00226E  0E4E               	movlw	78
 10774  002270  6E5A               	movwf	_down_period1+1,c	;volatile
 10775  002272  0E20               	movlw	32
 10776  002274  6E59               	movwf	_down_period1,c	;volatile
 10777                           
 10778                           ;interrupt.c: 312: LATCbits.LATC1 = 0;
 10779  002276  928B               	bcf	3979,1,c	;volatile
 10780                           
 10781                           ;interrupt.c: 313: set_external_interrupt1(down_period1);
 10782  002278  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 10783  00227C  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 10784  002280  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10785                           
 10786                           ;interrupt.c: 315: }
 10787  002284  D018               	goto	i2l4822
 10788  002286                     i2l4810:
 10789                           
 10790                           ;interrupt.c: 316: else if (current_state1 == 0){
 10791  002286  5065               	movf	_current_state1,w,c	;volatile
 10792  002288  A4D8               	btfss	status,2,c
 10793  00228A  D015               	goto	i2l4822
 10794                           
 10795                           ;interrupt.c: 318: current_state1 = 1;
 10796  00228C  0E01               	movlw	1
 10797  00228E  6E65               	movwf	_current_state1,c	;volatile
 10798                           
 10799                           ;interrupt.c: 319: up_period1 = 1100;
 10800  002290  0E04               	movlw	4
 10801  002292  6E5C               	movwf	_up_period1+1,c	;volatile
 10802  002294  0E4C               	movlw	76
 10803  002296  6E5B               	movwf	_up_period1,c	;volatile
 10804                           
 10805                           ;interrupt.c: 320: if(process3 == 1){
 10806  002298  0100               	movlb	0	; () banked
 10807  00229A  05F6               	decf	_process3& (0+255),w,b	;volatile
 10808  00229C  A4D8               	btfss	status,2,c
 10809  00229E  D004               	goto	i2l4818
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;interrupt.c: 321: up_period1 = 1135;
 10813  0022A0  0E04               	movlw	4
 10814  0022A2  6E5C               	movwf	_up_period1+1,c	;volatile
 10815  0022A4  0E6F               	movlw	111
 10816  0022A6  6E5B               	movwf	_up_period1,c	;volatile
 10817  0022A8                     i2l4818:
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;interrupt.c: 322: }
 10821                           ;interrupt.c: 323: LATCbits.LATC1 = 1;
 10822  0022A8  828B               	bsf	3979,1,c	;volatile
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;interrupt.c: 324: set_external_interrupt1(up_period1);
 10826  0022AA  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 10827  0022AE  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 10828  0022B2  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10829  0022B6                     i2l4822:
 10830                           
 10831                           ;interrupt.c: 326: }
 10832                           ;interrupt.c: 327: count1++;
 10833  0022B6  4A53               	infsnz	_count1,f,c	;volatile
 10834  0022B8  2A54               	incf	_count1+1,f,c	;volatile
 10835                           
 10836                           ;interrupt.c: 328: return;
 10837  0022BA  0012               	return	
 10838  0022BC                     i2l4826:
 10839                           
 10840                           ;interrupt.c: 329: }
 10841                           ;interrupt.c: 331: count1 = 0;
 10842  0022BC  0E00               	movlw	0
 10843  0022BE  6E54               	movwf	_count1+1,c	;volatile
 10844  0022C0  0E00               	movlw	0
 10845  0022C2  6E53               	movwf	_count1,c	;volatile
 10846                           
 10847                           ;interrupt.c: 332: current_state1 = 0;
 10848  0022C4  0E00               	movlw	0
 10849  0022C6  6E65               	movwf	_current_state1,c	;volatile
 10850                           
 10851                           ;interrupt.c: 333: LATCbits.LATC1 = 0;
 10852  0022C8  928B               	bcf	3979,1,c	;volatile
 10853                           
 10854                           ;interrupt.c: 334: volt_check1 = 0;
 10855  0022CA  0E00               	movlw	0
 10856  0022CC  6E5E               	movwf	_volt_check1,c	;volatile
 10857                           
 10858                           ;interrupt.c: 335: count_AA++;
 10859  0022CE  0100               	movlb	0	; () banked
 10860  0022D0  4BF4               	infsnz	_count_AA& (0+255),f,b	;volatile
 10861  0022D2  2BF5               	incf	(_count_AA+1)& (0+255),f,b	;volatile
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;interrupt.c: 336: stage1 = 4;
 10865  0022D4  0E04               	movlw	4
 10866  0022D6  6E63               	movwf	_stage1,c	;volatile
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;interrupt.c: 337: set_external_interrupt1(20000);
 10870  0022D8  0E4E               	movlw	78
 10871  0022DA  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10872  0022DC  0E20               	movlw	32
 10873  0022DE  6E09               	movwf	i2set_external_interrupt1@time,c
 10874  0022E0  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10875                           
 10876                           ;interrupt.c: 338: return;
 10877  0022E4  0012               	return	
 10878  0022E6                     i2l4838:
 10879                           
 10880                           ;interrupt.c: 339: }
 10881                           ;interrupt.c: 340: if(AA_or_9V == 2){
 10882  0022E6  0E02               	movlw	2
 10883  0022E8  185F               	xorwf	_AA_or_9V,w,c	;volatile
 10884  0022EA  A4D8               	btfss	status,2,c
 10885  0022EC  D05F               	goto	i2l4888
 10886                           
 10887                           ;interrupt.c: 342: if(voltage_9V > 1.25){
 10888  0022EE  0E00               	movlw	0
 10889  0022F0  6E01               	movwf	i2___ftge@ff1,c
 10890  0022F2  0EA0               	movlw	160
 10891  0022F4  6E02               	movwf	i2___ftge@ff1+1,c
 10892  0022F6  0E3F               	movlw	63
 10893  0022F8  6E03               	movwf	i2___ftge@ff1+2,c
 10894  0022FA  C045  F004         	movff	_voltage_9V,i2___ftge@ff2	;volatile
 10895  0022FE  C046  F005         	movff	_voltage_9V+1,i2___ftge@ff2+1	;volatile
 10896  002302  C047  F006         	movff	_voltage_9V+2,i2___ftge@ff2+2	;volatile
 10897  002306  EC5A  F01E         	call	i2___ftge	;wreg free
 10898  00230A  B0D8               	btfsc	status,0,c
 10899  00230C  D00E               	goto	i2l4852
 10900                           
 10901                           ;interrupt.c: 344: stage1 = 4;
 10902  00230E  0E04               	movlw	4
 10903  002310  6E63               	movwf	_stage1,c	;volatile
 10904                           
 10905                           ;interrupt.c: 345: set_external_interrupt1(1000);
 10906  002312  0E03               	movlw	3
 10907  002314  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 10908  002316  0EE8               	movlw	232
 10909  002318  6E09               	movwf	i2set_external_interrupt1@time,c
 10910  00231A  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10911                           
 10912                           ;interrupt.c: 346: count_9V++;
 10913  00231E  0100               	movlb	0	; () banked
 10914  002320  4BF2               	infsnz	_count_9V& (0+255),f,b	;volatile
 10915  002322  2BF3               	incf	(_count_9V+1)& (0+255),f,b	;volatile
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;interrupt.c: 347: volt_check1 = 0;
 10919  002324  0E00               	movlw	0
 10920  002326  6E5E               	movwf	_volt_check1,c	;volatile
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;interrupt.c: 348: return;
 10924  002328  0012               	return	
 10925  00232A                     i2l4852:
 10926                           
 10927                           ;interrupt.c: 350: }
 10928                           ;interrupt.c: 351: if (count1 < 40){
 10929  00232A  BE54               	btfsc	_count1+1,7,c	;volatile
 10930  00232C  D006               	goto	i2l4854
 10931  00232E  5054               	movf	_count1+1,w,c	;volatile
 10932  002330  E128               	bnz	i2l4874
 10933  002332  0E28               	movlw	40
 10934  002334  5C53               	subwf	_count1,w,c	;volatile
 10935  002336  B0D8               	btfsc	status,0,c
 10936  002338  D024               	goto	i2l4874
 10937  00233A                     i2l4854:
 10938                           
 10939                           ;interrupt.c: 352: if(current_state1 == 1){
 10940  00233A  0465               	decf	_current_state1,w,c	;volatile
 10941  00233C  A4D8               	btfss	status,2,c
 10942  00233E  D00E               	goto	i2l4862
 10943                           
 10944                           ;interrupt.c: 354: current_state1 = 0;
 10945  002340  0E00               	movlw	0
 10946  002342  6E65               	movwf	_current_state1,c	;volatile
 10947                           
 10948                           ;interrupt.c: 355: down_period1 = 20000;
 10949  002344  0E4E               	movlw	78
 10950  002346  6E5A               	movwf	_down_period1+1,c	;volatile
 10951  002348  0E20               	movlw	32
 10952  00234A  6E59               	movwf	_down_period1,c	;volatile
 10953                           
 10954                           ;interrupt.c: 356: LATCbits.LATC1 = 0;
 10955  00234C  928B               	bcf	3979,1,c	;volatile
 10956                           
 10957                           ;interrupt.c: 357: set_external_interrupt1(down_period1);
 10958  00234E  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 10959  002352  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 10960  002356  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10961                           
 10962                           ;interrupt.c: 359: }
 10963  00235A  D010               	goto	i2l4870
 10964  00235C                     i2l4862:
 10965                           
 10966                           ;interrupt.c: 360: else if (current_state1 == 0){
 10967  00235C  5065               	movf	_current_state1,w,c	;volatile
 10968  00235E  A4D8               	btfss	status,2,c
 10969  002360  D00D               	goto	i2l4870
 10970                           
 10971                           ;interrupt.c: 362: current_state1 = 1;
 10972  002362  0E01               	movlw	1
 10973  002364  6E65               	movwf	_current_state1,c	;volatile
 10974                           
 10975                           ;interrupt.c: 363: up_period1 = 1800;
 10976  002366  0E07               	movlw	7
 10977  002368  6E5C               	movwf	_up_period1+1,c	;volatile
 10978  00236A  0E08               	movlw	8
 10979  00236C  6E5B               	movwf	_up_period1,c	;volatile
 10980                           
 10981                           ;interrupt.c: 364: LATCbits.LATC1 = 1;
 10982  00236E  828B               	bsf	3979,1,c	;volatile
 10983                           
 10984                           ;interrupt.c: 365: set_external_interrupt1(up_period1);
 10985  002370  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 10986  002374  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 10987  002378  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 10988  00237C                     i2l4870:
 10989                           
 10990                           ;interrupt.c: 367: }
 10991                           ;interrupt.c: 368: count1++;
 10992  00237C  4A53               	infsnz	_count1,f,c	;volatile
 10993  00237E  2A54               	incf	_count1+1,f,c	;volatile
 10994                           
 10995                           ;interrupt.c: 369: return;
 10996  002380  0012               	return	
 10997  002382                     i2l4874:
 10998                           
 10999                           ;interrupt.c: 370: }
 11000                           ;interrupt.c: 371: count1 = 0;
 11001  002382  0E00               	movlw	0
 11002  002384  6E54               	movwf	_count1+1,c	;volatile
 11003  002386  0E00               	movlw	0
 11004  002388  6E53               	movwf	_count1,c	;volatile
 11005                           
 11006                           ;interrupt.c: 372: current_state1 = 0;
 11007  00238A  0E00               	movlw	0
 11008  00238C  6E65               	movwf	_current_state1,c	;volatile
 11009                           
 11010                           ;interrupt.c: 373: LATCbits.LATC1 = 0;
 11011  00238E  928B               	bcf	3979,1,c	;volatile
 11012                           
 11013                           ;interrupt.c: 374: set_external_interrupt1(20000);
 11014  002390  0E4E               	movlw	78
 11015  002392  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 11016  002394  0E20               	movlw	32
 11017  002396  6E09               	movwf	i2set_external_interrupt1@time,c
 11018  002398  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11019                           
 11020                           ;interrupt.c: 376: volt_check1 = 0;
 11021  00239C  0E00               	movlw	0
 11022  00239E  6E5E               	movwf	_volt_check1,c	;volatile
 11023                           
 11024                           ;interrupt.c: 377: count_drained++;
 11025  0023A0  0100               	movlb	0	; () banked
 11026  0023A2  4BEE               	infsnz	_count_drained& (0+255),f,b	;volatile
 11027  0023A4  2BEF               	incf	(_count_drained+1)& (0+255),f,b	;volatile
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;interrupt.c: 379: stage1 = 3;
 11031  0023A6  0E03               	movlw	3
 11032  0023A8  6E63               	movwf	_stage1,c	;volatile
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;interrupt.c: 380: return;
 11036  0023AA  0012               	return	
 11037  0023AC                     i2l4888:
 11038                           
 11039                           ;interrupt.c: 381: }
 11040                           ;interrupt.c: 382: }
 11041                           ;interrupt.c: 383: if(stage1 == 3){
 11042  0023AC  0E03               	movlw	3
 11043  0023AE  1863               	xorwf	_stage1,w,c	;volatile
 11044  0023B0  A4D8               	btfss	status,2,c
 11045  0023B2  D054               	goto	i2l4930
 11046                           
 11047                           ;interrupt.c: 385: if (count1 < 60){
 11048  0023B4  BE54               	btfsc	_count1+1,7,c	;volatile
 11049  0023B6  D006               	goto	i2l4892
 11050  0023B8  5054               	movf	_count1+1,w,c	;volatile
 11051  0023BA  E130               	bnz	i2l4916
 11052  0023BC  0E3C               	movlw	60
 11053  0023BE  5C53               	subwf	_count1,w,c	;volatile
 11054  0023C0  B0D8               	btfsc	status,0,c
 11055  0023C2  D02C               	goto	i2l4916
 11056  0023C4                     i2l4892:
 11057                           
 11058                           ;interrupt.c: 386: if(current_state1 == 1){
 11059  0023C4  0465               	decf	_current_state1,w,c	;volatile
 11060  0023C6  A4D8               	btfss	status,2,c
 11061  0023C8  D00E               	goto	i2l4900
 11062                           
 11063                           ;interrupt.c: 388: current_state1 = 0;
 11064  0023CA  0E00               	movlw	0
 11065  0023CC  6E65               	movwf	_current_state1,c	;volatile
 11066                           
 11067                           ;interrupt.c: 389: down_period1 = 20000;
 11068  0023CE  0E4E               	movlw	78
 11069  0023D0  6E5A               	movwf	_down_period1+1,c	;volatile
 11070  0023D2  0E20               	movlw	32
 11071  0023D4  6E59               	movwf	_down_period1,c	;volatile
 11072                           
 11073                           ;interrupt.c: 390: LATCbits.LATC1 = 0;
 11074  0023D6  928B               	bcf	3979,1,c	;volatile
 11075                           
 11076                           ;interrupt.c: 391: set_external_interrupt1(down_period1);
 11077  0023D8  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 11078  0023DC  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 11079  0023E0  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11080                           
 11081                           ;interrupt.c: 393: }
 11082  0023E4  D018               	goto	i2l4912
 11083  0023E6                     i2l4900:
 11084                           
 11085                           ;interrupt.c: 394: else if (current_state1 == 0){
 11086  0023E6  5065               	movf	_current_state1,w,c	;volatile
 11087  0023E8  A4D8               	btfss	status,2,c
 11088  0023EA  D015               	goto	i2l4912
 11089                           
 11090                           ;interrupt.c: 396: current_state1 = 1;
 11091  0023EC  0E01               	movlw	1
 11092  0023EE  6E65               	movwf	_current_state1,c	;volatile
 11093                           
 11094                           ;interrupt.c: 397: up_period1 = 910;
 11095  0023F0  0E03               	movlw	3
 11096  0023F2  6E5C               	movwf	_up_period1+1,c	;volatile
 11097  0023F4  0E8E               	movlw	142
 11098  0023F6  6E5B               	movwf	_up_period1,c	;volatile
 11099                           
 11100                           ;interrupt.c: 398: if(process3 == 1){
 11101  0023F8  0100               	movlb	0	; () banked
 11102  0023FA  05F6               	decf	_process3& (0+255),w,b	;volatile
 11103  0023FC  A4D8               	btfss	status,2,c
 11104  0023FE  D004               	goto	i2l4908
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;interrupt.c: 399: up_period1 = 950;
 11108  002400  0E03               	movlw	3
 11109  002402  6E5C               	movwf	_up_period1+1,c	;volatile
 11110  002404  0EB6               	movlw	182
 11111  002406  6E5B               	movwf	_up_period1,c	;volatile
 11112  002408                     i2l4908:
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;interrupt.c: 400: }
 11116                           ;interrupt.c: 401: LATCbits.LATC1 = 1;
 11117  002408  828B               	bsf	3979,1,c	;volatile
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;interrupt.c: 402: set_external_interrupt1(up_period1);
 11121  00240A  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 11122  00240E  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 11123  002412  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11124  002416                     i2l4912:
 11125                           
 11126                           ;interrupt.c: 404: }
 11127                           ;interrupt.c: 405: count1++;
 11128  002416  4A53               	infsnz	_count1,f,c	;volatile
 11129  002418  2A54               	incf	_count1+1,f,c	;volatile
 11130                           
 11131                           ;interrupt.c: 406: return;
 11132  00241A  0012               	return	
 11133  00241C                     i2l4916:
 11134                           
 11135                           ;interrupt.c: 407: }
 11136                           ;interrupt.c: 408: count1 = 0;
 11137  00241C  0E00               	movlw	0
 11138  00241E  6E54               	movwf	_count1+1,c	;volatile
 11139  002420  0E00               	movlw	0
 11140  002422  6E53               	movwf	_count1,c	;volatile
 11141                           
 11142                           ;interrupt.c: 409: LATCbits.LATC1 = 0;
 11143  002424  928B               	bcf	3979,1,c	;volatile
 11144                           
 11145                           ;interrupt.c: 410: current_state1 = 0;
 11146  002426  0E00               	movlw	0
 11147  002428  6E65               	movwf	_current_state1,c	;volatile
 11148                           
 11149                           ;interrupt.c: 411: stage1 = 1;
 11150  00242A  0E01               	movlw	1
 11151  00242C  6E63               	movwf	_stage1,c	;volatile
 11152                           
 11153                           ;interrupt.c: 413: if(init1 == 0){
 11154  00242E  0100               	movlb	0	; () banked
 11155  002430  51F9               	movf	_init1& (0+255),w,b	;volatile
 11156  002432  A4D8               	btfss	status,2,c
 11157  002434  D00C               	goto	i2l4926
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;interrupt.c: 414: init1 = 1;
 11161  002436  0E01               	movlw	1
 11162  002438  0100               	movlb	0	; () banked
 11163  00243A  6FF9               	movwf	_init1& (0+255),b	;volatile
 11164                           
 11165                           ;interrupt.c: 415: process1 = 0;
 11166  00243C  0E00               	movlw	0
 11167  00243E  0100               	movlb	0	; () banked
 11168  002440  6FF7               	movwf	_process1& (0+255),b	;volatile
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;interrupt.c: 416: if(process3 == 1){
 11172  002442  0100               	movlb	0	; () banked
 11173  002444  05F6               	decf	_process3& (0+255),w,b	;volatile
 11174  002446  A4D8               	btfss	status,2,c
 11175  002448  0012               	return	
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;interrupt.c: 417: TMR3ON = 1;
 11179  00244A  80B1               	bsf	4017,0,c	;volatile
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;interrupt.c: 418: }
 11183                           ;interrupt.c: 419: return;
 11184  00244C  0012               	return	
 11185  00244E                     i2l4926:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;interrupt.c: 420: }
 11189                           ;interrupt.c: 422: set_external_interrupt1(20000);
 11190  00244E  0E4E               	movlw	78
 11191  002450  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 11192  002452  0E20               	movlw	32
 11193  002454  6E09               	movwf	i2set_external_interrupt1@time,c
 11194  002456  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11195                           
 11196                           ;interrupt.c: 423: return;
 11197  00245A  0012               	return	
 11198  00245C                     i2l4930:
 11199                           
 11200                           ;interrupt.c: 424: }
 11201                           ;interrupt.c: 425: if(stage1 == 4){
 11202  00245C  0E04               	movlw	4
 11203  00245E  1863               	xorwf	_stage1,w,c	;volatile
 11204  002460  A4D8               	btfss	status,2,c
 11205  002462  0012               	return	
 11206                           
 11207                           ;interrupt.c: 427: if(gate_status1 == 0){
 11208  002464  5061               	movf	_gate_status1,w,c	;volatile
 11209  002466  A4D8               	btfss	status,2,c
 11210  002468  D044               	goto	i2l4968
 11211                           
 11212                           ;interrupt.c: 428: if (count1 < 25){
 11213  00246A  BE54               	btfsc	_count1+1,7,c	;volatile
 11214  00246C  D006               	goto	i2l4936
 11215  00246E  5054               	movf	_count1+1,w,c	;volatile
 11216  002470  E130               	bnz	i2l4960
 11217  002472  0E19               	movlw	25
 11218  002474  5C53               	subwf	_count1,w,c	;volatile
 11219  002476  B0D8               	btfsc	status,0,c
 11220  002478  D02C               	goto	i2l4960
 11221  00247A                     i2l4936:
 11222                           
 11223                           ;interrupt.c: 429: if(current_state1 == 1){
 11224  00247A  0465               	decf	_current_state1,w,c	;volatile
 11225  00247C  A4D8               	btfss	status,2,c
 11226  00247E  D00E               	goto	i2l4944
 11227                           
 11228                           ;interrupt.c: 431: current_state1 = 0;
 11229  002480  0E00               	movlw	0
 11230  002482  6E65               	movwf	_current_state1,c	;volatile
 11231                           
 11232                           ;interrupt.c: 432: down_period1 = 20000;
 11233  002484  0E4E               	movlw	78
 11234  002486  6E5A               	movwf	_down_period1+1,c	;volatile
 11235  002488  0E20               	movlw	32
 11236  00248A  6E59               	movwf	_down_period1,c	;volatile
 11237                           
 11238                           ;interrupt.c: 433: LATCbits.LATC6 = 0;
 11239  00248C  9C8B               	bcf	3979,6,c	;volatile
 11240                           
 11241                           ;interrupt.c: 434: set_external_interrupt1(down_period1);
 11242  00248E  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 11243  002492  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 11244  002496  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11245                           
 11246                           ;interrupt.c: 436: }
 11247  00249A  D018               	goto	i2l4956
 11248  00249C                     i2l4944:
 11249                           
 11250                           ;interrupt.c: 437: else if (current_state1 == 0){
 11251  00249C  5065               	movf	_current_state1,w,c	;volatile
 11252  00249E  A4D8               	btfss	status,2,c
 11253  0024A0  D015               	goto	i2l4956
 11254                           
 11255                           ;interrupt.c: 439: current_state1 = 1;
 11256  0024A2  0E01               	movlw	1
 11257  0024A4  6E65               	movwf	_current_state1,c	;volatile
 11258                           
 11259                           ;interrupt.c: 440: up_period1 = 650;
 11260  0024A6  0E02               	movlw	2
 11261  0024A8  6E5C               	movwf	_up_period1+1,c	;volatile
 11262  0024AA  0E8A               	movlw	138
 11263  0024AC  6E5B               	movwf	_up_period1,c	;volatile
 11264                           
 11265                           ;interrupt.c: 441: if(process3 == 1){
 11266  0024AE  0100               	movlb	0	; () banked
 11267  0024B0  05F6               	decf	_process3& (0+255),w,b	;volatile
 11268  0024B2  A4D8               	btfss	status,2,c
 11269  0024B4  D004               	goto	i2l4952
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;interrupt.c: 442: up_period1 = 680;
 11273  0024B6  0E02               	movlw	2
 11274  0024B8  6E5C               	movwf	_up_period1+1,c	;volatile
 11275  0024BA  0EA8               	movlw	168
 11276  0024BC  6E5B               	movwf	_up_period1,c	;volatile
 11277  0024BE                     i2l4952:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;interrupt.c: 443: }
 11281                           ;interrupt.c: 444: LATCbits.LATC6 = 1;
 11282  0024BE  8C8B               	bsf	3979,6,c	;volatile
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;interrupt.c: 445: set_external_interrupt1(up_period1);
 11286  0024C0  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 11287  0024C4  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 11288  0024C8  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11289  0024CC                     i2l4956:
 11290                           
 11291                           ;interrupt.c: 447: }
 11292                           ;interrupt.c: 448: count1++;
 11293  0024CC  4A53               	infsnz	_count1,f,c	;volatile
 11294  0024CE  2A54               	incf	_count1+1,f,c	;volatile
 11295                           
 11296                           ;interrupt.c: 449: return;
 11297  0024D0  0012               	return	
 11298  0024D2                     i2l4960:
 11299                           
 11300                           ;interrupt.c: 450: }
 11301                           ;interrupt.c: 451: gate_status1 = 1;
 11302  0024D2  0E01               	movlw	1
 11303  0024D4  6E61               	movwf	_gate_status1,c	;volatile
 11304                           
 11305                           ;interrupt.c: 452: count1 = 0;
 11306  0024D6  0E00               	movlw	0
 11307  0024D8  6E54               	movwf	_count1+1,c	;volatile
 11308  0024DA  0E00               	movlw	0
 11309  0024DC  6E53               	movwf	_count1,c	;volatile
 11310                           
 11311                           ;interrupt.c: 453: LATCbits.LATC6 = 0;
 11312  0024DE  9C8B               	bcf	3979,6,c	;volatile
 11313                           
 11314                           ;interrupt.c: 454: current_state1 = 0;
 11315  0024E0  0E00               	movlw	0
 11316  0024E2  6E65               	movwf	_current_state1,c	;volatile
 11317                           
 11318                           ;interrupt.c: 455: set_external_interrupt1(20000);
 11319  0024E4  0E4E               	movlw	78
 11320  0024E6  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 11321  0024E8  0E20               	movlw	32
 11322  0024EA  6E09               	movwf	i2set_external_interrupt1@time,c
 11323  0024EC  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11324                           
 11325                           ;interrupt.c: 456: return;
 11326  0024F0  0012               	return	
 11327  0024F2                     i2l4968:
 11328                           
 11329                           ;interrupt.c: 457: }
 11330                           ;interrupt.c: 458: if(gate_status1 == 1){
 11331  0024F2  0461               	decf	_gate_status1,w,c	;volatile
 11332  0024F4  A4D8               	btfss	status,2,c
 11333  0024F6  0012               	return	
 11334                           
 11335                           ;interrupt.c: 459: if (count1 < 25){
 11336  0024F8  BE54               	btfsc	_count1+1,7,c	;volatile
 11337  0024FA  D006               	goto	i2l4972
 11338  0024FC  5054               	movf	_count1+1,w,c	;volatile
 11339  0024FE  E130               	bnz	i2l4996
 11340  002500  0E19               	movlw	25
 11341  002502  5C53               	subwf	_count1,w,c	;volatile
 11342  002504  B0D8               	btfsc	status,0,c
 11343  002506  D02C               	goto	i2l4996
 11344  002508                     i2l4972:
 11345                           
 11346                           ;interrupt.c: 460: if(current_state1 == 1){
 11347  002508  0465               	decf	_current_state1,w,c	;volatile
 11348  00250A  A4D8               	btfss	status,2,c
 11349  00250C  D00E               	goto	i2l4980
 11350                           
 11351                           ;interrupt.c: 462: current_state1 = 0;
 11352  00250E  0E00               	movlw	0
 11353  002510  6E65               	movwf	_current_state1,c	;volatile
 11354                           
 11355                           ;interrupt.c: 463: down_period1 = 20000;
 11356  002512  0E4E               	movlw	78
 11357  002514  6E5A               	movwf	_down_period1+1,c	;volatile
 11358  002516  0E20               	movlw	32
 11359  002518  6E59               	movwf	_down_period1,c	;volatile
 11360                           
 11361                           ;interrupt.c: 464: LATCbits.LATC6 = 0;
 11362  00251A  9C8B               	bcf	3979,6,c	;volatile
 11363                           
 11364                           ;interrupt.c: 465: set_external_interrupt1(down_period1);
 11365  00251C  C059  F009         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 11366  002520  C05A  F00A         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 11367  002524  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11368                           
 11369                           ;interrupt.c: 467: }
 11370  002528  D018               	goto	i2l4992
 11371  00252A                     i2l4980:
 11372                           
 11373                           ;interrupt.c: 468: else if (current_state1 == 0){
 11374  00252A  5065               	movf	_current_state1,w,c	;volatile
 11375  00252C  A4D8               	btfss	status,2,c
 11376  00252E  D015               	goto	i2l4992
 11377                           
 11378                           ;interrupt.c: 470: current_state1 = 1;
 11379  002530  0E01               	movlw	1
 11380  002532  6E65               	movwf	_current_state1,c	;volatile
 11381                           
 11382                           ;interrupt.c: 471: up_period1 = 1575;
 11383  002534  0E06               	movlw	6
 11384  002536  6E5C               	movwf	_up_period1+1,c	;volatile
 11385  002538  0E27               	movlw	39
 11386  00253A  6E5B               	movwf	_up_period1,c	;volatile
 11387                           
 11388                           ;interrupt.c: 472: if(process3 == 1){
 11389  00253C  0100               	movlb	0	; () banked
 11390  00253E  05F6               	decf	_process3& (0+255),w,b	;volatile
 11391  002540  A4D8               	btfss	status,2,c
 11392  002542  D004               	goto	i2l4988
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;interrupt.c: 473: up_period1 = 1605;
 11396  002544  0E06               	movlw	6
 11397  002546  6E5C               	movwf	_up_period1+1,c	;volatile
 11398  002548  0E45               	movlw	69
 11399  00254A  6E5B               	movwf	_up_period1,c	;volatile
 11400  00254C                     i2l4988:
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;interrupt.c: 474: }
 11404                           ;interrupt.c: 475: LATCbits.LATC6 = 1;
 11405  00254C  8C8B               	bsf	3979,6,c	;volatile
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;interrupt.c: 476: set_external_interrupt1(up_period1);
 11409  00254E  C05B  F009         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 11410  002552  C05C  F00A         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 11411  002556  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11412  00255A                     i2l4992:
 11413                           
 11414                           ;interrupt.c: 478: }
 11415                           ;interrupt.c: 479: count1++;
 11416  00255A  4A53               	infsnz	_count1,f,c	;volatile
 11417  00255C  2A54               	incf	_count1+1,f,c	;volatile
 11418                           
 11419                           ;interrupt.c: 480: return;
 11420  00255E  0012               	return	
 11421  002560                     i2l4996:
 11422                           
 11423                           ;interrupt.c: 481: }
 11424                           ;interrupt.c: 482: gate_status1 = 0;
 11425  002560  0E00               	movlw	0
 11426  002562  6E61               	movwf	_gate_status1,c	;volatile
 11427                           
 11428                           ;interrupt.c: 483: count1 = 0;
 11429  002564  0E00               	movlw	0
 11430  002566  6E54               	movwf	_count1+1,c	;volatile
 11431  002568  0E00               	movlw	0
 11432  00256A  6E53               	movwf	_count1,c	;volatile
 11433                           
 11434                           ;interrupt.c: 484: LATCbits.LATC6 = 0;
 11435  00256C  9C8B               	bcf	3979,6,c	;volatile
 11436                           
 11437                           ;interrupt.c: 485: current_state1 = 0;
 11438  00256E  0E00               	movlw	0
 11439  002570  6E65               	movwf	_current_state1,c	;volatile
 11440                           
 11441                           ;interrupt.c: 486: set_external_interrupt1(20000);
 11442  002572  0E4E               	movlw	78
 11443  002574  6E0A               	movwf	i2set_external_interrupt1@time+1,c
 11444  002576  0E20               	movlw	32
 11445  002578  6E09               	movwf	i2set_external_interrupt1@time,c
 11446  00257A  ECBF  F020         	call	i2_set_external_interrupt1	;wreg free
 11447                           
 11448                           ;interrupt.c: 487: stage1 = 3;
 11449  00257E  0E03               	movlw	3
 11450  002580  6E63               	movwf	_stage1,c	;volatile
 11451                           
 11452                           ;interrupt.c: 488: return;
 11453  002582  0012               	return	
 11454  002584                     __end_of_servo_ISR_1:
 11455                           	opt stack 0
 11456                           pclatu	equ	0xFFB
 11457                           pclath	equ	0xFFA
 11458                           tblptru	equ	0xFF8
 11459                           tblptrh	equ	0xFF7
 11460                           tblptrl	equ	0xFF6
 11461                           tablat	equ	0xFF5
 11462                           prodh	equ	0xFF4
 11463                           prodl	equ	0xFF3
 11464                           intcon	equ	0xFF2
 11465                           intcon2	equ	0xFF1
 11466                           postinc0	equ	0xFEE
 11467                           fsr0h	equ	0xFEA
 11468                           fsr0l	equ	0xFE9
 11469                           wreg	equ	0xFE8
 11470                           fsr1h	equ	0xFE2
 11471                           fsr1l	equ	0xFE1
 11472                           indf2	equ	0xFDF
 11473                           postinc2	equ	0xFDE
 11474                           postdec2	equ	0xFDD
 11475                           fsr2h	equ	0xFDA
 11476                           fsr2l	equ	0xFD9
 11477                           status	equ	0xFD8
 11478                           
 11479 ;; *************** function i2_set_external_interrupt1 *****************
 11480 ;; Defined at:
 11481 ;;		line 85 in file "interrupt.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  time            2    8[COMRAM] int 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  set_external    2   10[COMRAM] unsigned int 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      void 
 11488 ;; Registers used:
 11489 ;;		wreg, status,2, status,0, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;Total ram usage:        4 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    1
 11502 ;; This function calls:
 11503 ;;		i2___awdiv
 11504 ;; This function is called by:
 11505 ;;		_servo_ISR_1
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text36
 11510  00417E                     __ptext36:
 11511                           	opt stack 0
 11512  00417E                     i2_set_external_interrupt1:
 11513                           	opt stack 23
 11514                           
 11515                           ;interrupt.c: 87: unsigned int set_time = 65535 - (time*2/4);
 11516                           
 11517                           ;incstack = 0
 11518  00417E  90D8               	bcf	status,0,c
 11519  004180  3409               	rlcf	i2set_external_interrupt1@time,w,c
 11520  004182  6E01               	movwf	i2___awdiv@dividend,c
 11521  004184  340A               	rlcf	i2set_external_interrupt1@time+1,w,c
 11522  004186  6E02               	movwf	i2___awdiv@dividend+1,c
 11523  004188  0E00               	movlw	0
 11524  00418A  6E04               	movwf	i2___awdiv@divisor+1,c
 11525  00418C  0E04               	movlw	4
 11526  00418E  6E03               	movwf	i2___awdiv@divisor,c
 11527  004190  ECA2  F01E         	call	i2___awdiv	;wreg free
 11528  004194  1E01               	comf	?i2___awdiv,f,c
 11529  004196  1E02               	comf	?i2___awdiv+1,f,c
 11530  004198  4A01               	infsnz	?i2___awdiv,f,c
 11531  00419A  2A02               	incf	?i2___awdiv+1,f,c
 11532  00419C  0EFF               	movlw	255
 11533  00419E  2401               	addwf	?i2___awdiv,w,c
 11534  0041A0  6E0B               	movwf	i2set_external_interrupt1@set_time,c
 11535  0041A2  0EFF               	movlw	255
 11536  0041A4  2002               	addwfc	?i2___awdiv+1,w,c
 11537  0041A6  6E0C               	movwf	i2set_external_interrupt1@set_time+1,c
 11538                           
 11539                           ;interrupt.c: 89: TMR1H = set_time >> 8;
 11540  0041A8  500C               	movf	i2set_external_interrupt1@set_time+1,w,c
 11541  0041AA  6ECF               	movwf	4047,c	;volatile
 11542                           
 11543                           ;interrupt.c: 90: TMR1L = set_time & 0b11111111;
 11544  0041AC  C00B  FFCE         	movff	i2set_external_interrupt1@set_time,4046	;volatile
 11545                           
 11546                           ;interrupt.c: 91: TMR1ON = 1;
 11547  0041B0  80CD               	bsf	4045,0,c	;volatile
 11548                           
 11549                           ;interrupt.c: 93: if(isr3 == 1){
 11550  0041B2  0100               	movlb	0	; () banked
 11551  0041B4  05FA               	decf	_isr3& (0+255),w,b	;volatile
 11552  0041B6  A4D8               	btfss	status,2,c
 11553  0041B8  D008               	goto	i2l4282
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;interrupt.c: 95: set_time = 65535 - (20000*2/4);
 11557  0041BA  0E18               	movlw	24
 11558  0041BC  6E0C               	movwf	i2set_external_interrupt1@set_time+1,c
 11559  0041BE  0EEF               	movlw	239
 11560  0041C0  6E0B               	movwf	i2set_external_interrupt1@set_time,c
 11561                           
 11562                           ;interrupt.c: 97: TMR3H = set_time >> 8;
 11563  0041C2  500C               	movf	i2set_external_interrupt1@set_time+1,w,c
 11564  0041C4  6EB3               	movwf	4019,c	;volatile
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;interrupt.c: 98: TMR3L = set_time & 0b11111111;
 11568  0041C6  C00B  FFB2         	movff	i2set_external_interrupt1@set_time,4018	;volatile
 11569  0041CA                     i2l4282:
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;interrupt.c: 100: }
 11573                           ;interrupt.c: 102: if(process3 == 1){
 11574  0041CA  0100               	movlb	0	; () banked
 11575  0041CC  05F6               	decf	_process3& (0+255),w,b	;volatile
 11576  0041CE  A4D8               	btfss	status,2,c
 11577  0041D0  0012               	return	
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;interrupt.c: 103: TMR3ON = 1;
 11581  0041D2  80B1               	bsf	4017,0,c	;volatile
 11582  0041D4  0012               	return	
 11583  0041D6                     __end_ofi2_set_external_interrupt1:
 11584                           	opt stack 0
 11585                           pclatu	equ	0xFFB
 11586                           pclath	equ	0xFFA
 11587                           tblptru	equ	0xFF8
 11588                           tblptrh	equ	0xFF7
 11589                           tblptrl	equ	0xFF6
 11590                           tablat	equ	0xFF5
 11591                           prodh	equ	0xFF4
 11592                           prodl	equ	0xFF3
 11593                           intcon	equ	0xFF2
 11594                           intcon2	equ	0xFF1
 11595                           postinc0	equ	0xFEE
 11596                           fsr0h	equ	0xFEA
 11597                           fsr0l	equ	0xFE9
 11598                           wreg	equ	0xFE8
 11599                           fsr1h	equ	0xFE2
 11600                           fsr1l	equ	0xFE1
 11601                           indf2	equ	0xFDF
 11602                           postinc2	equ	0xFDE
 11603                           postdec2	equ	0xFDD
 11604                           fsr2h	equ	0xFDA
 11605                           fsr2l	equ	0xFD9
 11606                           status	equ	0xFD8
 11607                           
 11608 ;; *************** function i2___awdiv *****************
 11609 ;; Defined at:
 11610 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awdiv.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;  dividend        2    0[COMRAM] int 
 11613 ;;  divisor         2    2[COMRAM] int 
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;  __awdiv         2    6[COMRAM] int 
 11616 ;;  __awdiv         1    5[COMRAM] unsigned char 
 11617 ;;  __awdiv         1    4[COMRAM] unsigned char 
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  2    0[COMRAM] int 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2, status,0
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;Total ram usage:        8 bytes
 11632 ;; Hardware stack levels used:    1
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		i2_set_external_interrupt1
 11637 ;;		i2_set_external_interrupt3
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text37
 11642  003D44                     __ptext37:
 11643                           	opt stack 0
 11644  003D44                     i2___awdiv:
 11645                           	opt stack 23
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;incstack = 0
 11649  003D44  0E00               	movlw	0
 11650  003D46  6E06               	movwf	i2___awdiv@sign,c
 11651  003D48  AE04               	btfss	i2___awdiv@divisor+1,7,c
 11652  003D4A  D006               	goto	i2l3840
 11653  003D4C  6C03               	negf	i2___awdiv@divisor,c
 11654  003D4E  1E04               	comf	i2___awdiv@divisor+1,f,c
 11655  003D50  B0D8               	btfsc	status,0,c
 11656  003D52  2A04               	incf	i2___awdiv@divisor+1,f,c
 11657  003D54  0E01               	movlw	1
 11658  003D56  6E06               	movwf	i2___awdiv@sign,c
 11659  003D58                     i2l3840:
 11660  003D58  AE02               	btfss	i2___awdiv@dividend+1,7,c
 11661  003D5A  D006               	goto	i2l3846
 11662  003D5C  6C01               	negf	i2___awdiv@dividend,c
 11663  003D5E  1E02               	comf	i2___awdiv@dividend+1,f,c
 11664  003D60  B0D8               	btfsc	status,0,c
 11665  003D62  2A02               	incf	i2___awdiv@dividend+1,f,c
 11666  003D64  0E01               	movlw	1
 11667  003D66  1A06               	xorwf	i2___awdiv@sign,f,c
 11668  003D68                     i2l3846:
 11669  003D68  0E00               	movlw	0
 11670  003D6A  6E08               	movwf	i2___awdiv@quotient+1,c
 11671  003D6C  0E00               	movlw	0
 11672  003D6E  6E07               	movwf	i2___awdiv@quotient,c
 11673  003D70  5003               	movf	i2___awdiv@divisor,w,c
 11674  003D72  1004               	iorwf	i2___awdiv@divisor+1,w,c
 11675  003D74  B4D8               	btfsc	status,2,c
 11676  003D76  D01C               	goto	i2l3868
 11677  003D78  0E01               	movlw	1
 11678  003D7A  6E05               	movwf	i2___awdiv@counter,c
 11679  003D7C  D004               	goto	i2l3854
 11680  003D7E                     i2l3852:
 11681  003D7E  90D8               	bcf	status,0,c
 11682  003D80  3603               	rlcf	i2___awdiv@divisor,f,c
 11683  003D82  3604               	rlcf	i2___awdiv@divisor+1,f,c
 11684  003D84  2A05               	incf	i2___awdiv@counter,f,c
 11685  003D86                     i2l3854:
 11686  003D86  AE04               	btfss	i2___awdiv@divisor+1,7,c
 11687  003D88  D7FA               	goto	i2l3852
 11688  003D8A                     i2l3856:
 11689  003D8A  90D8               	bcf	status,0,c
 11690  003D8C  3607               	rlcf	i2___awdiv@quotient,f,c
 11691  003D8E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 11692  003D90  5003               	movf	i2___awdiv@divisor,w,c
 11693  003D92  5C01               	subwf	i2___awdiv@dividend,w,c
 11694  003D94  5004               	movf	i2___awdiv@divisor+1,w,c
 11695  003D96  5802               	subwfb	i2___awdiv@dividend+1,w,c
 11696  003D98  A0D8               	btfss	status,0,c
 11697  003D9A  D005               	goto	i2l3864
 11698  003D9C  5003               	movf	i2___awdiv@divisor,w,c
 11699  003D9E  5E01               	subwf	i2___awdiv@dividend,f,c
 11700  003DA0  5004               	movf	i2___awdiv@divisor+1,w,c
 11701  003DA2  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 11702  003DA4  8007               	bsf	i2___awdiv@quotient,0,c
 11703  003DA6                     i2l3864:
 11704  003DA6  90D8               	bcf	status,0,c
 11705  003DA8  3204               	rrcf	i2___awdiv@divisor+1,f,c
 11706  003DAA  3203               	rrcf	i2___awdiv@divisor,f,c
 11707  003DAC  2E05               	decfsz	i2___awdiv@counter,f,c
 11708  003DAE  D7ED               	goto	i2l3856
 11709  003DB0                     i2l3868:
 11710  003DB0  5006               	movf	i2___awdiv@sign,w,c
 11711  003DB2  B4D8               	btfsc	status,2,c
 11712  003DB4  D004               	goto	i2l3872
 11713  003DB6  6C07               	negf	i2___awdiv@quotient,c
 11714  003DB8  1E08               	comf	i2___awdiv@quotient+1,f,c
 11715  003DBA  B0D8               	btfsc	status,0,c
 11716  003DBC  2A08               	incf	i2___awdiv@quotient+1,f,c
 11717  003DBE                     i2l3872:
 11718  003DBE  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 11719  003DC2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 11720  003DC6  0012               	return	
 11721  003DC8                     __end_ofi2___awdiv:
 11722                           	opt stack 0
 11723                           pclatu	equ	0xFFB
 11724                           pclath	equ	0xFFA
 11725                           tblptru	equ	0xFF8
 11726                           tblptrh	equ	0xFF7
 11727                           tblptrl	equ	0xFF6
 11728                           tablat	equ	0xFF5
 11729                           prodh	equ	0xFF4
 11730                           prodl	equ	0xFF3
 11731                           intcon	equ	0xFF2
 11732                           intcon2	equ	0xFF1
 11733                           postinc0	equ	0xFEE
 11734                           fsr0h	equ	0xFEA
 11735                           fsr0l	equ	0xFE9
 11736                           wreg	equ	0xFE8
 11737                           fsr1h	equ	0xFE2
 11738                           fsr1l	equ	0xFE1
 11739                           indf2	equ	0xFDF
 11740                           postinc2	equ	0xFDE
 11741                           postdec2	equ	0xFDD
 11742                           fsr2h	equ	0xFDA
 11743                           fsr2l	equ	0xFD9
 11744                           status	equ	0xFD8
 11745                           
 11746 ;; *************** function i2_readADC *****************
 11747 ;; Defined at:
 11748 ;;		line 35 in file "ADC.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  channel         1    wreg     unsigned char 
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;  channel         1   48[COMRAM] unsigned char 
 11753 ;;  readADC         3   45[COMRAM] float 
 11754 ;;  readADC         3   41[COMRAM] float 
 11755 ;;  readADC         1   44[COMRAM] unsigned char 
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  3   38[COMRAM] float 
 11758 ;; Registers used:
 11759 ;;		wreg, status,2, status,0, cstack
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11765 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11768 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11769 ;;Total ram usage:       11 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    3
 11772 ;; This function calls:
 11773 ;;		i2___ftadd
 11774 ;;		i2___ftdiv
 11775 ;;		i2___ftmul
 11776 ;;		i2___lwtoft
 11777 ;;		i2_abs
 11778 ;;		i2_read
 11779 ;; This function is called by:
 11780 ;;		_servo_ISR_1
 11781 ;;		_servo_ISR_3
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text38
 11786  003522                     __ptext38:
 11787                           	opt stack 0
 11788  003522                     i2_readADC:
 11789                           	opt stack 21
 11790                           
 11791                           ;incstack = 0
 11792                           ;i2readADC@channel stored from wreg
 11793  003522  6E31               	movwf	i2readADC@channel,c
 11794                           
 11795                           ;ADC.c: 37: signed float a = 0;
 11796  003524  0E00               	movlw	0
 11797  003526  6E2E               	movwf	i2readADC@a,c
 11798  003528  0E00               	movlw	0
 11799  00352A  6E2F               	movwf	i2readADC@a+1,c
 11800  00352C  0E00               	movlw	0
 11801  00352E  6E30               	movwf	i2readADC@a+2,c
 11802                           
 11803                           ;ADC.c: 39: for(unsigned char i = 0; i < 100; i++){
 11804  003530  0E00               	movlw	0
 11805  003532  6E2D               	movwf	i2readADC@i,c
 11806  003534                     i2l4306:
 11807  003534  0E63               	movlw	99
 11808  003536  642D               	cpfsgt	i2readADC@i,c
 11809  003538  D001               	goto	i2l4310
 11810  00353A  D020               	goto	i2l4318
 11811  00353C                     i2l4310:
 11812                           
 11813                           ;ADC.c: 41: read(channel);
 11814  00353C  5031               	movf	i2readADC@channel,w,c
 11815  00353E  ECF9  F021         	call	i2_read
 11816                           
 11817                           ;ADC.c: 42: a = a + ADRES;
 11818  003542  CFC3 F009          	movff	4035,i2___lwtoft@c	;volatile
 11819  003546  CFC4 F00A          	movff	4036,i2___lwtoft@c+1	;volatile
 11820  00354A  EC0C  F022         	call	i2___lwtoft	;wreg free
 11821  00354E  C009  F00C         	movff	?i2___lwtoft,i2___ftadd@f1
 11822  003552  C00A  F00D         	movff	?i2___lwtoft+1,i2___ftadd@f1+1
 11823  003556  C00B  F00E         	movff	?i2___lwtoft+2,i2___ftadd@f1+2
 11824  00355A  C02E  F00F         	movff	i2readADC@a,i2___ftadd@f2
 11825  00355E  C02F  F010         	movff	i2readADC@a+1,i2___ftadd@f2+1
 11826  003562  C030  F011         	movff	i2readADC@a+2,i2___ftadd@f2+2
 11827  003566  ECB9  F017         	call	i2___ftadd	;wreg free
 11828  00356A  C00C  F02E         	movff	?i2___ftadd,i2readADC@a
 11829  00356E  C00D  F02F         	movff	?i2___ftadd+1,i2readADC@a+1
 11830  003572  C00E  F030         	movff	?i2___ftadd+2,i2readADC@a+2
 11831                           
 11832                           ;ADC.c: 44: _delay((unsigned long)((1)*(8000000/4000000.0)));
 11833  003576  D000               	nop2		;2 cycle nop
 11834  003578  2A2D               	incf	i2readADC@i,f,c
 11835  00357A  D7DC               	goto	i2l4306
 11836  00357C                     i2l4318:
 11837                           
 11838                           ;ADC.c: 45: }
 11839                           ;ADC.c: 47: a = a/100;
 11840  00357C  C02E  F018         	movff	i2readADC@a,i2___ftdiv@f1
 11841  003580  C02F  F019         	movff	i2readADC@a+1,i2___ftdiv@f1+1
 11842  003584  C030  F01A         	movff	i2readADC@a+2,i2___ftdiv@f1+2
 11843  003588  0E00               	movlw	0
 11844  00358A  6E1B               	movwf	i2___ftdiv@f2,c
 11845  00358C  0EC8               	movlw	200
 11846  00358E  6E1C               	movwf	i2___ftdiv@f2+1,c
 11847  003590  0E42               	movlw	66
 11848  003592  6E1D               	movwf	i2___ftdiv@f2+2,c
 11849  003594  EC26  F01C         	call	i2___ftdiv	;wreg free
 11850  003598  C018  F02E         	movff	?i2___ftdiv,i2readADC@a
 11851  00359C  C019  F02F         	movff	?i2___ftdiv+1,i2readADC@a+1
 11852  0035A0  C01A  F030         	movff	?i2___ftdiv+2,i2readADC@a+2
 11853                           
 11854                           ;ADC.c: 49: signed float volt = a*4.957152/1023;
 11855  0035A4  0EA1               	movlw	161
 11856  0035A6  6E0C               	movwf	i2___ftmul@f2,c
 11857  0035A8  0E9E               	movlw	158
 11858  0035AA  6E0D               	movwf	i2___ftmul@f2+1,c
 11859  0035AC  0E40               	movlw	64
 11860  0035AE  6E0E               	movwf	i2___ftmul@f2+2,c
 11861  0035B0  C02E  F009         	movff	i2readADC@a,i2___ftmul@f1
 11862  0035B4  C02F  F00A         	movff	i2readADC@a+1,i2___ftmul@f1+1
 11863  0035B8  C030  F00B         	movff	i2readADC@a+2,i2___ftmul@f1+2
 11864  0035BC  ECAC  F01B         	call	i2___ftmul	;wreg free
 11865  0035C0  C009  F018         	movff	?i2___ftmul,i2___ftdiv@f1
 11866  0035C4  C00A  F019         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11867  0035C8  C00B  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11868  0035CC  0EC0               	movlw	192
 11869  0035CE  6E1B               	movwf	i2___ftdiv@f2,c
 11870  0035D0  0E7F               	movlw	127
 11871  0035D2  6E1C               	movwf	i2___ftdiv@f2+1,c
 11872  0035D4  0E44               	movlw	68
 11873  0035D6  6E1D               	movwf	i2___ftdiv@f2+2,c
 11874  0035D8  EC26  F01C         	call	i2___ftdiv	;wreg free
 11875  0035DC  C018  F02A         	movff	?i2___ftdiv,i2readADC@volt
 11876  0035E0  C019  F02B         	movff	?i2___ftdiv+1,i2readADC@volt+1
 11877  0035E4  C01A  F02C         	movff	?i2___ftdiv+2,i2readADC@volt+2
 11878                           
 11879                           ;ADC.c: 51: if(channel == 1 || channel == 2 || channel == 5 || channel == 6){
 11880  0035E8  0431               	decf	i2readADC@channel,w,c
 11881  0035EA  B4D8               	btfsc	status,2,c
 11882  0035EC  D00C               	goto	i2l4328
 11883  0035EE  0E02               	movlw	2
 11884  0035F0  1831               	xorwf	i2readADC@channel,w,c
 11885  0035F2  B4D8               	btfsc	status,2,c
 11886  0035F4  D008               	goto	i2l4328
 11887  0035F6  0E05               	movlw	5
 11888  0035F8  1831               	xorwf	i2readADC@channel,w,c
 11889  0035FA  B4D8               	btfsc	status,2,c
 11890  0035FC  D004               	goto	i2l4328
 11891  0035FE  0E06               	movlw	6
 11892  003600  1831               	xorwf	i2readADC@channel,w,c
 11893  003602  A4D8               	btfss	status,2,c
 11894  003604  D01C               	goto	i2l4330
 11895  003606                     i2l4328:
 11896                           
 11897                           ;ADC.c: 52: volt = abs(volt - 2.5);
 11898  003606  C02A  F00C         	movff	i2readADC@volt,i2___ftadd@f1
 11899  00360A  C02B  F00D         	movff	i2readADC@volt+1,i2___ftadd@f1+1
 11900  00360E  C02C  F00E         	movff	i2readADC@volt+2,i2___ftadd@f1+2
 11901  003612  0E00               	movlw	0
 11902  003614  6E0F               	movwf	i2___ftadd@f2,c
 11903  003616  0E20               	movlw	32
 11904  003618  6E10               	movwf	i2___ftadd@f2+1,c
 11905  00361A  0EC0               	movlw	192
 11906  00361C  6E11               	movwf	i2___ftadd@f2+2,c
 11907  00361E  ECB9  F017         	call	i2___ftadd	;wreg free
 11908  003622  C00C  F018         	movff	?i2___ftadd,i2abs@num
 11909  003626  C00D  F019         	movff	?i2___ftadd+1,i2abs@num+1
 11910  00362A  C00E  F01A         	movff	?i2___ftadd+2,i2abs@num+2
 11911  00362E  ECEB  F020         	call	i2_abs	;wreg free
 11912  003632  C018  F02A         	movff	?i2_abs,i2readADC@volt
 11913  003636  C019  F02B         	movff	?i2_abs+1,i2readADC@volt+1
 11914  00363A  C01A  F02C         	movff	?i2_abs+2,i2readADC@volt+2
 11915  00363E                     i2l4330:
 11916                           
 11917                           ;ADC.c: 53: }
 11918                           ;ADC.c: 55: return volt;
 11919  00363E  C02A  F027         	movff	i2readADC@volt,?i2_readADC
 11920  003642  C02B  F028         	movff	i2readADC@volt+1,?i2_readADC+1
 11921  003646  C02C  F029         	movff	i2readADC@volt+2,?i2_readADC+2
 11922  00364A  0012               	return	
 11923  00364C                     __end_ofi2_readADC:
 11924                           	opt stack 0
 11925                           pclatu	equ	0xFFB
 11926                           pclath	equ	0xFFA
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           intcon	equ	0xFF2
 11934                           intcon2	equ	0xFF1
 11935                           postinc0	equ	0xFEE
 11936                           fsr0h	equ	0xFEA
 11937                           fsr0l	equ	0xFE9
 11938                           wreg	equ	0xFE8
 11939                           fsr1h	equ	0xFE2
 11940                           fsr1l	equ	0xFE1
 11941                           indf2	equ	0xFDF
 11942                           postinc2	equ	0xFDE
 11943                           postdec2	equ	0xFDD
 11944                           fsr2h	equ	0xFDA
 11945                           fsr2l	equ	0xFD9
 11946                           status	equ	0xFD8
 11947                           
 11948 ;; *************** function i2_read *****************
 11949 ;; Defined at:
 11950 ;;		line 27 in file "ADC.c"
 11951 ;; Parameters:    Size  Location     Type
 11952 ;;  channel2        1    wreg     unsigned char 
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;  channel2        1    1[COMRAM] unsigned char 
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  1    wreg      void 
 11957 ;; Registers used:
 11958 ;;		wreg, status,2, status,0, cstack
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;Total ram usage:        2 bytes
 11969 ;; Hardware stack levels used:    1
 11970 ;; This function calls:
 11971 ;;		Nothing
 11972 ;; This function is called by:
 11973 ;;		i2_readADC
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text39
 11978  0043F2                     __ptext39:
 11979                           	opt stack 0
 11980  0043F2                     i2_read:
 11981                           	opt stack 23
 11982                           
 11983                           ;incstack = 0
 11984                           ;i2read@channel2 stored from wreg
 11985  0043F2  6E02               	movwf	i2read@channel2,c
 11986                           
 11987                           ;ADC.c: 29: ADCON0 = ((channel2 << 2));
 11988  0043F4  4402               	rlncf	i2read@channel2,w,c
 11989  0043F6  46E8               	rlncf	wreg,f,c
 11990  0043F8  0BFC               	andlw	252
 11991  0043FA  6EC2               	movwf	4034,c	;volatile
 11992                           
 11993                           ;ADC.c: 30: ADON = 1;
 11994  0043FC  80C2               	bsf	4034,0,c	;volatile
 11995                           
 11996                           ;ADC.c: 31: ADCON0bits.GO = 1;
 11997  0043FE  82C2               	bsf	4034,1,c	;volatile
 11998                           
 11999                           ;ADC.c: 32: while(ADCON0bits.GO_NOT_DONE){_delay((unsigned long)((2)*(8000000/4000.0)));
      +                          }
 12000  004400  D008               	goto	i2l3830
 12001  004402                     i2l3828:
 12002  004402  0E06               	movlw	6
 12003  004404  6E01               	movwf	??i2_read& (0+255),c
 12004  004406  0E30               	movlw	48
 12005  004408                     i2u639_47:
 12006  004408  2EE8               	decfsz	wreg,f,c
 12007  00440A  D7FE               	bra	i2u639_47
 12008  00440C  2E01               	decfsz	??i2_read& (0+255),f,c
 12009  00440E  D7FC               	bra	i2u639_47
 12010  004410  D000               	nop2	
 12011  004412                     i2l3830:
 12012  004412  A2C2               	btfss	4034,1,c	;volatile
 12013  004414  0012               	return	
 12014  004416  D7F5               	goto	i2l3828
 12015  004418                     __end_ofi2_read:
 12016                           	opt stack 0
 12017                           pclatu	equ	0xFFB
 12018                           pclath	equ	0xFFA
 12019                           tblptru	equ	0xFF8
 12020                           tblptrh	equ	0xFF7
 12021                           tblptrl	equ	0xFF6
 12022                           tablat	equ	0xFF5
 12023                           prodh	equ	0xFF4
 12024                           prodl	equ	0xFF3
 12025                           intcon	equ	0xFF2
 12026                           intcon2	equ	0xFF1
 12027                           postinc0	equ	0xFEE
 12028                           fsr0h	equ	0xFEA
 12029                           fsr0l	equ	0xFE9
 12030                           wreg	equ	0xFE8
 12031                           fsr1h	equ	0xFE2
 12032                           fsr1l	equ	0xFE1
 12033                           indf2	equ	0xFDF
 12034                           postinc2	equ	0xFDE
 12035                           postdec2	equ	0xFDD
 12036                           fsr2h	equ	0xFDA
 12037                           fsr2l	equ	0xFD9
 12038                           status	equ	0xFD8
 12039                           
 12040 ;; *************** function i2_abs *****************
 12041 ;; Defined at:
 12042 ;;		line 20 in file "ADC.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;  num             3   23[COMRAM] float 
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  3   23[COMRAM] float 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2, status,0, cstack
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12056 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12060 ;;Total ram usage:        3 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    2
 12063 ;; This function calls:
 12064 ;;		i2___ftge
 12065 ;;		i2___ftmul
 12066 ;; This function is called by:
 12067 ;;		i2_readADC
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text40
 12072  0041D6                     __ptext40:
 12073                           	opt stack 0
 12074  0041D6                     i2_abs:
 12075                           	opt stack 21
 12076                           
 12077                           ;ADC.c: 21: if(num > 0){
 12078                           
 12079                           ;incstack = 0
 12080  0041D6  0E00               	movlw	0
 12081  0041D8  6E01               	movwf	i2___ftge@ff1,c
 12082  0041DA  0E00               	movlw	0
 12083  0041DC  6E02               	movwf	i2___ftge@ff1+1,c
 12084  0041DE  0E00               	movlw	0
 12085  0041E0  6E03               	movwf	i2___ftge@ff1+2,c
 12086  0041E2  C018  F004         	movff	i2abs@num,i2___ftge@ff2
 12087  0041E6  C019  F005         	movff	i2abs@num+1,i2___ftge@ff2+1
 12088  0041EA  C01A  F006         	movff	i2abs@num+2,i2___ftge@ff2+2
 12089  0041EE  EC5A  F01E         	call	i2___ftge	;wreg free
 12090  0041F2  B0D8               	btfsc	status,0,c
 12091  0041F4  D007               	goto	i2l3818
 12092                           
 12093                           ;ADC.c: 22: return num;
 12094  0041F6  C018  F018         	movff	i2abs@num,?i2_abs
 12095  0041FA  C019  F019         	movff	i2abs@num+1,?i2_abs+1
 12096  0041FE  C01A  F01A         	movff	i2abs@num+2,?i2_abs+2
 12097  004202  0012               	return	
 12098  004204                     i2l3818:
 12099                           
 12100                           ;ADC.c: 23: }
 12101                           ;ADC.c: 24: return (-1)*num;
 12102  004204  C018  F009         	movff	i2abs@num,i2___ftmul@f1
 12103  004208  C019  F00A         	movff	i2abs@num+1,i2___ftmul@f1+1
 12104  00420C  C01A  F00B         	movff	i2abs@num+2,i2___ftmul@f1+2
 12105  004210  0E00               	movlw	0
 12106  004212  6E0C               	movwf	i2___ftmul@f2,c
 12107  004214  0E80               	movlw	128
 12108  004216  6E0D               	movwf	i2___ftmul@f2+1,c
 12109  004218  0EBF               	movlw	191
 12110  00421A  6E0E               	movwf	i2___ftmul@f2+2,c
 12111  00421C  ECAC  F01B         	call	i2___ftmul	;wreg free
 12112  004220  C009  F018         	movff	?i2___ftmul,?i2_abs
 12113  004224  C00A  F019         	movff	?i2___ftmul+1,?i2_abs+1
 12114  004228  C00B  F01A         	movff	?i2___ftmul+2,?i2_abs+2
 12115  00422C  0012               	return	
 12116  00422E                     __end_ofi2_abs:
 12117                           	opt stack 0
 12118                           pclatu	equ	0xFFB
 12119                           pclath	equ	0xFFA
 12120                           tblptru	equ	0xFF8
 12121                           tblptrh	equ	0xFF7
 12122                           tblptrl	equ	0xFF6
 12123                           tablat	equ	0xFF5
 12124                           prodh	equ	0xFF4
 12125                           prodl	equ	0xFF3
 12126                           intcon	equ	0xFF2
 12127                           intcon2	equ	0xFF1
 12128                           postinc0	equ	0xFEE
 12129                           fsr0h	equ	0xFEA
 12130                           fsr0l	equ	0xFE9
 12131                           wreg	equ	0xFE8
 12132                           fsr1h	equ	0xFE2
 12133                           fsr1l	equ	0xFE1
 12134                           indf2	equ	0xFDF
 12135                           postinc2	equ	0xFDE
 12136                           postdec2	equ	0xFDD
 12137                           fsr2h	equ	0xFDA
 12138                           fsr2l	equ	0xFD9
 12139                           status	equ	0xFD8
 12140                           
 12141 ;; *************** function i2___ftmul *****************
 12142 ;; Defined at:
 12143 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;  f1              3    8[COMRAM] float 
 12146 ;;  f2              3   11[COMRAM] float 
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  __ftmul         3   18[COMRAM] unsigned um
 12149 ;;  __ftmul         1   22[COMRAM] unsigned char 
 12150 ;;  __ftmul         1   21[COMRAM] unsigned char 
 12151 ;;  __ftmul         1   17[COMRAM] unsigned char 
 12152 ;; Return value:  Size  Location     Type
 12153 ;;                  3    8[COMRAM] float 
 12154 ;; Registers used:
 12155 ;;		wreg, status,2, status,0, cstack
 12156 ;; Tracked objects:
 12157 ;;		On entry : 0/0
 12158 ;;		On exit  : 0/0
 12159 ;;		Unchanged: 0/0
 12160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12161 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12162 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12164 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12165 ;;Total ram usage:       15 bytes
 12166 ;; Hardware stack levels used:    1
 12167 ;; Hardware stack levels required when called:    1
 12168 ;; This function calls:
 12169 ;;		i2___ftpack
 12170 ;; This function is called by:
 12171 ;;		_servo_ISR_1
 12172 ;;		i2_abs
 12173 ;;		i2_readADC
 12174 ;; This function uses a non-reentrant model
 12175 ;;
 12176                           
 12177                           	psect	text41
 12178  003758                     __ptext41:
 12179                           	opt stack 0
 12180  003758                     i2___ftmul:
 12181                           	opt stack 21
 12182                           
 12183                           ;incstack = 0
 12184  003758  C00B  F00F         	movff	i2___ftmul@f1+2,??i2___ftmul
 12185  00375C  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
 12186  00375E  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
 12187  003760  340A               	rlcf	i2___ftmul@f1+1,w,c
 12188  003762  360F               	rlcf	??i2___ftmul& (0+255),f,c
 12189  003764  E301               	bnc	u329_41
 12190  003766  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
 12191  003768                     u329_41:
 12192  003768  500F               	movf	??i2___ftmul,w,c
 12193  00376A  6E12               	movwf	i2___ftmul@exp,c
 12194  00376C  5012               	movf	i2___ftmul@exp,w,c
 12195  00376E  A4D8               	btfss	status,2,c
 12196  003770  D007               	goto	i2l3688
 12197  003772  0E00               	movlw	0
 12198  003774  6E09               	movwf	?i2___ftmul,c
 12199  003776  0E00               	movlw	0
 12200  003778  6E0A               	movwf	?i2___ftmul+1,c
 12201  00377A  0E00               	movlw	0
 12202  00377C  6E0B               	movwf	?i2___ftmul+2,c
 12203  00377E  0012               	return	
 12204  003780                     i2l3688:
 12205  003780  C00E  F00F         	movff	i2___ftmul@f2+2,??i2___ftmul
 12206  003784  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
 12207  003786  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
 12208  003788  340D               	rlcf	i2___ftmul@f2+1,w,c
 12209  00378A  360F               	rlcf	??i2___ftmul& (0+255),f,c
 12210  00378C  E301               	bnc	u331_41
 12211  00378E  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
 12212  003790                     u331_41:
 12213  003790  500F               	movf	??i2___ftmul,w,c
 12214  003792  6E17               	movwf	i2___ftmul@sign,c
 12215  003794  5017               	movf	i2___ftmul@sign,w,c
 12216  003796  A4D8               	btfss	status,2,c
 12217  003798  D007               	goto	i2l3694
 12218  00379A  0E00               	movlw	0
 12219  00379C  6E09               	movwf	?i2___ftmul,c
 12220  00379E  0E00               	movlw	0
 12221  0037A0  6E0A               	movwf	?i2___ftmul+1,c
 12222  0037A2  0E00               	movlw	0
 12223  0037A4  6E0B               	movwf	?i2___ftmul+2,c
 12224  0037A6  0012               	return	
 12225  0037A8                     i2l3694:
 12226  0037A8  5017               	movf	i2___ftmul@sign,w,c
 12227  0037AA  0F7B               	addlw	123
 12228  0037AC  2612               	addwf	i2___ftmul@exp,f,c
 12229  0037AE  C00B  F017         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 12230  0037B2  500E               	movf	i2___ftmul@f2+2,w,c
 12231  0037B4  1A17               	xorwf	i2___ftmul@sign,f,c
 12232  0037B6  0E80               	movlw	128
 12233  0037B8  1617               	andwf	i2___ftmul@sign,f,c
 12234  0037BA  8E0A               	bsf	i2___ftmul@f1+1,7,c
 12235  0037BC  8E0D               	bsf	i2___ftmul@f2+1,7,c
 12236  0037BE  0EFF               	movlw	255
 12237  0037C0  160C               	andwf	i2___ftmul@f2,f,c
 12238  0037C2  0EFF               	movlw	255
 12239  0037C4  160D               	andwf	i2___ftmul@f2+1,f,c
 12240  0037C6  0E00               	movlw	0
 12241  0037C8  160E               	andwf	i2___ftmul@f2+2,f,c
 12242  0037CA  0E00               	movlw	0
 12243  0037CC  6E13               	movwf	i2___ftmul@f3_as_product,c
 12244  0037CE  0E00               	movlw	0
 12245  0037D0  6E14               	movwf	i2___ftmul@f3_as_product+1,c
 12246  0037D2  0E00               	movlw	0
 12247  0037D4  6E15               	movwf	i2___ftmul@f3_as_product+2,c
 12248  0037D6  0E07               	movlw	7
 12249  0037D8  6E16               	movwf	i2___ftmul@cntr,c
 12250  0037DA                     i2l3708:
 12251  0037DA  A009               	btfss	i2___ftmul@f1,0,c
 12252  0037DC  D006               	goto	i2l3712
 12253  0037DE  500C               	movf	i2___ftmul@f2,w,c
 12254  0037E0  2613               	addwf	i2___ftmul@f3_as_product,f,c
 12255  0037E2  500D               	movf	i2___ftmul@f2+1,w,c
 12256  0037E4  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
 12257  0037E6  500E               	movf	i2___ftmul@f2+2,w,c
 12258  0037E8  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
 12259  0037EA                     i2l3712:
 12260  0037EA  90D8               	bcf	status,0,c
 12261  0037EC  320B               	rrcf	i2___ftmul@f1+2,f,c
 12262  0037EE  320A               	rrcf	i2___ftmul@f1+1,f,c
 12263  0037F0  3209               	rrcf	i2___ftmul@f1,f,c
 12264  0037F2  90D8               	bcf	status,0,c
 12265  0037F4  360C               	rlcf	i2___ftmul@f2,f,c
 12266  0037F6  360D               	rlcf	i2___ftmul@f2+1,f,c
 12267  0037F8  360E               	rlcf	i2___ftmul@f2+2,f,c
 12268  0037FA  2E16               	decfsz	i2___ftmul@cntr,f,c
 12269  0037FC  D7EE               	goto	i2l3708
 12270  0037FE  0E09               	movlw	9
 12271  003800  6E16               	movwf	i2___ftmul@cntr,c
 12272  003802                     i2l3718:
 12273  003802  A009               	btfss	i2___ftmul@f1,0,c
 12274  003804  D006               	goto	i2l3722
 12275  003806  500C               	movf	i2___ftmul@f2,w,c
 12276  003808  2613               	addwf	i2___ftmul@f3_as_product,f,c
 12277  00380A  500D               	movf	i2___ftmul@f2+1,w,c
 12278  00380C  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
 12279  00380E  500E               	movf	i2___ftmul@f2+2,w,c
 12280  003810  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
 12281  003812                     i2l3722:
 12282  003812  90D8               	bcf	status,0,c
 12283  003814  320B               	rrcf	i2___ftmul@f1+2,f,c
 12284  003816  320A               	rrcf	i2___ftmul@f1+1,f,c
 12285  003818  3209               	rrcf	i2___ftmul@f1,f,c
 12286  00381A  90D8               	bcf	status,0,c
 12287  00381C  3215               	rrcf	i2___ftmul@f3_as_product+2,f,c
 12288  00381E  3214               	rrcf	i2___ftmul@f3_as_product+1,f,c
 12289  003820  3213               	rrcf	i2___ftmul@f3_as_product,f,c
 12290  003822  2E16               	decfsz	i2___ftmul@cntr,f,c
 12291  003824  D7EE               	goto	i2l3718
 12292  003826  C013  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 12293  00382A  C014  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 12294  00382E  C015  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 12295  003832  C012  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 12296  003836  C017  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 12297  00383A  ECBA  F01D         	call	i2___ftpack	;wreg free
 12298  00383E  C001  F009         	movff	?i2___ftpack,?i2___ftmul
 12299  003842  C002  F00A         	movff	?i2___ftpack+1,?i2___ftmul+1
 12300  003846  C003  F00B         	movff	?i2___ftpack+2,?i2___ftmul+2
 12301  00384A  0012               	return	
 12302  00384C                     __end_ofi2___ftmul:
 12303                           	opt stack 0
 12304                           pclatu	equ	0xFFB
 12305                           pclath	equ	0xFFA
 12306                           tblptru	equ	0xFF8
 12307                           tblptrh	equ	0xFF7
 12308                           tblptrl	equ	0xFF6
 12309                           tablat	equ	0xFF5
 12310                           prodh	equ	0xFF4
 12311                           prodl	equ	0xFF3
 12312                           intcon	equ	0xFF2
 12313                           intcon2	equ	0xFF1
 12314                           postinc0	equ	0xFEE
 12315                           fsr0h	equ	0xFEA
 12316                           fsr0l	equ	0xFE9
 12317                           wreg	equ	0xFE8
 12318                           fsr1h	equ	0xFE2
 12319                           fsr1l	equ	0xFE1
 12320                           indf2	equ	0xFDF
 12321                           postinc2	equ	0xFDE
 12322                           postdec2	equ	0xFDD
 12323                           fsr2h	equ	0xFDA
 12324                           fsr2l	equ	0xFD9
 12325                           status	equ	0xFD8
 12326                           
 12327 ;; *************** function i2___ftge *****************
 12328 ;; Defined at:
 12329 ;;		line 4 in file "/Applications/microchip/xc8/v1.41/sources/common/ftge.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;  ff1             3    0[COMRAM] float 
 12332 ;;  ff2             3    3[COMRAM] float 
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;		None
 12335 ;; Return value:  Size  Location     Type
 12336 ;;		None               void
 12337 ;; Registers used:
 12338 ;;		wreg, status,2, status,0
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/0
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;Total ram usage:        9 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; This function calls:
 12351 ;;		Nothing
 12352 ;; This function is called by:
 12353 ;;		_servo_ISR_1
 12354 ;;		_servo_ISR_3
 12355 ;;		i2_abs
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           	psect	text42
 12360  003CB4                     __ptext42:
 12361                           	opt stack 0
 12362  003CB4                     i2___ftge:
 12363                           	opt stack 22
 12364                           
 12365                           ;incstack = 0
 12366  003CB4  AE03               	btfss	i2___ftge@ff1+2,7,c
 12367  003CB6  D016               	goto	i2l3668
 12368  003CB8  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 12369  003CBC  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 12370  003CC0  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 12371  003CC4  1E07               	comf	??i2___ftge,f,c
 12372  003CC6  1E08               	comf	??i2___ftge+1,f,c
 12373  003CC8  1E09               	comf	??i2___ftge+2,f,c
 12374  003CCA  2A07               	incf	??i2___ftge,f,c
 12375  003CCC  0E00               	movlw	0
 12376  003CCE  2208               	addwfc	??i2___ftge+1,f,c
 12377  003CD0  2209               	addwfc	??i2___ftge+2,f,c
 12378  003CD2  0E00               	movlw	0
 12379  003CD4  2407               	addwf	??i2___ftge,w,c
 12380  003CD6  6E01               	movwf	i2___ftge@ff1,c
 12381  003CD8  0E00               	movlw	0
 12382  003CDA  2008               	addwfc	??i2___ftge+1,w,c
 12383  003CDC  6E02               	movwf	i2___ftge@ff1+1,c
 12384  003CDE  0E80               	movlw	128
 12385  003CE0  2009               	addwfc	??i2___ftge+2,w,c
 12386  003CE2  6E03               	movwf	i2___ftge@ff1+2,c
 12387  003CE4                     i2l3668:
 12388  003CE4  AE06               	btfss	i2___ftge@ff2+2,7,c
 12389  003CE6  D016               	goto	i2l3672
 12390  003CE8  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 12391  003CEC  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 12392  003CF0  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 12393  003CF4  1E07               	comf	??i2___ftge,f,c
 12394  003CF6  1E08               	comf	??i2___ftge+1,f,c
 12395  003CF8  1E09               	comf	??i2___ftge+2,f,c
 12396  003CFA  2A07               	incf	??i2___ftge,f,c
 12397  003CFC  0E00               	movlw	0
 12398  003CFE  2208               	addwfc	??i2___ftge+1,f,c
 12399  003D00  2209               	addwfc	??i2___ftge+2,f,c
 12400  003D02  0E00               	movlw	0
 12401  003D04  2407               	addwf	??i2___ftge,w,c
 12402  003D06  6E04               	movwf	i2___ftge@ff2,c
 12403  003D08  0E00               	movlw	0
 12404  003D0A  2008               	addwfc	??i2___ftge+1,w,c
 12405  003D0C  6E05               	movwf	i2___ftge@ff2+1,c
 12406  003D0E  0E80               	movlw	128
 12407  003D10  2009               	addwfc	??i2___ftge+2,w,c
 12408  003D12  6E06               	movwf	i2___ftge@ff2+2,c
 12409  003D14                     i2l3672:
 12410  003D14  0E00               	movlw	0
 12411  003D16  1A01               	xorwf	i2___ftge@ff1,f,c
 12412  003D18  0E00               	movlw	0
 12413  003D1A  1A02               	xorwf	i2___ftge@ff1+1,f,c
 12414  003D1C  0E80               	movlw	128
 12415  003D1E  1A03               	xorwf	i2___ftge@ff1+2,f,c
 12416  003D20  0E00               	movlw	0
 12417  003D22  1A04               	xorwf	i2___ftge@ff2,f,c
 12418  003D24  0E00               	movlw	0
 12419  003D26  1A05               	xorwf	i2___ftge@ff2+1,f,c
 12420  003D28  0E80               	movlw	128
 12421  003D2A  1A06               	xorwf	i2___ftge@ff2+2,f,c
 12422  003D2C  5004               	movf	i2___ftge@ff2,w,c
 12423  003D2E  5C01               	subwf	i2___ftge@ff1,w,c
 12424  003D30  5005               	movf	i2___ftge@ff2+1,w,c
 12425  003D32  5802               	subwfb	i2___ftge@ff1+1,w,c
 12426  003D34  5006               	movf	i2___ftge@ff2+2,w,c
 12427  003D36  5803               	subwfb	i2___ftge@ff1+2,w,c
 12428  003D38  B0D8               	btfsc	status,0,c
 12429  003D3A  D002               	goto	i2l3678
 12430  003D3C  90D8               	bcf	status,0,c
 12431  003D3E  0012               	return	
 12432  003D40                     i2l3678:
 12433  003D40  80D8               	bsf	status,0,c
 12434  003D42  0012               	return	
 12435  003D44                     __end_ofi2___ftge:
 12436                           	opt stack 0
 12437                           pclatu	equ	0xFFB
 12438                           pclath	equ	0xFFA
 12439                           tblptru	equ	0xFF8
 12440                           tblptrh	equ	0xFF7
 12441                           tblptrl	equ	0xFF6
 12442                           tablat	equ	0xFF5
 12443                           prodh	equ	0xFF4
 12444                           prodl	equ	0xFF3
 12445                           intcon	equ	0xFF2
 12446                           intcon2	equ	0xFF1
 12447                           postinc0	equ	0xFEE
 12448                           fsr0h	equ	0xFEA
 12449                           fsr0l	equ	0xFE9
 12450                           wreg	equ	0xFE8
 12451                           fsr1h	equ	0xFE2
 12452                           fsr1l	equ	0xFE1
 12453                           indf2	equ	0xFDF
 12454                           postinc2	equ	0xFDE
 12455                           postdec2	equ	0xFDD
 12456                           fsr2h	equ	0xFDA
 12457                           fsr2l	equ	0xFD9
 12458                           status	equ	0xFD8
 12459                           
 12460 ;; *************** function i2___lwtoft *****************
 12461 ;; Defined at:
 12462 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
 12463 ;; Parameters:    Size  Location     Type
 12464 ;;  c               2    8[COMRAM] unsigned int 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  3    8[COMRAM] float 
 12469 ;; Registers used:
 12470 ;;		wreg, status,2, status,0, cstack
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12480 ;;Total ram usage:        3 bytes
 12481 ;; Hardware stack levels used:    1
 12482 ;; Hardware stack levels required when called:    1
 12483 ;; This function calls:
 12484 ;;		i2___ftpack
 12485 ;; This function is called by:
 12486 ;;		i2_readADC
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text43
 12491  004418                     __ptext43:
 12492                           	opt stack 0
 12493  004418                     i2___lwtoft:
 12494                           	opt stack 22
 12495                           
 12496                           ;incstack = 0
 12497  004418  C009  F001         	movff	i2___lwtoft@c,i2___ftpack@arg
 12498  00441C  C00A  F002         	movff	i2___lwtoft@c+1,i2___ftpack@arg+1
 12499  004420  6A03               	clrf	i2___ftpack@arg+2,c
 12500  004422  0E8E               	movlw	142
 12501  004424  6E04               	movwf	i2___ftpack@exp,c
 12502  004426  0E00               	movlw	0
 12503  004428  6E05               	movwf	i2___ftpack@sign,c
 12504  00442A  ECBA  F01D         	call	i2___ftpack	;wreg free
 12505  00442E  C001  F009         	movff	?i2___ftpack,?i2___lwtoft
 12506  004432  C002  F00A         	movff	?i2___ftpack+1,?i2___lwtoft+1
 12507  004436  C003  F00B         	movff	?i2___ftpack+2,?i2___lwtoft+2
 12508  00443A  0012               	return	
 12509  00443C                     __end_ofi2___lwtoft:
 12510                           	opt stack 0
 12511                           pclatu	equ	0xFFB
 12512                           pclath	equ	0xFFA
 12513                           tblptru	equ	0xFF8
 12514                           tblptrh	equ	0xFF7
 12515                           tblptrl	equ	0xFF6
 12516                           tablat	equ	0xFF5
 12517                           prodh	equ	0xFF4
 12518                           prodl	equ	0xFF3
 12519                           intcon	equ	0xFF2
 12520                           intcon2	equ	0xFF1
 12521                           postinc0	equ	0xFEE
 12522                           fsr0h	equ	0xFEA
 12523                           fsr0l	equ	0xFE9
 12524                           wreg	equ	0xFE8
 12525                           fsr1h	equ	0xFE2
 12526                           fsr1l	equ	0xFE1
 12527                           indf2	equ	0xFDF
 12528                           postinc2	equ	0xFDE
 12529                           postdec2	equ	0xFDD
 12530                           fsr2h	equ	0xFDA
 12531                           fsr2l	equ	0xFD9
 12532                           status	equ	0xFD8
 12533                           
 12534 ;; *************** function i2___ftdiv *****************
 12535 ;; Defined at:
 12536 ;;		line 54 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  f1              3   23[COMRAM] float 
 12539 ;;  f2              3   26[COMRAM] float 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;  __ftdiv         3   33[COMRAM] float 
 12542 ;;  __ftdiv         1   37[COMRAM] unsigned char 
 12543 ;;  __ftdiv         1   36[COMRAM] unsigned char 
 12544 ;;  __ftdiv         1   32[COMRAM] unsigned char 
 12545 ;; Return value:  Size  Location     Type
 12546 ;;                  3   23[COMRAM] float 
 12547 ;; Registers used:
 12548 ;;		wreg, status,2, status,0, cstack
 12549 ;; Tracked objects:
 12550 ;;		On entry : 0/0
 12551 ;;		On exit  : 0/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12556 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;Total ram usage:       15 bytes
 12559 ;; Hardware stack levels used:    1
 12560 ;; Hardware stack levels required when called:    1
 12561 ;; This function calls:
 12562 ;;		i2___ftpack
 12563 ;; This function is called by:
 12564 ;;		i2_readADC
 12565 ;; This function uses a non-reentrant model
 12566 ;;
 12567                           
 12568                           	psect	text44
 12569  00384C                     __ptext44:
 12570                           	opt stack 0
 12571  00384C                     i2___ftdiv:
 12572                           	opt stack 22
 12573                           
 12574                           ;incstack = 0
 12575  00384C  C01A  F01E         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 12576  003850  6A1F               	clrf	(??i2___ftdiv+1)& (0+255),c
 12577  003852  6A20               	clrf	(??i2___ftdiv+2)& (0+255),c
 12578  003854  3419               	rlcf	i2___ftdiv@f1+1,w,c
 12579  003856  361E               	rlcf	??i2___ftdiv& (0+255),f,c
 12580  003858  E301               	bnc	u373_41
 12581  00385A  801F               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 12582  00385C                     u373_41:
 12583  00385C  501E               	movf	??i2___ftdiv,w,c
 12584  00385E  6E25               	movwf	i2___ftdiv@exp,c
 12585  003860  5025               	movf	i2___ftdiv@exp,w,c
 12586  003862  A4D8               	btfss	status,2,c
 12587  003864  D007               	goto	i2l3952
 12588  003866  0E00               	movlw	0
 12589  003868  6E18               	movwf	?i2___ftdiv,c
 12590  00386A  0E00               	movlw	0
 12591  00386C  6E19               	movwf	?i2___ftdiv+1,c
 12592  00386E  0E00               	movlw	0
 12593  003870  6E1A               	movwf	?i2___ftdiv+2,c
 12594  003872  0012               	return	
 12595  003874                     i2l3952:
 12596  003874  C01D  F01E         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 12597  003878  6A1F               	clrf	(??i2___ftdiv+1)& (0+255),c
 12598  00387A  6A20               	clrf	(??i2___ftdiv+2)& (0+255),c
 12599  00387C  341C               	rlcf	i2___ftdiv@f2+1,w,c
 12600  00387E  361E               	rlcf	??i2___ftdiv& (0+255),f,c
 12601  003880  E301               	bnc	u375_41
 12602  003882  801F               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 12603  003884                     u375_41:
 12604  003884  501E               	movf	??i2___ftdiv,w,c
 12605  003886  6E26               	movwf	i2___ftdiv@sign,c
 12606  003888  5026               	movf	i2___ftdiv@sign,w,c
 12607  00388A  A4D8               	btfss	status,2,c
 12608  00388C  D007               	goto	i2l3958
 12609  00388E  0E00               	movlw	0
 12610  003890  6E18               	movwf	?i2___ftdiv,c
 12611  003892  0E00               	movlw	0
 12612  003894  6E19               	movwf	?i2___ftdiv+1,c
 12613  003896  0E00               	movlw	0
 12614  003898  6E1A               	movwf	?i2___ftdiv+2,c
 12615  00389A  0012               	return	
 12616  00389C                     i2l3958:
 12617  00389C  0E00               	movlw	0
 12618  00389E  6E22               	movwf	i2___ftdiv@f3,c
 12619  0038A0  0E00               	movlw	0
 12620  0038A2  6E23               	movwf	i2___ftdiv@f3+1,c
 12621  0038A4  0E00               	movlw	0
 12622  0038A6  6E24               	movwf	i2___ftdiv@f3+2,c
 12623  0038A8  5026               	movf	i2___ftdiv@sign,w,c
 12624  0038AA  0F89               	addlw	137
 12625  0038AC  5E25               	subwf	i2___ftdiv@exp,f,c
 12626  0038AE  C01A  F026         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 12627  0038B2  501D               	movf	i2___ftdiv@f2+2,w,c
 12628  0038B4  1A26               	xorwf	i2___ftdiv@sign,f,c
 12629  0038B6  0E80               	movlw	128
 12630  0038B8  1626               	andwf	i2___ftdiv@sign,f,c
 12631  0038BA  8E19               	bsf	i2___ftdiv@f1+1,7,c
 12632  0038BC  0EFF               	movlw	255
 12633  0038BE  1618               	andwf	i2___ftdiv@f1,f,c
 12634  0038C0  0EFF               	movlw	255
 12635  0038C2  1619               	andwf	i2___ftdiv@f1+1,f,c
 12636  0038C4  0E00               	movlw	0
 12637  0038C6  161A               	andwf	i2___ftdiv@f1+2,f,c
 12638  0038C8  8E1C               	bsf	i2___ftdiv@f2+1,7,c
 12639  0038CA  0EFF               	movlw	255
 12640  0038CC  161B               	andwf	i2___ftdiv@f2,f,c
 12641  0038CE  0EFF               	movlw	255
 12642  0038D0  161C               	andwf	i2___ftdiv@f2+1,f,c
 12643  0038D2  0E00               	movlw	0
 12644  0038D4  161D               	andwf	i2___ftdiv@f2+2,f,c
 12645  0038D6  0E18               	movlw	24
 12646  0038D8  6E21               	movwf	i2___ftdiv@cntr,c
 12647  0038DA                     i2l3978:
 12648  0038DA  90D8               	bcf	status,0,c
 12649  0038DC  3622               	rlcf	i2___ftdiv@f3,f,c
 12650  0038DE  3623               	rlcf	i2___ftdiv@f3+1,f,c
 12651  0038E0  3624               	rlcf	i2___ftdiv@f3+2,f,c
 12652  0038E2  501B               	movf	i2___ftdiv@f2,w,c
 12653  0038E4  5C18               	subwf	i2___ftdiv@f1,w,c
 12654  0038E6  501C               	movf	i2___ftdiv@f2+1,w,c
 12655  0038E8  5819               	subwfb	i2___ftdiv@f1+1,w,c
 12656  0038EA  501D               	movf	i2___ftdiv@f2+2,w,c
 12657  0038EC  581A               	subwfb	i2___ftdiv@f1+2,w,c
 12658  0038EE  A0D8               	btfss	status,0,c
 12659  0038F0  D007               	goto	i2l1100
 12660  0038F2  501B               	movf	i2___ftdiv@f2,w,c
 12661  0038F4  5E18               	subwf	i2___ftdiv@f1,f,c
 12662  0038F6  501C               	movf	i2___ftdiv@f2+1,w,c
 12663  0038F8  5A19               	subwfb	i2___ftdiv@f1+1,f,c
 12664  0038FA  501D               	movf	i2___ftdiv@f2+2,w,c
 12665  0038FC  5A1A               	subwfb	i2___ftdiv@f1+2,f,c
 12666  0038FE  8022               	bsf	i2___ftdiv@f3,0,c
 12667  003900                     i2l1100:
 12668  003900  90D8               	bcf	status,0,c
 12669  003902  3618               	rlcf	i2___ftdiv@f1,f,c
 12670  003904  3619               	rlcf	i2___ftdiv@f1+1,f,c
 12671  003906  361A               	rlcf	i2___ftdiv@f1+2,f,c
 12672  003908  2E21               	decfsz	i2___ftdiv@cntr,f,c
 12673  00390A  D7E7               	goto	i2l3978
 12674  00390C  C022  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 12675  003910  C023  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 12676  003914  C024  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 12677  003918  C025  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 12678  00391C  C026  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 12679  003920  ECBA  F01D         	call	i2___ftpack	;wreg free
 12680  003924  C001  F018         	movff	?i2___ftpack,?i2___ftdiv
 12681  003928  C002  F019         	movff	?i2___ftpack+1,?i2___ftdiv+1
 12682  00392C  C003  F01A         	movff	?i2___ftpack+2,?i2___ftdiv+2
 12683  003930  0012               	return	
 12684  003932                     __end_ofi2___ftdiv:
 12685                           	opt stack 0
 12686                           pclatu	equ	0xFFB
 12687                           pclath	equ	0xFFA
 12688                           tblptru	equ	0xFF8
 12689                           tblptrh	equ	0xFF7
 12690                           tblptrl	equ	0xFF6
 12691                           tablat	equ	0xFF5
 12692                           prodh	equ	0xFF4
 12693                           prodl	equ	0xFF3
 12694                           intcon	equ	0xFF2
 12695                           intcon2	equ	0xFF1
 12696                           postinc0	equ	0xFEE
 12697                           fsr0h	equ	0xFEA
 12698                           fsr0l	equ	0xFE9
 12699                           wreg	equ	0xFE8
 12700                           fsr1h	equ	0xFE2
 12701                           fsr1l	equ	0xFE1
 12702                           indf2	equ	0xFDF
 12703                           postinc2	equ	0xFDE
 12704                           postdec2	equ	0xFDD
 12705                           fsr2h	equ	0xFDA
 12706                           fsr2l	equ	0xFD9
 12707                           status	equ	0xFD8
 12708                           
 12709 ;; *************** function i2___ftadd *****************
 12710 ;; Defined at:
 12711 ;;		line 86 in file "/Applications/microchip/xc8/v1.41/sources/common/ftadd.c"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;  f1              3   11[COMRAM] float 
 12714 ;;  f2              3   14[COMRAM] float 
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;  __ftadd         1   22[COMRAM] unsigned char 
 12717 ;;  __ftadd         1   21[COMRAM] unsigned char 
 12718 ;;  __ftadd         1   20[COMRAM] unsigned char 
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  3   11[COMRAM] float 
 12721 ;; Registers used:
 12722 ;;		wreg, status,2, status,0, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12728 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12730 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12732 ;;Total ram usage:       12 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    1
 12735 ;; This function calls:
 12736 ;;		i2___ftpack
 12737 ;; This function is called by:
 12738 ;;		i2_readADC
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text45
 12743  002F72                     __ptext45:
 12744                           	opt stack 0
 12745  002F72                     i2___ftadd:
 12746                           	opt stack 22
 12747                           
 12748                           ;incstack = 0
 12749  002F72  C00E  F012         	movff	i2___ftadd@f1+2,??i2___ftadd
 12750  002F76  6A13               	clrf	(??i2___ftadd+1)& (0+255),c
 12751  002F78  6A14               	clrf	(??i2___ftadd+2)& (0+255),c
 12752  002F7A  340D               	rlcf	i2___ftadd@f1+1,w,c
 12753  002F7C  3612               	rlcf	??i2___ftadd& (0+255),f,c
 12754  002F7E  E301               	bnc	u352_41
 12755  002F80  8013               	bsf	(??i2___ftadd+1)& (0+255),0,c
 12756  002F82                     u352_41:
 12757  002F82  5012               	movf	??i2___ftadd,w,c
 12758  002F84  6E17               	movwf	i2___ftadd@exp1,c
 12759  002F86  C011  F012         	movff	i2___ftadd@f2+2,??i2___ftadd
 12760  002F8A  6A13               	clrf	(??i2___ftadd+1)& (0+255),c
 12761  002F8C  6A14               	clrf	(??i2___ftadd+2)& (0+255),c
 12762  002F8E  3410               	rlcf	i2___ftadd@f2+1,w,c
 12763  002F90  3612               	rlcf	??i2___ftadd& (0+255),f,c
 12764  002F92  E301               	bnc	u353_41
 12765  002F94  8013               	bsf	(??i2___ftadd+1)& (0+255),0,c
 12766  002F96                     u353_41:
 12767  002F96  5012               	movf	??i2___ftadd,w,c
 12768  002F98  6E16               	movwf	i2___ftadd@exp2,c
 12769  002F9A  5017               	movf	i2___ftadd@exp1,w,c
 12770  002F9C  B4D8               	btfsc	status,2,c
 12771  002F9E  D00B               	goto	i2l1065
 12772  002FA0  5016               	movf	i2___ftadd@exp2,w,c
 12773  002FA2  5C17               	subwf	i2___ftadd@exp1,w,c
 12774  002FA4  B0D8               	btfsc	status,0,c
 12775  002FA6  D00E               	goto	i2l3884
 12776  002FA8  5017               	movf	i2___ftadd@exp1,w,c
 12777  002FAA  0800               	sublw	0
 12778  002FAC  2416               	addwf	i2___ftadd@exp2,w,c
 12779  002FAE  6E12               	movwf	??i2___ftadd& (0+255),c
 12780  002FB0  0E18               	movlw	24
 12781  002FB2  6412               	cpfsgt	??i2___ftadd,c
 12782  002FB4  D007               	goto	i2l3884
 12783  002FB6                     i2l1065:
 12784  002FB6  C00F  F00C         	movff	i2___ftadd@f2,?i2___ftadd
 12785  002FBA  C010  F00D         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 12786  002FBE  C011  F00E         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 12787  002FC2  0012               	return	
 12788  002FC4                     i2l3884:
 12789  002FC4  5016               	movf	i2___ftadd@exp2,w,c
 12790  002FC6  B4D8               	btfsc	status,2,c
 12791  002FC8  D00B               	goto	i2l1069
 12792  002FCA  5017               	movf	i2___ftadd@exp1,w,c
 12793  002FCC  5C16               	subwf	i2___ftadd@exp2,w,c
 12794  002FCE  B0D8               	btfsc	status,0,c
 12795  002FD0  D00E               	goto	i2l3890
 12796  002FD2  5016               	movf	i2___ftadd@exp2,w,c
 12797  002FD4  0800               	sublw	0
 12798  002FD6  2417               	addwf	i2___ftadd@exp1,w,c
 12799  002FD8  6E12               	movwf	??i2___ftadd& (0+255),c
 12800  002FDA  0E18               	movlw	24
 12801  002FDC  6412               	cpfsgt	??i2___ftadd,c
 12802  002FDE  D007               	goto	i2l3890
 12803  002FE0                     i2l1069:
 12804  002FE0  C00C  F00C         	movff	i2___ftadd@f1,?i2___ftadd
 12805  002FE4  C00D  F00D         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 12806  002FE8  C00E  F00E         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 12807  002FEC  0012               	return	
 12808  002FEE                     i2l3890:
 12809  002FEE  0E06               	movlw	6
 12810  002FF0  6E15               	movwf	i2___ftadd@sign,c
 12811  002FF2  BE0E               	btfsc	i2___ftadd@f1+2,7,c
 12812  002FF4  8E15               	bsf	i2___ftadd@sign,7,c
 12813  002FF6  BE11               	btfsc	i2___ftadd@f2+2,7,c
 12814  002FF8  8C15               	bsf	i2___ftadd@sign,6,c
 12815  002FFA  8E0D               	bsf	i2___ftadd@f1+1,7,c
 12816  002FFC  0EFF               	movlw	255
 12817  002FFE  160C               	andwf	i2___ftadd@f1,f,c
 12818  003000  0EFF               	movlw	255
 12819  003002  160D               	andwf	i2___ftadd@f1+1,f,c
 12820  003004  0E00               	movlw	0
 12821  003006  160E               	andwf	i2___ftadd@f1+2,f,c
 12822  003008  8E10               	bsf	i2___ftadd@f2+1,7,c
 12823  00300A  0EFF               	movlw	255
 12824  00300C  160F               	andwf	i2___ftadd@f2,f,c
 12825  00300E  0EFF               	movlw	255
 12826  003010  1610               	andwf	i2___ftadd@f2+1,f,c
 12827  003012  0E00               	movlw	0
 12828  003014  1611               	andwf	i2___ftadd@f2+2,f,c
 12829  003016  5016               	movf	i2___ftadd@exp2,w,c
 12830  003018  5C17               	subwf	i2___ftadd@exp1,w,c
 12831  00301A  B0D8               	btfsc	status,0,c
 12832  00301C  D01B               	goto	i2l3916
 12833  00301E                     i2l3906:
 12834  00301E  90D8               	bcf	status,0,c
 12835  003020  360F               	rlcf	i2___ftadd@f2,f,c
 12836  003022  3610               	rlcf	i2___ftadd@f2+1,f,c
 12837  003024  3611               	rlcf	i2___ftadd@f2+2,f,c
 12838  003026  0616               	decf	i2___ftadd@exp2,f,c
 12839  003028  5017               	movf	i2___ftadd@exp1,w,c
 12840  00302A  1816               	xorwf	i2___ftadd@exp2,w,c
 12841  00302C  B4D8               	btfsc	status,2,c
 12842  00302E  D00D               	goto	i2l3914
 12843  003030  0615               	decf	i2___ftadd@sign,f,c
 12844  003032  C015  F012         	movff	i2___ftadd@sign,??i2___ftadd
 12845  003036  0E07               	movlw	7
 12846  003038  1612               	andwf	??i2___ftadd,f,c
 12847  00303A  B4D8               	btfsc	status,2,c
 12848  00303C  D006               	goto	i2l3914
 12849  00303E  D7EF               	goto	i2l3906
 12850  003040                     i2l3912:
 12851  003040  90D8               	bcf	status,0,c
 12852  003042  320E               	rrcf	i2___ftadd@f1+2,f,c
 12853  003044  320D               	rrcf	i2___ftadd@f1+1,f,c
 12854  003046  320C               	rrcf	i2___ftadd@f1,f,c
 12855  003048  2A17               	incf	i2___ftadd@exp1,f,c
 12856  00304A                     i2l3914:
 12857  00304A  5016               	movf	i2___ftadd@exp2,w,c
 12858  00304C  1817               	xorwf	i2___ftadd@exp1,w,c
 12859  00304E  B4D8               	btfsc	status,2,c
 12860  003050  D01F               	goto	i2l1080
 12861  003052  D7F6               	goto	i2l3912
 12862  003054                     i2l3916:
 12863  003054  5017               	movf	i2___ftadd@exp1,w,c
 12864  003056  5C16               	subwf	i2___ftadd@exp2,w,c
 12865  003058  B0D8               	btfsc	status,0,c
 12866  00305A  D01A               	goto	i2l1080
 12867  00305C                     i2l3918:
 12868  00305C  90D8               	bcf	status,0,c
 12869  00305E  360C               	rlcf	i2___ftadd@f1,f,c
 12870  003060  360D               	rlcf	i2___ftadd@f1+1,f,c
 12871  003062  360E               	rlcf	i2___ftadd@f1+2,f,c
 12872  003064  0617               	decf	i2___ftadd@exp1,f,c
 12873  003066  5017               	movf	i2___ftadd@exp1,w,c
 12874  003068  1816               	xorwf	i2___ftadd@exp2,w,c
 12875  00306A  B4D8               	btfsc	status,2,c
 12876  00306C  D00D               	goto	i2l3926
 12877  00306E  0615               	decf	i2___ftadd@sign,f,c
 12878  003070  C015  F012         	movff	i2___ftadd@sign,??i2___ftadd
 12879  003074  0E07               	movlw	7
 12880  003076  1612               	andwf	??i2___ftadd,f,c
 12881  003078  B4D8               	btfsc	status,2,c
 12882  00307A  D006               	goto	i2l3926
 12883  00307C  D7EF               	goto	i2l3918
 12884  00307E                     i2l3924:
 12885  00307E  90D8               	bcf	status,0,c
 12886  003080  3211               	rrcf	i2___ftadd@f2+2,f,c
 12887  003082  3210               	rrcf	i2___ftadd@f2+1,f,c
 12888  003084  320F               	rrcf	i2___ftadd@f2,f,c
 12889  003086  2A16               	incf	i2___ftadd@exp2,f,c
 12890  003088                     i2l3926:
 12891  003088  5016               	movf	i2___ftadd@exp2,w,c
 12892  00308A  1817               	xorwf	i2___ftadd@exp1,w,c
 12893  00308C  A4D8               	btfss	status,2,c
 12894  00308E  D7F7               	goto	i2l3924
 12895  003090                     i2l1080:
 12896  003090  AE15               	btfss	i2___ftadd@sign,7,c
 12897  003092  D00C               	goto	i2l1089
 12898  003094  0EFF               	movlw	255
 12899  003096  1A0C               	xorwf	i2___ftadd@f1,f,c
 12900  003098  0EFF               	movlw	255
 12901  00309A  1A0D               	xorwf	i2___ftadd@f1+1,f,c
 12902  00309C  0EFF               	movlw	255
 12903  00309E  1A0E               	xorwf	i2___ftadd@f1+2,f,c
 12904  0030A0  0E01               	movlw	1
 12905  0030A2  260C               	addwf	i2___ftadd@f1,f,c
 12906  0030A4  0E00               	movlw	0
 12907  0030A6  220D               	addwfc	i2___ftadd@f1+1,f,c
 12908  0030A8  0E00               	movlw	0
 12909  0030AA  220E               	addwfc	i2___ftadd@f1+2,f,c
 12910  0030AC                     i2l1089:
 12911  0030AC  AC15               	btfss	i2___ftadd@sign,6,c
 12912  0030AE  D00C               	goto	i2l3932
 12913  0030B0  0EFF               	movlw	255
 12914  0030B2  1A0F               	xorwf	i2___ftadd@f2,f,c
 12915  0030B4  0EFF               	movlw	255
 12916  0030B6  1A10               	xorwf	i2___ftadd@f2+1,f,c
 12917  0030B8  0EFF               	movlw	255
 12918  0030BA  1A11               	xorwf	i2___ftadd@f2+2,f,c
 12919  0030BC  0E01               	movlw	1
 12920  0030BE  260F               	addwf	i2___ftadd@f2,f,c
 12921  0030C0  0E00               	movlw	0
 12922  0030C2  2210               	addwfc	i2___ftadd@f2+1,f,c
 12923  0030C4  0E00               	movlw	0
 12924  0030C6  2211               	addwfc	i2___ftadd@f2+2,f,c
 12925  0030C8                     i2l3932:
 12926  0030C8  0E00               	movlw	0
 12927  0030CA  6E15               	movwf	i2___ftadd@sign,c
 12928  0030CC  500C               	movf	i2___ftadd@f1,w,c
 12929  0030CE  260F               	addwf	i2___ftadd@f2,f,c
 12930  0030D0  500D               	movf	i2___ftadd@f1+1,w,c
 12931  0030D2  2210               	addwfc	i2___ftadd@f2+1,f,c
 12932  0030D4  500E               	movf	i2___ftadd@f1+2,w,c
 12933  0030D6  2211               	addwfc	i2___ftadd@f2+2,f,c
 12934  0030D8  AE11               	btfss	i2___ftadd@f2+2,7,c
 12935  0030DA  D00E               	goto	i2l3942
 12936  0030DC  0EFF               	movlw	255
 12937  0030DE  1A0F               	xorwf	i2___ftadd@f2,f,c
 12938  0030E0  0EFF               	movlw	255
 12939  0030E2  1A10               	xorwf	i2___ftadd@f2+1,f,c
 12940  0030E4  0EFF               	movlw	255
 12941  0030E6  1A11               	xorwf	i2___ftadd@f2+2,f,c
 12942  0030E8  0E01               	movlw	1
 12943  0030EA  260F               	addwf	i2___ftadd@f2,f,c
 12944  0030EC  0E00               	movlw	0
 12945  0030EE  2210               	addwfc	i2___ftadd@f2+1,f,c
 12946  0030F0  0E00               	movlw	0
 12947  0030F2  2211               	addwfc	i2___ftadd@f2+2,f,c
 12948  0030F4  0E01               	movlw	1
 12949  0030F6  6E15               	movwf	i2___ftadd@sign,c
 12950  0030F8                     i2l3942:
 12951  0030F8  C00F  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 12952  0030FC  C010  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 12953  003100  C011  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 12954  003104  C017  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 12955  003108  C015  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 12956  00310C  ECBA  F01D         	call	i2___ftpack	;wreg free
 12957  003110  C001  F00C         	movff	?i2___ftpack,?i2___ftadd
 12958  003114  C002  F00D         	movff	?i2___ftpack+1,?i2___ftadd+1
 12959  003118  C003  F00E         	movff	?i2___ftpack+2,?i2___ftadd+2
 12960  00311C  0012               	return	
 12961  00311E                     __end_ofi2___ftadd:
 12962                           	opt stack 0
 12963                           pclatu	equ	0xFFB
 12964                           pclath	equ	0xFFA
 12965                           tblptru	equ	0xFF8
 12966                           tblptrh	equ	0xFF7
 12967                           tblptrl	equ	0xFF6
 12968                           tablat	equ	0xFF5
 12969                           prodh	equ	0xFF4
 12970                           prodl	equ	0xFF3
 12971                           intcon	equ	0xFF2
 12972                           intcon2	equ	0xFF1
 12973                           postinc0	equ	0xFEE
 12974                           fsr0h	equ	0xFEA
 12975                           fsr0l	equ	0xFE9
 12976                           wreg	equ	0xFE8
 12977                           fsr1h	equ	0xFE2
 12978                           fsr1l	equ	0xFE1
 12979                           indf2	equ	0xFDF
 12980                           postinc2	equ	0xFDE
 12981                           postdec2	equ	0xFDD
 12982                           fsr2h	equ	0xFDA
 12983                           fsr2l	equ	0xFD9
 12984                           status	equ	0xFD8
 12985                           
 12986 ;; *************** function i2___ftpack *****************
 12987 ;; Defined at:
 12988 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;  arg             3    0[COMRAM] unsigned um
 12991 ;;  exp             1    3[COMRAM] unsigned char 
 12992 ;;  sign            1    4[COMRAM] unsigned char 
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;		None
 12995 ;; Return value:  Size  Location     Type
 12996 ;;                  3    0[COMRAM] float 
 12997 ;; Registers used:
 12998 ;;		wreg, status,2, status,0
 12999 ;; Tracked objects:
 13000 ;;		On entry : 0/0
 13001 ;;		On exit  : 0/0
 13002 ;;		Unchanged: 0/0
 13003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13004 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;Total ram usage:        8 bytes
 13009 ;; Hardware stack levels used:    1
 13010 ;; This function calls:
 13011 ;;		Nothing
 13012 ;; This function is called by:
 13013 ;;		i2___ftadd
 13014 ;;		i2___ftdiv
 13015 ;;		i2___ftmul
 13016 ;;		i2___lwtoft
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text46
 13021  003B74                     __ptext46:
 13022                           	opt stack 0
 13023  003B74                     i2___ftpack:
 13024                           	opt stack 21
 13025                           
 13026                           ;incstack = 0
 13027  003B74  5004               	movf	i2___ftpack@exp,w,c
 13028  003B76  B4D8               	btfsc	status,2,c
 13029  003B78  D005               	goto	i2l3596
 13030  003B7A  5001               	movf	i2___ftpack@arg,w,c
 13031  003B7C  1002               	iorwf	i2___ftpack@arg+1,w,c
 13032  003B7E  1003               	iorwf	i2___ftpack@arg+2,w,c
 13033  003B80  A4D8               	btfss	status,2,c
 13034  003B82  D00C               	goto	i2l3602
 13035  003B84                     i2l3596:
 13036  003B84  0E00               	movlw	0
 13037  003B86  6E01               	movwf	?i2___ftpack,c
 13038  003B88  0E00               	movlw	0
 13039  003B8A  6E02               	movwf	?i2___ftpack+1,c
 13040  003B8C  0E00               	movlw	0
 13041  003B8E  6E03               	movwf	?i2___ftpack+2,c
 13042  003B90  0012               	return	
 13043  003B92                     i2l3600:
 13044  003B92  2A04               	incf	i2___ftpack@exp,f,c
 13045  003B94  90D8               	bcf	status,0,c
 13046  003B96  3203               	rrcf	i2___ftpack@arg+2,f,c
 13047  003B98  3202               	rrcf	i2___ftpack@arg+1,f,c
 13048  003B9A  3201               	rrcf	i2___ftpack@arg,f,c
 13049  003B9C                     i2l3602:
 13050  003B9C  0E00               	movlw	0
 13051  003B9E  1401               	andwf	i2___ftpack@arg,w,c
 13052  003BA0  6E06               	movwf	??i2___ftpack& (0+255),c
 13053  003BA2  0E00               	movlw	0
 13054  003BA4  1402               	andwf	i2___ftpack@arg+1,w,c
 13055  003BA6  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 13056  003BA8  0EFE               	movlw	254
 13057  003BAA  1403               	andwf	i2___ftpack@arg+2,w,c
 13058  003BAC  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 13059  003BAE  5006               	movf	??i2___ftpack,w,c
 13060  003BB0  1007               	iorwf	??i2___ftpack+1,w,c
 13061  003BB2  1008               	iorwf	??i2___ftpack+2,w,c
 13062  003BB4  B4D8               	btfsc	status,2,c
 13063  003BB6  D00C               	goto	i2l3608
 13064  003BB8  D7EC               	goto	i2l3600
 13065  003BBA                     i2l3604:
 13066  003BBA  2A04               	incf	i2___ftpack@exp,f,c
 13067  003BBC  0E01               	movlw	1
 13068  003BBE  2601               	addwf	i2___ftpack@arg,f,c
 13069  003BC0  0E00               	movlw	0
 13070  003BC2  2202               	addwfc	i2___ftpack@arg+1,f,c
 13071  003BC4  0E00               	movlw	0
 13072  003BC6  2203               	addwfc	i2___ftpack@arg+2,f,c
 13073  003BC8  90D8               	bcf	status,0,c
 13074  003BCA  3203               	rrcf	i2___ftpack@arg+2,f,c
 13075  003BCC  3202               	rrcf	i2___ftpack@arg+1,f,c
 13076  003BCE  3201               	rrcf	i2___ftpack@arg,f,c
 13077  003BD0                     i2l3608:
 13078  003BD0  0E00               	movlw	0
 13079  003BD2  1401               	andwf	i2___ftpack@arg,w,c
 13080  003BD4  6E06               	movwf	??i2___ftpack& (0+255),c
 13081  003BD6  0E00               	movlw	0
 13082  003BD8  1402               	andwf	i2___ftpack@arg+1,w,c
 13083  003BDA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 13084  003BDC  0EFF               	movlw	255
 13085  003BDE  1403               	andwf	i2___ftpack@arg+2,w,c
 13086  003BE0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 13087  003BE2  5006               	movf	??i2___ftpack,w,c
 13088  003BE4  1007               	iorwf	??i2___ftpack+1,w,c
 13089  003BE6  1008               	iorwf	??i2___ftpack+2,w,c
 13090  003BE8  B4D8               	btfsc	status,2,c
 13091  003BEA  D006               	goto	i2l3612
 13092  003BEC  D7E6               	goto	i2l3604
 13093  003BEE                     i2l3610:
 13094  003BEE  0604               	decf	i2___ftpack@exp,f,c
 13095  003BF0  90D8               	bcf	status,0,c
 13096  003BF2  3601               	rlcf	i2___ftpack@arg,f,c
 13097  003BF4  3602               	rlcf	i2___ftpack@arg+1,f,c
 13098  003BF6  3603               	rlcf	i2___ftpack@arg+2,f,c
 13099  003BF8                     i2l3612:
 13100  003BF8  BE02               	btfsc	i2___ftpack@arg+1,7,c
 13101  003BFA  D003               	goto	i2l1042
 13102  003BFC  0E02               	movlw	2
 13103  003BFE  6004               	cpfslt	i2___ftpack@exp,c
 13104  003C00  D7F6               	goto	i2l3610
 13105  003C02                     i2l1042:
 13106  003C02  A004               	btfss	i2___ftpack@exp,0,c
 13107  003C04  9E02               	bcf	i2___ftpack@arg+1,7,c
 13108  003C06  90D8               	bcf	status,0,c
 13109  003C08  3204               	rrcf	i2___ftpack@exp,f,c
 13110  003C0A  5004               	movf	i2___ftpack@exp,w,c
 13111  003C0C  1203               	iorwf	i2___ftpack@arg+2,f,c
 13112  003C0E  5005               	movf	i2___ftpack@sign,w,c
 13113  003C10  A4D8               	btfss	status,2,c
 13114  003C12  8E03               	bsf	i2___ftpack@arg+2,7,c
 13115  003C14  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 13116  003C18  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 13117  003C1C  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 13118  003C20  0012               	return	
 13119  003C22                     __end_ofi2___ftpack:
 13120                           	opt stack 0
 13121                           pclatu	equ	0xFFB
 13122                           pclath	equ	0xFFA
 13123                           tblptru	equ	0xFF8
 13124                           tblptrh	equ	0xFF7
 13125                           tblptrl	equ	0xFF6
 13126                           tablat	equ	0xFF5
 13127                           prodh	equ	0xFF4
 13128                           prodl	equ	0xFF3
 13129                           intcon	equ	0xFF2
 13130                           intcon2	equ	0xFF1
 13131                           postinc0	equ	0xFEE
 13132                           fsr0h	equ	0xFEA
 13133                           fsr0l	equ	0xFE9
 13134                           wreg	equ	0xFE8
 13135                           fsr1h	equ	0xFE2
 13136                           fsr1l	equ	0xFE1
 13137                           indf2	equ	0xFDF
 13138                           postinc2	equ	0xFDE
 13139                           postdec2	equ	0xFDD
 13140                           fsr2h	equ	0xFDA
 13141                           fsr2l	equ	0xFD9
 13142                           status	equ	0xFD8
 13143                           pclatu	equ	0xFFB
 13144                           pclath	equ	0xFFA
 13145                           tblptru	equ	0xFF8
 13146                           tblptrh	equ	0xFF7
 13147                           tblptrl	equ	0xFF6
 13148                           tablat	equ	0xFF5
 13149                           prodh	equ	0xFF4
 13150                           prodl	equ	0xFF3
 13151                           intcon	equ	0xFF2
 13152                           intcon2	equ	0xFF1
 13153                           postinc0	equ	0xFEE
 13154                           fsr0h	equ	0xFEA
 13155                           fsr0l	equ	0xFE9
 13156                           wreg	equ	0xFE8
 13157                           fsr1h	equ	0xFE2
 13158                           fsr1l	equ	0xFE1
 13159                           indf2	equ	0xFDF
 13160                           postinc2	equ	0xFDE
 13161                           postdec2	equ	0xFDD
 13162                           fsr2h	equ	0xFDA
 13163                           fsr2l	equ	0xFD9
 13164                           status	equ	0xFD8
 13165                           
 13166                           	psect	rparam
 13167  0000                     pclatu	equ	0xFFB
 13168                           pclath	equ	0xFFA
 13169                           tblptru	equ	0xFF8
 13170                           tblptrh	equ	0xFF7
 13171                           tblptrl	equ	0xFF6
 13172                           tablat	equ	0xFF5
 13173                           prodh	equ	0xFF4
 13174                           prodl	equ	0xFF3
 13175                           intcon	equ	0xFF2
 13176                           intcon2	equ	0xFF1
 13177                           postinc0	equ	0xFEE
 13178                           fsr0h	equ	0xFEA
 13179                           fsr0l	equ	0xFE9
 13180                           wreg	equ	0xFE8
 13181                           fsr1h	equ	0xFE2
 13182                           fsr1l	equ	0xFE1
 13183                           indf2	equ	0xFDF
 13184                           postinc2	equ	0xFDE
 13185                           postdec2	equ	0xFDD
 13186                           fsr2h	equ	0xFDA
 13187                           fsr2l	equ	0xFD9
 13188                           status	equ	0xFD8
 13189                           
 13190                           	psect	temp
 13191  00006C                     btemp:
 13192                           	opt stack 0
 13193  00006C                     	ds	1
 13194  0000                     int$flags	set	btemp
 13195                           pclatu	equ	0xFFB
 13196                           pclath	equ	0xFFA
 13197                           tblptru	equ	0xFF8
 13198                           tblptrh	equ	0xFF7
 13199                           tblptrl	equ	0xFF6
 13200                           tablat	equ	0xFF5
 13201                           prodh	equ	0xFF4
 13202                           prodl	equ	0xFF3
 13203                           intcon	equ	0xFF2
 13204                           intcon2	equ	0xFF1
 13205                           postinc0	equ	0xFEE
 13206                           fsr0h	equ	0xFEA
 13207                           fsr0l	equ	0xFE9
 13208                           wreg	equ	0xFE8
 13209                           fsr1h	equ	0xFE2
 13210                           fsr1l	equ	0xFE1
 13211                           indf2	equ	0xFDF
 13212                           postinc2	equ	0xFDE
 13213                           postdec2	equ	0xFDD
 13214                           fsr2h	equ	0xFDA
 13215                           fsr2l	equ	0xFD9
 13216                           status	equ	0xFD8


Data Sizes:
    Strings     171
    Constant    42
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     65     107
    BANK0           128    104     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_24(CODE[8]), STR_23(CODE[11]), STR_22(CODE[9]), STR_21(CODE[10]), 
		 -> STR_20(CODE[12]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[7]), 
		 -> STR_16(CODE[5]), STR_15(CODE[12]), STR_14(CODE[8]), STR_13(CODE[11]), 
		 -> STR_12(CODE[9]), STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[5]), 
		 -> STR_8(CODE[9]), STR_7(CODE[5]), STR_6(CODE[11]), STR_5(CODE[16]), 
		 -> STR_4(CODE[7]), STR_3(CODE[16]), STR_2(CODE[8]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _IRQ in COMRAM

    _IRQ->_servo_ISR_1
    _IRQ->_servo_ISR_3
    _servo_ISR_3->i2_readADC
    i2_set_external_interrupt3->i2___awdiv
    _servo_ISR_1->i2_readADC
    i2_set_external_interrupt1->i2___awdiv
    i2_readADC->i2___ftdiv
    i2_abs->i2___ftadd
    i2_abs->i2___ftmul
    i2___ftmul->i2___ftpack
    i2___lwtoft->i2___ftpack
    i2___ftdiv->i2___ftmul
    i2___ftadd->i2___lwtoft

Critical Paths under _main in BANK0

    _main->_readADC
    _set_external_interrupt3->___awdiv
    _set_external_interrupt1->___awdiv
    _readADC->___ftdiv
    _abs->___ftadd
    _abs->___ftmul
    ___ftmul->___ftpack
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    ___ftadd->___lwtoft
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _IRQ in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRQ in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRQ in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRQ in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IRQ in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IRQ in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IRQ in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IRQ in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IRQ in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IRQ in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IRQ in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IRQ in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IRQ in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IRQ in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IRQ in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IRQ in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   30108
                                             49 BANK0     55    55      0
                    _Eeprom_ReadByte
                   _Eeprom_WriteByte
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___ftge
                 _delay_1s_interrupt
                            _initLCD
                            _lcdInst
                             _printf
                            _readADC
            _set_external_interrupt1
            _set_external_interrupt3
 ---------------------------------------------------------------------------------
 (1) _set_external_interrupt3                              4     2      2    1480
                                              8 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _set_external_interrupt1                              4     2      2    1746
                                              8 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     556
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _readADC                                             11     8      3   15521
                                             38 BANK0     11     8      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                                _abs
                               _read
 ---------------------------------------------------------------------------------
 (2) _read                                                 2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  3     0      3    4088
                                             23 BANK0      3     0      3
                            ___ftadd (ARG)
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2906
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1052
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2156
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2708
                                             23 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3370
                                             11 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2070
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    3728
                                             12 BANK0     22    14      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                              3 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay_1s_interrupt                                   7     5      2      46
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     982
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Eeprom_WriteByte                                     4     3      1     962
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Eeprom_ReadByte                                      3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _IRQ                                                 14    14      0   16523
                                             51 COMRAM    14    14      0
                        _servo_ISR_1
                        _servo_ISR_3
 ---------------------------------------------------------------------------------
 (6) _servo_ISR_3                                          2     2      0    7632
                                             49 COMRAM     2     2      0
                           i2___ftge
                          i2_readADC
          i2_set_external_interrupt3
 ---------------------------------------------------------------------------------
 (7) i2_set_external_interrupt3                            4     2      2     984
                                              8 COMRAM     4     2      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (6) _servo_ISR_1                                          2     2      0    8891
                                             49 COMRAM     2     2      0
                           i2___ftge
                          i2___ftmul
                          i2_readADC
          i2_set_external_interrupt1
 ---------------------------------------------------------------------------------
 (7) i2_set_external_interrupt1                            4     2      2    1166
                                              8 COMRAM     4     2      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) i2_readADC                                           11     8      3    6096
                                             38 COMRAM    11     8      3
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                         i2___lwtoft
                              i2_abs
                             i2_read
 ---------------------------------------------------------------------------------
 (8) i2_read                                               2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_abs                                                3     0      3    1721
                                             23 COMRAM     3     0      3
                          i2___ftadd (ARG)
                           i2___ftge
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (9) i2___ftmul                                           15     9      6    1077
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftge                                             9     3      6     552
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) i2___lwtoft                                           3     0      3     591
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     927
                                             23 COMRAM    15     9      6
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    1487
                                             11 COMRAM    12     6      6
                         i2___ftpack
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eeprom_ReadByte
   _Eeprom_WriteByte
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___ftge
   _delay_1s_interrupt
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _lcdNibble
   _readADC
     ___ftadd
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
     _abs
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___ftpack
     _read
   _set_external_interrupt1
     ___awdiv
   _set_external_interrupt3
     ___awdiv

 _IRQ (ROOT)
   _servo_ISR_1
     i2___ftge
     i2___ftmul
       i2___ftpack
     i2_readADC
       i2___ftadd
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
       i2___ftdiv
         i2___ftmul (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___ftmul
         i2___ftpack
       i2___lwtoft
         i2___ftpack
       i2_abs
         i2___ftadd (ARG)
           i2___ftpack
           i2___lwtoft (ARG)
             i2___ftpack
         i2___ftge (ARG)
         i2___ftmul (ARG)
           i2___ftpack
       i2_read
     i2_set_external_interrupt1
       i2___awdiv
   _servo_ISR_3
     i2___ftge
     i2_readADC
       i2___ftadd
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
       i2___ftdiv
         i2___ftmul (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___ftmul
         i2___ftpack
       i2___lwtoft
         i2___ftpack
       i2_abs
         i2___ftadd (ARG)
           i2___ftpack
           i2___lwtoft (ARG)
             i2___ftpack
         i2___ftge (ARG)
         i2___ftmul (ARG)
           i2___ftpack
       i2_read
     i2_set_external_interrupt3
       i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     68      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     41      6B       1       84.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E7      34        0.0%
DATA                 0      0      E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Apr 10 16:13:10 2017

          __end_of_Eeprom_WriteByte 42B6                        ___awdiv@sign 0085  
               ___wmul@multiplicand 0082                         __CFG_BORV$3 000000  
           main@count_seconds_final 00DE                          i2___ftpack 3B74  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_OSC$HS 000000                        ___ftadd@exp1 0096  
                      ___ftadd@exp2 0095                        ___ftadd@sign 0094  
                               l212 1850                                 l204 170E  
                               l205 1726                                 l206 1746  
                               l232 1D42                                 l242 1E06  
                               l235 1D50                                 l172 1380  
                               l190 14D4                                 l239 1E02  
                               l178 138E                                 l187 1750  
                               l717 443C                                 l672 4316  
                               l745 3F38                                 l780 2A74  
                               l678 42AC                          i2___lwtoft 4418  
                      __CFG_CPB$OFF 000000                                 _PEN 007E2A  
                               _IRQ 0008                        __CFG_CPD$OFF 000000  
                               _SEN 007E28                                 _abs 3FFE  
                               prod 000FF3                 delay_1s_interrupt@i 0086  
               delay_1s_interrupt@n 0085                                 wreg 000FE8  
                      __CFG_LVP$OFF 000000                                ?_IRQ 0001  
                      ___ftdiv@cntr 00A0                        ___ftdiv@sign 00A5  
                      __CFG_WDT$OFF 000000                                l1100 34EC  
                              l1042 3724                                ?_abs 0097  
                              l1071 2DD4                                l1080 2EAA  
                              l1225 3E36                                l1065 2D72  
                              l1235 40BC                                l1172 3B62  
                              l1069 2DAC                                l1089 2ED4  
                              l4100 2EFE                                l4004 4034  
                              l4110 2F4C                                l4014 4360  
                              l4120 3410                                l4016 4372  
                              l4200 3AAE                                l4210 3AE6  
                              l4034 43C2                                l4212 3AF6  
                              l4052 2D80                                l4222 3B50  
                              l4214 3AFC                                l4126 344A  
                              l4232 3DE6                                l4400 29C4  
                              l4080 2E3A                                l4064 2DCA  
                              l4234 3DF2                                l4082 2E48  
                              l4074 2E0C                                l4058 2DBA  
                              l4146 34AA                                l4244 3E28  
                              l4236 3DF8                                l4260 40AE  
                              l4252 4078                                l4412 2A42  
                              l4092 2E90                                l4084 2E56  
                              l4180 3A4A                                l5300 12E0  
                              l4254 4084                                l4430 2ACE  
                              l4510 2CEC                                l4094 2E9E  
                              l4086 2E62                                l4182 3A56  
                              l4174 3A2C                                l4256 408A  
                              l4504 2CC6                                l4424 2AAC  
                              l4408 2A3C                                l3640 36B8  
                              l3632 3666                                l3800 3972  
                              l4192 3A8C                                l4184 3A5C  
                              l4168 3A16                                l5400 156E  
                              l4522 3F5E                                l4506 2CD8  
                              l4442 2B04                                l3810 39F6  
                              l4508 2CE0                                l4444 2B0A  
                              l4460 2B52                                l4428 2AC8  
                              l3660 374A                                l3644 36D8  
                              l3636 367A                                l3804 39B2  
                              l4196 3A9A                                l5324 1400  
                              l5316 1384                                l4518 3F48  
                              l4470 2BAC                                l4390 298A  
                              l3654 372E                                l3646 3708  
                              l3638 3688                                l4542 3F20  
                              l5334 142A                                l4376 4344  
                              l4472 2BB6                                l4384 2964  
                              l3648 3716                                l3760 3192  
                              l4560 3EAA                                l5600 1B4E  
                              l5520 1878                                l5432 1680  
                              l5424 163A                                l5416 160E  
                              l5408 15D0                                l5328 140A  
                              l4490 2C12                                l4466 2B74  
                              l4458 2B40                                l4394 2994  
                              l3754 3158                                l4570 32A2  
                              l5610 1BB2                                l5514 1868  
                              l5418 1614                                l5290 12B6  
                              l4484 2BEC                                l4388 2978  
                              l5620 1BDC                                l5540 197A  
                              l5516 186E                                l5460 1740  
                              l5428 1676                                l5380 151E  
                              l5372 14FC                                l5284 1142  
                              l4486 2BF8                                l4494 2C26  
                              l4478 2BD0                                l3774 31E0  
                              l4590 33C8                                l4566 3298  
                              l5614 1BCA                                l5606 1BA8  
                              l5438 16A0                                l5390 1546  
                              l5382 1524                                l5358 14AE  
                              l5294 12C0                                l5286 127A  
                              l4496 2C2C                                l3784 321E  
                              l5616 1BD0                                l5560 1A6C  
                              l5552 1A4A                                l5392 154C  
                              l5376 1506                                l5624 1BF4  
                              l4498 2C78                                l3778 31FE  
                              l4578 32E6                                l5570 1A94  
                              l5562 1A72                                l5386 152E  
                              l3788 323C                                l4588 338A  
                              l5660 1E84                                l5628 1C6A  
                              l5556 1A54                                l5484 17B8  
                              l5396 1556                                l5654 1E0A  
                              l5590 1B26                                l5582 1B04  
                              l5566 1A7C                                l5494 17E2  
                              l5592 1B2C                                l5488 17C2  
                              _ADFM 007E07                                l5666 1F00  
                              l5586 1B0E                                l5596 1B36  
                              _ADON 007E10                                STR_1 103C  
                              STR_2 10BB                                STR_3 104C  
                              STR_4 10CA                                STR_5 105C  
                              STR_6 1083                                STR_7 109C  
                              STR_8 10AA                                STR_9 109C  
                              _LATA 000F89                                _LATB 000F8A  
                              _LATC 000F8B                                _LATD 000F8C  
                              _LATE 000F8D                                u4051 33EC  
                              u4071 3426                                u3351 3134  
                              u3371 316E                                u4360 4342  
                              u4355 40F6                                _PEIE 007F96  
                              u6207 1536                                u3841 2D20  
                              u6217 155E                                u6307 426A  
                              u3851 2D3E                                u6227 1A5C  
                              _RCEN 007E2B                                u6317 3FB6  
                              u6237 1A84                                u4735 42FA  
                              u6327 3FC0                                u6247 1B16  
                              u6337 3FEC                                u6257 1B3E  
                              u4755 4282                                u6347 3FF6  
                              u6267 1BBA                                u6187 14E6  
                              u6357 3F50                                u6277 1BE4  
                              u6197 150E                                u6287 4368  
                              u6297 4236                                _RSEN 007E29  
                       main@past_AA 00BD                         main@past_9V 00BE  
                              _isr1 00FB                                _isr3 00FA  
                              _main 10D8                        ___ftpack@arg 0080  
                              _read 434C                                _keys 1001  
                      ___ftpack@exp 0083                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              fsr0l 000FE9                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 006C                        i2___ftadd@f1 000C  
                      i2___ftadd@f2 000F                        i2___ftge@ff1 0001  
                      i2___ftge@ff2 0004                                prodh 000FF4  
                              prodl 000FF3                                start 000E  
                     __CFG_IESO$OFF 000000                        i2___ftdiv@f1 0018  
                      i2___ftdiv@f2 001B                        i2___ftdiv@f3 0022  
                       _volt_check1 005E                         _volt_check3 005D  
                main@flag_interrupt 00C1                       __CFG_MCLRE$ON 000000  
                      ___ftmul@cntr 0095                        i2___ftmul@f1 0009  
                      i2___ftmul@f2 000C                        ___param_bank 000000  
                      ___ftmul@sign 0096         __size_of_delay_1s_interrupt 006A  
                             ??_IRQ 0034                               ??_abs 009A  
                  ?_I2C_Master_Init 008D                    ?_I2C_Master_Read 0001  
                  ?_I2C_Master_Wait 0001                        main@eeprom_C 00B7  
                  ?_I2C_Master_Stop 0001                               ?_main 0001  
                             _ACKEN 007E2C                               _ACKDT 007E2D  
                             ?_read 0001                     __end_of___awdiv 3AB8  
                             _ADRES 000FC3                               _EEADR 000FA9  
                   __end_of___ftadd 2F72                               STR_10 10A1  
                             STR_11 108E                               STR_20 106C  
                             STR_12 1098                               STR_21 108E  
                             STR_13 1078                               STR_22 1098  
                             STR_14 10B3                               STR_23 1078  
                             STR_15 106C                               STR_16 109C  
                             STR_24 10B3                               STR_17 10C3  
                             STR_25 102B                               STR_18 109C  
                             STR_19 10D1                     __end_of___ftdiv 3522  
                        i2readADC@a 002E                        i2___lwtoft@c 0009  
                        i2readADC@i 002D                     __end_of___lldiv 3B74  
                   __end_of___ftmul 327C                     ___awdiv@divisor 0082  
                             _T1CON 000FCD                               _T3CON 000FB1  
                   __end_of___lwdiv 3E40                     __end_of___lwmod 40C6  
                             i2l260 3C6E                               i2l261 3C78  
                             i2l431 258C                               i2l435 25AA  
                             i2l372 1F56                               i2l368 1F38  
                   ___awdiv@counter 0084                               _TMR1H 000FCF  
                             _TMR1L 000FCE                               _TMR3H 000FB3  
                             _TMR3L 000FB2                               _PORTB 000F81  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TRISE 000F96                               i2_abs 41D6  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                     __end_of_lcdInst 4470  
                    __CFG_EBTR0$OFF 000000                      __CFG_FCMEN$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                      main@keypress 00DC                      __CFG_EBTR3$OFF 000000  
                             _nRBPU 007F8F                        main@past_min 00BA  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                     __end_of_readADC 33D6  
                   __end_of_initLCD 4274                      __CFG_EBTRB$OFF 000000  
                       readADC@volt 00A9                     __end_of_dpowers 101C  
                             _init1 00F9                               _init3 00F8  
                  ?_Eeprom_ReadByte 0001    __size_of_set_external_interrupt1 0076  
  __size_of_set_external_interrupt3 0076                     __end_of_isdigit 43CC  
                     ___ftpack@sign 0084                   main@address_total 00E5  
                             _putch 4450                               main@i 00C5  
                             main@j 00D6                               main@k 00D7  
                             pclath 000FFA                               tablat 000FF5  
                  __end_ofi2___ftge 3D44                               status 000FD8  
                     i2___ftdiv@exp 0025                  __size_ofi2___awdiv 0084  
                __size_ofi2___ftadd 01AC                      __CFG_PBADEN$ON 000000  
                __size_ofi2___ftdiv 00E6                  __size_ofi2___ftmul 00F4  
                     main@address_C 00E3                     __initialization 43CC  
                      __end_of_main 1F30                        __end_of_read 4378  
                      __end_of_keys 1012                       i2___ftmul@exp 0012  
                __size_ofi2_readADC 012A                       _count_drained 00EE  
                       ?i2___ftpack 0001                              ??_main 00B1  
                            ??_read 0080                         ?i2___lwtoft 0009  
                     __activetblptr 000002                              ?i2_abs 0018  
                     main@eeprom_AA 00B5                       main@eeprom_9V 00B6  
                 ?_I2C_Master_Start 0001                   ?_I2C_Master_Write 0081  
                ??_I2C_Master_Start 0081                              _ADCON0 000FC2  
                            _ADCON1 000FC1                  ??_I2C_Master_Write 0083  
                            _EEADRH 000FAA                              _EEDATA 000FA8  
                            _EECON2 000FA7                    ___awdiv@dividend 0080  
                            ?_putch 0001                    __end_of___ftpack 3758  
                            _CVRCON 000FB5                              i2l1100 3900  
                            i2l1042 3C02                              i2l1080 3090  
                            i2l1065 2FB6                              i2l1069 2FE0  
                            i2l1089 30AC                              i2l4300 4172  
                            i2l4310 353C                              i2l5102 26F0  
                            i2l5030 25C2                              i2l3600 3B92  
                     main@count_min 00E6                              i2l3610 3BEE  
                            i2l3602 3B9C                              i2l4330 363E  
                            i2l4306 3534                              i2l5210 28AE  
                            i2l5202 288E                              i2l5114 272C  
                            i2l5050 2628                              i2l5018 25A4  
                            i2l3612 3BF8                              i2l3604 3BBA  
                            i2l5132 277E                              i2l5124 275E  
                            i2l5116 273C                              i2l5060 265A  
                            i2l5052 2638                              i2l4318 357C  
                            i2l5214 28B4                              i2l5222 28D4  
                            i2l5150 27AE                              i2l5046 261A  
                            i2l3608 3BD0                              i2l3712 37EA  
                            i2l4328 3606                              i2l5136 2784  
                            i2l5072 2680                              i2l3722 3812  
                            i2l4282 41CA                              i2l5242 292C  
                            i2l5234 290C                              i2l5226 28EA  
                            i2l5170 2808                              i2l5162 27E8  
                            i2l5154 27C6                              i2l3708 37DA  
                            i2l5068 267A                              i2l5084 26A4  
                            i2l3718 3802                              i2l3830 4412  
                            i2l5246 2932                              i2l5174 280E  
                            i2l3912 3040                              i2l3672 3D14  
                            i2l3840 3D58                              i2l4800 2254  
                            i2l5184 2840                              i2l3914 304A  
                            i2l3906 301E                              i2l3818 4204  
                            i2l4810 2286                              i2l4802 2264  
                            i2l4650 1F6E                              i2l5194 286C  
                            i2l3596 3B84                              i2l3932 30C8  
                            i2l3924 307E                              i2l3916 3054  
                            i2l3668 3CE4                              i2l3828 4402  
                            i2l3852 3D7E                              i2l4900 23E6  
                            i2l4740 210A                              i2l4708 2060  
                            i2l5188 284E                              i2l3942 30F8  
                            i2l3926 3088                              i2l3918 305C  
                            i2l3678 3D40                              i2l3694 37A8  
                            i2l3854 3D86                              i2l3846 3D68  
                            i2l4822 22B6                              i2l4750 2170  
                            i2l4670 1FD4                              i2l4638 1F50  
                            i2l3952 3874                              i2l3688 3780  
                            i2l3872 3DBE                              i2l3864 3DA6  
                            i2l3856 3D8A                              i2l4912 2416  
                            i2l4760 21AC                              i2l4680 2006  
                            i2l4672 1FE4                              i2l3890 2FEE  
                            i2l4930 245C                              i2l4818 22A8  
                            i2l4826 22BC                              i2l4666 1FC6  
                            i2l3884 2FC4                              i2l3868 3DB0  
                            i2l4908 2408                              i2l4916 241C  
                            i2l4852 232A                              i2l4692 2036  
                            i2l3958 389C                              i2l4926 244E  
                            i2l4870 237C                              i2l4862 235C  
                            i2l4854 233A                              i2l4782 2224  
                            i2l4774 2204                              i2l4766 21E2  
                            i2l4838 22E6                              i2l4952 24BE  
                            i2l4944 249C                              i2l4936 247A  
                            i2l4960 24D2                              i2l4688 2028  
                            i2l4696 203C                              i2l3978 38DA  
                            i2l4874 2382                              i2l4786 222A  
                            i2l4980 252A                              i2l4972 2508  
                            i2l4956 24CC                              i2l4892 23C4  
                            i2l5694 3C76                              i2l4992 255A  
                            i2l4968 24F2                              i2l4888 23AC  
                            i2l4988 254C                              i2l4996 2560  
                            u331_41 3790                              u352_41 2F82  
                            u353_41 2F96                              u329_41 3768  
                  __end_of___lwtoft 43A2                              u373_41 385C  
                            u375_41 3884                              _OSCCON 000FD3  
                            _TMR1IE 007CE8                              _TMR1IF 007CF0  
                            _TMR3IE 007D01                              _TMR3IF 007D09  
                            _TMR1ON 007E68                              _TMR3ON 007D88  
                            _SSPADD 000FC8                              _TRISC3 007CA3  
                            _TRISC4 007CA4                              _SSPBUF 000FC9  
                            i2_read 43F2         set_external_interrupt1@time 0088  
       set_external_interrupt3@time 0088                      __CFG_XINST$OFF 000000  
             main@count_min_initial 00DA                              ___ftge 3932  
                            ___wmul 42B6                           ??___awdiv 0084  
                         ??___ftadd 0091                      __CFG_STVREN$ON 000000  
                         ??___ftdiv 009D                              abs@num 0097  
                         ??___lldiv 0088                           ??___ftmul 008E  
                         ??___lwdiv 0084                           ??___lwmod 008B  
                            _count1 0053                              _count3 0051  
                            clear_0 43D2                              clear_1 43DE  
                  ___awdiv@quotient 0086                              _stage1 0063  
                            _stage3 0062                           ??_lcdInst 0082  
                            _printf 2956                      i2___awdiv@sign 0006  
             ___ftmul@f3_as_product 0092                           ??_readADC 00A9  
                         ??_initLCD 0083                        ?_servo_ISR_1 0001  
                      ?_servo_ISR_3 0001                           ??_isdigit 0080  
                 __end_ofi2___awdiv 3DC8                   __end_ofi2___ftadd 311E  
                 __end_ofi2___ftdiv 3932                      i2___ftadd@exp1 0017  
                    i2___ftadd@exp2 0016                   __end_ofi2___ftmul 384C  
                    i2___ftadd@sign 0015                        __mediumconst 0000  
                            tblptrh 000FF7             Eeprom_WriteByte@address 0083  
                            tblptrl 000FF6                              tblptru 000FF8  
                 __end_ofi2_readADC 364C                      i2___ftdiv@cntr 0021  
                        __accesstop 0080             __end_of__initialization 43E4  
                main@eeprom_drained 00B8                      i2___ftdiv@sign 0026  
                        ___ftadd@f1 008B                          ___ftadd@f2 008E  
               __size_ofi2___ftpack 00AE                          ___ftge@ff1 0080  
                        ___ftge@ff2 0083                       ___rparam_used 000001  
                        ___ftdiv@f1 0097                          ___ftdiv@f2 009A  
                        ___ftdiv@f3 00A1                 __size_ofi2___lwtoft 0024  
                    main@address_AA 00E1                      main@address_9V 00E2  
                main@eeprom_seconds 00B4                      i2___ftpack@arg 0001  
                    i2___ftpack@exp 0004                       __end_ofi2_abs 422E  
                        ___ftmul@f1 0088                          ___ftmul@f2 008B  
              __end_of_happynewyear 102B                      __pcstackCOMRAM 0001  
                    i2___ftmul@cntr 0016                      i2___ftmul@sign 0017  
                     __end_of_putch 4460                   ?_Eeprom_WriteByte 0080  
                        ___lwtoft@c 0088                           ?i2___ftge 0001  
                ??_Eeprom_WriteByte 0081                  __size_of_lcdNibble 0068  
                           ??i2_abs 001B          ?i2_set_external_interrupt1 0009  
           _set_external_interrupt1 3EB6          ?i2_set_external_interrupt3 0009  
           _set_external_interrupt3 3E40                             ??_putch 0082  
                        __pbssBANK0 00E8                    main@eeprom_total 00B9  
                           ?i2_read 0001                        read@channel2 0081  
                    main@eeprom_min 00B3                             ?___ftge 0080  
                           ?___wmul 0080                           ?___ftpack 0080  
                           ?_printf 008C                          ??i2___ftge 0007  
                         ?___lwtoft 0088   __end_ofi2_set_external_interrupt1 41D6  
 __end_ofi2_set_external_interrupt3 417E                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
                 __end_of_lcdNibble 3FFE                     __size_ofi2_read 0026  
        __end_of_delay_1s_interrupt 3F96                             __Hparam 0000  
                           __Lparam 0000                Eeprom_WriteByte@data 0080  
                   __size_of___ftge 00C8                             ___awdiv 39FA  
                           ___ftadd 2D0A                             ___ftdiv 33D6  
                           ___lldiv 3AB8                     __size_of___wmul 0036  
                           ___ftmul 311E                      main@past_total 00BC  
                           ___lwdiv 3DC8                        _gate_status1 0061  
                      _gate_status3 0060                             ___lwmod 4064  
                         _CMCONbits 000FB4                        __psmallconst 1000  
                           __pcinit 43CC                        ??i2___ftpack 0006  
                        ??___ftpack 0085             i2___ftmul@f3_as_product 0013  
                           __ramtop 1000                      main@loop_count 00C3  
                           _lcdInst 4460                 main@address_drained 00E4  
                           __ptext0 10D8                             __ptext1 3E40  
                           __ptext2 3EB6                             __ptext3 39FA  
                           __ptext4 327C                             __ptext5 434C  
                           __ptext6 3FFE                             __ptext7 311E  
                           __ptext8 3932                             __ptext9 4378  
                   __size_of_printf 03B4                        ??i2___lwtoft 000C  
                        ??___lwtoft 008B                             _readADC 327C  
                      __size_of_IRQ 3CAC                             _initLCD 422E  
                           _count_C 00F0                   __end_of_hexpowers 1024  
         ??_set_external_interrupt1 008A           ??_set_external_interrupt3 008A  
                           _dpowers 1012                        __size_of_abs 0066  
                           _isdigit 43A2                 main@address_seconds 00E0  
          __size_of_I2C_Master_Init 0060            __size_of_I2C_Master_Read 002E  
          __size_of_I2C_Master_Wait 0014                __size_of_servo_ISR_1 0654  
              __size_of_servo_ISR_3 03D2            __size_of_I2C_Master_Stop 0008  
                    __pintcode_body 3C22                end_of_initialization 43E4  
                     __Lmediumconst 0000                             int_func 3C22  
                __end_ofi2___ftpack 3C22            __size_of_Eeprom_ReadByte 0032  
         __size_of_I2C_Master_Start 0008           __size_of_I2C_Master_Write 000A  
                   ___lldiv@divisor 0084                  __end_ofi2___lwtoft 443C  
                   ___lldiv@counter 008C                             printf@c 00A1  
                           printf@f 008C                    I2C_Master_Init@c 008D  
                  I2C_Master_Read@a 0081                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
                         _PORTBbits 000F81                          _up_period1 005B  
                        _up_period3 0057                        _happynewyear 1024  
                         i2___awdiv 3D44                           i2___ftadd 2F72  
                         i2___ftdiv 384C                           i2___ftmul 3758  
                       ___ftdiv@exp 00A4                         printf@width 009F  
   __end_of_set_external_interrupt1 3F2C     __end_of_set_external_interrupt3 3EB6  
                         i2_readADC 3522                          main@past_C 00BF  
                i2___awdiv@dividend 0001                     main@address_min 00E7  
                   i2___ftpack@sign 0005                          _voltage_AA 0048  
                        _voltage_9V 0045                      __end_ofi2_read 4418  
                       ___ftmul@exp 0091                      i2read@channel2 0002  
                    __end_of___ftge 39FA                      __end_of___wmul 42EC  
               main@count_min_final 00DD                      __end_of_printf 2D0A  
               start_initialization 43CC                   __size_ofi2___ftge 0090  
                i2___awdiv@quotient 0007                         __end_of_IRQ 3CB4  
                       __end_of_abs 4064         ??i2_set_external_interrupt1 000B  
       ??i2_set_external_interrupt3 000B                          ?i2___awdiv 0001  
                        ?i2___ftadd 000C                          ?i2___ftdiv 0018  
                        ?i2___ftmul 0009           __size_of_Eeprom_WriteByte 0042  
                 ??_I2C_Master_Init 0091                   ??_I2C_Master_Read 0081  
                 ??_I2C_Master_Wait 0080                   ??_I2C_Master_Stop 0081  
                        ?i2_readADC 0027                            ??i2_read 0001  
                      _down_period1 0059                        _down_period3 0055  
                          ??___ftge 0086                            ??___wmul 0084  
                 ??_Eeprom_ReadByte 0080                    __CFG_LPT1OSC$OFF 000000  
                  main@past_drained 00C0                            ??_printf 0094  
                 __size_of___ftpack 010C                    main@past_seconds 00BB  
                       __pbssCOMRAM 0042                   __size_of___lwtoft 002A  
                     __pcstackBANK0 0080                      _current_state1 0065  
                    _current_state3 0064                        _isdigit$1184 0081  
     i2set_external_interrupt1@time 0009       i2set_external_interrupt3@time 0009  
                  i2readADC@channel 0031                    _I2C_Master_Start 4482  
                  _I2C_Master_Write 4470           main@count_seconds_initial 00DB  
                  ___lwdiv@dividend 0080                   __CFG_CCP2MX$PORTC 000000  
         i2_set_external_interrupt1 417E           i2_set_external_interrupt3 4126  
                         __pintcode 0008                           _lcdNibble 3F96  
                          ?___awdiv 0080                            ?___ftadd 008B  
                          ?___ftdiv 0097                            ?___lldiv 0080  
                          ?___ftmul 0088                            ?___lwdiv 0080  
                          ?___lwmod 0087                            ?_lcdInst 0001  
                _delay_1s_interrupt 3F2C                            ?_readADC 00A6  
                          ?_initLCD 0001                         __smallconst 1000  
                          ?_isdigit 0001                      __size_ofi2_abs 0058  
               ?_delay_1s_interrupt 0080                           _hexpowers 101C  
                  ___lwdiv@quotient 0084                         ??i2___awdiv 0005  
                       ??i2___ftadd 0012                         ??i2___ftdiv 001E  
                       ??i2___ftmul 000F                       i2readADC@volt 002A  
                    __size_of_putch 0010                            _AA_or_9V 005F  
                    ___wmul@product 0084                            _LATCbits 000F8B  
                          _LATDbits 000F8C                         ??i2_readADC 002A  
                          _PIR2bits 000FA1                            i2u636_47 26BE  
                          i2u637_47 207A                            i2u638_47 20C4  
                          i2u639_47 4408                ??_delay_1s_interrupt 0082  
                  __CFG_WDTPS$32768 000000                          ?_lcdNibble 0001  
                        _ADCON0bits 000FC2                           main@i_431 00C6  
                         main@i_440 00C9                           main@i_432 00C7  
                         main@i_441 00CA                           main@i_450 00CE  
                         main@i_435 00C8                           main@i_446 00CB  
                         main@i_447 00CC                           main@i_449 00CD  
                 ___wmul@multiplier 0080                            i2___ftge 3CB4  
                         main@k_433 00D8                           main@k_434 00D9  
                     ??_servo_ISR_1 0032                       ??_servo_ISR_3 0032  
                     lcdNibble@data 0081                            i2abs@num 0018  
                        printf@flag 009E                       lcdNibble@temp 0080  
                        printf@prec 009B                   i2___awdiv@divisor 0003  
                         _voltage_0 004E                           _voltage_1 0069  
                         _voltage_2 0066                           _voltage_3 00EB  
                         _voltage_4 00E8                           _voltage_6 004B  
                         _voltage_C 0042                   i2___awdiv@counter 0005  
               I2C_Master_Read@temp 0082                    _Eeprom_WriteByte 4274  
                        _EECON1bits 000FA6                            __Hrparam 0000  
                          __Lrparam 0000                  __CFG_BOREN$SBORDIS 000000  
                  __size_of___awdiv 00BE                    __size_of___ftadd 0268  
                  __size_of___ftdiv 014C            ?_set_external_interrupt1 0088  
          ?_set_external_interrupt3 0088                    __size_of___lldiv 00BC  
                  __size_of___ftmul 015E                    __size_of___lwdiv 0078  
                  __size_of___lwmod 0062                      readADC@channel 00B0  
                          ___ftpack 364C   i2set_external_interrupt1@set_time 000B  
   set_external_interrupt1@set_time 008A              Eeprom_ReadByte@address 0082  
                          ___lwtoft 4378                    __size_of_lcdInst 0010  
                   _I2C_Master_Init 40C6                    __size_of_readADC 015A  
                   _I2C_Master_Read 431E                    __size_of_initLCD 0046  
                   _I2C_Master_Wait 443C                     _I2C_Master_Stop 447A  
                  __size_of_isdigit 002A                     ___lwdiv@divisor 0082  
 i2set_external_interrupt3@set_time 000B     set_external_interrupt3@set_time 008A  
                   ___lwdiv@counter 0086                            __ptext10 33D6  
                          __ptext11 2D0A                            __ptext20 4460  
                          __ptext12 364C                            __ptext21 3F96  
                          __ptext13 2956                            __ptext30 4274  
                          __ptext22 3F2C                            __ptext14 4450  
                          __ptext31 42EC                            __ptext23 4470  
                          __ptext15 43A2                            __ptext40 41D6  
                          __ptext24 447A                            __ptext16 42B6  
                          __ptext41 3758                            __ptext33 2584  
                          __ptext25 4482                            __ptext17 4064  
                          __ptext42 3CB4                            __ptext34 4126  
                          __ptext26 431E                            __ptext18 3DC8  
                          __ptext43 4418                            __ptext35 1F30  
                          __ptext27 443C                            __ptext19 422E  
                          __ptext44 384C                            __ptext36 417E  
                          __ptext28 40C6                            __ptext45 2F72  
                          __ptext37 3D44                            __ptext29 3AB8  
                          __ptext46 3B74                            __ptext38 3522  
                          __ptext39 43F2                 __end_of_servo_ISR_1 2584  
               __end_of_servo_ISR_3 2956                            _count_AA 00F4  
                          _count_9V 00F2                       __size_of_main 0E58  
                   _Eeprom_ReadByte 42EC                       __size_of_read 002C  
                       ??_lcdNibble 0080                            _process1 00F7  
                          _process3 00F6                            int$flags 006C  
                         printf@idx 0098                           printf@val 009C  
                          main@done 00C2                            main@time 00CF  
                          readADC@a 00AD                            readADC@i 00AC  
__size_ofi2_set_external_interrupt1 0058  __size_ofi2_set_external_interrupt3 0058  
                 main@count_seconds 00DF                           putch@data 0082  
          __end_of_I2C_Master_Start 448A            __end_of_I2C_Master_Write 447A  
                        _INTCONbits 000FF2                            isdigit@c 0082  
                          intlevel2 0000                    ___lwmod@dividend 0087  
                  ___lldiv@dividend 0080                            printf@ap 0099  
           __end_of_I2C_Master_Init 4126             __end_of_I2C_Master_Read 434C  
           __end_of_I2C_Master_Wait 4450             __end_of_I2C_Master_Stop 4482  
                       lcdInst@data 0082                         _servo_ISR_1 1F30  
                       _servo_ISR_3 2584                    ___lldiv@quotient 0088  
                 I2C_Master_Write@d 0081                     ___lwmod@divisor 0089  
                   ___lwmod@counter 008B             __end_of_Eeprom_ReadByte 431E  
