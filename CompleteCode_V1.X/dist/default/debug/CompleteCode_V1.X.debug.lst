

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Apr 10 05:24:24 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 1.41
    92                           ; Generated 25/01/2017 GMT
    93                           ; 
    94                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4620 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	mediumconst
   127  00FB90                     __pmediumconst:
   128                           	opt stack 0
   129  00FB90  00                 	db	0
   130  00FB91                     _dpowers:
   131                           	opt stack 0
   132  00FB91  0001               	dw	1
   133  00FB93  0000               	dw	0
   134  00FB95  000A               	dw	10
   135  00FB97  0000               	dw	0
   136  00FB99  0064               	dw	100
   137  00FB9B  0000               	dw	0
   138  00FB9D  03E8               	dw	1000
   139  00FB9F  0000               	dw	0
   140  00FBA1  2710               	dw	10000
   141  00FBA3  0000               	dw	0
   142  00FBA5  86A0               	dw	34464
   143  00FBA7  0001               	dw	1
   144  00FBA9  4240               	dw	16960
   145  00FBAB  000F               	dw	15
   146  00FBAD  9680               	dw	38528
   147  00FBAF  0098               	dw	152
   148  00FBB1  E100               	dw	57600
   149  00FBB3  05F5               	dw	1525
   150  00FBB5  CA00               	dw	51712
   151  00FBB7  3B9A               	dw	15258
   152  00FBB9                     __end_of_dpowers:
   153                           	opt stack 0
   154  00FBB9                     __powers_:
   155                           	opt stack 0
   156  00FBB9  00                 	db	0
   157  00FBBA  80                 	db	128
   158  00FBBB  3F                 	db	63
   159  00FBBC  00                 	db	0
   160  00FBBD  20                 	db	32
   161  00FBBE  41                 	db	65
   162  00FBBF  00                 	db	0
   163  00FBC0  C8                 	db	200
   164  00FBC1  42                 	db	66
   165  00FBC2  00                 	db	0
   166  00FBC3  7A                 	db	122
   167  00FBC4  44                 	db	68
   168  00FBC5  40                 	db	64
   169  00FBC6  1C                 	db	28
   170  00FBC7  46                 	db	70
   171  00FBC8  50                 	db	80
   172  00FBC9  C3                 	db	195
   173  00FBCA  47                 	db	71
   174  00FBCB  24                 	db	36
   175  00FBCC  74                 	db	116
   176  00FBCD  49                 	db	73
   177  00FBCE  97                 	db	151
   178  00FBCF  18                 	db	24
   179  00FBD0  4B                 	db	75
   180  00FBD1  BC                 	db	188
   181  00FBD2  BE                 	db	190
   182  00FBD3  4C                 	db	76
   183  00FBD4  6B                 	db	107
   184  00FBD5  6E                 	db	110
   185  00FBD6  4E                 	db	78
   186  00FBD7  03                 	db	3
   187  00FBD8  15                 	db	21
   188  00FBD9  50                 	db	80
   189  00FBDA  79                 	db	121
   190  00FBDB  AD                 	db	173
   191  00FBDC  60                 	db	96
   192  00FBDD  F3                 	db	243
   193  00FBDE  49                 	db	73
   194  00FBDF  71                 	db	113
   195  00FBE0                     __end_of__powers_:
   196                           	opt stack 0
   197  00FBE0                     __npowers_:
   198                           	opt stack 0
   199  00FBE0  00                 	db	0
   200  00FBE1  80                 	db	128
   201  00FBE2  3F                 	db	63
   202  00FBE3  CD                 	db	205
   203  00FBE4  CC                 	db	204
   204  00FBE5  3D                 	db	61
   205  00FBE6  D7                 	db	215
   206  00FBE7  23                 	db	35
   207  00FBE8  3C                 	db	60
   208  00FBE9  12                 	db	18
   209  00FBEA  83                 	db	131
   210  00FBEB  3A                 	db	58
   211  00FBEC  B7                 	db	183
   212  00FBED  D1                 	db	209
   213  00FBEE  38                 	db	56
   214  00FBEF  C6                 	db	198
   215  00FBF0  27                 	db	39
   216  00FBF1  37                 	db	55
   217  00FBF2  38                 	db	56
   218  00FBF3  86                 	db	134
   219  00FBF4  35                 	db	53
   220  00FBF5  C0                 	db	192
   221  00FBF6  D6                 	db	214
   222  00FBF7  33                 	db	51
   223  00FBF8  CC                 	db	204
   224  00FBF9  2B                 	db	43
   225  00FBFA  32                 	db	50
   226  00FBFB  70                 	db	112
   227  00FBFC  89                 	db	137
   228  00FBFD  30                 	db	48
   229  00FBFE  E7                 	db	231
   230  00FBFF  DB                 	db	219
   231  00FC00  2E                 	db	46
   232  00FC01  E5                 	db	229
   233  00FC02  3C                 	db	60
   234  00FC03  1E                 	db	30
   235  00FC04  42                 	db	66
   236  00FC05  A2                 	db	162
   237  00FC06  0D                 	db	13
   238  00FC07                     __end_of__npowers_:
   239                           	opt stack 0
   240  00FC07                     _hexpowers:
   241                           	opt stack 0
   242  00FC07  0001               	dw	1
   243  00FC09  0000               	dw	0
   244  00FC0B  0010               	dw	16
   245  00FC0D  0000               	dw	0
   246  00FC0F  0100               	dw	256
   247  00FC11  0000               	dw	0
   248  00FC13  1000               	dw	4096
   249  00FC15  0000               	dw	0
   250  00FC17  0000               	dw	0
   251  00FC19  0001               	dw	1
   252  00FC1B  0000               	dw	0
   253  00FC1D  0010               	dw	16
   254  00FC1F  0000               	dw	0
   255  00FC21  0100               	dw	256
   256  00FC23  0000               	dw	0
   257  00FC25  1000               	dw	4096
   258  00FC27                     __end_of_hexpowers:
   259                           	opt stack 0
   260  00FC27                     _keys:
   261                           	opt stack 0
   262  00FC27  31                 	db	49
   263  00FC28  32                 	db	50
   264  00FC29  33                 	db	51
   265  00FC2A  41                 	db	65
   266  00FC2B  34                 	db	52
   267  00FC2C  35                 	db	53
   268  00FC2D  36                 	db	54
   269  00FC2E  42                 	db	66
   270  00FC2F  37                 	db	55
   271  00FC30  38                 	db	56
   272  00FC31  39                 	db	57
   273  00FC32  43                 	db	67
   274  00FC33  2A                 	db	42
   275  00FC34  30                 	db	48
   276  00FC35  23                 	db	35
   277  00FC36  44                 	db	68
   278  00FC37  00                 	db	0
   279  00FC38                     __end_of_keys:
   280                           	opt stack 0
   281  00FC38                     _happynewyear:
   282                           	opt stack 0
   283  00FC38  00                 	db	0
   284  00FC39  33                 	db	51
   285  00FC3A  03                 	db	3
   286  00FC3B  01                 	db	1
   287  00FC3C  10                 	db	16
   288  00FC3D  04                 	db	4
   289  00FC3E  17                 	db	23
   290  00FC3F                     __end_of_happynewyear:
   291                           	opt stack 0
   292  0000                     _LATCbits	set	3979
   293  0000                     _LATDbits	set	3980
   294  0000                     _PORTB	set	3969
   295  0000                     _PORTBbits	set	3969
   296  0000                     _LATE	set	3981
   297  0000                     _LATD	set	3980
   298  0000                     _LATC	set	3979
   299  0000                     _LATB	set	3978
   300  0000                     _LATA	set	3977
   301  0000                     _TRISE	set	3990
   302  0000                     _TRISD	set	3989
   303  0000                     _TRISC	set	3988
   304  0000                     _TRISB	set	3987
   305  0000                     _TRISA	set	3986
   306  0000                     _TRISC4	set	31908
   307  0000                     _TRISC3	set	31907
   308  0000                     _ADRES	set	4035
   309  0000                     _SSPBUF	set	4041
   310  0000                     _SSPADD	set	4040
   311  0000                     _SSPCON2	set	4037
   312  0000                     _SSPCON1	set	4038
   313  0000                     _SSPSTAT	set	4039
   314  0000                     _PIR2bits	set	4001
   315  0000                     _EECON2	set	4007
   316  0000                     _EEDATA	set	4008
   317  0000                     _EECON1bits	set	4006
   318  0000                     _EEADR	set	4009
   319  0000                     _EEADRH	set	4010
   320  0000                     _ADCON0bits	set	4034
   321  0000                     _TMR3L	set	4018
   322  0000                     _TMR3H	set	4019
   323  0000                     _TMR1L	set	4046
   324  0000                     _TMR1H	set	4047
   325  0000                     _T3CON	set	4017
   326  0000                     _T1CON	set	4045
   327  0000                     _CMCONbits	set	4020
   328  0000                     _CVRCON	set	4021
   329  0000                     _ADCON1	set	4033
   330  0000                     _ADCON0	set	4034
   331  0000                     _OSCCON	set	4051
   332  0000                     _ACKEN	set	32300
   333  0000                     _ACKDT	set	32301
   334  0000                     _RCEN	set	32299
   335  0000                     _PEN	set	32298
   336  0000                     _RSEN	set	32297
   337  0000                     _SEN	set	32296
   338  0000                     _ADON	set	32272
   339  0000                     _TMR3IE	set	32001
   340  0000                     _TMR1IE	set	31976
   341  0000                     _TMR3IF	set	32009
   342  0000                     _TMR3ON	set	32136
   343  0000                     _TMR1IF	set	31984
   344  0000                     _TMR1ON	set	32360
   345  0000                     _ADFM	set	32263
   346  0000                     _INTCONbits	set	4082
   347  0000                     _PEIE	set	32662
   348  0000                     _nRBPU	set	32655
   349  00FC3F                     STR_28:
   350  00FC3F  30                 	db	48	;'0'
   351  00FC40  31                 	db	49	;'1'
   352  00FC41  32                 	db	50	;'2'
   353  00FC42  33                 	db	51	;'3'
   354  00FC43  34                 	db	52	;'4'
   355  00FC44  35                 	db	53	;'5'
   356  00FC45  36                 	db	54	;'6'
   357  00FC46  37                 	db	55	;'7'
   358  00FC47  38                 	db	56	;'8'
   359  00FC48  39                 	db	57	;'9'
   360  00FC49  61                 	db	97	;'a'
   361  00FC4A  62                 	db	98	;'b'
   362  00FC4B  63                 	db	99	;'c'
   363  00FC4C  64                 	db	100	;'d'
   364  00FC4D  65                 	db	101	;'e'
   365  00FC4E  66                 	db	102	;'f'
   366  00FC4F  00                 	db	0
   367  00FC50                     STR_1:
   368  00FC50  25                 	db	37
   369  00FC51  30                 	db	48	;'0'
   370  00FC52  32                 	db	50	;'2'
   371  00FC53  78                 	db	120	;'x'
   372  00FC54  2F                 	db	47
   373  00FC55  25                 	db	37
   374  00FC56  30                 	db	48	;'0'
   375  00FC57  32                 	db	50	;'2'
   376  00FC58  78                 	db	120	;'x'
   377  00FC59  2F                 	db	47
   378  00FC5A  25                 	db	37
   379  00FC5B  30                 	db	48	;'0'
   380  00FC5C  32                 	db	50	;'2'
   381  00FC5D  78                 	db	120	;'x'
   382  00FC5E  20                 	db	32
   383  00FC5F  00                 	db	0
   384  00FC60                     STR_3:
   385  00FC60  25                 	db	37
   386  00FC61  30                 	db	48	;'0'
   387  00FC62  32                 	db	50	;'2'
   388  00FC63  78                 	db	120	;'x'
   389  00FC64  3A                 	db	58	;':'
   390  00FC65  25                 	db	37
   391  00FC66  30                 	db	48	;'0'
   392  00FC67  32                 	db	50	;'2'
   393  00FC68  78                 	db	120	;'x'
   394  00FC69  3A                 	db	58	;':'
   395  00FC6A  25                 	db	37
   396  00FC6B  30                 	db	48	;'0'
   397  00FC6C  32                 	db	50	;'2'
   398  00FC6D  78                 	db	120	;'x'
   399  00FC6E  20                 	db	32
   400  00FC6F  00                 	db	0
   401  00FC70                     STR_5:
   402  00FC70  49                 	db	73	;'I'
   403  00FC71  6E                 	db	110	;'n'
   404  00FC72  69                 	db	105	;'i'
   405  00FC73  74                 	db	116	;'t'
   406  00FC74  69                 	db	105	;'i'
   407  00FC75  61                 	db	97	;'a'
   408  00FC76  6C                 	db	108	;'l'
   409  00FC77  69                 	db	105	;'i'
   410  00FC78  7A                 	db	122	;'z'
   411  00FC79  69                 	db	105	;'i'
   412  00FC7A  6E                 	db	110	;'n'
   413  00FC7B  67                 	db	103	;'g'
   414  00FC7C  2E                 	db	46
   415  00FC7D  2E                 	db	46
   416  00FC7E  2E                 	db	46
   417  00FC7F  00                 	db	0
   418  00FC80                     STR_15:
   419  00FC80  74                 	db	116	;'t'
   420  00FC81  6F                 	db	111	;'o'
   421  00FC82  74                 	db	116	;'t'
   422  00FC83  61                 	db	97	;'a'
   423  00FC84  6C                 	db	108	;'l'
   424  00FC85  3A                 	db	58	;':'
   425  00FC86  20                 	db	32
   426  00FC87  25                 	db	37
   427  00FC88  30                 	db	48	;'0'
   428  00FC89  32                 	db	50	;'2'
   429  00FC8A  64                 	db	100	;'d'
   430  00FC8B  00                 	db	0
   431  00FC8C                     STR_13:
   432  00FC8C  20                 	db	32
   433  00FC8D  43                 	db	67	;'C'
   434  00FC8E  3A                 	db	58	;':'
   435  00FC8F  20                 	db	32
   436  00FC90  25                 	db	37
   437  00FC91  30                 	db	48	;'0'
   438  00FC92  32                 	db	50	;'2'
   439  00FC93  64                 	db	100	;'d'
   440  00FC94  20                 	db	32
   441  00FC95  20                 	db	32
   442  00FC96  00                 	db	0
   443  00FC97                     STR_6:
   444  00FC97  53                 	db	83	;'S'
   445  00FC98  6F                 	db	111	;'o'
   446  00FC99  72                 	db	114	;'r'
   447  00FC9A  74                 	db	116	;'t'
   448  00FC9B  69                 	db	105	;'i'
   449  00FC9C  6E                 	db	110	;'n'
   450  00FC9D  67                 	db	103	;'g'
   451  00FC9E  2E                 	db	46
   452  00FC9F  2E                 	db	46
   453  00FCA0  2E                 	db	46
   454  00FCA1  00                 	db	0
   455  00FCA2                     STR_11:
   456  00FCA2  41                 	db	65	;'A'
   457  00FCA3  41                 	db	65	;'A'
   458  00FCA4  3A                 	db	58	;':'
   459  00FCA5  20                 	db	32
   460  00FCA6  25                 	db	37
   461  00FCA7  30                 	db	48	;'0'
   462  00FCA8  32                 	db	50	;'2'
   463  00FCA9  64                 	db	100	;'d'
   464  00FCAA  20                 	db	32
   465  00FCAB  00                 	db	0
   466  00FCAC                     STR_12:
   467  00FCAC  39                 	db	57	;'9'
   468  00FCAD  56                 	db	86	;'V'
   469  00FCAE  3A                 	db	58	;':'
   470  00FCAF  20                 	db	32
   471  00FCB0  25                 	db	37
   472  00FCB1  30                 	db	48	;'0'
   473  00FCB2  32                 	db	50	;'2'
   474  00FCB3  64                 	db	100	;'d'
   475  00FCB4  00                 	db	0
   476  00FCB5                     STR_10:
   477  00FCB5  20                 	db	32
   478  00FCB6  73                 	db	115	;'s'
   479  00FCB7  65                 	db	101	;'e'
   480  00FCB8  63                 	db	99	;'c'
   481  00FCB9  6F                 	db	111	;'o'
   482  00FCBA  6E                 	db	110	;'n'
   483  00FCBB  64                 	db	100	;'d'
   484  00FCBC  73                 	db	115	;'s'
   485  00FCBD  00                 	db	0
   486  00FCBE                     STR_8:
   487  00FCBE  20                 	db	32
   488  00FCBF  6D                 	db	109	;'m'
   489  00FCC0  69                 	db	105	;'i'
   490  00FCC1  6E                 	db	110	;'n'
   491  00FCC2  75                 	db	117	;'u'
   492  00FCC3  74                 	db	116	;'t'
   493  00FCC4  65                 	db	101	;'e'
   494  00FCC5  73                 	db	115	;'s'
   495  00FCC6  00                 	db	0
   496  00FCC7                     STR_14:
   497  00FCC7  58                 	db	88	;'X'
   498  00FCC8  3A                 	db	58	;':'
   499  00FCC9  20                 	db	32
   500  00FCCA  25                 	db	37
   501  00FCCB  30                 	db	48	;'0'
   502  00FCCC  32                 	db	50	;'2'
   503  00FCCD  64                 	db	100	;'d'
   504  00FCCE  00                 	db	0
   505  00FCCF                     STR_2:
   506  00FCCF  31                 	db	49	;'1'
   507  00FCD0  3A                 	db	58	;':'
   508  00FCD1  53                 	db	83	;'S'
   509  00FCD2  74                 	db	116	;'t'
   510  00FCD3  61                 	db	97	;'a'
   511  00FCD4  72                 	db	114	;'r'
   512  00FCD5  74                 	db	116	;'t'
   513  00FCD6  00                 	db	0
   514  00FCD7                     STR_25:
   515  00FCD7  41                 	db	65	;'A'
   516  00FCD8  41                 	db	65	;'A'
   517  00FCD9  3A                 	db	58	;':'
   518  00FCDA  20                 	db	32
   519  00FCDB  25                 	db	37
   520  00FCDC  66                 	db	102	;'f'
   521  00FCDD  00                 	db	0
   522  00FCDE                     STR_26:
   523  00FCDE  39                 	db	57	;'9'
   524  00FCDF  56                 	db	86	;'V'
   525  00FCE0  3A                 	db	58	;':'
   526  00FCE1  20                 	db	32
   527  00FCE2  25                 	db	37
   528  00FCE3  66                 	db	102	;'f'
   529  00FCE4  00                 	db	0
   530  00FCE5                     STR_17:
   531  00FCE5  20                 	db	32
   532  00FCE6  6D                 	db	109	;'m'
   533  00FCE7  69                 	db	105	;'i'
   534  00FCE8  6E                 	db	110	;'n'
   535  00FCE9  20                 	db	32
   536  00FCEA  20                 	db	32
   537  00FCEB  00                 	db	0
   538  00FCEC                     STR_4:
   539  00FCEC  32                 	db	50	;'2'
   540  00FCED  3A                 	db	58	;':'
   541  00FCEE  4C                 	db	76	;'L'
   542  00FCEF  6F                 	db	111	;'o'
   543  00FCF0  67                 	db	103	;'g'
   544  00FCF1  73                 	db	115	;'s'
   545  00FCF2  00                 	db	0
   546  00FCF3                     STR_27:
   547  00FCF3  63                 	db	99	;'c'
   548  00FCF4  3A                 	db	58	;':'
   549  00FCF5  20                 	db	32
   550  00FCF6  25                 	db	37
   551  00FCF7  66                 	db	102	;'f'
   552  00FCF8  00                 	db	0
   553  00FCF9                     STR_19:
   554  00FCF9  20                 	db	32
   555  00FCFA  73                 	db	115	;'s'
   556  00FCFB  65                 	db	101	;'e'
   557  00FCFC  63                 	db	99	;'c'
   558  00FCFD  00                 	db	0
   559  0000                     
   560                           ; #config settings
   561  00FCFE  00                 	db	0	; dummy byte at the end
   562  0000                     
   563                           	psect	cinit
   564  005CE8                     __pcinit:
   565                           	opt stack 0
   566  005CE8                     start_initialization:
   567                           	opt stack 0
   568  005CE8                     __initialization:
   569                           	opt stack 0
   570                           
   571                           ; Clear objects allocated to BANK1 (43 bytes)
   572  005CE8  EE01  F033         	lfsr	0,__pbssBANK1
   573  005CEC  0E2B               	movlw	43
   574  005CEE                     clear_0:
   575  005CEE  6AEE               	clrf	postinc0,c
   576  005CF0  06E8               	decf	wreg,f,c
   577  005CF2  E1FD               	bnz	clear_0
   578                           
   579                           ; Clear objects allocated to BANK0 (9 bytes)
   580  005CF4  EE00  F0E9         	lfsr	0,__pbssBANK0
   581  005CF8  0E09               	movlw	9
   582  005CFA                     clear_1:
   583  005CFA  6AEE               	clrf	postinc0,c
   584  005CFC  06E8               	decf	wreg,f,c
   585  005CFE  E1FD               	bnz	clear_1
   586                           
   587                           ; Clear objects allocated to COMRAM (10 bytes)
   588  005D00  EE00  F075         	lfsr	0,__pbssCOMRAM
   589  005D04  0E0A               	movlw	10
   590  005D06                     clear_2:
   591  005D06  6AEE               	clrf	postinc0,c
   592  005D08  06E8               	decf	wreg,f,c
   593  005D0A  E1FD               	bnz	clear_2
   594  005D0C                     end_of_initialization:
   595                           	opt stack 0
   596  005D0C                     __end_of__initialization:
   597                           	opt stack 0
   598  005D0C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   599  005D0E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   600  005D10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   601  005D12  6EF8               	movwf	tblptru,c
   602  005D14  0100               	movlb	0
   603  005D16  EF09  F000         	goto	_main	;jump to C main() function
   604                           tblptru	equ	0xFF8
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           
   608                           	psect	bssCOMRAM
   609  000075                     __pbssCOMRAM:
   610                           	opt stack 0
   611  000075                     _count1:
   612                           	opt stack 0
   613  000075                     	ds	2
   614  000077                     _down_period1:
   615                           	opt stack 0
   616  000077                     	ds	2
   617  000079                     _up_period1:
   618                           	opt stack 0
   619  000079                     	ds	2
   620  00007B                     _stage3:
   621                           	opt stack 0
   622  00007B                     	ds	1
   623  00007C                     _stage1:
   624                           	opt stack 0
   625  00007C                     	ds	1
   626  00007D                     _current_state3:
   627                           	opt stack 0
   628  00007D                     	ds	1
   629  00007E                     _current_state1:
   630                           	opt stack 0
   631  00007E                     	ds	1
   632                           tblptru	equ	0xFF8
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           
   636                           	psect	bssBANK0
   637  0000E9                     __pbssBANK0:
   638                           	opt stack 0
   639  0000E9                     _voltage_6:
   640                           	opt stack 0
   641  0000E9                     	ds	3
   642  0000EC                     _down_period3:
   643                           	opt stack 0
   644  0000EC                     	ds	2
   645  0000EE                     _up_period3:
   646                           	opt stack 0
   647  0000EE                     	ds	2
   648  0000F0                     _isr3:
   649                           	opt stack 0
   650  0000F0                     	ds	1
   651  0000F1                     _isr1:
   652                           	opt stack 0
   653  0000F1                     	ds	1
   654                           tblptru	equ	0xFF8
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           
   658                           	psect	bssBANK1
   659  000133                     __pbssBANK1:
   660                           	opt stack 0
   661  000133                     _voltage_C:
   662                           	opt stack 0
   663  000133                     	ds	3
   664  000136                     _voltage_9V:
   665                           	opt stack 0
   666  000136                     	ds	3
   667  000139                     _voltage_AA:
   668                           	opt stack 0
   669  000139                     	ds	3
   670  00013C                     _voltage_4:
   671                           	opt stack 0
   672  00013C                     	ds	3
   673  00013F                     _voltage_3:
   674                           	opt stack 0
   675  00013F                     	ds	3
   676  000142                     _voltage_0:
   677                           	opt stack 0
   678  000142                     	ds	3
   679  000145                     _count_drained:
   680                           	opt stack 0
   681  000145                     	ds	2
   682  000147                     _count_C:
   683                           	opt stack 0
   684  000147                     	ds	2
   685  000149                     _count_9V:
   686                           	opt stack 0
   687  000149                     	ds	2
   688  00014B                     _count_AA:
   689                           	opt stack 0
   690  00014B                     	ds	2
   691  00014D                     _count3:
   692                           	opt stack 0
   693  00014D                     	ds	2
   694  00014F                     _process3:
   695                           	opt stack 0
   696  00014F                     	ds	1
   697  000150                     _process1:
   698                           	opt stack 0
   699  000150                     	ds	1
   700  000151                     _volt_check3:
   701                           	opt stack 0
   702  000151                     	ds	1
   703  000152                     _volt_check1:
   704                           	opt stack 0
   705  000152                     	ds	1
   706  000153                     _AA_or_9V:
   707                           	opt stack 0
   708  000153                     	ds	1
   709  000154                     _init3:
   710                           	opt stack 0
   711  000154                     	ds	1
   712  000155                     _init1:
   713                           	opt stack 0
   714  000155                     	ds	1
   715  000156                     _gate_status3:
   716                           	opt stack 0
   717  000156                     	ds	1
   718  000157                     _gate_status1:
   719                           	opt stack 0
   720  000157                     	ds	1
   721  000158                     _voltage_2:
   722                           	opt stack 0
   723  000158                     	ds	3
   724  00015B                     _voltage_1:
   725                           	opt stack 0
   726  00015B                     	ds	3
   727                           tblptru	equ	0xFF8
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           
   731                           	psect	cstackBANK1
   732  000100                     __pcstackBANK1:
   733                           	opt stack 0
   734  000100                     main@loop_count:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x0
   738  000100                     	ds	2
   739  000102                     main@eeprom_min:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x2
   743  000102                     	ds	1
   744  000103                     main@eeprom_seconds:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x3
   748  000103                     	ds	1
   749  000104                     main@eeprom_AA:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x4
   753  000104                     	ds	1
   754  000105                     main@eeprom_9V:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x5
   758  000105                     	ds	1
   759  000106                     main@eeprom_C:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x6
   763  000106                     	ds	1
   764  000107                     main@eeprom_drained:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x7
   768  000107                     	ds	1
   769  000108                     main@eeprom_total:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x8
   773  000108                     	ds	1
   774  000109                     main@past_min:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x9
   778  000109                     	ds	1
   779  00010A                     main@past_seconds:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0xA
   783  00010A                     	ds	1
   784  00010B                     main@past_total:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0xB
   788  00010B                     	ds	1
   789  00010C                     main@past_AA:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0xC
   793  00010C                     	ds	1
   794  00010D                     main@past_9V:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0xD
   798  00010D                     	ds	1
   799  00010E                     main@past_C:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0xE
   803  00010E                     	ds	1
   804  00010F                     main@past_drained:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0xF
   808  00010F                     	ds	1
   809  000110                     main@flag_interrupt:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x10
   813  000110                     	ds	1
   814  000111                     main@done:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x11
   818  000111                     	ds	1
   819  000112                     main@time:
   820                           	opt stack 0
   821                           
   822                           ; 7 bytes @ 0x12
   823  000112                     	ds	7
   824  000119                     main@i:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x19
   828  000119                     	ds	1
   829  00011A                     main@i_431:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x1A
   833  00011A                     	ds	1
   834  00011B                     main@i_433:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x1B
   838  00011B                     	ds	1
   839  00011C                     main@i_438:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x1C
   843  00011C                     	ds	1
   844  00011D                     main@i_439:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x1D
   848  00011D                     	ds	1
   849  00011E                     main@i_444:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x1E
   853  00011E                     	ds	1
   854  00011F                     main@i_445:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x1F
   858  00011F                     	ds	1
   859  000120                     main@i_447:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x20
   863  000120                     	ds	1
   864  000121                     main@i_448:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x21
   868  000121                     	ds	1
   869  000122                     main@j:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x22
   873  000122                     	ds	1
   874  000123                     main@k:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x23
   878  000123                     	ds	1
   879  000124                     main@k_432:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x24
   883  000124                     	ds	1
   884  000125                     main@count_min_initial:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x25
   888  000125                     	ds	1
   889  000126                     main@count_seconds_initial:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x26
   893  000126                     	ds	1
   894  000127                     main@count_min_final:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x27
   898  000127                     	ds	1
   899  000128                     main@count_seconds_final:
   900                           	opt stack 0
   901                           
   902                           ; 1 bytes @ 0x28
   903  000128                     	ds	1
   904  000129                     main@count_min:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x29
   908  000129                     	ds	1
   909  00012A                     main@count_seconds:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x2A
   913  00012A                     	ds	1
   914  00012B                     main@keypress:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x2B
   918  00012B                     	ds	1
   919  00012C                     main@address_seconds:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x2C
   923  00012C                     	ds	1
   924  00012D                     main@address_AA:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x2D
   928  00012D                     	ds	1
   929  00012E                     main@address_9V:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x2E
   933  00012E                     	ds	1
   934  00012F                     main@address_C:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x2F
   938  00012F                     	ds	1
   939  000130                     main@address_drained:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x30
   943  000130                     	ds	1
   944  000131                     main@address_total:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x31
   948  000131                     	ds	1
   949  000132                     main@address_min:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x32
   953  000132                     	ds	1
   954                           tblptru	equ	0xFF8
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           
   958                           	psect	cstackBANK0
   959  000080                     __pcstackBANK0:
   960                           	opt stack 0
   961  000080                     ??_Eeprom_ReadByte:
   962  000080                     ??_isdigit:
   963  000080                     ??_read:
   964  000080                     ??_I2C_Master_Wait:
   965  000080                     ?_delay_1s_interrupt:
   966                           	opt stack 0
   967  000080                     ?___awmod:
   968                           	opt stack 0
   969  000080                     ?___ftpack:
   970                           	opt stack 0
   971  000080                     ?___ftneg:
   972                           	opt stack 0
   973  000080                     ?__tdiv_to_l_:
   974                           	opt stack 0
   975  000080                     ?__div_to_l_:
   976                           	opt stack 0
   977  000080                     ?___lldiv:
   978                           	opt stack 0
   979  000080                     lcdNibble@temp:
   980                           	opt stack 0
   981  000080                     Eeprom_WriteByte@data:
   982                           	opt stack 0
   983  000080                     ___awmod@dividend:
   984                           	opt stack 0
   985  000080                     __div_to_l_@f1:
   986                           	opt stack 0
   987  000080                     ___ftpack@arg:
   988                           	opt stack 0
   989  000080                     __tdiv_to_l_@f1:
   990                           	opt stack 0
   991  000080                     ___ftge@ff1:
   992                           	opt stack 0
   993  000080                     ___ftneg@f1:
   994                           	opt stack 0
   995  000080                     ___lldiv@dividend:
   996                           	opt stack 0
   997                           
   998                           ; 4 bytes @ 0x0
   999  000080                     	ds	1
  1000  000081                     ??_Eeprom_WriteByte:
  1001  000081                     read@channel2:
  1002                           	opt stack 0
  1003  000081                     lcdNibble@data:
  1004                           	opt stack 0
  1005  000081                     I2C_Master_Read@a:
  1006                           	opt stack 0
  1007  000081                     _isdigit$1222:
  1008                           	opt stack 0
  1009  000081                     I2C_Master_Write@d:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x1
  1013  000081                     	ds	1
  1014  000082                     ??_delay_1s_interrupt:
  1015  000082                     lcdInst@data:
  1016                           	opt stack 0
  1017  000082                     putch@data:
  1018                           	opt stack 0
  1019  000082                     Eeprom_ReadByte@address:
  1020                           	opt stack 0
  1021  000082                     I2C_Master_Read@temp:
  1022                           	opt stack 0
  1023  000082                     isdigit@c:
  1024                           	opt stack 0
  1025  000082                     ___awmod@divisor:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x2
  1029  000082                     	ds	1
  1030  000083                     ??_initLCD:
  1031  000083                     Eeprom_WriteByte@address:
  1032                           	opt stack 0
  1033  000083                     ___ftpack@exp:
  1034                           	opt stack 0
  1035  000083                     __div_to_l_@f2:
  1036                           	opt stack 0
  1037  000083                     __tdiv_to_l_@f2:
  1038                           	opt stack 0
  1039  000083                     ___ftge@ff2:
  1040                           	opt stack 0
  1041                           
  1042                           ; 3 bytes @ 0x3
  1043  000083                     	ds	1
  1044  000084                     ___awmod@counter:
  1045                           	opt stack 0
  1046  000084                     ___ftpack@sign:
  1047                           	opt stack 0
  1048  000084                     ___lldiv@divisor:
  1049                           	opt stack 0
  1050                           
  1051                           ; 4 bytes @ 0x4
  1052  000084                     	ds	1
  1053  000085                     ??___ftpack:
  1054  000085                     delay_1s_interrupt@n:
  1055                           	opt stack 0
  1056  000085                     ___awmod@sign:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x5
  1060  000085                     	ds	1
  1061  000086                     ??__tdiv_to_l_:
  1062  000086                     ??___ftge:
  1063  000086                     ?___awdiv:
  1064                           	opt stack 0
  1065  000086                     delay_1s_interrupt@i:
  1066                           	opt stack 0
  1067  000086                     ___awdiv@dividend:
  1068                           	opt stack 0
  1069  000086                     __div_to_l_@quot:
  1070                           	opt stack 0
  1071                           
  1072                           ; 4 bytes @ 0x6
  1073  000086                     	ds	2
  1074  000088                     ?___lltoft:
  1075                           	opt stack 0
  1076  000088                     ?___lwtoft:
  1077                           	opt stack 0
  1078  000088                     ___awdiv@divisor:
  1079                           	opt stack 0
  1080  000088                     ___lwtoft@c:
  1081                           	opt stack 0
  1082  000088                     ___lldiv@quotient:
  1083                           	opt stack 0
  1084  000088                     ___lltoft@c:
  1085                           	opt stack 0
  1086                           
  1087                           ; 4 bytes @ 0x8
  1088  000088                     	ds	1
  1089  000089                     __tdiv_to_l_@quot:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x9
  1093  000089                     	ds	1
  1094  00008A                     ___awdiv@counter:
  1095                           	opt stack 0
  1096  00008A                     __div_to_l_@cntr:
  1097                           	opt stack 0
  1098                           
  1099                           ; 1 bytes @ 0xA
  1100  00008A                     	ds	1
  1101  00008B                     ___awdiv@sign:
  1102                           	opt stack 0
  1103  00008B                     __div_to_l_@exp1:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0xB
  1107  00008B                     	ds	1
  1108  00008C                     ??___lltoft:
  1109  00008C                     ___lldiv@counter:
  1110                           	opt stack 0
  1111  00008C                     ___awdiv@quotient:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0xC
  1115  00008C                     	ds	1
  1116  00008D                     ?___llmod:
  1117                           	opt stack 0
  1118  00008D                     __tdiv_to_l_@cntr:
  1119                           	opt stack 0
  1120  00008D                     I2C_Master_Init@c:
  1121                           	opt stack 0
  1122  00008D                     ___llmod@dividend:
  1123                           	opt stack 0
  1124                           
  1125                           ; 4 bytes @ 0xD
  1126  00008D                     	ds	1
  1127  00008E                     ?___wmul:
  1128                           	opt stack 0
  1129  00008E                     __tdiv_to_l_@exp1:
  1130                           	opt stack 0
  1131  00008E                     set_external_interrupt1@time:
  1132                           	opt stack 0
  1133  00008E                     set_external_interrupt3@time:
  1134                           	opt stack 0
  1135  00008E                     ___wmul@multiplier:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0xE
  1139  00008E                     	ds	2
  1140  000090                     ___lltoft@exp:
  1141                           	opt stack 0
  1142  000090                     set_external_interrupt1@set_time:
  1143                           	opt stack 0
  1144  000090                     set_external_interrupt3@set_time:
  1145                           	opt stack 0
  1146  000090                     ___wmul@multiplicand:
  1147                           	opt stack 0
  1148                           
  1149                           ; 2 bytes @ 0x10
  1150  000090                     	ds	1
  1151  000091                     ??_I2C_Master_Init:
  1152  000091                     ___llmod@divisor:
  1153                           	opt stack 0
  1154                           
  1155                           ; 4 bytes @ 0x11
  1156  000091                     	ds	1
  1157  000092                     ___wmul@product:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x12
  1161  000092                     	ds	2
  1162  000094                     ?___ftmul:
  1163                           	opt stack 0
  1164  000094                     ___ftmul@f1:
  1165                           	opt stack 0
  1166                           
  1167                           ; 3 bytes @ 0x14
  1168  000094                     	ds	1
  1169  000095                     ___llmod@counter:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x15
  1173  000095                     	ds	2
  1174  000097                     ___ftmul@f2:
  1175                           	opt stack 0
  1176                           
  1177                           ; 3 bytes @ 0x17
  1178  000097                     	ds	3
  1179  00009A                     ??___ftmul:
  1180                           
  1181                           ; 1 bytes @ 0x1A
  1182  00009A                     	ds	3
  1183  00009D                     ___ftmul@exp:
  1184                           	opt stack 0
  1185                           
  1186                           ; 1 bytes @ 0x1D
  1187  00009D                     	ds	1
  1188  00009E                     ___ftmul@f3_as_product:
  1189                           	opt stack 0
  1190                           
  1191                           ; 3 bytes @ 0x1E
  1192  00009E                     	ds	3
  1193  0000A1                     ___ftmul@cntr:
  1194                           	opt stack 0
  1195                           
  1196                           ; 1 bytes @ 0x21
  1197  0000A1                     	ds	1
  1198  0000A2                     ___ftmul@sign:
  1199                           	opt stack 0
  1200                           
  1201                           ; 1 bytes @ 0x22
  1202  0000A2                     	ds	1
  1203  0000A3                     ?___ftdiv:
  1204                           	opt stack 0
  1205  0000A3                     ?_fround:
  1206                           	opt stack 0
  1207  0000A3                     ?_scale:
  1208                           	opt stack 0
  1209  0000A3                     ___ftdiv@f1:
  1210                           	opt stack 0
  1211                           
  1212                           ; 3 bytes @ 0x23
  1213  0000A3                     	ds	3
  1214  0000A6                     ___ftdiv@f2:
  1215                           	opt stack 0
  1216  0000A6                     _fround$1560:
  1217                           	opt stack 0
  1218  0000A6                     _scale$1561:
  1219                           	opt stack 0
  1220                           
  1221                           ; 3 bytes @ 0x26
  1222  0000A6                     	ds	3
  1223  0000A9                     ??___ftdiv:
  1224  0000A9                     scale@scl:
  1225                           	opt stack 0
  1226  0000A9                     _fround$1559:
  1227                           	opt stack 0
  1228                           
  1229                           ; 3 bytes @ 0x29
  1230  0000A9                     	ds	1
  1231  0000AA                     ?___fttol:
  1232                           	opt stack 0
  1233  0000AA                     ___fttol@f1:
  1234                           	opt stack 0
  1235                           
  1236                           ; 3 bytes @ 0x2A
  1237  0000AA                     	ds	2
  1238  0000AC                     fround@prec:
  1239                           	opt stack 0
  1240  0000AC                     ___ftdiv@cntr:
  1241                           	opt stack 0
  1242                           
  1243                           ; 1 bytes @ 0x2C
  1244  0000AC                     	ds	1
  1245  0000AD                     ?___ftadd:
  1246                           	opt stack 0
  1247  0000AD                     ___ftadd@f1:
  1248                           	opt stack 0
  1249  0000AD                     ___ftdiv@f3:
  1250                           	opt stack 0
  1251                           
  1252                           ; 3 bytes @ 0x2D
  1253  0000AD                     	ds	1
  1254  0000AE                     ??___fttol:
  1255                           
  1256                           ; 1 bytes @ 0x2E
  1257  0000AE                     	ds	2
  1258  0000B0                     ___ftdiv@exp:
  1259                           	opt stack 0
  1260  0000B0                     ___ftadd@f2:
  1261                           	opt stack 0
  1262                           
  1263                           ; 3 bytes @ 0x30
  1264  0000B0                     	ds	1
  1265  0000B1                     ___ftdiv@sign:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x31
  1269  0000B1                     	ds	2
  1270  0000B3                     ??___ftadd:
  1271  0000B3                     ___fttol@sign1:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0x33
  1275  0000B3                     	ds	1
  1276  0000B4                     ___fttol@lval:
  1277                           	opt stack 0
  1278                           
  1279                           ; 4 bytes @ 0x34
  1280  0000B4                     	ds	2
  1281  0000B6                     ___ftadd@sign:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0x36
  1285  0000B6                     	ds	1
  1286  0000B7                     ___ftadd@exp2:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x37
  1290  0000B7                     	ds	1
  1291  0000B8                     ___ftadd@exp1:
  1292                           	opt stack 0
  1293  0000B8                     ___fttol@exp1:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0x38
  1297  0000B8                     	ds	1
  1298  0000B9                     ?___ftsub:
  1299                           	opt stack 0
  1300  0000B9                     ?_abs:
  1301                           	opt stack 0
  1302  0000B9                     abs@num:
  1303                           	opt stack 0
  1304  0000B9                     ___ftsub@f1:
  1305                           	opt stack 0
  1306                           
  1307                           ; 3 bytes @ 0x39
  1308  0000B9                     	ds	3
  1309  0000BC                     ?_readADC:
  1310                           	opt stack 0
  1311  0000BC                     ___ftsub@f2:
  1312                           	opt stack 0
  1313                           
  1314                           ; 3 bytes @ 0x3C
  1315  0000BC                     	ds	3
  1316  0000BF                     ?_printf:
  1317                           	opt stack 0
  1318  0000BF                     printf@f:
  1319                           	opt stack 0
  1320  0000BF                     readADC@volt:
  1321                           	opt stack 0
  1322                           
  1323                           ; 3 bytes @ 0x3F
  1324  0000BF                     	ds	3
  1325  0000C2                     readADC@i:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x42
  1329  0000C2                     	ds	1
  1330  0000C3                     readADC@a:
  1331                           	opt stack 0
  1332                           
  1333                           ; 3 bytes @ 0x43
  1334  0000C3                     	ds	3
  1335  0000C6                     readADC@channel:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0x46
  1339  0000C6                     	ds	1
  1340  0000C7                     ??_printf:
  1341                           
  1342                           ; 1 bytes @ 0x47
  1343  0000C7                     	ds	6
  1344  0000CD                     _printf$1562:
  1345                           	opt stack 0
  1346                           
  1347                           ; 3 bytes @ 0x4D
  1348  0000CD                     	ds	3
  1349  0000D0                     printf@idx:
  1350                           	opt stack 0
  1351                           
  1352                           ; 1 bytes @ 0x50
  1353  0000D0                     	ds	1
  1354  0000D1                     printf@ap:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x51
  1358  0000D1                     	ds	2
  1359  0000D3                     printf@prec:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x53
  1363  0000D3                     	ds	2
  1364  0000D5                     printf@tmpval:
  1365                           	opt stack 0
  1366                           
  1367                           ; 4 bytes @ 0x55
  1368  0000D5                     	ds	4
  1369  0000D9                     printf@width:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x59
  1373  0000D9                     	ds	2
  1374  0000DB                     printf@exp:
  1375                           	opt stack 0
  1376                           
  1377                           ; 2 bytes @ 0x5B
  1378  0000DB                     	ds	2
  1379  0000DD                     printf@val:
  1380                           	opt stack 0
  1381                           
  1382                           ; 4 bytes @ 0x5D
  1383  0000DD                     	ds	4
  1384  0000E1                     printf@flag:
  1385                           	opt stack 0
  1386                           
  1387                           ; 2 bytes @ 0x61
  1388  0000E1                     	ds	2
  1389  0000E3                     printf@fval:
  1390                           	opt stack 0
  1391                           
  1392                           ; 3 bytes @ 0x63
  1393  0000E3                     	ds	3
  1394  0000E6                     printf@c:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0x66
  1398  0000E6                     	ds	1
  1399  0000E7                     ??_main:
  1400                           
  1401                           ; 1 bytes @ 0x67
  1402  0000E7                     	ds	2
  1403                           tblptru	equ	0xFF8
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           
  1407                           	psect	cstackCOMRAM
  1408  000001                     __pcstackCOMRAM:
  1409                           	opt stack 0
  1410  000001                     ??i2_read:
  1411  000001                     ??i2_isdigit:
  1412  000001                     ?i2___awmod:
  1413                           	opt stack 0
  1414  000001                     ?i2___ftpack:
  1415                           	opt stack 0
  1416  000001                     ?i2___ftneg:
  1417                           	opt stack 0
  1418  000001                     ?i2__div_to_l_:
  1419                           	opt stack 0
  1420  000001                     ?i2__tdiv_to_l_:
  1421                           	opt stack 0
  1422  000001                     ?i2___lldiv:
  1423                           	opt stack 0
  1424  000001                     i2lcdNibble@temp:
  1425                           	opt stack 0
  1426  000001                     i2___awmod@dividend:
  1427                           	opt stack 0
  1428  000001                     i2__div_to_l_@f1:
  1429                           	opt stack 0
  1430  000001                     i2___ftpack@arg:
  1431                           	opt stack 0
  1432  000001                     i2__tdiv_to_l_@f1:
  1433                           	opt stack 0
  1434  000001                     i2___ftge@ff1:
  1435                           	opt stack 0
  1436  000001                     i2___ftneg@f1:
  1437                           	opt stack 0
  1438  000001                     i2___lldiv@dividend:
  1439                           	opt stack 0
  1440                           
  1441                           ; 4 bytes @ 0x0
  1442  000001                     	ds	1
  1443  000002                     i2read@channel2:
  1444                           	opt stack 0
  1445  000002                     i2lcdNibble@data:
  1446                           	opt stack 0
  1447  000002                     i2_isdigit$1222:
  1448                           	opt stack 0
  1449                           
  1450                           ; 1 bytes @ 0x1
  1451  000002                     	ds	1
  1452  000003                     i2lcdInst@data:
  1453                           	opt stack 0
  1454  000003                     i2putch@data:
  1455                           	opt stack 0
  1456  000003                     i2isdigit@c:
  1457                           	opt stack 0
  1458  000003                     i2___awmod@divisor:
  1459                           	opt stack 0
  1460                           
  1461                           ; 2 bytes @ 0x2
  1462  000003                     	ds	1
  1463  000004                     ??i2_initLCD:
  1464  000004                     i2___ftpack@exp:
  1465                           	opt stack 0
  1466  000004                     i2__div_to_l_@f2:
  1467                           	opt stack 0
  1468  000004                     i2__tdiv_to_l_@f2:
  1469                           	opt stack 0
  1470  000004                     i2___ftge@ff2:
  1471                           	opt stack 0
  1472                           
  1473                           ; 3 bytes @ 0x3
  1474  000004                     	ds	1
  1475  000005                     i2___awmod@counter:
  1476                           	opt stack 0
  1477  000005                     i2___ftpack@sign:
  1478                           	opt stack 0
  1479  000005                     i2___lldiv@divisor:
  1480                           	opt stack 0
  1481                           
  1482                           ; 4 bytes @ 0x4
  1483  000005                     	ds	1
  1484  000006                     ??i2___ftpack:
  1485  000006                     i2___awmod@sign:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x5
  1489  000006                     	ds	1
  1490  000007                     ??i2__tdiv_to_l_:
  1491  000007                     ??i2___ftge:
  1492  000007                     ?i2___awdiv:
  1493                           	opt stack 0
  1494  000007                     i2___awdiv@dividend:
  1495                           	opt stack 0
  1496  000007                     i2__div_to_l_@quot:
  1497                           	opt stack 0
  1498                           
  1499                           ; 4 bytes @ 0x6
  1500  000007                     	ds	2
  1501  000009                     ?i2___lltoft:
  1502                           	opt stack 0
  1503  000009                     ?i2___lwtoft:
  1504                           	opt stack 0
  1505  000009                     i2___awdiv@divisor:
  1506                           	opt stack 0
  1507  000009                     i2___lwtoft@c:
  1508                           	opt stack 0
  1509  000009                     i2___lldiv@quotient:
  1510                           	opt stack 0
  1511  000009                     i2___lltoft@c:
  1512                           	opt stack 0
  1513                           
  1514                           ; 4 bytes @ 0x8
  1515  000009                     	ds	1
  1516  00000A                     i2__tdiv_to_l_@quot:
  1517                           	opt stack 0
  1518                           
  1519                           ; 4 bytes @ 0x9
  1520  00000A                     	ds	1
  1521  00000B                     i2___awdiv@counter:
  1522                           	opt stack 0
  1523  00000B                     i2__div_to_l_@cntr:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0xA
  1527  00000B                     	ds	1
  1528  00000C                     i2___awdiv@sign:
  1529                           	opt stack 0
  1530  00000C                     i2__div_to_l_@exp1:
  1531                           	opt stack 0
  1532                           
  1533                           ; 1 bytes @ 0xB
  1534  00000C                     	ds	1
  1535  00000D                     ??i2___lltoft:
  1536  00000D                     i2___lldiv@counter:
  1537                           	opt stack 0
  1538  00000D                     i2___awdiv@quotient:
  1539                           	opt stack 0
  1540                           
  1541                           ; 2 bytes @ 0xC
  1542  00000D                     	ds	1
  1543  00000E                     ?i2___llmod:
  1544                           	opt stack 0
  1545  00000E                     i2__tdiv_to_l_@cntr:
  1546                           	opt stack 0
  1547  00000E                     i2___llmod@dividend:
  1548                           	opt stack 0
  1549                           
  1550                           ; 4 bytes @ 0xD
  1551  00000E                     	ds	1
  1552  00000F                     ?i2___wmul:
  1553                           	opt stack 0
  1554  00000F                     i2__tdiv_to_l_@exp1:
  1555                           	opt stack 0
  1556  00000F                     i2set_external_interrupt1@time:
  1557                           	opt stack 0
  1558  00000F                     i2set_external_interrupt3@time:
  1559                           	opt stack 0
  1560  00000F                     i2___wmul@multiplier:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0xE
  1564  00000F                     	ds	2
  1565  000011                     i2___lltoft@exp:
  1566                           	opt stack 0
  1567  000011                     i2set_external_interrupt1@set_time:
  1568                           	opt stack 0
  1569  000011                     i2set_external_interrupt3@set_time:
  1570                           	opt stack 0
  1571  000011                     i2___wmul@multiplicand:
  1572                           	opt stack 0
  1573                           
  1574                           ; 2 bytes @ 0x10
  1575  000011                     	ds	1
  1576  000012                     i2___llmod@divisor:
  1577                           	opt stack 0
  1578                           
  1579                           ; 4 bytes @ 0x11
  1580  000012                     	ds	1
  1581  000013                     i2___wmul@product:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x12
  1585  000013                     	ds	2
  1586  000015                     ?i2___ftmul:
  1587                           	opt stack 0
  1588  000015                     i2___ftmul@f1:
  1589                           	opt stack 0
  1590                           
  1591                           ; 3 bytes @ 0x14
  1592  000015                     	ds	1
  1593  000016                     i2___llmod@counter:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0x15
  1597  000016                     	ds	2
  1598  000018                     i2___ftmul@f2:
  1599                           	opt stack 0
  1600                           
  1601                           ; 3 bytes @ 0x17
  1602  000018                     	ds	3
  1603  00001B                     ??i2___ftmul:
  1604                           
  1605                           ; 1 bytes @ 0x1A
  1606  00001B                     	ds	3
  1607  00001E                     i2___ftmul@exp:
  1608                           	opt stack 0
  1609                           
  1610                           ; 1 bytes @ 0x1D
  1611  00001E                     	ds	1
  1612  00001F                     i2___ftmul@f3_as_product:
  1613                           	opt stack 0
  1614                           
  1615                           ; 3 bytes @ 0x1E
  1616  00001F                     	ds	3
  1617  000022                     i2___ftmul@cntr:
  1618                           	opt stack 0
  1619                           
  1620                           ; 1 bytes @ 0x21
  1621  000022                     	ds	1
  1622  000023                     i2___ftmul@sign:
  1623                           	opt stack 0
  1624                           
  1625                           ; 1 bytes @ 0x22
  1626  000023                     	ds	1
  1627  000024                     ?i2_fround:
  1628                           	opt stack 0
  1629  000024                     ?i2_scale:
  1630                           	opt stack 0
  1631  000024                     ?i2___ftdiv:
  1632                           	opt stack 0
  1633  000024                     i2___ftdiv@f1:
  1634                           	opt stack 0
  1635                           
  1636                           ; 3 bytes @ 0x23
  1637  000024                     	ds	3
  1638  000027                     i2___ftdiv@f2:
  1639                           	opt stack 0
  1640  000027                     i2_fround$1784:
  1641                           	opt stack 0
  1642  000027                     i2_scale$1785:
  1643                           	opt stack 0
  1644                           
  1645                           ; 3 bytes @ 0x26
  1646  000027                     	ds	3
  1647  00002A                     ??i2___ftdiv:
  1648  00002A                     i2scale@scl:
  1649                           	opt stack 0
  1650  00002A                     i2_fround$1783:
  1651                           	opt stack 0
  1652                           
  1653                           ; 3 bytes @ 0x29
  1654  00002A                     	ds	1
  1655  00002B                     ?i2___fttol:
  1656                           	opt stack 0
  1657  00002B                     i2___fttol@f1:
  1658                           	opt stack 0
  1659                           
  1660                           ; 3 bytes @ 0x2A
  1661  00002B                     	ds	2
  1662  00002D                     i2fround@prec:
  1663                           	opt stack 0
  1664  00002D                     i2___ftdiv@cntr:
  1665                           	opt stack 0
  1666                           
  1667                           ; 1 bytes @ 0x2C
  1668  00002D                     	ds	1
  1669  00002E                     ?i2___ftadd:
  1670                           	opt stack 0
  1671  00002E                     i2___ftadd@f1:
  1672                           	opt stack 0
  1673  00002E                     i2___ftdiv@f3:
  1674                           	opt stack 0
  1675                           
  1676                           ; 3 bytes @ 0x2D
  1677  00002E                     	ds	1
  1678  00002F                     ??i2___fttol:
  1679                           
  1680                           ; 1 bytes @ 0x2E
  1681  00002F                     	ds	2
  1682  000031                     i2___ftdiv@exp:
  1683                           	opt stack 0
  1684  000031                     i2___ftadd@f2:
  1685                           	opt stack 0
  1686                           
  1687                           ; 3 bytes @ 0x30
  1688  000031                     	ds	1
  1689  000032                     i2___ftdiv@sign:
  1690                           	opt stack 0
  1691                           
  1692                           ; 1 bytes @ 0x31
  1693  000032                     	ds	2
  1694  000034                     ??i2___ftadd:
  1695  000034                     i2___fttol@sign1:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x33
  1699  000034                     	ds	1
  1700  000035                     i2___fttol@lval:
  1701                           	opt stack 0
  1702                           
  1703                           ; 4 bytes @ 0x34
  1704  000035                     	ds	2
  1705  000037                     i2___ftadd@sign:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x36
  1709  000037                     	ds	1
  1710  000038                     i2___ftadd@exp2:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x37
  1714  000038                     	ds	1
  1715  000039                     i2___ftadd@exp1:
  1716                           	opt stack 0
  1717  000039                     i2___fttol@exp1:
  1718                           	opt stack 0
  1719                           
  1720                           ; 1 bytes @ 0x38
  1721  000039                     	ds	1
  1722  00003A                     ?i2_abs:
  1723                           	opt stack 0
  1724  00003A                     ?i2___ftsub:
  1725                           	opt stack 0
  1726  00003A                     i2abs@num:
  1727                           	opt stack 0
  1728  00003A                     i2___ftsub@f1:
  1729                           	opt stack 0
  1730                           
  1731                           ; 3 bytes @ 0x39
  1732  00003A                     	ds	3
  1733  00003D                     ?i2_readADC:
  1734                           	opt stack 0
  1735  00003D                     i2___ftsub@f2:
  1736                           	opt stack 0
  1737                           
  1738                           ; 3 bytes @ 0x3C
  1739  00003D                     	ds	3
  1740  000040                     ?i2_printf:
  1741                           	opt stack 0
  1742  000040                     i2printf@f:
  1743                           	opt stack 0
  1744  000040                     i2readADC@volt:
  1745                           	opt stack 0
  1746                           
  1747                           ; 3 bytes @ 0x3F
  1748  000040                     	ds	3
  1749  000043                     i2readADC@i:
  1750                           	opt stack 0
  1751                           
  1752                           ; 1 bytes @ 0x42
  1753  000043                     	ds	1
  1754  000044                     i2readADC@a:
  1755                           	opt stack 0
  1756                           
  1757                           ; 3 bytes @ 0x43
  1758  000044                     	ds	1
  1759  000045                     ??i2_printf:
  1760                           
  1761                           ; 1 bytes @ 0x44
  1762  000045                     	ds	2
  1763  000047                     i2readADC@channel:
  1764                           	opt stack 0
  1765                           
  1766                           ; 1 bytes @ 0x46
  1767  000047                     	ds	4
  1768  00004B                     i2_printf$1786:
  1769                           	opt stack 0
  1770                           
  1771                           ; 3 bytes @ 0x4A
  1772  00004B                     	ds	3
  1773  00004E                     i2printf@idx:
  1774                           	opt stack 0
  1775                           
  1776                           ; 1 bytes @ 0x4D
  1777  00004E                     	ds	1
  1778  00004F                     i2printf@ap:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x4E
  1782  00004F                     	ds	2
  1783  000051                     i2printf@prec:
  1784                           	opt stack 0
  1785                           
  1786                           ; 2 bytes @ 0x50
  1787  000051                     	ds	2
  1788  000053                     i2printf@tmpval:
  1789                           	opt stack 0
  1790                           
  1791                           ; 4 bytes @ 0x52
  1792  000053                     	ds	4
  1793  000057                     i2printf@width:
  1794                           	opt stack 0
  1795                           
  1796                           ; 2 bytes @ 0x56
  1797  000057                     	ds	2
  1798  000059                     i2printf@exp:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0x58
  1802  000059                     	ds	2
  1803  00005B                     i2printf@val:
  1804                           	opt stack 0
  1805                           
  1806                           ; 4 bytes @ 0x5A
  1807  00005B                     	ds	4
  1808  00005F                     i2printf@flag:
  1809                           	opt stack 0
  1810                           
  1811                           ; 2 bytes @ 0x5E
  1812  00005F                     	ds	2
  1813  000061                     i2printf@fval:
  1814                           	opt stack 0
  1815                           
  1816                           ; 3 bytes @ 0x60
  1817  000061                     	ds	3
  1818  000064                     i2printf@c:
  1819                           	opt stack 0
  1820                           
  1821                           ; 1 bytes @ 0x63
  1822  000064                     	ds	1
  1823  000065                     ??_servo_ISR_1:
  1824  000065                     ??_servo_ISR_3:
  1825                           
  1826                           ; 1 bytes @ 0x64
  1827  000065                     	ds	2
  1828  000067                     ??_IRQ:
  1829                           
  1830                           ; 1 bytes @ 0x66
  1831  000067                     	ds	14
  1832                           tblptru	equ	0xFF8
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           
  1836 ;;
  1837 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1838 ;;
  1839 ;; *************** function _main *****************
  1840 ;; Defined at:
  1841 ;;		line 95 in file "main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  i               1   26[BANK1 ] unsigned char 
  1846 ;;  i               1   25[BANK1 ] unsigned char 
  1847 ;;  i               1   33[BANK1 ] unsigned char 
  1848 ;;  i               1   32[BANK1 ] unsigned char 
  1849 ;;  i               1   31[BANK1 ] unsigned char 
  1850 ;;  i               1   30[BANK1 ] unsigned char 
  1851 ;;  i               1   29[BANK1 ] unsigned char 
  1852 ;;  i               1   28[BANK1 ] unsigned char 
  1853 ;;  i               1   27[BANK1 ] unsigned char 
  1854 ;;  k               1   36[BANK1 ] unsigned char 
  1855 ;;  k               1   35[BANK1 ] unsigned char 
  1856 ;;  j               1   34[BANK1 ] unsigned char 
  1857 ;;  loop_count      2    0[BANK1 ] int 
  1858 ;;  address_min     1   50[BANK1 ] unsigned char 
  1859 ;;  address_tota    1   49[BANK1 ] unsigned char 
  1860 ;;  address_drai    1   48[BANK1 ] unsigned char 
  1861 ;;  address_C       1   47[BANK1 ] unsigned char 
  1862 ;;  address_9V      1   46[BANK1 ] unsigned char 
  1863 ;;  address_AA      1   45[BANK1 ] unsigned char 
  1864 ;;  address_seco    1   44[BANK1 ] unsigned char 
  1865 ;;  keypress        1   43[BANK1 ] unsigned char 
  1866 ;;  count_second    1   42[BANK1 ] char 
  1867 ;;  count_min       1   41[BANK1 ] char 
  1868 ;;  count_second    1   40[BANK1 ] unsigned char 
  1869 ;;  count_min_fi    1   39[BANK1 ] unsigned char 
  1870 ;;  count_second    1   38[BANK1 ] unsigned char 
  1871 ;;  count_min_in    1   37[BANK1 ] unsigned char 
  1872 ;;  done            1   17[BANK1 ] unsigned char 
  1873 ;;  flag_interru    1   16[BANK1 ] unsigned char 
  1874 ;;  past_drained    1   15[BANK1 ] char 
  1875 ;;  past_C          1   14[BANK1 ] char 
  1876 ;;  past_9V         1   13[BANK1 ] char 
  1877 ;;  past_AA         1   12[BANK1 ] char 
  1878 ;;  past_total      1   11[BANK1 ] char 
  1879 ;;  past_seconds    1   10[BANK1 ] char 
  1880 ;;  past_min        1    9[BANK1 ] char 
  1881 ;;  eeprom_total    1    8[BANK1 ] char 
  1882 ;;  eeprom_drain    1    7[BANK1 ] char 
  1883 ;;  eeprom_C        1    6[BANK1 ] char 
  1884 ;;  eeprom_9V       1    5[BANK1 ] char 
  1885 ;;  eeprom_AA       1    4[BANK1 ] char 
  1886 ;;  eeprom_secon    1    3[BANK1 ] char 
  1887 ;;  eeprom_min      1    2[BANK1 ] char 
  1888 ;;  time            7   18[BANK1 ] unsigned char [7]
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         0       2      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:       53 bytes
  1903 ;; Hardware stack levels required when called:   10
  1904 ;; This function calls:
  1905 ;;		_Eeprom_ReadByte
  1906 ;;		_Eeprom_WriteByte
  1907 ;;		_I2C_Master_Init
  1908 ;;		_I2C_Master_Read
  1909 ;;		_I2C_Master_Start
  1910 ;;		_I2C_Master_Stop
  1911 ;;		_I2C_Master_Write
  1912 ;;		___ftge
  1913 ;;		_delay_1s_interrupt
  1914 ;;		_initLCD
  1915 ;;		_lcdInst
  1916 ;;		_printf
  1917 ;;		_readADC
  1918 ;;		_set_external_interrupt1
  1919 ;;		_set_external_interrupt3
  1920 ;; This function is called by:
  1921 ;;		Startup code after reset
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text0
  1926  000012                     __ptext0:
  1927                           	opt stack 0
  1928  000012                     _main:
  1929                           	opt stack 21
  1930                           
  1931                           ;main.c: 96: OSCCON = 0xF0;
  1932                           
  1933                           ;incstack = 0
  1934  000012  0EF0               	movlw	240
  1935  000014  6ED3               	movwf	4051,c	;volatile
  1936                           
  1937                           ;main.c: 100: TRISA = 0xFF;
  1938  000016  6892               	setf	3986,c	;volatile
  1939                           
  1940                           ;main.c: 101: TRISB = 0xFF;
  1941  000018  6893               	setf	3987,c	;volatile
  1942                           
  1943                           ;main.c: 102: TRISC = 0x00;
  1944  00001A  0E00               	movlw	0
  1945  00001C  6E94               	movwf	3988,c	;volatile
  1946                           
  1947                           ;main.c: 103: TRISD = 0x00;
  1948  00001E  0E00               	movlw	0
  1949  000020  6E95               	movwf	3989,c	;volatile
  1950                           
  1951                           ;main.c: 104: TRISE = 0b00000011;
  1952  000022  0E03               	movlw	3
  1953  000024  6E96               	movwf	3990,c	;volatile
  1954                           
  1955                           ;main.c: 106: LATA = 0x00;
  1956  000026  0E00               	movlw	0
  1957  000028  6E89               	movwf	3977,c	;volatile
  1958                           
  1959                           ;main.c: 107: LATB = 0x00;
  1960  00002A  0E00               	movlw	0
  1961  00002C  6E8A               	movwf	3978,c	;volatile
  1962                           
  1963                           ;main.c: 108: LATC = 0x00;
  1964  00002E  0E00               	movlw	0
  1965  000030  6E8B               	movwf	3979,c	;volatile
  1966                           
  1967                           ;main.c: 109: LATD = 0x00;
  1968  000032  0E00               	movlw	0
  1969  000034  6E8C               	movwf	3980,c	;volatile
  1970                           
  1971                           ;main.c: 110: LATE = 0x00;
  1972  000036  0E00               	movlw	0
  1973  000038  6E8D               	movwf	3981,c	;volatile
  1974                           
  1975                           ;main.c: 112: ADCON0 = 0x00;
  1976  00003A  0E00               	movlw	0
  1977  00003C  6EC2               	movwf	4034,c	;volatile
  1978                           
  1979                           ;main.c: 113: ADCON1 = 0b00001000;
  1980  00003E  0E08               	movlw	8
  1981  000040  6EC1               	movwf	4033,c	;volatile
  1982                           
  1983                           ;main.c: 114: CVRCON = 0x00;
  1984  000042  0E00               	movlw	0
  1985  000044  6EB5               	movwf	4021,c	;volatile
  1986                           
  1987                           ;main.c: 115: CMCONbits.CIS = 0;
  1988  000046  96B4               	bcf	4020,3,c	;volatile
  1989                           
  1990                           ;main.c: 116: ADFM = 1;
  1991  000048  8EC0               	bsf	4032,7,c	;volatile
  1992                           
  1993                           ;main.c: 118: nRBPU = 0;
  1994  00004A  9EF1               	bcf	intcon2,7,c	;volatile
  1995                           
  1996                           ;main.c: 122: T1CON = 0b10100100;
  1997  00004C  0EA4               	movlw	164
  1998  00004E  6ECD               	movwf	4045,c	;volatile
  1999                           
  2000                           ;main.c: 123: T3CON = 0b10100100;
  2001  000050  0EA4               	movlw	164
  2002  000052  6EB1               	movwf	4017,c	;volatile
  2003                           
  2004                           ;main.c: 131: TMR1ON = 0;
  2005  000054  90CD               	bcf	4045,0,c	;volatile
  2006                           
  2007                           ;main.c: 132: TMR1IF = 0;
  2008  000056  909E               	bcf	3998,0,c	;volatile
  2009                           
  2010                           ;main.c: 133: TMR3ON = 0;
  2011  000058  90B1               	bcf	4017,0,c	;volatile
  2012                           
  2013                           ;main.c: 134: TMR3IF = 0;
  2014  00005A  92A1               	bcf	4001,1,c	;volatile
  2015                           
  2016                           ;main.c: 135: TMR1IE = 1;
  2017  00005C  809D               	bsf	3997,0,c	;volatile
  2018                           
  2019                           ;main.c: 136: TMR3IE = 1;
  2020  00005E  82A0               	bsf	4000,1,c	;volatile
  2021                           
  2022                           ;main.c: 137: PEIE = 1;
  2023  000060  8CF2               	bsf	intcon,6,c	;volatile
  2024                           
  2025                           ;main.c: 139: unsigned char time[7];
  2026                           ;main.c: 140: I2C_Master_Init(10000);
  2027  000062  0E10               	movlw	16
  2028  000064  0100               	movlb	0	; () banked
  2029  000066  6F8D               	movwf	I2C_Master_Init@c& (0+255),b
  2030  000068  0E27               	movlw	39
  2031  00006A  6F8E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  2032  00006C  0E00               	movlw	0
  2033  00006E  6F8F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  2034  000070  0E00               	movlw	0
  2035  000072  6F90               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  2036  000074  EC9F  F02C         	call	_I2C_Master_Init	;wreg free
  2037                           
  2038                           ;main.c: 145: initLCD();
  2039  000078  ECD2  F02D         	call	_initLCD	;wreg free
  2040  00007C                     l7540:
  2041                           
  2042                           ;main.c: 149: (INTCONbits.GIE = 1);
  2043  00007C  8EF2               	bsf	intcon,7,c	;volatile
  2044                           
  2045                           ;main.c: 150: isr1 = 0;
  2046  00007E  0E00               	movlw	0
  2047  000080  0100               	movlb	0	; () banked
  2048  000082  6FF1               	movwf	_isr1& (0+255),b	;volatile
  2049                           
  2050                           ;main.c: 151: isr3 = 0;
  2051  000084  0E00               	movlw	0
  2052  000086  0100               	movlb	0	; () banked
  2053  000088  6FF0               	movwf	_isr3& (0+255),b	;volatile
  2054                           
  2055                           ;main.c: 152: current_state1 = 0;
  2056  00008A  0E00               	movlw	0
  2057  00008C  6E7E               	movwf	_current_state1,c	;volatile
  2058                           
  2059                           ;main.c: 153: current_state3 = 0;
  2060  00008E  0E00               	movlw	0
  2061  000090  6E7D               	movwf	_current_state3,c	;volatile
  2062                           
  2063                           ;main.c: 155: stage1 = 4;
  2064  000092  0E04               	movlw	4
  2065  000094  6E7C               	movwf	_stage1,c	;volatile
  2066                           
  2067                           ;main.c: 156: stage3 = 4;
  2068  000096  0E04               	movlw	4
  2069  000098  6E7B               	movwf	_stage3,c	;volatile
  2070                           
  2071                           ;main.c: 158: count1 = 0;
  2072  00009A  0E00               	movlw	0
  2073  00009C  6E76               	movwf	_count1+1,c	;volatile
  2074  00009E  0E00               	movlw	0
  2075  0000A0  6E75               	movwf	_count1,c	;volatile
  2076                           
  2077                           ;main.c: 159: count3 = 0;
  2078  0000A2  0E00               	movlw	0
  2079  0000A4  0101               	movlb	1	; () banked
  2080  0000A6  6F4E               	movwf	(_count3+1)& (0+255),b	;volatile
  2081  0000A8  0E00               	movlw	0
  2082  0000AA  6F4D               	movwf	_count3& (0+255),b	;volatile
  2083                           
  2084                           ;main.c: 161: gate_status1 = 1;
  2085  0000AC  0E01               	movlw	1
  2086  0000AE  0101               	movlb	1	; () banked
  2087  0000B0  6F57               	movwf	_gate_status1& (0+255),b	;volatile
  2088                           
  2089                           ;main.c: 162: gate_status3 = 1;
  2090  0000B2  0E01               	movlw	1
  2091  0000B4  0101               	movlb	1	; () banked
  2092  0000B6  6F56               	movwf	_gate_status3& (0+255),b	;volatile
  2093                           
  2094                           ;main.c: 163: init1 = 0;
  2095  0000B8  0E00               	movlw	0
  2096  0000BA  0101               	movlb	1	; () banked
  2097  0000BC  6F55               	movwf	_init1& (0+255),b	;volatile
  2098                           
  2099                           ;main.c: 164: init3 = 0;
  2100  0000BE  0E00               	movlw	0
  2101  0000C0  0101               	movlb	1	; () banked
  2102  0000C2  6F54               	movwf	_init3& (0+255),b	;volatile
  2103                           
  2104                           ;main.c: 165: voltage_0 = 0;
  2105  0000C4  0E00               	movlw	0
  2106  0000C6  0101               	movlb	1	; () banked
  2107  0000C8  6F42               	movwf	_voltage_0& (0+255),b	;volatile
  2108  0000CA  0E00               	movlw	0
  2109  0000CC  0101               	movlb	1	; () banked
  2110  0000CE  6F43               	movwf	(_voltage_0+1)& (0+255),b	;volatile
  2111  0000D0  0E00               	movlw	0
  2112  0000D2  0101               	movlb	1	; () banked
  2113  0000D4  6F44               	movwf	(_voltage_0+2)& (0+255),b	;volatile
  2114                           
  2115                           ;main.c: 166: voltage_1 = 0;
  2116  0000D6  0E00               	movlw	0
  2117  0000D8  0101               	movlb	1	; () banked
  2118  0000DA  6F5B               	movwf	_voltage_1& (0+255),b	;volatile
  2119  0000DC  0E00               	movlw	0
  2120  0000DE  0101               	movlb	1	; () banked
  2121  0000E0  6F5C               	movwf	(_voltage_1+1)& (0+255),b	;volatile
  2122  0000E2  0E00               	movlw	0
  2123  0000E4  0101               	movlb	1	; () banked
  2124  0000E6  6F5D               	movwf	(_voltage_1+2)& (0+255),b	;volatile
  2125                           
  2126                           ;main.c: 167: voltage_2 = 0;
  2127  0000E8  0E00               	movlw	0
  2128  0000EA  0101               	movlb	1	; () banked
  2129  0000EC  6F58               	movwf	_voltage_2& (0+255),b	;volatile
  2130  0000EE  0E00               	movlw	0
  2131  0000F0  0101               	movlb	1	; () banked
  2132  0000F2  6F59               	movwf	(_voltage_2+1)& (0+255),b	;volatile
  2133  0000F4  0E00               	movlw	0
  2134  0000F6  0101               	movlb	1	; () banked
  2135  0000F8  6F5A               	movwf	(_voltage_2+2)& (0+255),b	;volatile
  2136                           
  2137                           ;main.c: 168: voltage_3 = 0;
  2138  0000FA  0E00               	movlw	0
  2139  0000FC  0101               	movlb	1	; () banked
  2140  0000FE  6F3F               	movwf	_voltage_3& (0+255),b	;volatile
  2141  000100  0E00               	movlw	0
  2142  000102  0101               	movlb	1	; () banked
  2143  000104  6F40               	movwf	(_voltage_3+1)& (0+255),b	;volatile
  2144  000106  0E00               	movlw	0
  2145  000108  0101               	movlb	1	; () banked
  2146  00010A  6F41               	movwf	(_voltage_3+2)& (0+255),b	;volatile
  2147                           
  2148                           ;main.c: 169: voltage_AA = 0;
  2149  00010C  0E00               	movlw	0
  2150  00010E  0101               	movlb	1	; () banked
  2151  000110  6F39               	movwf	_voltage_AA& (0+255),b	;volatile
  2152  000112  0E00               	movlw	0
  2153  000114  0101               	movlb	1	; () banked
  2154  000116  6F3A               	movwf	(_voltage_AA+1)& (0+255),b	;volatile
  2155  000118  0E00               	movlw	0
  2156  00011A  0101               	movlb	1	; () banked
  2157  00011C  6F3B               	movwf	(_voltage_AA+2)& (0+255),b	;volatile
  2158                           
  2159                           ;main.c: 170: voltage_9V =0;
  2160  00011E  0E00               	movlw	0
  2161  000120  0101               	movlb	1	; () banked
  2162  000122  6F36               	movwf	_voltage_9V& (0+255),b	;volatile
  2163  000124  0E00               	movlw	0
  2164  000126  0101               	movlb	1	; () banked
  2165  000128  6F37               	movwf	(_voltage_9V+1)& (0+255),b	;volatile
  2166  00012A  0E00               	movlw	0
  2167  00012C  0101               	movlb	1	; () banked
  2168  00012E  6F38               	movwf	(_voltage_9V+2)& (0+255),b	;volatile
  2169                           
  2170                           ;main.c: 171: voltage_C = 0;
  2171  000130  0E00               	movlw	0
  2172  000132  0101               	movlb	1	; () banked
  2173  000134  6F33               	movwf	_voltage_C& (0+255),b	;volatile
  2174  000136  0E00               	movlw	0
  2175  000138  0101               	movlb	1	; () banked
  2176  00013A  6F34               	movwf	(_voltage_C+1)& (0+255),b	;volatile
  2177  00013C  0E00               	movlw	0
  2178  00013E  0101               	movlb	1	; () banked
  2179  000140  6F35               	movwf	(_voltage_C+2)& (0+255),b	;volatile
  2180                           
  2181                           ;main.c: 172: AA_or_9V = 0;
  2182  000142  0E00               	movlw	0
  2183  000144  0101               	movlb	1	; () banked
  2184  000146  6F53               	movwf	_AA_or_9V& (0+255),b	;volatile
  2185                           
  2186                           ;main.c: 174: volt_check1 = 0;
  2187  000148  0E00               	movlw	0
  2188  00014A  0101               	movlb	1	; () banked
  2189  00014C  6F52               	movwf	_volt_check1& (0+255),b	;volatile
  2190                           
  2191                           ;main.c: 175: volt_check3 = 0;
  2192  00014E  0E00               	movlw	0
  2193  000150  0101               	movlb	1	; () banked
  2194  000152  6F51               	movwf	_volt_check3& (0+255),b	;volatile
  2195                           
  2196                           ;main.c: 176: count_AA = 0;
  2197  000154  0E00               	movlw	0
  2198  000156  0101               	movlb	1	; () banked
  2199  000158  6F4C               	movwf	(_count_AA+1)& (0+255),b	;volatile
  2200  00015A  0E00               	movlw	0
  2201  00015C  6F4B               	movwf	_count_AA& (0+255),b	;volatile
  2202                           
  2203                           ;main.c: 177: count_9V = 0;
  2204  00015E  0E00               	movlw	0
  2205  000160  0101               	movlb	1	; () banked
  2206  000162  6F4A               	movwf	(_count_9V+1)& (0+255),b	;volatile
  2207  000164  0E00               	movlw	0
  2208  000166  6F49               	movwf	_count_9V& (0+255),b	;volatile
  2209                           
  2210                           ;main.c: 178: count_C = 0;
  2211  000168  0E00               	movlw	0
  2212  00016A  0101               	movlb	1	; () banked
  2213  00016C  6F48               	movwf	(_count_C+1)& (0+255),b	;volatile
  2214  00016E  0E00               	movlw	0
  2215  000170  6F47               	movwf	_count_C& (0+255),b	;volatile
  2216                           
  2217                           ;main.c: 179: count_drained = 0;
  2218  000172  0E00               	movlw	0
  2219  000174  0101               	movlb	1	; () banked
  2220  000176  6F46               	movwf	(_count_drained+1)& (0+255),b	;volatile
  2221  000178  0E00               	movlw	0
  2222  00017A  6F45               	movwf	_count_drained& (0+255),b	;volatile
  2223                           
  2224                           ;main.c: 181: process1 = 0;
  2225  00017C  0E00               	movlw	0
  2226  00017E  0101               	movlb	1	; () banked
  2227  000180  6F50               	movwf	_process1& (0+255),b	;volatile
  2228                           
  2229                           ;main.c: 182: process3 = 0;
  2230  000182  0E00               	movlw	0
  2231  000184  0101               	movlb	1	; () banked
  2232  000186  6F4F               	movwf	_process3& (0+255),b	;volatile
  2233                           
  2234                           ;main.c: 184: unsigned char flag_interrupt = 0;
  2235  000188  0E00               	movlw	0
  2236  00018A  0101               	movlb	1	; () banked
  2237  00018C  6F10               	movwf	main@flag_interrupt& (0+255),b
  2238                           
  2239                           ;main.c: 185: unsigned char done = 0;
  2240  00018E  0E00               	movlw	0
  2241  000190  0101               	movlb	1	; () banked
  2242  000192  6F11               	movwf	main@done& (0+255),b
  2243                           
  2244                           ;main.c: 187: unsigned char address_min = 0x00;
  2245  000194  0E00               	movlw	0
  2246  000196  0101               	movlb	1	; () banked
  2247  000198  6F32               	movwf	main@address_min& (0+255),b
  2248                           
  2249                           ;main.c: 188: unsigned char address_seconds = 0x28;
  2250  00019A  0E28               	movlw	40
  2251  00019C  0101               	movlb	1	; () banked
  2252  00019E  6F2C               	movwf	main@address_seconds& (0+255),b
  2253                           
  2254                           ;main.c: 189: unsigned char address_AA = 0x90;
  2255  0001A0  0E90               	movlw	144
  2256  0001A2  0101               	movlb	1	; () banked
  2257  0001A4  6F2D               	movwf	main@address_AA& (0+255),b
  2258                           
  2259                           ;main.c: 190: unsigned char address_9V = 0xB8;
  2260  0001A6  0EB8               	movlw	184
  2261  0001A8  0101               	movlb	1	; () banked
  2262  0001AA  6F2E               	movwf	main@address_9V& (0+255),b
  2263                           
  2264                           ;main.c: 191: unsigned char address_C = 0xE0;
  2265  0001AC  0EE0               	movlw	224
  2266  0001AE  0101               	movlb	1	; () banked
  2267  0001B0  6F2F               	movwf	main@address_C& (0+255),b
  2268                           
  2269                           ;main.c: 192: unsigned char address_drained = 0x130;
  2270  0001B2  0E30               	movlw	48
  2271  0001B4  0101               	movlb	1	; () banked
  2272  0001B6  6F30               	movwf	main@address_drained& (0+255),b
  2273                           
  2274                           ;main.c: 193: unsigned char address_total = 0x108;
  2275  0001B8  0E08               	movlw	8
  2276  0001BA  0101               	movlb	1	; () banked
  2277  0001BC  6F31               	movwf	main@address_total& (0+255),b
  2278                           
  2279                           ;main.c: 195: signed char eeprom_min;
  2280                           ;main.c: 196: signed char eeprom_seconds;
  2281                           ;main.c: 197: signed char eeprom_AA;
  2282                           ;main.c: 198: signed char eeprom_9V;
  2283                           ;main.c: 199: signed char eeprom_C;
  2284                           ;main.c: 200: signed char eeprom_drained;
  2285                           ;main.c: 201: signed char eeprom_total;
  2286                           ;main.c: 203: unsigned char count_min_initial = 0;
  2287  0001BE  0E00               	movlw	0
  2288  0001C0  0101               	movlb	1	; () banked
  2289  0001C2  6F25               	movwf	main@count_min_initial& (0+255),b
  2290                           
  2291                           ;main.c: 204: unsigned char count_seconds_initial = 0;
  2292  0001C4  0E00               	movlw	0
  2293  0001C6  0101               	movlb	1	; () banked
  2294  0001C8  6F26               	movwf	main@count_seconds_initial& (0+255),b
  2295                           
  2296                           ;main.c: 205: unsigned char count_min_final = 0;
  2297  0001CA  0E00               	movlw	0
  2298  0001CC  0101               	movlb	1	; () banked
  2299  0001CE  6F27               	movwf	main@count_min_final& (0+255),b
  2300                           
  2301                           ;main.c: 206: unsigned char count_seconds_final = 0;
  2302  0001D0  0E00               	movlw	0
  2303  0001D2  0101               	movlb	1	; () banked
  2304  0001D4  6F28               	movwf	main@count_seconds_final& (0+255),b
  2305                           
  2306                           ;main.c: 207: signed char count_min = 0;
  2307  0001D6  0E00               	movlw	0
  2308  0001D8  0101               	movlb	1	; () banked
  2309  0001DA  6F29               	movwf	main@count_min& (0+255),b
  2310                           
  2311                           ;main.c: 208: signed char count_seconds = 0;
  2312  0001DC  0E00               	movlw	0
  2313  0001DE  0101               	movlb	1	; () banked
  2314  0001E0  6F2A               	movwf	main@count_seconds& (0+255),b
  2315                           
  2316                           ;main.c: 210: signed char past_min;
  2317                           ;main.c: 211: signed char past_seconds;
  2318                           ;main.c: 212: signed char past_total;
  2319                           ;main.c: 213: signed char past_AA;
  2320                           ;main.c: 214: signed char past_9V;
  2321                           ;main.c: 215: signed char past_C;
  2322                           ;main.c: 216: signed char past_drained;
  2323                           ;main.c: 218: while(PORTBbits.RB1 == 0){
  2324  0001E2  D083               	goto	l172
  2325  0001E4                     l7542:
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;main.c: 221: I2C_Master_Start();
  2329  0001E4  EC9D  F02F         	call	_I2C_Master_Start	;wreg free
  2330                           
  2331                           ;main.c: 222: I2C_Master_Write(0b11010000);
  2332  0001E8  0E00               	movlw	0
  2333  0001EA  0100               	movlb	0	; () banked
  2334  0001EC  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2335  0001EE  0ED0               	movlw	208
  2336  0001F0  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2337  0001F2  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  2338                           
  2339                           ;main.c: 223: I2C_Master_Write(0x00);
  2340  0001F6  0E00               	movlw	0
  2341  0001F8  0100               	movlb	0	; () banked
  2342  0001FA  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2343  0001FC  0E00               	movlw	0
  2344  0001FE  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2345  000200  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  2346                           
  2347                           ;main.c: 224: I2C_Master_Stop();
  2348  000204  EC99  F02F         	call	_I2C_Master_Stop	;wreg free
  2349                           
  2350                           ;main.c: 227: I2C_Master_Start();
  2351  000208  EC9D  F02F         	call	_I2C_Master_Start	;wreg free
  2352                           
  2353                           ;main.c: 228: I2C_Master_Write(0b11010001);
  2354  00020C  0E00               	movlw	0
  2355  00020E  0100               	movlb	0	; () banked
  2356  000210  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2357  000212  0ED1               	movlw	209
  2358  000214  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2359  000216  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  2360                           
  2361                           ;main.c: 229: for(unsigned char j=0;j<0x06;j++){
  2362  00021A  0E00               	movlw	0
  2363  00021C  0101               	movlb	1	; () banked
  2364  00021E  6F22               	movwf	main@j& (0+255),b
  2365  000220                     l7546:
  2366                           
  2367                           ; BSR set to: 1
  2368  000220  0E05               	movlw	5
  2369  000222  0101               	movlb	1	; () banked
  2370  000224  6522               	cpfsgt	main@j& (0+255),b
  2371  000226  D001               	goto	l7550
  2372  000228  D010               	goto	l7556
  2373  00022A                     l7550:
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;main.c: 230: time[j] = I2C_Master_Read(1);
  2377  00022A  0101               	movlb	1	; () banked
  2378  00022C  5122               	movf	main@j& (0+255),w,b
  2379  00022E  0D01               	mullw	1
  2380  000230  0E12               	movlw	low main@time
  2381  000232  24F3               	addwf	prodl,w,c
  2382  000234  6ED9               	movwf	fsr2l,c
  2383  000236  0E01               	movlw	high main@time
  2384  000238  20F4               	addwfc	prodh,w,c
  2385  00023A  6EDA               	movwf	fsr2h,c
  2386  00023C  0E01               	movlw	1
  2387  00023E  ECBE  F02E         	call	_I2C_Master_Read
  2388  000242  6EDF               	movwf	indf2,c
  2389  000244  0101               	movlb	1	; () banked
  2390  000246  2B22               	incf	main@j& (0+255),f,b
  2391  000248  D7EB               	goto	l7546
  2392  00024A                     l7556:
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 231: }
  2396                           ;main.c: 232: time[6] = I2C_Master_Read(0);
  2397  00024A  0E00               	movlw	0
  2398  00024C  ECBE  F02E         	call	_I2C_Master_Read
  2399  000250  0101               	movlb	1	; () banked
  2400  000252  6F18               	movwf	(main@time+6)& (0+255),b
  2401                           
  2402                           ;main.c: 233: I2C_Master_Stop();
  2403  000254  EC99  F02F         	call	_I2C_Master_Stop	;wreg free
  2404                           
  2405                           ;main.c: 235: lcdInst(0b10000000);;
  2406  000258  0E80               	movlw	128
  2407  00025A  EC80  F02F         	call	_lcdInst
  2408                           
  2409                           ;main.c: 236: printf("%02x/%02x/%02x ", time[6],time[5],time[4]);
  2410  00025E  0E50               	movlw	low STR_1
  2411  000260  0100               	movlb	0	; () banked
  2412  000262  6FBF               	movwf	printf@f& (0+255),b
  2413  000264  0EFC               	movlw	high STR_1
  2414  000266  0100               	movlb	0	; () banked
  2415  000268  6FC0               	movwf	(printf@f+1)& (0+255),b
  2416  00026A  C118  F0C1         	movff	main@time+6,?_printf+2
  2417  00026E  0100               	movlb	0	; () banked
  2418  000270  6BC2               	clrf	(?_printf+3)& (0+255),b
  2419  000272  C117  F0C3         	movff	main@time+5,?_printf+4
  2420  000276  0100               	movlb	0	; () banked
  2421  000278  6BC4               	clrf	(?_printf+5)& (0+255),b
  2422  00027A  C116  F0C5         	movff	main@time+4,?_printf+6
  2423  00027E  0100               	movlb	0	; () banked
  2424  000280  6BC6               	clrf	(?_printf+7)& (0+255),b
  2425  000282  ECCB  F006         	call	_printf	;wreg free
  2426                           
  2427                           ;main.c: 237: printf("1:Start");
  2428  000286  0ECF               	movlw	low STR_2
  2429  000288  0100               	movlb	0	; () banked
  2430  00028A  6FBF               	movwf	printf@f& (0+255),b
  2431  00028C  0EFC               	movlw	high STR_2
  2432  00028E  0100               	movlb	0	; () banked
  2433  000290  6FC0               	movwf	(printf@f+1)& (0+255),b
  2434  000292  ECCB  F006         	call	_printf	;wreg free
  2435                           
  2436                           ;main.c: 238: lcdInst(0b11000000);;
  2437  000296  0EC0               	movlw	192
  2438  000298  EC80  F02F         	call	_lcdInst
  2439                           
  2440                           ;main.c: 239: printf("%02x:%02x:%02x ", time[2],time[1],time[0]);
  2441  00029C  0E60               	movlw	low STR_3
  2442  00029E  0100               	movlb	0	; () banked
  2443  0002A0  6FBF               	movwf	printf@f& (0+255),b
  2444  0002A2  0EFC               	movlw	high STR_3
  2445  0002A4  0100               	movlb	0	; () banked
  2446  0002A6  6FC0               	movwf	(printf@f+1)& (0+255),b
  2447  0002A8  C114  F0C1         	movff	main@time+2,?_printf+2
  2448  0002AC  0100               	movlb	0	; () banked
  2449  0002AE  6BC2               	clrf	(?_printf+3)& (0+255),b
  2450  0002B0  C113  F0C3         	movff	main@time+1,?_printf+4
  2451  0002B4  0100               	movlb	0	; () banked
  2452  0002B6  6BC4               	clrf	(?_printf+5)& (0+255),b
  2453  0002B8  C112  F0C5         	movff	main@time,?_printf+6
  2454  0002BC  0100               	movlb	0	; () banked
  2455  0002BE  6BC6               	clrf	(?_printf+7)& (0+255),b
  2456  0002C0  ECCB  F006         	call	_printf	;wreg free
  2457                           
  2458                           ;main.c: 240: printf("2:Logs");
  2459  0002C4  0EEC               	movlw	low STR_4
  2460  0002C6  0100               	movlb	0	; () banked
  2461  0002C8  6FBF               	movwf	printf@f& (0+255),b
  2462  0002CA  0EFC               	movlw	high STR_4
  2463  0002CC  0100               	movlb	0	; () banked
  2464  0002CE  6FC0               	movwf	(printf@f+1)& (0+255),b
  2465  0002D0  ECCB  F006         	call	_printf	;wreg free
  2466                           
  2467                           ;main.c: 247: flag_interrupt = delay_1s_interrupt(1);
  2468  0002D4  0E01               	movlw	1
  2469  0002D6  ECD0  F02B         	call	_delay_1s_interrupt
  2470  0002DA  0100               	movlb	0	; () banked
  2471  0002DC  5180               	movf	?_delay_1s_interrupt& (0+255),w,b
  2472  0002DE  0101               	movlb	1	; () banked
  2473  0002E0  6F10               	movwf	main@flag_interrupt& (0+255),b
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;main.c: 248: if(flag_interrupt == 1){
  2477  0002E2  0101               	movlb	1	; () banked
  2478  0002E4  0510               	decf	main@flag_interrupt& (0+255),w,b
  2479  0002E6  B4D8               	btfsc	status,2,c
  2480  0002E8  D002               	goto	l7572
  2481  0002EA                     l172:
  2482                           
  2483                           ; BSR set to: 1
  2484  0002EA  A281               	btfss	3969,1,c	;volatile
  2485  0002EC  D77B               	goto	l7542
  2486  0002EE                     l7572:
  2487                           
  2488                           ; BSR set to: 1
  2489                           ;main.c: 250: }
  2490                           ;main.c: 251: }
  2491                           ;main.c: 252: unsigned char keypress = (PORTB & 0xF0)>>4;
  2492  0002EE  3881               	swapf	3969,w,c	;volatile
  2493  0002F0  0B0F               	andlw	15
  2494  0002F2  0B0F               	andlw	15
  2495  0002F4  0101               	movlb	1	; () banked
  2496  0002F6  6F2B               	movwf	main@keypress& (0+255),b
  2497  0002F8                     l178:
  2498  0002F8  B281               	btfsc	3969,1,c	;volatile
  2499  0002FA  D7FE               	goto	l178
  2500                           
  2501                           ;main.c: 257: }
  2502                           ;main.c: 259: __nop();
  2503  0002FC  F000               	nop	
  2504                           
  2505                           ;main.c: 260: __nop();
  2506  0002FE  F000               	nop	
  2507                           
  2508                           ;main.c: 262: if (keys[keypress] == keys[0]){
  2509  000300  0101               	movlb	1	; () banked
  2510  000302  512B               	movf	main@keypress& (0+255),w,b
  2511  000304  0D01               	mullw	1
  2512  000306  0E27               	movlw	low _keys
  2513  000308  24F3               	addwf	prodl,w,c
  2514  00030A  6EF6               	movwf	tblptrl,c
  2515  00030C  0EFC               	movlw	high _keys
  2516  00030E  20F4               	addwfc	prodh,w,c
  2517  000310  6EF7               	movwf	tblptrh,c
  2518  000312                     	if	0	;There are less than 3 active tblptr bytes
  2519  000312                     	endif
  2520  000312  0008               	tblrd		*
  2521  000314  CFF5 F0E7          	movff	tablat,??_main
  2522  000318  0E27               	movlw	low _keys
  2523  00031A  6EF6               	movwf	tblptrl,c
  2524  00031C                     	if	1	;There is more than 1 active tblptr byte
  2525  00031C  0EFC               	movlw	high _keys
  2526  00031E  6EF7               	movwf	tblptrh,c
  2527  000320                     	endif
  2528  000320                     	if	0	;There are less than 3 active tblptr bytes
  2529  000320                     	endif
  2530  000320  0008               	tblrd		*
  2531  000322  50F5               	movf	tablat,w,c
  2532  000324  0100               	movlb	0	; () banked
  2533  000326  19E7               	xorwf	??_main& (0+255),w,b
  2534  000328  A4D8               	btfss	status,2,c
  2535  00032A  D397               	goto	l7842
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;main.c: 264: I2C_Master_Start();
  2539  00032C  EC9D  F02F         	call	_I2C_Master_Start	;wreg free
  2540                           
  2541                           ;main.c: 265: I2C_Master_Write(0b11010000);
  2542  000330  0E00               	movlw	0
  2543  000332  0100               	movlb	0	; () banked
  2544  000334  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2545  000336  0ED0               	movlw	208
  2546  000338  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2547  00033A  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  2548                           
  2549                           ;main.c: 266: I2C_Master_Write(0x00);
  2550  00033E  0E00               	movlw	0
  2551  000340  0100               	movlb	0	; () banked
  2552  000342  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2553  000344  0E00               	movlw	0
  2554  000346  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2555  000348  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  2556                           
  2557                           ;main.c: 267: I2C_Master_Stop();
  2558  00034C  EC99  F02F         	call	_I2C_Master_Stop	;wreg free
  2559                           
  2560                           ;main.c: 269: I2C_Master_Start();
  2561  000350  EC9D  F02F         	call	_I2C_Master_Start	;wreg free
  2562                           
  2563                           ;main.c: 270: I2C_Master_Write(0b11010001);
  2564  000354  0E00               	movlw	0
  2565  000356  0100               	movlb	0	; () banked
  2566  000358  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  2567  00035A  0ED1               	movlw	209
  2568  00035C  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  2569  00035E  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  2570                           
  2571                           ;main.c: 271: for(unsigned char k=0;k<0x06;k++){
  2572  000362  0E00               	movlw	0
  2573  000364  0101               	movlb	1	; () banked
  2574  000366  6F23               	movwf	main@k& (0+255),b
  2575  000368                     l7580:
  2576                           
  2577                           ; BSR set to: 1
  2578  000368  0E05               	movlw	5
  2579  00036A  0101               	movlb	1	; () banked
  2580  00036C  6523               	cpfsgt	main@k& (0+255),b
  2581  00036E  D001               	goto	l7584
  2582  000370  D010               	goto	l7590
  2583  000372                     l7584:
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;main.c: 272: time[k] = I2C_Master_Read(1);
  2587  000372  0101               	movlb	1	; () banked
  2588  000374  5123               	movf	main@k& (0+255),w,b
  2589  000376  0D01               	mullw	1
  2590  000378  0E12               	movlw	low main@time
  2591  00037A  24F3               	addwf	prodl,w,c
  2592  00037C  6ED9               	movwf	fsr2l,c
  2593  00037E  0E01               	movlw	high main@time
  2594  000380  20F4               	addwfc	prodh,w,c
  2595  000382  6EDA               	movwf	fsr2h,c
  2596  000384  0E01               	movlw	1
  2597  000386  ECBE  F02E         	call	_I2C_Master_Read
  2598  00038A  6EDF               	movwf	indf2,c
  2599  00038C  0101               	movlb	1	; () banked
  2600  00038E  2B23               	incf	main@k& (0+255),f,b
  2601  000390  D7EB               	goto	l7580
  2602  000392                     l7590:
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;main.c: 273: }
  2606                           ;main.c: 274: time[6] = I2C_Master_Read(0);
  2607  000392  0E00               	movlw	0
  2608  000394  ECBE  F02E         	call	_I2C_Master_Read
  2609  000398  0101               	movlb	1	; () banked
  2610  00039A  6F18               	movwf	(main@time+6)& (0+255),b
  2611                           
  2612                           ;main.c: 275: I2C_Master_Stop();
  2613  00039C  EC99  F02F         	call	_I2C_Master_Stop	;wreg free
  2614                           
  2615                           ;main.c: 277: count_min_initial = time[1];
  2616  0003A0  C113  F125         	movff	main@time+1,main@count_min_initial
  2617                           
  2618                           ;main.c: 278: count_seconds_initial = time[0];
  2619  0003A4  C112  F126         	movff	main@time,main@count_seconds_initial
  2620                           
  2621                           ;main.c: 279: count_min_initial = (count_min_initial & 0x0F) + ((count_min_initial & 0xF
      +                          0)>>4)*10;
  2622  0003A8  0101               	movlb	1	; () banked
  2623  0003AA  3925               	swapf	main@count_min_initial& (0+255),w,b
  2624  0003AC  0B0F               	andlw	15
  2625  0003AE  0B0F               	andlw	15
  2626  0003B0  0D0A               	mullw	10
  2627  0003B2  0101               	movlb	1	; () banked
  2628  0003B4  5125               	movf	main@count_min_initial& (0+255),w,b
  2629  0003B6  0B0F               	andlw	15
  2630  0003B8  24F3               	addwf	prodl,w,c
  2631  0003BA  0101               	movlb	1	; () banked
  2632  0003BC  6F25               	movwf	main@count_min_initial& (0+255),b
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;main.c: 280: count_seconds_initial = (count_seconds_initial & 0x0F) + ((count_seconds_i
      +                          nitial & 0xF0)>>4)*10;
  2636  0003BE  0101               	movlb	1	; () banked
  2637  0003C0  3926               	swapf	main@count_seconds_initial& (0+255),w,b
  2638  0003C2  0B0F               	andlw	15
  2639  0003C4  0B0F               	andlw	15
  2640  0003C6  0D0A               	mullw	10
  2641  0003C8  0101               	movlb	1	; () banked
  2642  0003CA  5126               	movf	main@count_seconds_initial& (0+255),w,b
  2643  0003CC  0B0F               	andlw	15
  2644  0003CE  24F3               	addwf	prodl,w,c
  2645  0003D0  0101               	movlb	1	; () banked
  2646  0003D2  6F26               	movwf	main@count_seconds_initial& (0+255),b
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;main.c: 281: keypress = 999;
  2650  0003D4  0EE7               	movlw	231
  2651  0003D6  0101               	movlb	1	; () banked
  2652  0003D8  6F2B               	movwf	main@keypress& (0+255),b
  2653                           
  2654                           ; BSR set to: 1
  2655                           ;main.c: 283: initLCD();
  2656  0003DA  ECD2  F02D         	call	_initLCD	;wreg free
  2657                           
  2658                           ;main.c: 284: printf("Initializing...");
  2659  0003DE  0E70               	movlw	low STR_5
  2660  0003E0  0100               	movlb	0	; () banked
  2661  0003E2  6FBF               	movwf	printf@f& (0+255),b
  2662  0003E4  0EFC               	movlw	high STR_5
  2663  0003E6  0100               	movlb	0	; () banked
  2664  0003E8  6FC0               	movwf	(printf@f+1)& (0+255),b
  2665  0003EA  ECCB  F006         	call	_printf	;wreg free
  2666                           
  2667                           ;main.c: 286: process1 = 1;
  2668  0003EE  0E01               	movlw	1
  2669  0003F0  0101               	movlb	1	; () banked
  2670  0003F2  6F50               	movwf	_process1& (0+255),b	;volatile
  2671                           
  2672                           ; BSR set to: 1
  2673                           ;main.c: 287: set_external_interrupt1(500);
  2674  0003F4  0E01               	movlw	1
  2675  0003F6  0100               	movlb	0	; () banked
  2676  0003F8  6F8F               	movwf	(set_external_interrupt1@time+1)& (0+255),b
  2677  0003FA  0EF4               	movlw	244
  2678  0003FC  6F8E               	movwf	set_external_interrupt1@time& (0+255),b
  2679  0003FE  EC5D  F02B         	call	_set_external_interrupt1	;wreg free
  2680                           
  2681                           ;main.c: 288: process3 = 1;
  2682  000402  0E01               	movlw	1
  2683  000404  0101               	movlb	1	; () banked
  2684  000406  6F4F               	movwf	_process3& (0+255),b	;volatile
  2685                           
  2686                           ; BSR set to: 1
  2687                           ;main.c: 289: set_external_interrupt3(700);
  2688  000408  0E02               	movlw	2
  2689  00040A  0100               	movlb	0	; () banked
  2690  00040C  6F8F               	movwf	(set_external_interrupt3@time+1)& (0+255),b
  2691  00040E  0EBC               	movlw	188
  2692  000410  6F8E               	movwf	set_external_interrupt3@time& (0+255),b
  2693  000412  EC22  F02B         	call	_set_external_interrupt3	;wreg free
  2694  000416                     l7614:
  2695  000416  0101               	movlb	1	; () banked
  2696  000418  5155               	movf	_init1& (0+255),w,b	;volatile
  2697  00041A  B4D8               	btfsc	status,2,c
  2698  00041C  D7FC               	goto	l7614
  2699                           
  2700                           ; BSR set to: 1
  2701  00041E  0101               	movlb	1	; () banked
  2702  000420  5154               	movf	_init3& (0+255),w,b	;volatile
  2703  000422  B4D8               	btfsc	status,2,c
  2704  000424  D7F8               	goto	l7614
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;main.c: 293: }
  2708                           ;main.c: 295: initLCD();
  2709                           
  2710                           ; BSR set to: 1
  2711  000426  ECD2  F02D         	call	_initLCD	;wreg free
  2712                           
  2713                           ;main.c: 296: printf("Sorting...");
  2714  00042A  0E97               	movlw	low STR_6
  2715  00042C  0100               	movlb	0	; () banked
  2716  00042E  6FBF               	movwf	printf@f& (0+255),b
  2717  000430  0EFC               	movlw	high STR_6
  2718  000432  0100               	movlb	0	; () banked
  2719  000434  6FC0               	movwf	(printf@f+1)& (0+255),b
  2720  000436  ECCB  F006         	call	_printf	;wreg free
  2721                           
  2722                           ;main.c: 298: int loop_count;
  2723                           ;main.c: 300: while(done == 0){
  2724  00043A  D0C7               	goto	l187
  2725  00043C                     l190:
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;main.c: 305: (INTCONbits.GIE = 0);
  2729  00043C  9EF2               	bcf	intcon,7,c	;volatile
  2730                           
  2731                           ;main.c: 307: LATDbits.LATD0 = 1;
  2732  00043E  808C               	bsf	3980,0,c	;volatile
  2733                           
  2734                           ; BSR set to: 1
  2735                           ;main.c: 308: _delay((unsigned long)((150)*(8000000/4000.0)));
  2736  000440  0E02               	movlw	2
  2737  000442  0100               	movlb	0	; () banked
  2738  000444  6FE8               	movwf	(??_main+1)& (0+255),b
  2739  000446  0E86               	movlw	134
  2740  000448  0100               	movlb	0	; () banked
  2741  00044A  6FE7               	movwf	??_main& (0+255),b
  2742  00044C  0E99               	movlw	153
  2743  00044E                     u9327:
  2744  00044E  2EE8               	decfsz	wreg,f,c
  2745  000450  D7FE               	bra	u9327
  2746  000452  2FE7               	decfsz	??_main& (0+255),f,b
  2747  000454  D7FC               	bra	u9327
  2748  000456  2FE8               	decfsz	(??_main+1)& (0+255),f,b
  2749  000458  D7FA               	bra	u9327
  2750                           
  2751                           ;main.c: 309: LATDbits.LATD0 = 0;
  2752  00045A  908C               	bcf	3980,0,c	;volatile
  2753                           
  2754                           ;main.c: 310: _delay((unsigned long)((75)*(8000000/4000.0)));
  2755  00045C  0EC3               	movlw	195
  2756  00045E  0100               	movlb	0	; () banked
  2757  000460  6FE7               	movwf	??_main& (0+255),b
  2758  000462  0ECD               	movlw	205
  2759  000464                     u9337:
  2760  000464  2EE8               	decfsz	wreg,f,c
  2761  000466  D7FE               	bra	u9337
  2762  000468  2FE7               	decfsz	??_main& (0+255),f,b
  2763  00046A  D7FC               	bra	u9337
  2764                           
  2765                           ;main.c: 311: LATDbits.LATD0 = 1;
  2766  00046C  808C               	bsf	3980,0,c	;volatile
  2767                           
  2768                           ;main.c: 312: _delay((unsigned long)((150)*(8000000/4000.0)));
  2769  00046E  0E02               	movlw	2
  2770  000470  0100               	movlb	0	; () banked
  2771  000472  6FE8               	movwf	(??_main+1)& (0+255),b
  2772  000474  0E86               	movlw	134
  2773  000476  0100               	movlb	0	; () banked
  2774  000478  6FE7               	movwf	??_main& (0+255),b
  2775  00047A  0E99               	movlw	153
  2776  00047C                     u9347:
  2777  00047C  2EE8               	decfsz	wreg,f,c
  2778  00047E  D7FE               	bra	u9347
  2779  000480  2FE7               	decfsz	??_main& (0+255),f,b
  2780  000482  D7FC               	bra	u9347
  2781  000484  2FE8               	decfsz	(??_main+1)& (0+255),f,b
  2782  000486  D7FA               	bra	u9347
  2783                           
  2784                           ;main.c: 313: LATDbits.LATD0 = 0;
  2785  000488  908C               	bcf	3980,0,c	;volatile
  2786                           
  2787                           ;main.c: 315: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2788  00048A  0E00               	movlw	0
  2789  00048C  0101               	movlb	1	; () banked
  2790  00048E  6F19               	movwf	main@i& (0+255),b
  2791  000490                     l7632:
  2792                           
  2793                           ; BSR set to: 1
  2794  000490  0E09               	movlw	9
  2795  000492  0101               	movlb	1	; () banked
  2796  000494  6519               	cpfsgt	main@i& (0+255),b
  2797  000496  D001               	goto	l7636
  2798  000498  D00C               	goto	l7640
  2799  00049A                     l7636:
  2800                           
  2801                           ; BSR set to: 1
  2802  00049A  0EFF               	movlw	255
  2803  00049C  0100               	movlb	0	; () banked
  2804  00049E  6FE7               	movwf	??_main& (0+255),b
  2805  0004A0  0E8A               	movlw	138
  2806  0004A2                     u9357:
  2807  0004A2  2EE8               	decfsz	wreg,f,c
  2808  0004A4  D7FE               	bra	u9357
  2809  0004A6  2FE7               	decfsz	??_main& (0+255),f,b
  2810  0004A8  D7FC               	bra	u9357
  2811  0004AA  F000               	nop	
  2812  0004AC  0101               	movlb	1	; () banked
  2813  0004AE  2B19               	incf	main@i& (0+255),f,b
  2814  0004B0  D7EF               	goto	l7632
  2815  0004B2                     l7640:
  2816                           
  2817                           ; BSR set to: 1
  2818                           ;main.c: 316: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2819  0004B2  0E00               	movlw	0
  2820  0004B4  0101               	movlb	1	; () banked
  2821  0004B6  6F1A               	movwf	main@i_431& (0+255),b
  2822  0004B8                     l7642:
  2823                           
  2824                           ; BSR set to: 1
  2825  0004B8  0E09               	movlw	9
  2826  0004BA  0101               	movlb	1	; () banked
  2827  0004BC  651A               	cpfsgt	main@i_431& (0+255),b
  2828  0004BE  D001               	goto	l7646
  2829  0004C0  D00C               	goto	l7650
  2830  0004C2                     l7646:
  2831                           
  2832                           ; BSR set to: 1
  2833  0004C2  0EFF               	movlw	255
  2834  0004C4  0100               	movlb	0	; () banked
  2835  0004C6  6FE7               	movwf	??_main& (0+255),b
  2836  0004C8  0E8A               	movlw	138
  2837  0004CA                     u9367:
  2838  0004CA  2EE8               	decfsz	wreg,f,c
  2839  0004CC  D7FE               	bra	u9367
  2840  0004CE  2FE7               	decfsz	??_main& (0+255),f,b
  2841  0004D0  D7FC               	bra	u9367
  2842  0004D2  F000               	nop	
  2843  0004D4  0101               	movlb	1	; () banked
  2844  0004D6  2B1A               	incf	main@i_431& (0+255),f,b
  2845  0004D8  D7EF               	goto	l7642
  2846  0004DA                     l7650:
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;main.c: 317: _delay((unsigned long)((500)*(8000000/4000.0)));
  2850  0004DA  0E06               	movlw	6
  2851  0004DC  0100               	movlb	0	; () banked
  2852  0004DE  6FE8               	movwf	(??_main+1)& (0+255),b
  2853  0004E0  0E13               	movlw	19
  2854  0004E2  0100               	movlb	0	; () banked
  2855  0004E4  6FE7               	movwf	??_main& (0+255),b
  2856  0004E6  0EAD               	movlw	173
  2857  0004E8                     u9377:
  2858  0004E8  2EE8               	decfsz	wreg,f,c
  2859  0004EA  D7FE               	bra	u9377
  2860  0004EC  2FE7               	decfsz	??_main& (0+255),f,b
  2861  0004EE  D7FC               	bra	u9377
  2862  0004F0  2FE8               	decfsz	(??_main+1)& (0+255),f,b
  2863  0004F2  D7FA               	bra	u9377
  2864  0004F4  D000               	nop2	
  2865                           
  2866                           ;main.c: 319: voltage_3 = readADC(3);
  2867  0004F6  0E03               	movlw	3
  2868  0004F8  EC16  F022         	call	_readADC
  2869  0004FC  C0BC  F13F         	movff	?_readADC,_voltage_3	;volatile
  2870  000500  C0BD  F140         	movff	?_readADC+1,_voltage_3+1	;volatile
  2871  000504  C0BE  F141         	movff	?_readADC+2,_voltage_3+2	;volatile
  2872                           
  2873                           ;main.c: 320: voltage_4 = readADC(4);
  2874  000508  0E04               	movlw	4
  2875  00050A  EC16  F022         	call	_readADC
  2876  00050E  C0BC  F13C         	movff	?_readADC,_voltage_4	;volatile
  2877  000512  C0BD  F13D         	movff	?_readADC+1,_voltage_4+1	;volatile
  2878  000516  C0BE  F13E         	movff	?_readADC+2,_voltage_4+2	;volatile
  2879                           
  2880                           ;main.c: 328: if(voltage_3 < 3.5){
  2881  00051A  C13F  F080         	movff	_voltage_3,___ftge@ff1	;volatile
  2882  00051E  C140  F081         	movff	_voltage_3+1,___ftge@ff1+1	;volatile
  2883  000522  C141  F082         	movff	_voltage_3+2,___ftge@ff1+2	;volatile
  2884  000526  0E00               	movlw	0
  2885  000528  0100               	movlb	0	; () banked
  2886  00052A  6F83               	movwf	___ftge@ff2& (0+255),b
  2887  00052C  0E60               	movlw	96
  2888  00052E  0100               	movlb	0	; () banked
  2889  000530  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  2890  000532  0E40               	movlw	64
  2891  000534  0100               	movlb	0	; () banked
  2892  000536  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  2893  000538  ECBA  F027         	call	___ftge	;wreg free
  2894  00053C  0100               	movlb	0	; () banked
  2895  00053E  B0D8               	btfsc	status,0,c
  2896  000540  D00B               	goto	l7664
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;main.c: 329: process1 = 1;
  2900  000542  0E01               	movlw	1
  2901  000544  0101               	movlb	1	; () banked
  2902  000546  6F50               	movwf	_process1& (0+255),b	;volatile
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;main.c: 330: (INTCONbits.GIE = 1);
  2906  000548  8EF2               	bsf	intcon,7,c	;volatile
  2907                           
  2908                           ; BSR set to: 1
  2909                           ;main.c: 331: set_external_interrupt1(700);
  2910  00054A  0E02               	movlw	2
  2911  00054C  0100               	movlb	0	; () banked
  2912  00054E  6F8F               	movwf	(set_external_interrupt1@time+1)& (0+255),b
  2913  000550  0EBC               	movlw	188
  2914  000552  6F8E               	movwf	set_external_interrupt1@time& (0+255),b
  2915  000554  EC5D  F02B         	call	_set_external_interrupt1	;wreg free
  2916  000558                     l7664:
  2917                           
  2918                           ;main.c: 333: }
  2919                           ;main.c: 334: if(voltage_4 < 3.5){
  2920  000558  C13C  F080         	movff	_voltage_4,___ftge@ff1	;volatile
  2921  00055C  C13D  F081         	movff	_voltage_4+1,___ftge@ff1+1	;volatile
  2922  000560  C13E  F082         	movff	_voltage_4+2,___ftge@ff1+2	;volatile
  2923  000564  0E00               	movlw	0
  2924  000566  0100               	movlb	0	; () banked
  2925  000568  6F83               	movwf	___ftge@ff2& (0+255),b
  2926  00056A  0E60               	movlw	96
  2927  00056C  0100               	movlb	0	; () banked
  2928  00056E  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  2929  000570  0E40               	movlw	64
  2930  000572  0100               	movlb	0	; () banked
  2931  000574  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  2932  000576  ECBA  F027         	call	___ftge	;wreg free
  2933  00057A  0100               	movlb	0	; () banked
  2934  00057C  B0D8               	btfsc	status,0,c
  2935  00057E  D00B               	goto	l7672
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;main.c: 335: process3 = 1;
  2939  000580  0E01               	movlw	1
  2940  000582  0101               	movlb	1	; () banked
  2941  000584  6F4F               	movwf	_process3& (0+255),b	;volatile
  2942                           
  2943                           ; BSR set to: 1
  2944                           ;main.c: 336: (INTCONbits.GIE = 1);
  2945  000586  8EF2               	bsf	intcon,7,c	;volatile
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;main.c: 337: set_external_interrupt3(500);
  2949  000588  0E01               	movlw	1
  2950  00058A  0100               	movlb	0	; () banked
  2951  00058C  6F8F               	movwf	(set_external_interrupt3@time+1)& (0+255),b
  2952  00058E  0EF4               	movlw	244
  2953  000590  6F8E               	movwf	set_external_interrupt3@time& (0+255),b
  2954  000592  EC22  F02B         	call	_set_external_interrupt3	;wreg free
  2955  000596                     l7672:
  2956                           
  2957                           ;main.c: 338: }
  2958                           ;main.c: 339: loop_count++;
  2959  000596  0101               	movlb	1	; () banked
  2960  000598  4B00               	infsnz	main@loop_count& (0+255),f,b
  2961  00059A  2B01               	incf	(main@loop_count+1)& (0+255),f,b
  2962  00059C                     l7674:
  2963  00059C  0101               	movlb	1	; () banked
  2964  00059E  5150               	movf	_process1& (0+255),w,b	;volatile
  2965  0005A0  A4D8               	btfss	status,2,c
  2966  0005A2  D004               	goto	l7678
  2967                           
  2968                           ; BSR set to: 1
  2969  0005A4  0101               	movlb	1	; () banked
  2970  0005A6  514F               	movf	_process3& (0+255),w,b	;volatile
  2971  0005A8  B4D8               	btfsc	status,2,c
  2972  0005AA  D748               	goto	l190
  2973  0005AC                     l7678:
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;main.c: 342: }
  2977                           ;main.c: 377: if(loop_count == 4){
  2978  0005AC  0E04               	movlw	4
  2979  0005AE  0101               	movlb	1	; () banked
  2980  0005B0  1900               	xorwf	main@loop_count& (0+255),w,b
  2981  0005B2  0101               	movlb	1	; () banked
  2982  0005B4  1101               	iorwf	(main@loop_count+1)& (0+255),w,b
  2983  0005B6  A4D8               	btfss	status,2,c
  2984  0005B8  D003               	goto	l200
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;main.c: 379: done = 1;
  2988  0005BA  0E01               	movlw	1
  2989  0005BC  0101               	movlb	1	; () banked
  2990  0005BE  6F11               	movwf	main@done& (0+255),b
  2991  0005C0                     l200:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;main.c: 381: }
  2995                           ;main.c: 383: loop_count = 0;
  2996  0005C0  0E00               	movlw	0
  2997  0005C2  0101               	movlb	1	; () banked
  2998  0005C4  6F01               	movwf	(main@loop_count+1)& (0+255),b
  2999  0005C6  0E00               	movlw	0
  3000  0005C8  6F00               	movwf	main@loop_count& (0+255),b
  3001  0005CA                     l187:
  3002  0005CA  0101               	movlb	1	; () banked
  3003  0005CC  5111               	movf	main@done& (0+255),w,b
  3004  0005CE  0101               	movlb	1	; () banked
  3005  0005D0  B4D8               	btfsc	status,2,c
  3006  0005D2  D7E4               	goto	l7674
  3007                           
  3008                           ; BSR set to: 1
  3009                           ;main.c: 384: }
  3010                           ;main.c: 387: (INTCONbits.GIE = 0);
  3011  0005D4  9EF2               	bcf	intcon,7,c	;volatile
  3012                           
  3013                           ;main.c: 388: TMR1ON = 0;
  3014  0005D6  90CD               	bcf	4045,0,c	;volatile
  3015                           
  3016                           ;main.c: 389: TMR3ON = 0;
  3017  0005D8  90B1               	bcf	4017,0,c	;volatile
  3018                           
  3019                           ;main.c: 390: TMR1IF = 0;
  3020  0005DA  909E               	bcf	3998,0,c	;volatile
  3021                           
  3022                           ;main.c: 391: TMR3IF = 0;
  3023  0005DC  92A1               	bcf	4001,1,c	;volatile
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;main.c: 393: LATA = 0x00;
  3027  0005DE  0E00               	movlw	0
  3028  0005E0  6E89               	movwf	3977,c	;volatile
  3029                           
  3030                           ;main.c: 394: LATB = 0x00;
  3031  0005E2  0E00               	movlw	0
  3032  0005E4  6E8A               	movwf	3978,c	;volatile
  3033                           
  3034                           ;main.c: 395: LATC = 0x00;
  3035  0005E6  0E00               	movlw	0
  3036  0005E8  6E8B               	movwf	3979,c	;volatile
  3037                           
  3038                           ; BSR set to: 1
  3039                           ;main.c: 396: LATDbits.LATD0 = 0;
  3040  0005EA  908C               	bcf	3980,0,c	;volatile
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;main.c: 397: LATDbits.LATD1 = 0;
  3044  0005EC  928C               	bcf	3980,1,c	;volatile
  3045                           
  3046                           ;main.c: 398: LATE = 0x00;
  3047  0005EE  0E00               	movlw	0
  3048  0005F0  6E8D               	movwf	3981,c	;volatile
  3049                           
  3050                           ; BSR set to: 1
  3051                           ;main.c: 399: __nop();
  3052  0005F2  F000               	nop	
  3053                           
  3054                           ;main.c: 400: __nop();
  3055  0005F4  F000               	nop	
  3056                           
  3057                           ;main.c: 428: I2C_Master_Start();
  3058  0005F6  EC9D  F02F         	call	_I2C_Master_Start	;wreg free
  3059                           
  3060                           ;main.c: 429: I2C_Master_Write(0b11010000);
  3061  0005FA  0E00               	movlw	0
  3062  0005FC  0100               	movlb	0	; () banked
  3063  0005FE  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  3064  000600  0ED0               	movlw	208
  3065  000602  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  3066  000604  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  3067                           
  3068                           ;main.c: 430: I2C_Master_Write(0x00);
  3069  000608  0E00               	movlw	0
  3070  00060A  0100               	movlb	0	; () banked
  3071  00060C  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  3072  00060E  0E00               	movlw	0
  3073  000610  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  3074  000612  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  3075                           
  3076                           ;main.c: 431: I2C_Master_Stop();
  3077  000616  EC99  F02F         	call	_I2C_Master_Stop	;wreg free
  3078                           
  3079                           ;main.c: 433: I2C_Master_Start();
  3080  00061A  EC9D  F02F         	call	_I2C_Master_Start	;wreg free
  3081                           
  3082                           ;main.c: 434: I2C_Master_Write(0b11010001);
  3083  00061E  0E00               	movlw	0
  3084  000620  0100               	movlb	0	; () banked
  3085  000622  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  3086  000624  0ED1               	movlw	209
  3087  000626  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  3088  000628  EC94  F02F         	call	_I2C_Master_Write	;wreg free
  3089                           
  3090                           ;main.c: 435: for(unsigned char k=0;k<0x06;k++){
  3091  00062C  0E00               	movlw	0
  3092  00062E  0101               	movlb	1	; () banked
  3093  000630  6F24               	movwf	main@k_432& (0+255),b
  3094  000632                     l7704:
  3095                           
  3096                           ; BSR set to: 1
  3097  000632  0E05               	movlw	5
  3098  000634  0101               	movlb	1	; () banked
  3099  000636  6524               	cpfsgt	main@k_432& (0+255),b
  3100  000638  D001               	goto	l7708
  3101  00063A  D010               	goto	l7714
  3102  00063C                     l7708:
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;main.c: 436: time[k] = I2C_Master_Read(1);
  3106  00063C  0101               	movlb	1	; () banked
  3107  00063E  5124               	movf	main@k_432& (0+255),w,b
  3108  000640  0D01               	mullw	1
  3109  000642  0E12               	movlw	low main@time
  3110  000644  24F3               	addwf	prodl,w,c
  3111  000646  6ED9               	movwf	fsr2l,c
  3112  000648  0E01               	movlw	high main@time
  3113  00064A  20F4               	addwfc	prodh,w,c
  3114  00064C  6EDA               	movwf	fsr2h,c
  3115  00064E  0E01               	movlw	1
  3116  000650  ECBE  F02E         	call	_I2C_Master_Read
  3117  000654  6EDF               	movwf	indf2,c
  3118  000656  0101               	movlb	1	; () banked
  3119  000658  2B24               	incf	main@k_432& (0+255),f,b
  3120  00065A  D7EB               	goto	l7704
  3121  00065C                     l7714:
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 437: }
  3125                           ;main.c: 438: time[6] = I2C_Master_Read(0);
  3126  00065C  0E00               	movlw	0
  3127  00065E  ECBE  F02E         	call	_I2C_Master_Read
  3128  000662  0101               	movlb	1	; () banked
  3129  000664  6F18               	movwf	(main@time+6)& (0+255),b
  3130                           
  3131                           ;main.c: 439: I2C_Master_Stop();
  3132  000666  EC99  F02F         	call	_I2C_Master_Stop	;wreg free
  3133                           
  3134                           ;main.c: 441: count_min_final = time[1];
  3135  00066A  C113  F127         	movff	main@time+1,main@count_min_final
  3136                           
  3137                           ;main.c: 442: count_seconds_final = time[0];
  3138  00066E  C112  F128         	movff	main@time,main@count_seconds_final
  3139                           
  3140                           ;main.c: 443: count_min_final = (count_min_final & 0x0F) + ((count_min_final & 0xF0)>>4)
      +                          *10;
  3141  000672  0101               	movlb	1	; () banked
  3142  000674  3927               	swapf	main@count_min_final& (0+255),w,b
  3143  000676  0B0F               	andlw	15
  3144  000678  0B0F               	andlw	15
  3145  00067A  0D0A               	mullw	10
  3146  00067C  0101               	movlb	1	; () banked
  3147  00067E  5127               	movf	main@count_min_final& (0+255),w,b
  3148  000680  0B0F               	andlw	15
  3149  000682  24F3               	addwf	prodl,w,c
  3150  000684  0101               	movlb	1	; () banked
  3151  000686  6F27               	movwf	main@count_min_final& (0+255),b
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;main.c: 444: count_seconds_final = (count_seconds_final & 0x0F) + ((count_seconds_final
      +                           & 0xF0)>>4)*10;
  3155  000688  0101               	movlb	1	; () banked
  3156  00068A  3928               	swapf	main@count_seconds_final& (0+255),w,b
  3157  00068C  0B0F               	andlw	15
  3158  00068E  0B0F               	andlw	15
  3159  000690  0D0A               	mullw	10
  3160  000692  0101               	movlb	1	; () banked
  3161  000694  5128               	movf	main@count_seconds_final& (0+255),w,b
  3162  000696  0B0F               	andlw	15
  3163  000698  24F3               	addwf	prodl,w,c
  3164  00069A  0101               	movlb	1	; () banked
  3165  00069C  6F28               	movwf	main@count_seconds_final& (0+255),b
  3166                           
  3167                           ; BSR set to: 1
  3168                           ;main.c: 446: count_min = count_min_final - count_min_initial;
  3169  00069E  0101               	movlb	1	; () banked
  3170  0006A0  5125               	movf	main@count_min_initial& (0+255),w,b
  3171  0006A2  0800               	sublw	0
  3172  0006A4  0101               	movlb	1	; () banked
  3173  0006A6  2527               	addwf	main@count_min_final& (0+255),w,b
  3174  0006A8  0101               	movlb	1	; () banked
  3175  0006AA  6F29               	movwf	main@count_min& (0+255),b
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;main.c: 447: count_seconds = count_seconds_final - count_seconds_initial;
  3179  0006AC  0101               	movlb	1	; () banked
  3180  0006AE  5126               	movf	main@count_seconds_initial& (0+255),w,b
  3181  0006B0  0800               	sublw	0
  3182  0006B2  0101               	movlb	1	; () banked
  3183  0006B4  2528               	addwf	main@count_seconds_final& (0+255),w,b
  3184  0006B6  0101               	movlb	1	; () banked
  3185  0006B8  6F2A               	movwf	main@count_seconds& (0+255),b
  3186                           
  3187                           ; BSR set to: 1
  3188                           ;main.c: 449: if(count_seconds < 0){
  3189  0006BA  0101               	movlb	1	; () banked
  3190  0006BC  AF2A               	btfss	main@count_seconds& (0+255),7,b
  3191  0006BE  D009               	goto	l7732
  3192                           
  3193                           ; BSR set to: 1
  3194                           ;main.c: 451: count_min = count_min - 1;
  3195  0006C0  0101               	movlb	1	; () banked
  3196  0006C2  0529               	decf	main@count_min& (0+255),w,b
  3197  0006C4  0101               	movlb	1	; () banked
  3198  0006C6  6F29               	movwf	main@count_min& (0+255),b
  3199                           
  3200                           ;main.c: 452: count_seconds = count_seconds + 60;
  3201  0006C8  0101               	movlb	1	; () banked
  3202  0006CA  512A               	movf	main@count_seconds& (0+255),w,b
  3203  0006CC  0F3C               	addlw	60
  3204  0006CE  0101               	movlb	1	; () banked
  3205  0006D0  6F2A               	movwf	main@count_seconds& (0+255),b
  3206  0006D2                     l7732:
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;main.c: 454: }
  3210                           ;main.c: 473: for(unsigned char i=0; i<3; i++){
  3211  0006D2  0E00               	movlw	0
  3212  0006D4  0101               	movlb	1	; () banked
  3213  0006D6  6F1B               	movwf	main@i_433& (0+255),b
  3214  0006D8                     l7734:
  3215                           
  3216                           ; BSR set to: 1
  3217  0006D8  0E02               	movlw	2
  3218  0006DA  0101               	movlb	1	; () banked
  3219  0006DC  651B               	cpfsgt	main@i_433& (0+255),b
  3220  0006DE  D001               	goto	l7738
  3221  0006E0  D081               	goto	l7758
  3222  0006E2                     l7738:
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;main.c: 474: eeprom_min = Eeprom_ReadByte(address_min + 10);
  3226  0006E2  0101               	movlb	1	; () banked
  3227  0006E4  5132               	movf	main@address_min& (0+255),w,b
  3228  0006E6  0F0A               	addlw	10
  3229  0006E8  EC8D  F02E         	call	_Eeprom_ReadByte
  3230  0006EC  0101               	movlb	1	; () banked
  3231  0006EE  6F02               	movwf	main@eeprom_min& (0+255),b
  3232                           
  3233                           ;main.c: 475: Eeprom_WriteByte(address_min, eeprom_min);
  3234  0006F0  C102  F080         	movff	main@eeprom_min,Eeprom_WriteByte@data
  3235  0006F4  0101               	movlb	1	; () banked
  3236  0006F6  5132               	movf	main@address_min& (0+255),w,b
  3237  0006F8  EC18  F02E         	call	_Eeprom_WriteByte
  3238                           
  3239                           ;main.c: 476: eeprom_seconds = Eeprom_ReadByte(address_seconds + 10);
  3240  0006FC  0101               	movlb	1	; () banked
  3241  0006FE  512C               	movf	main@address_seconds& (0+255),w,b
  3242  000700  0F0A               	addlw	10
  3243  000702  EC8D  F02E         	call	_Eeprom_ReadByte
  3244  000706  0101               	movlb	1	; () banked
  3245  000708  6F03               	movwf	main@eeprom_seconds& (0+255),b
  3246                           
  3247                           ;main.c: 477: Eeprom_WriteByte(address_seconds, eeprom_seconds);
  3248  00070A  C103  F080         	movff	main@eeprom_seconds,Eeprom_WriteByte@data
  3249  00070E  0101               	movlb	1	; () banked
  3250  000710  512C               	movf	main@address_seconds& (0+255),w,b
  3251  000712  EC18  F02E         	call	_Eeprom_WriteByte
  3252                           
  3253                           ;main.c: 478: eeprom_AA = Eeprom_ReadByte(address_AA + 10);
  3254  000716  0101               	movlb	1	; () banked
  3255  000718  512D               	movf	main@address_AA& (0+255),w,b
  3256  00071A  0F0A               	addlw	10
  3257  00071C  EC8D  F02E         	call	_Eeprom_ReadByte
  3258  000720  0101               	movlb	1	; () banked
  3259  000722  6F04               	movwf	main@eeprom_AA& (0+255),b
  3260                           
  3261                           ;main.c: 479: Eeprom_WriteByte(address_AA, eeprom_AA);
  3262  000724  C104  F080         	movff	main@eeprom_AA,Eeprom_WriteByte@data
  3263  000728  0101               	movlb	1	; () banked
  3264  00072A  512D               	movf	main@address_AA& (0+255),w,b
  3265  00072C  EC18  F02E         	call	_Eeprom_WriteByte
  3266                           
  3267                           ;main.c: 480: eeprom_9V = Eeprom_ReadByte(address_9V + 10);
  3268  000730  0101               	movlb	1	; () banked
  3269  000732  512E               	movf	main@address_9V& (0+255),w,b
  3270  000734  0F0A               	addlw	10
  3271  000736  EC8D  F02E         	call	_Eeprom_ReadByte
  3272  00073A  0101               	movlb	1	; () banked
  3273  00073C  6F05               	movwf	main@eeprom_9V& (0+255),b
  3274                           
  3275                           ;main.c: 481: Eeprom_WriteByte(address_9V, eeprom_9V);
  3276  00073E  C105  F080         	movff	main@eeprom_9V,Eeprom_WriteByte@data
  3277  000742  0101               	movlb	1	; () banked
  3278  000744  512E               	movf	main@address_9V& (0+255),w,b
  3279  000746  EC18  F02E         	call	_Eeprom_WriteByte
  3280                           
  3281                           ;main.c: 482: eeprom_C = Eeprom_ReadByte(address_C + 10);
  3282  00074A  0101               	movlb	1	; () banked
  3283  00074C  512F               	movf	main@address_C& (0+255),w,b
  3284  00074E  0F0A               	addlw	10
  3285  000750  EC8D  F02E         	call	_Eeprom_ReadByte
  3286  000754  0101               	movlb	1	; () banked
  3287  000756  6F06               	movwf	main@eeprom_C& (0+255),b
  3288                           
  3289                           ;main.c: 483: Eeprom_WriteByte(address_C, eeprom_C);
  3290  000758  C106  F080         	movff	main@eeprom_C,Eeprom_WriteByte@data
  3291  00075C  0101               	movlb	1	; () banked
  3292  00075E  512F               	movf	main@address_C& (0+255),w,b
  3293  000760  EC18  F02E         	call	_Eeprom_WriteByte
  3294                           
  3295                           ;main.c: 484: eeprom_drained = Eeprom_ReadByte(address_drained + 10);
  3296  000764  0101               	movlb	1	; () banked
  3297  000766  5130               	movf	main@address_drained& (0+255),w,b
  3298  000768  0F0A               	addlw	10
  3299  00076A  EC8D  F02E         	call	_Eeprom_ReadByte
  3300  00076E  0101               	movlb	1	; () banked
  3301  000770  6F07               	movwf	main@eeprom_drained& (0+255),b
  3302                           
  3303                           ;main.c: 485: Eeprom_WriteByte(address_drained, eeprom_drained);
  3304  000772  C107  F080         	movff	main@eeprom_drained,Eeprom_WriteByte@data
  3305  000776  0101               	movlb	1	; () banked
  3306  000778  5130               	movf	main@address_drained& (0+255),w,b
  3307  00077A  EC18  F02E         	call	_Eeprom_WriteByte
  3308                           
  3309                           ;main.c: 486: eeprom_total = Eeprom_ReadByte(address_total + 10);
  3310  00077E  0101               	movlb	1	; () banked
  3311  000780  5131               	movf	main@address_total& (0+255),w,b
  3312  000782  0F0A               	addlw	10
  3313  000784  EC8D  F02E         	call	_Eeprom_ReadByte
  3314  000788  0101               	movlb	1	; () banked
  3315  00078A  6F08               	movwf	main@eeprom_total& (0+255),b
  3316                           
  3317                           ;main.c: 487: Eeprom_WriteByte(address_total, eeprom_total);
  3318  00078C  C108  F080         	movff	main@eeprom_total,Eeprom_WriteByte@data
  3319  000790  0101               	movlb	1	; () banked
  3320  000792  5131               	movf	main@address_total& (0+255),w,b
  3321  000794  EC18  F02E         	call	_Eeprom_WriteByte
  3322                           
  3323                           ;main.c: 489: address_min = address_min + 10;
  3324  000798  0101               	movlb	1	; () banked
  3325  00079A  5132               	movf	main@address_min& (0+255),w,b
  3326  00079C  0F0A               	addlw	10
  3327  00079E  0101               	movlb	1	; () banked
  3328  0007A0  6F32               	movwf	main@address_min& (0+255),b
  3329                           
  3330                           ; BSR set to: 1
  3331                           ;main.c: 490: address_seconds = address_seconds + 10;
  3332  0007A2  0101               	movlb	1	; () banked
  3333  0007A4  512C               	movf	main@address_seconds& (0+255),w,b
  3334  0007A6  0F0A               	addlw	10
  3335  0007A8  0101               	movlb	1	; () banked
  3336  0007AA  6F2C               	movwf	main@address_seconds& (0+255),b
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 491: address_AA = address_AA + 10;
  3340  0007AC  0101               	movlb	1	; () banked
  3341  0007AE  512D               	movf	main@address_AA& (0+255),w,b
  3342  0007B0  0F0A               	addlw	10
  3343  0007B2  0101               	movlb	1	; () banked
  3344  0007B4  6F2D               	movwf	main@address_AA& (0+255),b
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;main.c: 492: address_9V = address_9V + 10;
  3348  0007B6  0101               	movlb	1	; () banked
  3349  0007B8  512E               	movf	main@address_9V& (0+255),w,b
  3350  0007BA  0F0A               	addlw	10
  3351  0007BC  0101               	movlb	1	; () banked
  3352  0007BE  6F2E               	movwf	main@address_9V& (0+255),b
  3353                           
  3354                           ; BSR set to: 1
  3355                           ;main.c: 493: address_C = address_C + 10;
  3356  0007C0  0101               	movlb	1	; () banked
  3357  0007C2  512F               	movf	main@address_C& (0+255),w,b
  3358  0007C4  0F0A               	addlw	10
  3359  0007C6  0101               	movlb	1	; () banked
  3360  0007C8  6F2F               	movwf	main@address_C& (0+255),b
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;main.c: 494: address_drained = address_drained + 10;
  3364  0007CA  0101               	movlb	1	; () banked
  3365  0007CC  5130               	movf	main@address_drained& (0+255),w,b
  3366  0007CE  0F0A               	addlw	10
  3367  0007D0  0101               	movlb	1	; () banked
  3368  0007D2  6F30               	movwf	main@address_drained& (0+255),b
  3369                           
  3370                           ; BSR set to: 1
  3371                           ;main.c: 495: address_total = address_total + 10;
  3372  0007D4  0101               	movlb	1	; () banked
  3373  0007D6  5131               	movf	main@address_total& (0+255),w,b
  3374  0007D8  0F0A               	addlw	10
  3375  0007DA  0101               	movlb	1	; () banked
  3376  0007DC  6F31               	movwf	main@address_total& (0+255),b
  3377                           
  3378                           ; BSR set to: 1
  3379  0007DE  0101               	movlb	1	; () banked
  3380  0007E0  2B1B               	incf	main@i_433& (0+255),f,b
  3381  0007E2  D77A               	goto	l7734
  3382  0007E4                     l7758:
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;main.c: 496: }
  3386                           ;main.c: 498: Eeprom_WriteByte(address_min, count_min);
  3387  0007E4  C129  F080         	movff	main@count_min,Eeprom_WriteByte@data
  3388  0007E8  0101               	movlb	1	; () banked
  3389  0007EA  5132               	movf	main@address_min& (0+255),w,b
  3390  0007EC  EC18  F02E         	call	_Eeprom_WriteByte
  3391                           
  3392                           ;main.c: 499: Eeprom_WriteByte(address_seconds, count_seconds);
  3393  0007F0  C12A  F080         	movff	main@count_seconds,Eeprom_WriteByte@data
  3394  0007F4  0101               	movlb	1	; () banked
  3395  0007F6  512C               	movf	main@address_seconds& (0+255),w,b
  3396  0007F8  EC18  F02E         	call	_Eeprom_WriteByte
  3397                           
  3398                           ;main.c: 500: Eeprom_WriteByte(address_AA, count_AA);
  3399  0007FC  C14B  F080         	movff	_count_AA,Eeprom_WriteByte@data	;volatile
  3400  000800  0101               	movlb	1	; () banked
  3401  000802  512D               	movf	main@address_AA& (0+255),w,b
  3402  000804  EC18  F02E         	call	_Eeprom_WriteByte
  3403                           
  3404                           ;main.c: 501: Eeprom_WriteByte(address_9V, count_9V);
  3405  000808  C149  F080         	movff	_count_9V,Eeprom_WriteByte@data	;volatile
  3406  00080C  0101               	movlb	1	; () banked
  3407  00080E  512E               	movf	main@address_9V& (0+255),w,b
  3408  000810  EC18  F02E         	call	_Eeprom_WriteByte
  3409                           
  3410                           ;main.c: 502: Eeprom_WriteByte(address_C, count_C);
  3411  000814  C147  F080         	movff	_count_C,Eeprom_WriteByte@data	;volatile
  3412  000818  0101               	movlb	1	; () banked
  3413  00081A  512F               	movf	main@address_C& (0+255),w,b
  3414  00081C  EC18  F02E         	call	_Eeprom_WriteByte
  3415                           
  3416                           ;main.c: 503: Eeprom_WriteByte(address_drained, count_drained);
  3417  000820  C145  F080         	movff	_count_drained,Eeprom_WriteByte@data	;volatile
  3418  000824  0101               	movlb	1	; () banked
  3419  000826  5130               	movf	main@address_drained& (0+255),w,b
  3420  000828  EC18  F02E         	call	_Eeprom_WriteByte
  3421                           
  3422                           ;main.c: 504: Eeprom_WriteByte(address_total, count_AA + count_9V + count_C);
  3423  00082C  0101               	movlb	1	; () banked
  3424  00082E  514B               	movf	_count_AA& (0+255),w,b	;volatile
  3425  000830  0101               	movlb	1	; () banked
  3426  000832  2549               	addwf	_count_9V& (0+255),w,b	;volatile
  3427  000834  0101               	movlb	1	; () banked
  3428  000836  2547               	addwf	_count_C& (0+255),w,b	;volatile
  3429  000838  0100               	movlb	0	; () banked
  3430  00083A  6F80               	movwf	Eeprom_WriteByte@data& (0+255),b
  3431  00083C  0101               	movlb	1	; () banked
  3432  00083E  5131               	movf	main@address_total& (0+255),w,b
  3433  000840  EC18  F02E         	call	_Eeprom_WriteByte
  3434                           
  3435                           ;main.c: 506: initLCD();
  3436  000844  ECD2  F02D         	call	_initLCD	;wreg free
  3437                           
  3438                           ;main.c: 507: printf("%02d", count_min);
  3439  000848  0EB0               	movlw	low (STR_12+4)
  3440  00084A  0100               	movlb	0	; () banked
  3441  00084C  6FBF               	movwf	printf@f& (0+255),b
  3442  00084E  0EFC               	movlw	high (STR_12+4)
  3443  000850  0100               	movlb	0	; () banked
  3444  000852  6FC0               	movwf	(printf@f+1)& (0+255),b
  3445  000854  0101               	movlb	1	; () banked
  3446  000856  5129               	movf	main@count_min& (0+255),w,b
  3447  000858  0100               	movlb	0	; () banked
  3448  00085A  6FC1               	movwf	(?_printf+2)& (0+255),b
  3449  00085C  6BC2               	clrf	(?_printf+3)& (0+255),b
  3450  00085E  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  3451  000860  07C2               	decf	(?_printf+3)& (0+255),f,b
  3452  000862  ECCB  F006         	call	_printf	;wreg free
  3453                           
  3454                           ;main.c: 508: printf(" minutes");
  3455  000866  0EBE               	movlw	low STR_8
  3456  000868  0100               	movlb	0	; () banked
  3457  00086A  6FBF               	movwf	printf@f& (0+255),b
  3458  00086C  0EFC               	movlw	high STR_8
  3459  00086E  0100               	movlb	0	; () banked
  3460  000870  6FC0               	movwf	(printf@f+1)& (0+255),b
  3461  000872  ECCB  F006         	call	_printf	;wreg free
  3462                           
  3463                           ;main.c: 509: lcdInst(0b11000000);;
  3464  000876  0EC0               	movlw	192
  3465  000878  EC80  F02F         	call	_lcdInst
  3466                           
  3467                           ;main.c: 510: printf("%02d", count_seconds);
  3468  00087C  0EB0               	movlw	low (STR_12+4)
  3469  00087E  0100               	movlb	0	; () banked
  3470  000880  6FBF               	movwf	printf@f& (0+255),b
  3471  000882  0EFC               	movlw	high (STR_12+4)
  3472  000884  0100               	movlb	0	; () banked
  3473  000886  6FC0               	movwf	(printf@f+1)& (0+255),b
  3474  000888  0101               	movlb	1	; () banked
  3475  00088A  512A               	movf	main@count_seconds& (0+255),w,b
  3476  00088C  0100               	movlb	0	; () banked
  3477  00088E  6FC1               	movwf	(?_printf+2)& (0+255),b
  3478  000890  6BC2               	clrf	(?_printf+3)& (0+255),b
  3479  000892  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  3480  000894  07C2               	decf	(?_printf+3)& (0+255),f,b
  3481  000896  ECCB  F006         	call	_printf	;wreg free
  3482                           
  3483                           ;main.c: 511: printf(" seconds");
  3484  00089A  0EB5               	movlw	low STR_10
  3485  00089C  0100               	movlb	0	; () banked
  3486  00089E  6FBF               	movwf	printf@f& (0+255),b
  3487  0008A0  0EFC               	movlw	high STR_10
  3488  0008A2  0100               	movlb	0	; () banked
  3489  0008A4  6FC0               	movwf	(printf@f+1)& (0+255),b
  3490  0008A6  ECCB  F006         	call	_printf	;wreg free
  3491                           
  3492                           ;main.c: 512: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3493  0008AA  0E00               	movlw	0
  3494  0008AC  0101               	movlb	1	; () banked
  3495  0008AE  6F1C               	movwf	main@i_438& (0+255),b
  3496  0008B0                     l7770:
  3497                           
  3498                           ; BSR set to: 1
  3499  0008B0  0E09               	movlw	9
  3500  0008B2  0101               	movlb	1	; () banked
  3501  0008B4  651C               	cpfsgt	main@i_438& (0+255),b
  3502  0008B6  D001               	goto	l7774
  3503  0008B8  D00C               	goto	l7778
  3504  0008BA                     l7774:
  3505                           
  3506                           ; BSR set to: 1
  3507  0008BA  0EFF               	movlw	255
  3508  0008BC  0100               	movlb	0	; () banked
  3509  0008BE  6FE7               	movwf	??_main& (0+255),b
  3510  0008C0  0E8A               	movlw	138
  3511  0008C2                     u9387:
  3512  0008C2  2EE8               	decfsz	wreg,f,c
  3513  0008C4  D7FE               	bra	u9387
  3514  0008C6  2FE7               	decfsz	??_main& (0+255),f,b
  3515  0008C8  D7FC               	bra	u9387
  3516  0008CA  F000               	nop	
  3517  0008CC  0101               	movlb	1	; () banked
  3518  0008CE  2B1C               	incf	main@i_438& (0+255),f,b
  3519  0008D0  D7EF               	goto	l7770
  3520  0008D2                     l7778:
  3521                           
  3522                           ; BSR set to: 1
  3523                           ;main.c: 513: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3524  0008D2  0E00               	movlw	0
  3525  0008D4  0101               	movlb	1	; () banked
  3526  0008D6  6F1D               	movwf	main@i_439& (0+255),b
  3527  0008D8                     l7780:
  3528                           
  3529                           ; BSR set to: 1
  3530  0008D8  0E09               	movlw	9
  3531  0008DA  0101               	movlb	1	; () banked
  3532  0008DC  651D               	cpfsgt	main@i_439& (0+255),b
  3533  0008DE  D001               	goto	l7784
  3534  0008E0  D00C               	goto	l7788
  3535  0008E2                     l7784:
  3536                           
  3537                           ; BSR set to: 1
  3538  0008E2  0EFF               	movlw	255
  3539  0008E4  0100               	movlb	0	; () banked
  3540  0008E6  6FE7               	movwf	??_main& (0+255),b
  3541  0008E8  0E8A               	movlw	138
  3542  0008EA                     u9397:
  3543  0008EA  2EE8               	decfsz	wreg,f,c
  3544  0008EC  D7FE               	bra	u9397
  3545  0008EE  2FE7               	decfsz	??_main& (0+255),f,b
  3546  0008F0  D7FC               	bra	u9397
  3547  0008F2  F000               	nop	
  3548  0008F4  0101               	movlb	1	; () banked
  3549  0008F6  2B1D               	incf	main@i_439& (0+255),f,b
  3550  0008F8  D7EF               	goto	l7780
  3551  0008FA                     l7788:
  3552                           
  3553                           ; BSR set to: 1
  3554                           ;main.c: 514: initLCD();
  3555  0008FA  ECD2  F02D         	call	_initLCD	;wreg free
  3556                           
  3557                           ;main.c: 515: printf("AA: %02d ", count_AA);
  3558  0008FE  0EA2               	movlw	low STR_11
  3559  000900  0100               	movlb	0	; () banked
  3560  000902  6FBF               	movwf	printf@f& (0+255),b
  3561  000904  0EFC               	movlw	high STR_11
  3562  000906  0100               	movlb	0	; () banked
  3563  000908  6FC0               	movwf	(printf@f+1)& (0+255),b
  3564  00090A  C14B  F0C1         	movff	_count_AA,?_printf+2	;volatile
  3565  00090E  C14C  F0C2         	movff	_count_AA+1,?_printf+3	;volatile
  3566  000912  ECCB  F006         	call	_printf	;wreg free
  3567                           
  3568                           ;main.c: 516: printf("9V: %02d", count_9V);
  3569  000916  0EAC               	movlw	low STR_12
  3570  000918  0100               	movlb	0	; () banked
  3571  00091A  6FBF               	movwf	printf@f& (0+255),b
  3572  00091C  0EFC               	movlw	high STR_12
  3573  00091E  0100               	movlb	0	; () banked
  3574  000920  6FC0               	movwf	(printf@f+1)& (0+255),b
  3575  000922  C149  F0C1         	movff	_count_9V,?_printf+2	;volatile
  3576  000926  C14A  F0C2         	movff	_count_9V+1,?_printf+3	;volatile
  3577  00092A  ECCB  F006         	call	_printf	;wreg free
  3578                           
  3579                           ;main.c: 517: lcdInst(0b11000000);;
  3580  00092E  0EC0               	movlw	192
  3581  000930  EC80  F02F         	call	_lcdInst
  3582                           
  3583                           ;main.c: 518: printf(" C: %02d  ", count_C);
  3584  000934  0E8C               	movlw	low STR_13
  3585  000936  0100               	movlb	0	; () banked
  3586  000938  6FBF               	movwf	printf@f& (0+255),b
  3587  00093A  0EFC               	movlw	high STR_13
  3588  00093C  0100               	movlb	0	; () banked
  3589  00093E  6FC0               	movwf	(printf@f+1)& (0+255),b
  3590  000940  C147  F0C1         	movff	_count_C,?_printf+2	;volatile
  3591  000944  C148  F0C2         	movff	_count_C+1,?_printf+3	;volatile
  3592  000948  ECCB  F006         	call	_printf	;wreg free
  3593                           
  3594                           ;main.c: 519: printf("X: %02d", count_drained);
  3595  00094C  0EC7               	movlw	low STR_14
  3596  00094E  0100               	movlb	0	; () banked
  3597  000950  6FBF               	movwf	printf@f& (0+255),b
  3598  000952  0EFC               	movlw	high STR_14
  3599  000954  0100               	movlb	0	; () banked
  3600  000956  6FC0               	movwf	(printf@f+1)& (0+255),b
  3601  000958  C145  F0C1         	movff	_count_drained,?_printf+2	;volatile
  3602  00095C  C146  F0C2         	movff	_count_drained+1,?_printf+3	;volatile
  3603  000960  ECCB  F006         	call	_printf	;wreg free
  3604                           
  3605                           ;main.c: 520: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3606  000964  0E00               	movlw	0
  3607  000966  0101               	movlb	1	; () banked
  3608  000968  6F1E               	movwf	main@i_444& (0+255),b
  3609  00096A                     l7800:
  3610                           
  3611                           ; BSR set to: 1
  3612  00096A  0E09               	movlw	9
  3613  00096C  0101               	movlb	1	; () banked
  3614  00096E  651E               	cpfsgt	main@i_444& (0+255),b
  3615  000970  D001               	goto	l7804
  3616  000972  D00C               	goto	l7808
  3617  000974                     l7804:
  3618                           
  3619                           ; BSR set to: 1
  3620  000974  0EFF               	movlw	255
  3621  000976  0100               	movlb	0	; () banked
  3622  000978  6FE7               	movwf	??_main& (0+255),b
  3623  00097A  0E8A               	movlw	138
  3624  00097C                     u9407:
  3625  00097C  2EE8               	decfsz	wreg,f,c
  3626  00097E  D7FE               	bra	u9407
  3627  000980  2FE7               	decfsz	??_main& (0+255),f,b
  3628  000982  D7FC               	bra	u9407
  3629  000984  F000               	nop	
  3630  000986  0101               	movlb	1	; () banked
  3631  000988  2B1E               	incf	main@i_444& (0+255),f,b
  3632  00098A  D7EF               	goto	l7800
  3633  00098C                     l7808:
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;main.c: 521: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3637  00098C  0E00               	movlw	0
  3638  00098E  0101               	movlb	1	; () banked
  3639  000990  6F1F               	movwf	main@i_445& (0+255),b
  3640  000992                     l7810:
  3641                           
  3642                           ; BSR set to: 1
  3643  000992  0E09               	movlw	9
  3644  000994  0101               	movlb	1	; () banked
  3645  000996  651F               	cpfsgt	main@i_445& (0+255),b
  3646  000998  D001               	goto	l7814
  3647  00099A  D00C               	goto	l7818
  3648  00099C                     l7814:
  3649                           
  3650                           ; BSR set to: 1
  3651  00099C  0EFF               	movlw	255
  3652  00099E  0100               	movlb	0	; () banked
  3653  0009A0  6FE7               	movwf	??_main& (0+255),b
  3654  0009A2  0E8A               	movlw	138
  3655  0009A4                     u9417:
  3656  0009A4  2EE8               	decfsz	wreg,f,c
  3657  0009A6  D7FE               	bra	u9417
  3658  0009A8  2FE7               	decfsz	??_main& (0+255),f,b
  3659  0009AA  D7FC               	bra	u9417
  3660  0009AC  F000               	nop	
  3661  0009AE  0101               	movlb	1	; () banked
  3662  0009B0  2B1F               	incf	main@i_445& (0+255),f,b
  3663  0009B2  D7EF               	goto	l7810
  3664  0009B4                     l7818:
  3665                           
  3666                           ; BSR set to: 1
  3667                           ;main.c: 522: initLCD();
  3668  0009B4  ECD2  F02D         	call	_initLCD	;wreg free
  3669                           
  3670                           ;main.c: 523: printf("total: %02d", (count_AA + count_9V + count_C + count_drained));
  3671  0009B8  0E80               	movlw	low STR_15
  3672  0009BA  0100               	movlb	0	; () banked
  3673  0009BC  6FBF               	movwf	printf@f& (0+255),b
  3674  0009BE  0EFC               	movlw	high STR_15
  3675  0009C0  0100               	movlb	0	; () banked
  3676  0009C2  6FC0               	movwf	(printf@f+1)& (0+255),b
  3677  0009C4  0101               	movlb	1	; () banked
  3678  0009C6  5149               	movf	_count_9V& (0+255),w,b	;volatile
  3679  0009C8  0101               	movlb	1	; () banked
  3680  0009CA  254B               	addwf	_count_AA& (0+255),w,b	;volatile
  3681  0009CC  0100               	movlb	0	; () banked
  3682  0009CE  6FE7               	movwf	??_main& (0+255),b
  3683  0009D0  0101               	movlb	1	; () banked
  3684  0009D2  514A               	movf	(_count_9V+1)& (0+255),w,b	;volatile
  3685  0009D4  0101               	movlb	1	; () banked
  3686  0009D6  214C               	addwfc	(_count_AA+1)& (0+255),w,b	;volatile
  3687  0009D8  0100               	movlb	0	; () banked
  3688  0009DA  6FE8               	movwf	(??_main+1)& (0+255),b
  3689  0009DC  0101               	movlb	1	; () banked
  3690  0009DE  5147               	movf	_count_C& (0+255),w,b	;volatile
  3691  0009E0  0100               	movlb	0	; () banked
  3692  0009E2  27E7               	addwf	??_main& (0+255),f,b
  3693  0009E4  0101               	movlb	1	; () banked
  3694  0009E6  5148               	movf	(_count_C+1)& (0+255),w,b	;volatile
  3695  0009E8  0100               	movlb	0	; () banked
  3696  0009EA  23E8               	addwfc	(??_main+1)& (0+255),f,b
  3697  0009EC  0101               	movlb	1	; () banked
  3698  0009EE  5145               	movf	_count_drained& (0+255),w,b	;volatile
  3699  0009F0  0100               	movlb	0	; () banked
  3700  0009F2  25E7               	addwf	??_main& (0+255),w,b
  3701  0009F4  0100               	movlb	0	; () banked
  3702  0009F6  6FC1               	movwf	(?_printf+2)& (0+255),b
  3703  0009F8  0101               	movlb	1	; () banked
  3704  0009FA  5146               	movf	(_count_drained+1)& (0+255),w,b	;volatile
  3705  0009FC  0100               	movlb	0	; () banked
  3706  0009FE  21E8               	addwfc	(??_main+1)& (0+255),w,b
  3707  000A00  0100               	movlb	0	; () banked
  3708  000A02  6FC2               	movwf	(?_printf+3)& (0+255),b
  3709  000A04  ECCB  F006         	call	_printf	;wreg free
  3710                           
  3711                           ;main.c: 524: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3712  000A08  0E00               	movlw	0
  3713  000A0A  0101               	movlb	1	; () banked
  3714  000A0C  6F20               	movwf	main@i_447& (0+255),b
  3715  000A0E                     l7824:
  3716                           
  3717                           ; BSR set to: 1
  3718  000A0E  0E09               	movlw	9
  3719  000A10  0101               	movlb	1	; () banked
  3720  000A12  6520               	cpfsgt	main@i_447& (0+255),b
  3721  000A14  D001               	goto	l7828
  3722  000A16  D00C               	goto	l7832
  3723  000A18                     l7828:
  3724                           
  3725                           ; BSR set to: 1
  3726  000A18  0EFF               	movlw	255
  3727  000A1A  0100               	movlb	0	; () banked
  3728  000A1C  6FE7               	movwf	??_main& (0+255),b
  3729  000A1E  0E8A               	movlw	138
  3730  000A20                     u9427:
  3731  000A20  2EE8               	decfsz	wreg,f,c
  3732  000A22  D7FE               	bra	u9427
  3733  000A24  2FE7               	decfsz	??_main& (0+255),f,b
  3734  000A26  D7FC               	bra	u9427
  3735  000A28  F000               	nop	
  3736  000A2A  0101               	movlb	1	; () banked
  3737  000A2C  2B20               	incf	main@i_447& (0+255),f,b
  3738  000A2E  D7EF               	goto	l7824
  3739  000A30                     l7832:
  3740                           
  3741                           ; BSR set to: 1
  3742                           ;main.c: 525: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  3743  000A30  0E00               	movlw	0
  3744  000A32  0101               	movlb	1	; () banked
  3745  000A34  6F21               	movwf	main@i_448& (0+255),b
  3746  000A36                     l7834:
  3747                           
  3748                           ; BSR set to: 1
  3749  000A36  0E09               	movlw	9
  3750  000A38  0101               	movlb	1	; () banked
  3751  000A3A  6521               	cpfsgt	main@i_448& (0+255),b
  3752  000A3C  D002               	goto	l7838
  3753  000A3E  EF3E  F000         	goto	l7540
  3754  000A42                     l7838:
  3755                           
  3756                           ; BSR set to: 1
  3757  000A42  0EFF               	movlw	255
  3758  000A44  0100               	movlb	0	; () banked
  3759  000A46  6FE7               	movwf	??_main& (0+255),b
  3760  000A48  0E8A               	movlw	138
  3761  000A4A                     u9437:
  3762  000A4A  2EE8               	decfsz	wreg,f,c
  3763  000A4C  D7FE               	bra	u9437
  3764  000A4E  2FE7               	decfsz	??_main& (0+255),f,b
  3765  000A50  D7FC               	bra	u9437
  3766  000A52  F000               	nop	
  3767  000A54  0101               	movlb	1	; () banked
  3768  000A56  2B21               	incf	main@i_448& (0+255),f,b
  3769  000A58  D7EE               	goto	l7834
  3770  000A5A                     l7842:
  3771                           
  3772                           ;main.c: 528: else if (keys[keypress] == keys[1]){
  3773  000A5A  0101               	movlb	1	; () banked
  3774  000A5C  512B               	movf	main@keypress& (0+255),w,b
  3775  000A5E  0D01               	mullw	1
  3776  000A60  0E27               	movlw	low _keys
  3777  000A62  24F3               	addwf	prodl,w,c
  3778  000A64  6EF6               	movwf	tblptrl,c
  3779  000A66  0EFC               	movlw	high _keys
  3780  000A68  20F4               	addwfc	prodh,w,c
  3781  000A6A  6EF7               	movwf	tblptrh,c
  3782  000A6C                     	if	0	;There are less than 3 active tblptr bytes
  3783  000A6C                     	endif
  3784  000A6C  0008               	tblrd		*
  3785  000A6E  CFF5 F0E7          	movff	tablat,??_main
  3786  000A72  0E28               	movlw	low (_keys+1)
  3787  000A74  6EF6               	movwf	tblptrl,c
  3788  000A76  0EFC               	movlw	high (_keys+1)
  3789  000A78  6EF7               	movwf	tblptrh,c
  3790  000A7A                     	if	0	;tblptru may be non-zero
  3791  000A7A                     	endif
  3792  000A7A                     	if	0	;tblptru may be non-zero
  3793  000A7A                     	endif
  3794  000A7A  0008               	tblrd		*
  3795  000A7C  50F5               	movf	tablat,w,c
  3796  000A7E  0100               	movlb	0	; () banked
  3797  000A80  19E7               	xorwf	??_main& (0+255),w,b
  3798  000A82  A4D8               	btfss	status,2,c
  3799  000A84  EF3E  F000         	goto	l7540
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;main.c: 530: address_min = address_min + 30;
  3803  000A88  0101               	movlb	1	; () banked
  3804  000A8A  5132               	movf	main@address_min& (0+255),w,b
  3805  000A8C  0F1E               	addlw	30
  3806  000A8E  0101               	movlb	1	; () banked
  3807  000A90  6F32               	movwf	main@address_min& (0+255),b
  3808                           
  3809                           ;main.c: 531: address_seconds = address_seconds + 30;
  3810  000A92  0101               	movlb	1	; () banked
  3811  000A94  512C               	movf	main@address_seconds& (0+255),w,b
  3812  000A96  0F1E               	addlw	30
  3813  000A98  0101               	movlb	1	; () banked
  3814  000A9A  6F2C               	movwf	main@address_seconds& (0+255),b
  3815                           
  3816                           ;main.c: 532: address_total = address_total + 30;
  3817  000A9C  0101               	movlb	1	; () banked
  3818  000A9E  5131               	movf	main@address_total& (0+255),w,b
  3819  000AA0  0F1E               	addlw	30
  3820  000AA2  0101               	movlb	1	; () banked
  3821  000AA4  6F31               	movwf	main@address_total& (0+255),b
  3822                           
  3823                           ;main.c: 533: address_AA = address_AA + 30;
  3824  000AA6  0101               	movlb	1	; () banked
  3825  000AA8  512D               	movf	main@address_AA& (0+255),w,b
  3826  000AAA  0F1E               	addlw	30
  3827  000AAC  0101               	movlb	1	; () banked
  3828  000AAE  6F2D               	movwf	main@address_AA& (0+255),b
  3829                           
  3830                           ;main.c: 534: address_9V = address_9V + 30;
  3831  000AB0  0101               	movlb	1	; () banked
  3832  000AB2  512E               	movf	main@address_9V& (0+255),w,b
  3833  000AB4  0F1E               	addlw	30
  3834  000AB6  0101               	movlb	1	; () banked
  3835  000AB8  6F2E               	movwf	main@address_9V& (0+255),b
  3836                           
  3837                           ;main.c: 535: address_C = address_C + 30;
  3838  000ABA  0101               	movlb	1	; () banked
  3839  000ABC  512F               	movf	main@address_C& (0+255),w,b
  3840  000ABE  0F1E               	addlw	30
  3841  000AC0  0101               	movlb	1	; () banked
  3842  000AC2  6F2F               	movwf	main@address_C& (0+255),b
  3843                           
  3844                           ;main.c: 536: address_drained = address_drained + 30;
  3845  000AC4  0101               	movlb	1	; () banked
  3846  000AC6  5130               	movf	main@address_drained& (0+255),w,b
  3847  000AC8  0F1E               	addlw	30
  3848  000ACA  0101               	movlb	1	; () banked
  3849  000ACC  6F30               	movwf	main@address_drained& (0+255),b
  3850                           
  3851                           ;main.c: 538: while(keys[keypress] != keys[13]){
  3852  000ACE  D14B               	goto	l7884
  3853  000AD0                     l7846:
  3854                           
  3855                           ;main.c: 540: past_min = Eeprom_ReadByte(address_min);
  3856  000AD0  0101               	movlb	1	; () banked
  3857  000AD2  5132               	movf	main@address_min& (0+255),w,b
  3858  000AD4  EC8D  F02E         	call	_Eeprom_ReadByte
  3859  000AD8  0101               	movlb	1	; () banked
  3860  000ADA  6F09               	movwf	main@past_min& (0+255),b
  3861                           
  3862                           ;main.c: 541: past_seconds = Eeprom_ReadByte(address_seconds);
  3863  000ADC  0101               	movlb	1	; () banked
  3864  000ADE  512C               	movf	main@address_seconds& (0+255),w,b
  3865  000AE0  EC8D  F02E         	call	_Eeprom_ReadByte
  3866  000AE4  0101               	movlb	1	; () banked
  3867  000AE6  6F0A               	movwf	main@past_seconds& (0+255),b
  3868                           
  3869                           ;main.c: 542: past_total = Eeprom_ReadByte(address_total);
  3870  000AE8  0101               	movlb	1	; () banked
  3871  000AEA  5131               	movf	main@address_total& (0+255),w,b
  3872  000AEC  EC8D  F02E         	call	_Eeprom_ReadByte
  3873  000AF0  0101               	movlb	1	; () banked
  3874  000AF2  6F0B               	movwf	main@past_total& (0+255),b
  3875                           
  3876                           ;main.c: 543: past_AA = Eeprom_ReadByte(address_AA);
  3877  000AF4  0101               	movlb	1	; () banked
  3878  000AF6  512D               	movf	main@address_AA& (0+255),w,b
  3879  000AF8  EC8D  F02E         	call	_Eeprom_ReadByte
  3880  000AFC  0101               	movlb	1	; () banked
  3881  000AFE  6F0C               	movwf	main@past_AA& (0+255),b
  3882                           
  3883                           ;main.c: 544: past_9V = Eeprom_ReadByte(address_9V);
  3884  000B00  0101               	movlb	1	; () banked
  3885  000B02  512E               	movf	main@address_9V& (0+255),w,b
  3886  000B04  EC8D  F02E         	call	_Eeprom_ReadByte
  3887  000B08  0101               	movlb	1	; () banked
  3888  000B0A  6F0D               	movwf	main@past_9V& (0+255),b
  3889                           
  3890                           ;main.c: 545: past_C = Eeprom_ReadByte(address_C);
  3891  000B0C  0101               	movlb	1	; () banked
  3892  000B0E  512F               	movf	main@address_C& (0+255),w,b
  3893  000B10  EC8D  F02E         	call	_Eeprom_ReadByte
  3894  000B14  0101               	movlb	1	; () banked
  3895  000B16  6F0E               	movwf	main@past_C& (0+255),b
  3896                           
  3897                           ;main.c: 546: past_drained = Eeprom_ReadByte(address_drained);
  3898  000B18  0101               	movlb	1	; () banked
  3899  000B1A  5130               	movf	main@address_drained& (0+255),w,b
  3900  000B1C  EC8D  F02E         	call	_Eeprom_ReadByte
  3901  000B20  0101               	movlb	1	; () banked
  3902  000B22  6F0F               	movwf	main@past_drained& (0+255),b
  3903                           
  3904                           ;main.c: 548: initLCD();
  3905  000B24  ECD2  F02D         	call	_initLCD	;wreg free
  3906                           
  3907                           ;main.c: 549: printf("%02d", past_min);
  3908  000B28  0EB0               	movlw	low (STR_12+4)
  3909  000B2A  0100               	movlb	0	; () banked
  3910  000B2C  6FBF               	movwf	printf@f& (0+255),b
  3911  000B2E  0EFC               	movlw	high (STR_12+4)
  3912  000B30  0100               	movlb	0	; () banked
  3913  000B32  6FC0               	movwf	(printf@f+1)& (0+255),b
  3914  000B34  0101               	movlb	1	; () banked
  3915  000B36  5109               	movf	main@past_min& (0+255),w,b
  3916  000B38  0100               	movlb	0	; () banked
  3917  000B3A  6FC1               	movwf	(?_printf+2)& (0+255),b
  3918  000B3C  6BC2               	clrf	(?_printf+3)& (0+255),b
  3919  000B3E  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  3920  000B40  07C2               	decf	(?_printf+3)& (0+255),f,b
  3921  000B42  ECCB  F006         	call	_printf	;wreg free
  3922                           
  3923                           ;main.c: 550: printf(" min  ");
  3924  000B46  0EE5               	movlw	low STR_17
  3925  000B48  0100               	movlb	0	; () banked
  3926  000B4A  6FBF               	movwf	printf@f& (0+255),b
  3927  000B4C  0EFC               	movlw	high STR_17
  3928  000B4E  0100               	movlb	0	; () banked
  3929  000B50  6FC0               	movwf	(printf@f+1)& (0+255),b
  3930  000B52  ECCB  F006         	call	_printf	;wreg free
  3931                           
  3932                           ;main.c: 552: printf("%02d", past_seconds);
  3933  000B56  0EB0               	movlw	low (STR_12+4)
  3934  000B58  0100               	movlb	0	; () banked
  3935  000B5A  6FBF               	movwf	printf@f& (0+255),b
  3936  000B5C  0EFC               	movlw	high (STR_12+4)
  3937  000B5E  0100               	movlb	0	; () banked
  3938  000B60  6FC0               	movwf	(printf@f+1)& (0+255),b
  3939  000B62  0101               	movlb	1	; () banked
  3940  000B64  510A               	movf	main@past_seconds& (0+255),w,b
  3941  000B66  0100               	movlb	0	; () banked
  3942  000B68  6FC1               	movwf	(?_printf+2)& (0+255),b
  3943  000B6A  6BC2               	clrf	(?_printf+3)& (0+255),b
  3944  000B6C  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  3945  000B6E  07C2               	decf	(?_printf+3)& (0+255),f,b
  3946  000B70  ECCB  F006         	call	_printf	;wreg free
  3947                           
  3948                           ;main.c: 553: printf(" sec");
  3949  000B74  0EF9               	movlw	low STR_19
  3950  000B76  0100               	movlb	0	; () banked
  3951  000B78  6FBF               	movwf	printf@f& (0+255),b
  3952  000B7A  0EFC               	movlw	high STR_19
  3953  000B7C  0100               	movlb	0	; () banked
  3954  000B7E  6FC0               	movwf	(printf@f+1)& (0+255),b
  3955  000B80  ECCB  F006         	call	_printf	;wreg free
  3956                           
  3957                           ;main.c: 555: lcdInst(0b11000000);;
  3958  000B84  0EC0               	movlw	192
  3959  000B86  EC80  F02F         	call	_lcdInst
  3960                           
  3961                           ;main.c: 557: printf("total: %02d", past_total);
  3962  000B8A  0E80               	movlw	low STR_15
  3963  000B8C  0100               	movlb	0	; () banked
  3964  000B8E  6FBF               	movwf	printf@f& (0+255),b
  3965  000B90  0EFC               	movlw	high STR_15
  3966  000B92  0100               	movlb	0	; () banked
  3967  000B94  6FC0               	movwf	(printf@f+1)& (0+255),b
  3968  000B96  0101               	movlb	1	; () banked
  3969  000B98  510B               	movf	main@past_total& (0+255),w,b
  3970  000B9A  0100               	movlb	0	; () banked
  3971  000B9C  6FC1               	movwf	(?_printf+2)& (0+255),b
  3972  000B9E  6BC2               	clrf	(?_printf+3)& (0+255),b
  3973  000BA0  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  3974  000BA2  07C2               	decf	(?_printf+3)& (0+255),f,b
  3975  000BA4  ECCB  F006         	call	_printf	;wreg free
  3976  000BA8                     l223:
  3977  000BA8  A281               	btfss	3969,1,c	;volatile
  3978  000BAA  D7FE               	goto	l223
  3979                           
  3980                           ;main.c: 561: }
  3981                           ;main.c: 563: keypress = (PORTB & 0xF0)>>4;
  3982  000BAC  3881               	swapf	3969,w,c	;volatile
  3983  000BAE  0B0F               	andlw	15
  3984  000BB0  0B0F               	andlw	15
  3985  000BB2  0101               	movlb	1	; () banked
  3986  000BB4  6F2B               	movwf	main@keypress& (0+255),b
  3987  000BB6                     l226:
  3988  000BB6  B281               	btfsc	3969,1,c	;volatile
  3989  000BB8  D7FE               	goto	l226
  3990                           
  3991                           ;main.c: 567: }
  3992                           ;main.c: 569: if(keys[keypress] == keys[3]){
  3993  000BBA  0101               	movlb	1	; () banked
  3994  000BBC  512B               	movf	main@keypress& (0+255),w,b
  3995  000BBE  0D01               	mullw	1
  3996  000BC0  0E27               	movlw	low _keys
  3997  000BC2  24F3               	addwf	prodl,w,c
  3998  000BC4  6EF6               	movwf	tblptrl,c
  3999  000BC6  0EFC               	movlw	high _keys
  4000  000BC8  20F4               	addwfc	prodh,w,c
  4001  000BCA  6EF7               	movwf	tblptrh,c
  4002  000BCC                     	if	0	;There are less than 3 active tblptr bytes
  4003  000BCC                     	endif
  4004  000BCC  0008               	tblrd		*
  4005  000BCE  CFF5 F0E7          	movff	tablat,??_main
  4006  000BD2  0E2A               	movlw	low (_keys+3)
  4007  000BD4  6EF6               	movwf	tblptrl,c
  4008  000BD6  0EFC               	movlw	high (_keys+3)
  4009  000BD8  6EF7               	movwf	tblptrh,c
  4010  000BDA                     	if	0	;tblptru may be non-zero
  4011  000BDA                     	endif
  4012  000BDA                     	if	0	;tblptru may be non-zero
  4013  000BDA                     	endif
  4014  000BDA  0008               	tblrd		*
  4015  000BDC  50F5               	movf	tablat,w,c
  4016  000BDE  0100               	movlb	0	; () banked
  4017  000BE0  19E7               	xorwf	??_main& (0+255),w,b
  4018  000BE2  A4D8               	btfss	status,2,c
  4019  000BE4  D045               	goto	l7872
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;main.c: 571: initLCD();
  4023  000BE6  ECD2  F02D         	call	_initLCD	;wreg free
  4024                           
  4025                           ;main.c: 572: printf("AA: %02d ", past_AA);
  4026  000BEA  0EA2               	movlw	low STR_11
  4027  000BEC  0100               	movlb	0	; () banked
  4028  000BEE  6FBF               	movwf	printf@f& (0+255),b
  4029  000BF0  0EFC               	movlw	high STR_11
  4030  000BF2  0100               	movlb	0	; () banked
  4031  000BF4  6FC0               	movwf	(printf@f+1)& (0+255),b
  4032  000BF6  0101               	movlb	1	; () banked
  4033  000BF8  510C               	movf	main@past_AA& (0+255),w,b
  4034  000BFA  0100               	movlb	0	; () banked
  4035  000BFC  6FC1               	movwf	(?_printf+2)& (0+255),b
  4036  000BFE  6BC2               	clrf	(?_printf+3)& (0+255),b
  4037  000C00  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  4038  000C02  07C2               	decf	(?_printf+3)& (0+255),f,b
  4039  000C04  ECCB  F006         	call	_printf	;wreg free
  4040                           
  4041                           ;main.c: 573: printf("9V: %02d", past_9V);
  4042  000C08  0EAC               	movlw	low STR_12
  4043  000C0A  0100               	movlb	0	; () banked
  4044  000C0C  6FBF               	movwf	printf@f& (0+255),b
  4045  000C0E  0EFC               	movlw	high STR_12
  4046  000C10  0100               	movlb	0	; () banked
  4047  000C12  6FC0               	movwf	(printf@f+1)& (0+255),b
  4048  000C14  0101               	movlb	1	; () banked
  4049  000C16  510D               	movf	main@past_9V& (0+255),w,b
  4050  000C18  0100               	movlb	0	; () banked
  4051  000C1A  6FC1               	movwf	(?_printf+2)& (0+255),b
  4052  000C1C  6BC2               	clrf	(?_printf+3)& (0+255),b
  4053  000C1E  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  4054  000C20  07C2               	decf	(?_printf+3)& (0+255),f,b
  4055  000C22  ECCB  F006         	call	_printf	;wreg free
  4056                           
  4057                           ;main.c: 574: lcdInst(0b11000000);;
  4058  000C26  0EC0               	movlw	192
  4059  000C28  EC80  F02F         	call	_lcdInst
  4060                           
  4061                           ;main.c: 575: printf(" C: %02d  ", past_C);
  4062  000C2C  0E8C               	movlw	low STR_13
  4063  000C2E  0100               	movlb	0	; () banked
  4064  000C30  6FBF               	movwf	printf@f& (0+255),b
  4065  000C32  0EFC               	movlw	high STR_13
  4066  000C34  0100               	movlb	0	; () banked
  4067  000C36  6FC0               	movwf	(printf@f+1)& (0+255),b
  4068  000C38  0101               	movlb	1	; () banked
  4069  000C3A  510E               	movf	main@past_C& (0+255),w,b
  4070  000C3C  0100               	movlb	0	; () banked
  4071  000C3E  6FC1               	movwf	(?_printf+2)& (0+255),b
  4072  000C40  6BC2               	clrf	(?_printf+3)& (0+255),b
  4073  000C42  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  4074  000C44  07C2               	decf	(?_printf+3)& (0+255),f,b
  4075  000C46  ECCB  F006         	call	_printf	;wreg free
  4076                           
  4077                           ;main.c: 576: printf("X: %02d", past_drained);
  4078  000C4A  0EC7               	movlw	low STR_14
  4079  000C4C  0100               	movlb	0	; () banked
  4080  000C4E  6FBF               	movwf	printf@f& (0+255),b
  4081  000C50  0EFC               	movlw	high STR_14
  4082  000C52  0100               	movlb	0	; () banked
  4083  000C54  6FC0               	movwf	(printf@f+1)& (0+255),b
  4084  000C56  0101               	movlb	1	; () banked
  4085  000C58  510F               	movf	main@past_drained& (0+255),w,b
  4086  000C5A  0100               	movlb	0	; () banked
  4087  000C5C  6FC1               	movwf	(?_printf+2)& (0+255),b
  4088  000C5E  6BC2               	clrf	(?_printf+3)& (0+255),b
  4089  000C60  BFC1               	btfsc	(?_printf+2)& (0+255),7,b
  4090  000C62  07C2               	decf	(?_printf+3)& (0+255),f,b
  4091  000C64  ECCB  F006         	call	_printf	;wreg free
  4092  000C68                     l230:
  4093  000C68  A281               	btfss	3969,1,c	;volatile
  4094  000C6A  D7FE               	goto	l230
  4095  000C6C                     l233:
  4096  000C6C  B281               	btfsc	3969,1,c	;volatile
  4097  000C6E  D7FE               	goto	l233
  4098  000C70                     l7872:
  4099                           
  4100                           ;main.c: 584: }
  4101                           ;main.c: 585: }
  4102                           ;main.c: 587: if(keys[keypress] == keys[12]){
  4103  000C70  0101               	movlb	1	; () banked
  4104  000C72  512B               	movf	main@keypress& (0+255),w,b
  4105  000C74  0D01               	mullw	1
  4106  000C76  0E27               	movlw	low _keys
  4107  000C78  24F3               	addwf	prodl,w,c
  4108  000C7A  6EF6               	movwf	tblptrl,c
  4109  000C7C  0EFC               	movlw	high _keys
  4110  000C7E  20F4               	addwfc	prodh,w,c
  4111  000C80  6EF7               	movwf	tblptrh,c
  4112  000C82                     	if	0	;There are less than 3 active tblptr bytes
  4113  000C82                     	endif
  4114  000C82  0008               	tblrd		*
  4115  000C84  CFF5 F0E7          	movff	tablat,??_main
  4116  000C88  0E33               	movlw	low (_keys+12)
  4117  000C8A  6EF6               	movwf	tblptrl,c
  4118  000C8C  0EFC               	movlw	high (_keys+12)
  4119  000C8E  6EF7               	movwf	tblptrh,c
  4120  000C90                     	if	0	;tblptru may be non-zero
  4121  000C90                     	endif
  4122  000C90                     	if	0	;tblptru may be non-zero
  4123  000C90                     	endif
  4124  000C90  0008               	tblrd		*
  4125  000C92  50F5               	movf	tablat,w,c
  4126  000C94  0100               	movlb	0	; () banked
  4127  000C96  19E7               	xorwf	??_main& (0+255),w,b
  4128  000C98  A4D8               	btfss	status,2,c
  4129  000C9A  D027               	goto	l7878
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;main.c: 588: if(address_min < 0x00+30){
  4133  000C9C  0E1E               	movlw	30
  4134  000C9E  0101               	movlb	1	; () banked
  4135  000CA0  6132               	cpfslt	main@address_min& (0+255),b
  4136  000CA2  D023               	goto	l7878
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;main.c: 589: address_min = address_min + 10;
  4140  000CA4  0101               	movlb	1	; () banked
  4141  000CA6  5132               	movf	main@address_min& (0+255),w,b
  4142  000CA8  0F0A               	addlw	10
  4143  000CAA  0101               	movlb	1	; () banked
  4144  000CAC  6F32               	movwf	main@address_min& (0+255),b
  4145                           
  4146                           ;main.c: 590: address_seconds = address_seconds + 10;
  4147  000CAE  0101               	movlb	1	; () banked
  4148  000CB0  512C               	movf	main@address_seconds& (0+255),w,b
  4149  000CB2  0F0A               	addlw	10
  4150  000CB4  0101               	movlb	1	; () banked
  4151  000CB6  6F2C               	movwf	main@address_seconds& (0+255),b
  4152                           
  4153                           ;main.c: 591: address_AA = address_AA + 10;
  4154  000CB8  0101               	movlb	1	; () banked
  4155  000CBA  512D               	movf	main@address_AA& (0+255),w,b
  4156  000CBC  0F0A               	addlw	10
  4157  000CBE  0101               	movlb	1	; () banked
  4158  000CC0  6F2D               	movwf	main@address_AA& (0+255),b
  4159                           
  4160                           ;main.c: 592: address_9V = address_9V + 10;
  4161  000CC2  0101               	movlb	1	; () banked
  4162  000CC4  512E               	movf	main@address_9V& (0+255),w,b
  4163  000CC6  0F0A               	addlw	10
  4164  000CC8  0101               	movlb	1	; () banked
  4165  000CCA  6F2E               	movwf	main@address_9V& (0+255),b
  4166                           
  4167                           ;main.c: 593: address_C = address_C + 10;
  4168  000CCC  0101               	movlb	1	; () banked
  4169  000CCE  512F               	movf	main@address_C& (0+255),w,b
  4170  000CD0  0F0A               	addlw	10
  4171  000CD2  0101               	movlb	1	; () banked
  4172  000CD4  6F2F               	movwf	main@address_C& (0+255),b
  4173                           
  4174                           ;main.c: 594: address_drained = address_drained + 10;
  4175  000CD6  0101               	movlb	1	; () banked
  4176  000CD8  5130               	movf	main@address_drained& (0+255),w,b
  4177  000CDA  0F0A               	addlw	10
  4178  000CDC  0101               	movlb	1	; () banked
  4179  000CDE  6F30               	movwf	main@address_drained& (0+255),b
  4180                           
  4181                           ;main.c: 595: address_total = address_total + 10;
  4182  000CE0  0101               	movlb	1	; () banked
  4183  000CE2  5131               	movf	main@address_total& (0+255),w,b
  4184  000CE4  0F0A               	addlw	10
  4185  000CE6  0101               	movlb	1	; () banked
  4186  000CE8  6F31               	movwf	main@address_total& (0+255),b
  4187  000CEA                     l7878:
  4188                           
  4189                           ;main.c: 596: }
  4190                           ;main.c: 597: }
  4191                           ;main.c: 599: if(keys[keypress] == keys[14]){
  4192  000CEA  0101               	movlb	1	; () banked
  4193  000CEC  512B               	movf	main@keypress& (0+255),w,b
  4194  000CEE  0D01               	mullw	1
  4195  000CF0  0E27               	movlw	low _keys
  4196  000CF2  24F3               	addwf	prodl,w,c
  4197  000CF4  6EF6               	movwf	tblptrl,c
  4198  000CF6  0EFC               	movlw	high _keys
  4199  000CF8  20F4               	addwfc	prodh,w,c
  4200  000CFA  6EF7               	movwf	tblptrh,c
  4201  000CFC                     	if	0	;There are less than 3 active tblptr bytes
  4202  000CFC                     	endif
  4203  000CFC  0008               	tblrd		*
  4204  000CFE  CFF5 F0E7          	movff	tablat,??_main
  4205  000D02  0E35               	movlw	low (_keys+14)
  4206  000D04  6EF6               	movwf	tblptrl,c
  4207  000D06  0EFC               	movlw	high (_keys+14)
  4208  000D08  6EF7               	movwf	tblptrh,c
  4209  000D0A                     	if	0	;tblptru may be non-zero
  4210  000D0A                     	endif
  4211  000D0A                     	if	0	;tblptru may be non-zero
  4212  000D0A                     	endif
  4213  000D0A  0008               	tblrd		*
  4214  000D0C  50F5               	movf	tablat,w,c
  4215  000D0E  0100               	movlb	0	; () banked
  4216  000D10  19E7               	xorwf	??_main& (0+255),w,b
  4217  000D12  A4D8               	btfss	status,2,c
  4218  000D14  D028               	goto	l7884
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;main.c: 600: if(address_min > 0x00){
  4222  000D16  0101               	movlb	1	; () banked
  4223  000D18  5132               	movf	main@address_min& (0+255),w,b
  4224  000D1A  0101               	movlb	1	; () banked
  4225  000D1C  B4D8               	btfsc	status,2,c
  4226  000D1E  D023               	goto	l7884
  4227                           
  4228                           ; BSR set to: 1
  4229                           ;main.c: 601: address_min = address_min - 10;
  4230  000D20  0101               	movlb	1	; () banked
  4231  000D22  5132               	movf	main@address_min& (0+255),w,b
  4232  000D24  0FF6               	addlw	246
  4233  000D26  0101               	movlb	1	; () banked
  4234  000D28  6F32               	movwf	main@address_min& (0+255),b
  4235                           
  4236                           ;main.c: 602: address_seconds = address_seconds - 10;
  4237  000D2A  0101               	movlb	1	; () banked
  4238  000D2C  512C               	movf	main@address_seconds& (0+255),w,b
  4239  000D2E  0FF6               	addlw	246
  4240  000D30  0101               	movlb	1	; () banked
  4241  000D32  6F2C               	movwf	main@address_seconds& (0+255),b
  4242                           
  4243                           ;main.c: 603: address_AA = address_AA - 10;
  4244  000D34  0101               	movlb	1	; () banked
  4245  000D36  512D               	movf	main@address_AA& (0+255),w,b
  4246  000D38  0FF6               	addlw	246
  4247  000D3A  0101               	movlb	1	; () banked
  4248  000D3C  6F2D               	movwf	main@address_AA& (0+255),b
  4249                           
  4250                           ;main.c: 604: address_9V = address_9V - 10;
  4251  000D3E  0101               	movlb	1	; () banked
  4252  000D40  512E               	movf	main@address_9V& (0+255),w,b
  4253  000D42  0FF6               	addlw	246
  4254  000D44  0101               	movlb	1	; () banked
  4255  000D46  6F2E               	movwf	main@address_9V& (0+255),b
  4256                           
  4257                           ;main.c: 605: address_C = address_C - 10;
  4258  000D48  0101               	movlb	1	; () banked
  4259  000D4A  512F               	movf	main@address_C& (0+255),w,b
  4260  000D4C  0FF6               	addlw	246
  4261  000D4E  0101               	movlb	1	; () banked
  4262  000D50  6F2F               	movwf	main@address_C& (0+255),b
  4263                           
  4264                           ;main.c: 606: address_drained = address_drained - 10;
  4265  000D52  0101               	movlb	1	; () banked
  4266  000D54  5130               	movf	main@address_drained& (0+255),w,b
  4267  000D56  0FF6               	addlw	246
  4268  000D58  0101               	movlb	1	; () banked
  4269  000D5A  6F30               	movwf	main@address_drained& (0+255),b
  4270                           
  4271                           ;main.c: 607: address_total = address_total - 10;
  4272  000D5C  0101               	movlb	1	; () banked
  4273  000D5E  5131               	movf	main@address_total& (0+255),w,b
  4274  000D60  0FF6               	addlw	246
  4275  000D62  0101               	movlb	1	; () banked
  4276  000D64  6F31               	movwf	main@address_total& (0+255),b
  4277  000D66                     l7884:
  4278  000D66  0101               	movlb	1	; () banked
  4279  000D68  512B               	movf	main@keypress& (0+255),w,b
  4280  000D6A  0D01               	mullw	1
  4281  000D6C  0E27               	movlw	low _keys
  4282  000D6E  24F3               	addwf	prodl,w,c
  4283  000D70  6EF6               	movwf	tblptrl,c
  4284  000D72  0EFC               	movlw	high _keys
  4285  000D74  20F4               	addwfc	prodh,w,c
  4286  000D76  6EF7               	movwf	tblptrh,c
  4287  000D78                     	if	0	;There are less than 3 active tblptr bytes
  4288  000D78                     	endif
  4289  000D78  0008               	tblrd		*
  4290  000D7A  CFF5 F0E7          	movff	tablat,??_main
  4291  000D7E  0E34               	movlw	low (_keys+13)
  4292  000D80  6EF6               	movwf	tblptrl,c
  4293  000D82  0EFC               	movlw	high (_keys+13)
  4294  000D84  6EF7               	movwf	tblptrh,c
  4295  000D86                     	if	0	;tblptru may be non-zero
  4296  000D86                     	endif
  4297  000D86                     	if	0	;tblptru may be non-zero
  4298  000D86                     	endif
  4299  000D86  0008               	tblrd		*
  4300  000D88  50F5               	movf	tablat,w,c
  4301  000D8A  0100               	movlb	0	; () banked
  4302  000D8C  19E7               	xorwf	??_main& (0+255),w,b
  4303  000D8E  B4D8               	btfsc	status,2,c
  4304  000D90  EF3E  F000         	goto	l7540
  4305  000D94  D69D               	goto	l7846
  4306  000D96                     __end_of_main:
  4307                           	opt stack 0
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           intcon	equ	0xFF2
  4315                           intcon2	equ	0xFF1
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           indf2	equ	0xFDF
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _set_external_interrupt3 *****************
  4324 ;; Defined at:
  4325 ;;		line 109 in file "interrupt.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  time            2   14[BANK0 ] int 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  set_time        2   16[BANK0 ] unsigned int 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        4 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    7
  4346 ;; This function calls:
  4347 ;;		___awdiv
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text1
  4354  005644                     __ptext1:
  4355                           	opt stack 0
  4356  005644                     _set_external_interrupt3:
  4357                           	opt stack 23
  4358                           
  4359                           ;interrupt.c: 111: unsigned int set_time = 65535 - (time*2/4);
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;incstack = 0
  4363  005644  90D8               	bcf	status,0,c
  4364  005646  0100               	movlb	0	; () banked
  4365  005648  358E               	rlcf	set_external_interrupt3@time& (0+255),w,b
  4366  00564A  0100               	movlb	0	; () banked
  4367  00564C  6F86               	movwf	___awdiv@dividend& (0+255),b
  4368  00564E  0100               	movlb	0	; () banked
  4369  005650  358F               	rlcf	(set_external_interrupt3@time+1)& (0+255),w,b
  4370  005652  0100               	movlb	0	; () banked
  4371  005654  6F87               	movwf	(___awdiv@dividend+1)& (0+255),b
  4372  005656  0E00               	movlw	0
  4373  005658  0100               	movlb	0	; () banked
  4374  00565A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4375  00565C  0E04               	movlw	4
  4376  00565E  6F88               	movwf	___awdiv@divisor& (0+255),b
  4377  005660  EC1E  F028         	call	___awdiv	;wreg free
  4378  005664  0100               	movlb	0	; () banked
  4379  005666  1F86               	comf	?___awdiv& (0+255),f,b
  4380  005668  0100               	movlb	0	; () banked
  4381  00566A  1F87               	comf	(?___awdiv+1)& (0+255),f,b
  4382  00566C  0100               	movlb	0	; () banked
  4383  00566E  4B86               	infsnz	?___awdiv& (0+255),f,b
  4384  005670  2B87               	incf	(?___awdiv+1)& (0+255),f,b
  4385  005672  0EFF               	movlw	255
  4386  005674  0100               	movlb	0	; () banked
  4387  005676  2586               	addwf	?___awdiv& (0+255),w,b
  4388  005678  0100               	movlb	0	; () banked
  4389  00567A  6F90               	movwf	set_external_interrupt3@set_time& (0+255),b
  4390  00567C  0EFF               	movlw	255
  4391  00567E  0100               	movlb	0	; () banked
  4392  005680  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4393  005682  0100               	movlb	0	; () banked
  4394  005684  6F91               	movwf	(set_external_interrupt3@set_time+1)& (0+255),b
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;interrupt.c: 113: TMR3H = set_time >> 8;
  4398  005686  0100               	movlb	0	; () banked
  4399  005688  5191               	movf	(set_external_interrupt3@set_time+1)& (0+255),w,b
  4400  00568A  6EB3               	movwf	4019,c	;volatile
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;interrupt.c: 114: TMR3L = set_time & 0b11111111;
  4404  00568C  C090  FFB2         	movff	set_external_interrupt3@set_time,4018	;volatile
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;interrupt.c: 116: TMR3ON = 1;
  4408  005690  80B1               	bsf	4017,0,c	;volatile
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;interrupt.c: 117: if(isr1 == 1){
  4412  005692  0100               	movlb	0	; () banked
  4413  005694  05F1               	decf	_isr1& (0+255),w,b	;volatile
  4414  005696  A4D8               	btfss	status,2,c
  4415  005698  D00A               	goto	l6806
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;interrupt.c: 119: set_time = 65535 - (20000*2/4);
  4419  00569A  0E18               	movlw	24
  4420  00569C  0100               	movlb	0	; () banked
  4421  00569E  6F91               	movwf	(set_external_interrupt3@set_time+1)& (0+255),b
  4422  0056A0  0EEF               	movlw	239
  4423  0056A2  6F90               	movwf	set_external_interrupt3@set_time& (0+255),b
  4424                           
  4425                           ;interrupt.c: 121: TMR1H = set_time >> 8;
  4426  0056A4  0100               	movlb	0	; () banked
  4427  0056A6  5191               	movf	(set_external_interrupt3@set_time+1)& (0+255),w,b
  4428  0056A8  6ECF               	movwf	4047,c	;volatile
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;interrupt.c: 122: TMR1L = set_time & 0b11111111;
  4432  0056AA  C090  FFCE         	movff	set_external_interrupt3@set_time,4046	;volatile
  4433  0056AE                     l6806:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;interrupt.c: 124: }
  4437                           ;interrupt.c: 126: if(process1 == 1){
  4438  0056AE  0101               	movlb	1	; () banked
  4439  0056B0  0550               	decf	_process1& (0+255),w,b	;volatile
  4440  0056B2  A4D8               	btfss	status,2,c
  4441  0056B4  0012               	return	
  4442                           
  4443                           ; BSR set to: 1
  4444                           ;interrupt.c: 127: TMR1ON = 1;
  4445  0056B6  80CD               	bsf	4045,0,c	;volatile
  4446  0056B8  0012               	return	
  4447  0056BA                     __end_of_set_external_interrupt3:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           indf2	equ	0xFDF
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _set_external_interrupt1 *****************
  4465 ;; Defined at:
  4466 ;;		line 85 in file "interrupt.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  time            2   14[BANK0 ] int 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  set_time        2   16[BANK0 ] unsigned int 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        4 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    7
  4487 ;; This function calls:
  4488 ;;		___awdiv
  4489 ;; This function is called by:
  4490 ;;		_main
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text2
  4495  0056BA                     __ptext2:
  4496                           	opt stack 0
  4497  0056BA                     _set_external_interrupt1:
  4498                           	opt stack 23
  4499                           
  4500                           ;interrupt.c: 87: unsigned int set_time = 65535 - (time*2/4);
  4501                           
  4502                           ; BSR set to: 1
  4503                           ;incstack = 0
  4504  0056BA  90D8               	bcf	status,0,c
  4505  0056BC  0100               	movlb	0	; () banked
  4506  0056BE  358E               	rlcf	set_external_interrupt1@time& (0+255),w,b
  4507  0056C0  0100               	movlb	0	; () banked
  4508  0056C2  6F86               	movwf	___awdiv@dividend& (0+255),b
  4509  0056C4  0100               	movlb	0	; () banked
  4510  0056C6  358F               	rlcf	(set_external_interrupt1@time+1)& (0+255),w,b
  4511  0056C8  0100               	movlb	0	; () banked
  4512  0056CA  6F87               	movwf	(___awdiv@dividend+1)& (0+255),b
  4513  0056CC  0E00               	movlw	0
  4514  0056CE  0100               	movlb	0	; () banked
  4515  0056D0  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4516  0056D2  0E04               	movlw	4
  4517  0056D4  6F88               	movwf	___awdiv@divisor& (0+255),b
  4518  0056D6  EC1E  F028         	call	___awdiv	;wreg free
  4519  0056DA  0100               	movlb	0	; () banked
  4520  0056DC  1F86               	comf	?___awdiv& (0+255),f,b
  4521  0056DE  0100               	movlb	0	; () banked
  4522  0056E0  1F87               	comf	(?___awdiv+1)& (0+255),f,b
  4523  0056E2  0100               	movlb	0	; () banked
  4524  0056E4  4B86               	infsnz	?___awdiv& (0+255),f,b
  4525  0056E6  2B87               	incf	(?___awdiv+1)& (0+255),f,b
  4526  0056E8  0EFF               	movlw	255
  4527  0056EA  0100               	movlb	0	; () banked
  4528  0056EC  2586               	addwf	?___awdiv& (0+255),w,b
  4529  0056EE  0100               	movlb	0	; () banked
  4530  0056F0  6F90               	movwf	set_external_interrupt1@set_time& (0+255),b
  4531  0056F2  0EFF               	movlw	255
  4532  0056F4  0100               	movlb	0	; () banked
  4533  0056F6  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4534  0056F8  0100               	movlb	0	; () banked
  4535  0056FA  6F91               	movwf	(set_external_interrupt1@set_time+1)& (0+255),b
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;interrupt.c: 89: TMR1H = set_time >> 8;
  4539  0056FC  0100               	movlb	0	; () banked
  4540  0056FE  5191               	movf	(set_external_interrupt1@set_time+1)& (0+255),w,b
  4541  005700  6ECF               	movwf	4047,c	;volatile
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;interrupt.c: 90: TMR1L = set_time & 0b11111111;
  4545  005702  C090  FFCE         	movff	set_external_interrupt1@set_time,4046	;volatile
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;interrupt.c: 91: TMR1ON = 1;
  4549  005706  80CD               	bsf	4045,0,c	;volatile
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;interrupt.c: 93: if(isr3 == 1){
  4553  005708  0100               	movlb	0	; () banked
  4554  00570A  05F0               	decf	_isr3& (0+255),w,b	;volatile
  4555  00570C  A4D8               	btfss	status,2,c
  4556  00570E  D00A               	goto	l6788
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;interrupt.c: 95: set_time = 65535 - (20000*2/4);
  4560  005710  0E18               	movlw	24
  4561  005712  0100               	movlb	0	; () banked
  4562  005714  6F91               	movwf	(set_external_interrupt1@set_time+1)& (0+255),b
  4563  005716  0EEF               	movlw	239
  4564  005718  6F90               	movwf	set_external_interrupt1@set_time& (0+255),b
  4565                           
  4566                           ;interrupt.c: 97: TMR3H = set_time >> 8;
  4567  00571A  0100               	movlb	0	; () banked
  4568  00571C  5191               	movf	(set_external_interrupt1@set_time+1)& (0+255),w,b
  4569  00571E  6EB3               	movwf	4019,c	;volatile
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;interrupt.c: 98: TMR3L = set_time & 0b11111111;
  4573  005720  C090  FFB2         	movff	set_external_interrupt1@set_time,4018	;volatile
  4574  005724                     l6788:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;interrupt.c: 100: }
  4578                           ;interrupt.c: 102: if(process3 == 1){
  4579  005724  0101               	movlb	1	; () banked
  4580  005726  054F               	decf	_process3& (0+255),w,b	;volatile
  4581  005728  A4D8               	btfss	status,2,c
  4582  00572A  0012               	return	
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;interrupt.c: 103: TMR3ON = 1;
  4586  00572C  80B1               	bsf	4017,0,c	;volatile
  4587  00572E  0012               	return	
  4588  005730                     __end_of_set_external_interrupt1:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           intcon2	equ	0xFF1
  4598                           postinc0	equ	0xFEE
  4599                           wreg	equ	0xFE8
  4600                           indf2	equ	0xFDF
  4601                           fsr2h	equ	0xFDA
  4602                           fsr2l	equ	0xFD9
  4603                           status	equ	0xFD8
  4604                           
  4605 ;; *************** function _readADC *****************
  4606 ;; Defined at:
  4607 ;;		line 35 in file "ADC.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  channel         1    wreg     unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  channel         1   70[BANK0 ] unsigned char 
  4612 ;;  i               1   66[BANK0 ] unsigned char 
  4613 ;;  a               3   67[BANK0 ] float 
  4614 ;;  volt            3   63[BANK0 ] float 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  3   60[BANK0 ] float 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4624 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;Total ram usage:       11 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    9
  4631 ;; This function calls:
  4632 ;;		___ftadd
  4633 ;;		___ftdiv
  4634 ;;		___ftmul
  4635 ;;		___lwtoft
  4636 ;;		_abs
  4637 ;;		_read
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text3
  4644  00442C                     __ptext3:
  4645                           	opt stack 0
  4646  00442C                     _readADC:
  4647                           	opt stack 21
  4648                           
  4649                           ; BSR set to: 1
  4650                           ;incstack = 0
  4651                           ;readADC@channel stored from wreg
  4652  00442C  0100               	movlb	0	; () banked
  4653  00442E  6FC6               	movwf	readADC@channel& (0+255),b
  4654                           
  4655                           ;ADC.c: 37: signed float a = 0;
  4656  004430  0E00               	movlw	0
  4657  004432  0100               	movlb	0	; () banked
  4658  004434  6FC3               	movwf	readADC@a& (0+255),b
  4659  004436  0E00               	movlw	0
  4660  004438  0100               	movlb	0	; () banked
  4661  00443A  6FC4               	movwf	(readADC@a+1)& (0+255),b
  4662  00443C  0E00               	movlw	0
  4663  00443E  0100               	movlb	0	; () banked
  4664  004440  6FC5               	movwf	(readADC@a+2)& (0+255),b
  4665                           
  4666                           ;ADC.c: 39: for(unsigned char i = 0; i < 25; i++){
  4667  004442  0E00               	movlw	0
  4668  004444  0100               	movlb	0	; () banked
  4669  004446  6FC2               	movwf	readADC@i& (0+255),b
  4670  004448                     l6812:
  4671                           
  4672                           ; BSR set to: 0
  4673  004448  0E18               	movlw	24
  4674  00444A  0100               	movlb	0	; () banked
  4675  00444C  65C2               	cpfsgt	readADC@i& (0+255),b
  4676  00444E  D001               	goto	l6816
  4677  004450  D022               	goto	l6824
  4678  004452                     l6816:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;ADC.c: 41: read(channel);
  4682  004452  0100               	movlb	0	; () banked
  4683  004454  51C6               	movf	readADC@channel& (0+255),w,b
  4684  004456  ECD5  F02E         	call	_read
  4685                           
  4686                           ;ADC.c: 42: a = a + ADRES;
  4687  00445A  CFC3 F088          	movff	4035,___lwtoft@c	;volatile
  4688  00445E  CFC4 F089          	movff	4036,___lwtoft@c+1	;volatile
  4689  004462  ECEB  F02E         	call	___lwtoft	;wreg free
  4690  004466  C088  F0AD         	movff	?___lwtoft,___ftadd@f1
  4691  00446A  C089  F0AE         	movff	?___lwtoft+1,___ftadd@f1+1
  4692  00446E  C08A  F0AF         	movff	?___lwtoft+2,___ftadd@f1+2
  4693  004472  C0C3  F0B0         	movff	readADC@a,___ftadd@f2
  4694  004476  C0C4  F0B1         	movff	readADC@a+1,___ftadd@f2+1
  4695  00447A  C0C5  F0B2         	movff	readADC@a+2,___ftadd@f2+2
  4696  00447E  ECA7  F01C         	call	___ftadd	;wreg free
  4697  004482  C0AD  F0C3         	movff	?___ftadd,readADC@a
  4698  004486  C0AE  F0C4         	movff	?___ftadd+1,readADC@a+1
  4699  00448A  C0AF  F0C5         	movff	?___ftadd+2,readADC@a+2
  4700                           
  4701                           ;ADC.c: 44: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4702  00448E  D000               	nop2		;2 cycle nop
  4703  004490  0100               	movlb	0	; () banked
  4704  004492  2BC2               	incf	readADC@i& (0+255),f,b
  4705  004494  D7D9               	goto	l6812
  4706  004496                     l6824:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;ADC.c: 45: }
  4710                           ;ADC.c: 47: a = a/25;
  4711  004496  C0C3  F0A3         	movff	readADC@a,___ftdiv@f1
  4712  00449A  C0C4  F0A4         	movff	readADC@a+1,___ftdiv@f1+1
  4713  00449E  C0C5  F0A5         	movff	readADC@a+2,___ftdiv@f1+2
  4714  0044A2  0E00               	movlw	0
  4715  0044A4  0100               	movlb	0	; () banked
  4716  0044A6  6FA6               	movwf	___ftdiv@f2& (0+255),b
  4717  0044A8  0EC8               	movlw	200
  4718  0044AA  0100               	movlb	0	; () banked
  4719  0044AC  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  4720  0044AE  0E41               	movlw	65
  4721  0044B0  0100               	movlb	0	; () banked
  4722  0044B2  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  4723  0044B4  ECC3  F022         	call	___ftdiv	;wreg free
  4724  0044B8  C0A3  F0C3         	movff	?___ftdiv,readADC@a
  4725  0044BC  C0A4  F0C4         	movff	?___ftdiv+1,readADC@a+1
  4726  0044C0  C0A5  F0C5         	movff	?___ftdiv+2,readADC@a+2
  4727                           
  4728                           ;ADC.c: 49: signed float volt = a*4.957152/1023;
  4729  0044C4  0EA1               	movlw	161
  4730  0044C6  0100               	movlb	0	; () banked
  4731  0044C8  6F97               	movwf	___ftmul@f2& (0+255),b
  4732  0044CA  0E9E               	movlw	158
  4733  0044CC  0100               	movlb	0	; () banked
  4734  0044CE  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  4735  0044D0  0E40               	movlw	64
  4736  0044D2  0100               	movlb	0	; () banked
  4737  0044D4  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  4738  0044D6  C0C3  F094         	movff	readADC@a,___ftmul@f1
  4739  0044DA  C0C4  F095         	movff	readADC@a+1,___ftmul@f1+1
  4740  0044DE  C0C5  F096         	movff	readADC@a+2,___ftmul@f1+2
  4741  0044E2  EC67  F021         	call	___ftmul	;wreg free
  4742  0044E6  C094  F0A3         	movff	?___ftmul,___ftdiv@f1
  4743  0044EA  C095  F0A4         	movff	?___ftmul+1,___ftdiv@f1+1
  4744  0044EE  C096  F0A5         	movff	?___ftmul+2,___ftdiv@f1+2
  4745  0044F2  0EC0               	movlw	192
  4746  0044F4  0100               	movlb	0	; () banked
  4747  0044F6  6FA6               	movwf	___ftdiv@f2& (0+255),b
  4748  0044F8  0E7F               	movlw	127
  4749  0044FA  0100               	movlb	0	; () banked
  4750  0044FC  6FA7               	movwf	(___ftdiv@f2+1)& (0+255),b
  4751  0044FE  0E44               	movlw	68
  4752  004500  0100               	movlb	0	; () banked
  4753  004502  6FA8               	movwf	(___ftdiv@f2+2)& (0+255),b
  4754  004504  ECC3  F022         	call	___ftdiv	;wreg free
  4755  004508  C0A3  F0BF         	movff	?___ftdiv,readADC@volt
  4756  00450C  C0A4  F0C0         	movff	?___ftdiv+1,readADC@volt+1
  4757  004510  C0A5  F0C1         	movff	?___ftdiv+2,readADC@volt+2
  4758                           
  4759                           ;ADC.c: 51: if(channel == 1 || channel == 2 || channel == 5 || channel == 6){
  4760  004514  0100               	movlb	0	; () banked
  4761  004516  05C6               	decf	readADC@channel& (0+255),w,b
  4762  004518  B4D8               	btfsc	status,2,c
  4763  00451A  D00F               	goto	l6834
  4764                           
  4765                           ; BSR set to: 0
  4766  00451C  0E02               	movlw	2
  4767  00451E  0100               	movlb	0	; () banked
  4768  004520  19C6               	xorwf	readADC@channel& (0+255),w,b
  4769  004522  B4D8               	btfsc	status,2,c
  4770  004524  D00A               	goto	l6834
  4771                           
  4772                           ; BSR set to: 0
  4773  004526  0E05               	movlw	5
  4774  004528  0100               	movlb	0	; () banked
  4775  00452A  19C6               	xorwf	readADC@channel& (0+255),w,b
  4776  00452C  B4D8               	btfsc	status,2,c
  4777  00452E  D005               	goto	l6834
  4778                           
  4779                           ; BSR set to: 0
  4780  004530  0E06               	movlw	6
  4781  004532  0100               	movlb	0	; () banked
  4782  004534  19C6               	xorwf	readADC@channel& (0+255),w,b
  4783  004536  A4D8               	btfss	status,2,c
  4784  004538  D01F               	goto	l6836
  4785  00453A                     l6834:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;ADC.c: 52: volt = abs(volt - 2.5);
  4789  00453A  C0BF  F0AD         	movff	readADC@volt,___ftadd@f1
  4790  00453E  C0C0  F0AE         	movff	readADC@volt+1,___ftadd@f1+1
  4791  004542  C0C1  F0AF         	movff	readADC@volt+2,___ftadd@f1+2
  4792  004546  0E00               	movlw	0
  4793  004548  0100               	movlb	0	; () banked
  4794  00454A  6FB0               	movwf	___ftadd@f2& (0+255),b
  4795  00454C  0E20               	movlw	32
  4796  00454E  0100               	movlb	0	; () banked
  4797  004550  6FB1               	movwf	(___ftadd@f2+1)& (0+255),b
  4798  004552  0EC0               	movlw	192
  4799  004554  0100               	movlb	0	; () banked
  4800  004556  6FB2               	movwf	(___ftadd@f2+2)& (0+255),b
  4801  004558  ECA7  F01C         	call	___ftadd	;wreg free
  4802  00455C  C0AD  F0B9         	movff	?___ftadd,abs@num
  4803  004560  C0AE  F0BA         	movff	?___ftadd+1,abs@num+1
  4804  004564  C0AF  F0BB         	movff	?___ftadd+2,abs@num+2
  4805  004568  EC39  F02C         	call	_abs	;wreg free
  4806  00456C  C0B9  F0BF         	movff	?_abs,readADC@volt
  4807  004570  C0BA  F0C0         	movff	?_abs+1,readADC@volt+1
  4808  004574  C0BB  F0C1         	movff	?_abs+2,readADC@volt+2
  4809  004578                     l6836:
  4810                           
  4811                           ;ADC.c: 53: }
  4812                           ;ADC.c: 55: return volt;
  4813  004578  C0BF  F0BC         	movff	readADC@volt,?_readADC
  4814  00457C  C0C0  F0BD         	movff	readADC@volt+1,?_readADC+1
  4815  004580  C0C1  F0BE         	movff	readADC@volt+2,?_readADC+2
  4816  004584  0012               	return	
  4817  004586                     __end_of_readADC:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           intcon	equ	0xFF2
  4826                           intcon2	equ	0xFF1
  4827                           postinc0	equ	0xFEE
  4828                           wreg	equ	0xFE8
  4829                           indf2	equ	0xFDF
  4830                           fsr2h	equ	0xFDA
  4831                           fsr2l	equ	0xFD9
  4832                           status	equ	0xFD8
  4833                           
  4834 ;; *************** function _read *****************
  4835 ;; Defined at:
  4836 ;;		line 27 in file "ADC.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  channel2        1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  channel2        1    1[BANK0 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    6
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_readADC
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text4
  4865  005DAA                     __ptext4:
  4866                           	opt stack 0
  4867  005DAA                     _read:
  4868                           	opt stack 23
  4869                           
  4870                           ;incstack = 0
  4871                           ;read@channel2 stored from wreg
  4872  005DAA  0100               	movlb	0	; () banked
  4873  005DAC  6F81               	movwf	read@channel2& (0+255),b
  4874                           
  4875                           ;ADC.c: 29: ADCON0 = ((channel2 << 2));
  4876  005DAE  0100               	movlb	0	; () banked
  4877  005DB0  4581               	rlncf	read@channel2& (0+255),w,b
  4878  005DB2  46E8               	rlncf	wreg,f,c
  4879  005DB4  0BFC               	andlw	252
  4880  005DB6  6EC2               	movwf	4034,c	;volatile
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;ADC.c: 30: ADON = 1;
  4884  005DB8  80C2               	bsf	4034,0,c	;volatile
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;ADC.c: 31: ADCON0bits.GO = 1;
  4888  005DBA  82C2               	bsf	4034,1,c	;volatile
  4889                           
  4890                           ;ADC.c: 32: while(ADCON0bits.GO_NOT_DONE){_delay((unsigned long)((2)*(8000000/4000.0)));
      +                          }
  4891  005DBC  D009               	goto	l5696
  4892  005DBE                     l5694:
  4893  005DBE  0E06               	movlw	6
  4894  005DC0  0100               	movlb	0	; () banked
  4895  005DC2  6F80               	movwf	??_read& (0+255),b
  4896  005DC4  0E30               	movlw	48
  4897  005DC6                     u9447:
  4898  005DC6  2EE8               	decfsz	wreg,f,c
  4899  005DC8  D7FE               	bra	u9447
  4900  005DCA  2F80               	decfsz	??_read& (0+255),f,b
  4901  005DCC  D7FC               	bra	u9447
  4902  005DCE  F000               	nop	
  4903  005DD0                     l5696:
  4904  005DD0  A2C2               	btfss	4034,1,c	;volatile
  4905  005DD2  0012               	return	
  4906  005DD4  D7F4               	goto	l5694
  4907  005DD6                     __end_of_read:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           intcon2	equ	0xFF1
  4917                           postinc0	equ	0xFEE
  4918                           wreg	equ	0xFE8
  4919                           indf2	equ	0xFDF
  4920                           fsr2h	equ	0xFDA
  4921                           fsr2l	equ	0xFD9
  4922                           status	equ	0xFD8
  4923                           
  4924 ;; *************** function _abs *****************
  4925 ;; Defined at:
  4926 ;;		line 20 in file "ADC.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  num             3   57[BANK0 ] float 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  3   57[BANK0 ] float 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4940 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;Total ram usage:        3 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    8
  4947 ;; This function calls:
  4948 ;;		___ftge
  4949 ;;		___ftmul
  4950 ;; This function is called by:
  4951 ;;		_readADC
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text5
  4956  005872                     __ptext5:
  4957                           	opt stack 0
  4958  005872                     _abs:
  4959                           	opt stack 21
  4960                           
  4961                           ;ADC.c: 21: if(num > 0){
  4962                           
  4963                           ;incstack = 0
  4964  005872  0E00               	movlw	0
  4965  005874  0100               	movlb	0	; () banked
  4966  005876  6F80               	movwf	___ftge@ff1& (0+255),b
  4967  005878  0E00               	movlw	0
  4968  00587A  0100               	movlb	0	; () banked
  4969  00587C  6F81               	movwf	(___ftge@ff1+1)& (0+255),b
  4970  00587E  0E00               	movlw	0
  4971  005880  0100               	movlb	0	; () banked
  4972  005882  6F82               	movwf	(___ftge@ff1+2)& (0+255),b
  4973  005884  C0B9  F083         	movff	abs@num,___ftge@ff2
  4974  005888  C0BA  F084         	movff	abs@num+1,___ftge@ff2+1
  4975  00588C  C0BB  F085         	movff	abs@num+2,___ftge@ff2+2
  4976  005890  ECBA  F027         	call	___ftge	;wreg free
  4977  005894  0100               	movlb	0	; () banked
  4978  005896  B0D8               	btfsc	status,0,c
  4979  005898  D007               	goto	l5684
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;ADC.c: 22: return num;
  4983  00589A  C0B9  F0B9         	movff	abs@num,?_abs
  4984  00589E  C0BA  F0BA         	movff	abs@num+1,?_abs+1
  4985  0058A2  C0BB  F0BB         	movff	abs@num+2,?_abs+2
  4986  0058A6  0012               	return	
  4987  0058A8                     l5684:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;ADC.c: 23: }
  4991                           ;ADC.c: 24: return (-1)*num;
  4992  0058A8  C0B9  F094         	movff	abs@num,___ftmul@f1
  4993  0058AC  C0BA  F095         	movff	abs@num+1,___ftmul@f1+1
  4994  0058B0  C0BB  F096         	movff	abs@num+2,___ftmul@f1+2
  4995  0058B4  0E00               	movlw	0
  4996  0058B6  0100               	movlb	0	; () banked
  4997  0058B8  6F97               	movwf	___ftmul@f2& (0+255),b
  4998  0058BA  0E80               	movlw	128
  4999  0058BC  0100               	movlb	0	; () banked
  5000  0058BE  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  5001  0058C0  0EBF               	movlw	191
  5002  0058C2  0100               	movlb	0	; () banked
  5003  0058C4  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  5004  0058C6  EC67  F021         	call	___ftmul	;wreg free
  5005  0058CA  C094  F0B9         	movff	?___ftmul,?_abs
  5006  0058CE  C095  F0BA         	movff	?___ftmul+1,?_abs+1
  5007  0058D2  C096  F0BB         	movff	?___ftmul+2,?_abs+2
  5008  0058D6  0012               	return	
  5009  0058D8                     __end_of_abs:
  5010                           	opt stack 0
  5011                           tblptru	equ	0xFF8
  5012                           tblptrh	equ	0xFF7
  5013                           tblptrl	equ	0xFF6
  5014                           tablat	equ	0xFF5
  5015                           prodh	equ	0xFF4
  5016                           prodl	equ	0xFF3
  5017                           intcon	equ	0xFF2
  5018                           intcon2	equ	0xFF1
  5019                           postinc0	equ	0xFEE
  5020                           wreg	equ	0xFE8
  5021                           indf2	equ	0xFDF
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function ___lwtoft *****************
  5027 ;; Defined at:
  5028 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  c               2    8[BANK0 ] unsigned int 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  3    8[BANK0 ] float 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;Total ram usage:        3 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    7
  5049 ;; This function calls:
  5050 ;;		___ftpack
  5051 ;; This function is called by:
  5052 ;;		_readADC
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text6
  5057  005DD6                     __ptext6:
  5058                           	opt stack 0
  5059  005DD6                     ___lwtoft:
  5060                           	opt stack 22
  5061                           
  5062                           ;incstack = 0
  5063  005DD6  C088  F080         	movff	___lwtoft@c,___ftpack@arg
  5064  005DDA  C089  F081         	movff	___lwtoft@c+1,___ftpack@arg+1
  5065  005DDE  0100               	movlb	0	; () banked
  5066  005DE0  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
  5067  005DE2  0E8E               	movlw	142
  5068  005DE4  0100               	movlb	0	; () banked
  5069  005DE6  6F83               	movwf	___ftpack@exp& (0+255),b
  5070  005DE8  0E00               	movlw	0
  5071  005DEA  0100               	movlb	0	; () banked
  5072  005DEC  6F84               	movwf	___ftpack@sign& (0+255),b
  5073  005DEE  ECCD  F025         	call	___ftpack	;wreg free
  5074  005DF2  C080  F088         	movff	?___ftpack,?___lwtoft
  5075  005DF6  C081  F089         	movff	?___ftpack+1,?___lwtoft+1
  5076  005DFA  C082  F08A         	movff	?___ftpack+2,?___lwtoft+2
  5077  005DFE  0012               	return	
  5078  005E00                     __end_of___lwtoft:
  5079                           	opt stack 0
  5080                           tblptru	equ	0xFF8
  5081                           tblptrh	equ	0xFF7
  5082                           tblptrl	equ	0xFF6
  5083                           tablat	equ	0xFF5
  5084                           prodh	equ	0xFF4
  5085                           prodl	equ	0xFF3
  5086                           intcon	equ	0xFF2
  5087                           intcon2	equ	0xFF1
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           indf2	equ	0xFDF
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function ___ftdiv *****************
  5096 ;; Defined at:
  5097 ;;		line 54 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  f1              3   35[BANK0 ] float 
  5100 ;;  f2              3   38[BANK0 ] float 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  f3              3   45[BANK0 ] float 
  5103 ;;  sign            1   49[BANK0 ] unsigned char 
  5104 ;;  exp             1   48[BANK0 ] unsigned char 
  5105 ;;  cntr            1   44[BANK0 ] unsigned char 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  3   35[BANK0 ] float 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5115 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;Total ram usage:       15 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    7
  5122 ;; This function calls:
  5123 ;;		___ftpack
  5124 ;; This function is called by:
  5125 ;;		_readADC
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text7
  5130  004586                     __ptext7:
  5131                           	opt stack 0
  5132  004586                     ___ftdiv:
  5133                           	opt stack 22
  5134                           
  5135                           ;incstack = 0
  5136  004586  C0A5  F0A9         	movff	___ftdiv@f1+2,??___ftdiv
  5137  00458A  0100               	movlb	0	; () banked
  5138  00458C  6BAA               	clrf	(??___ftdiv+1)& (0+255),b
  5139  00458E  6BAB               	clrf	(??___ftdiv+2)& (0+255),b
  5140  004590  0100               	movlb	0	; () banked
  5141  004592  35A4               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5142  004594  0100               	movlb	0	; () banked
  5143  004596  37A9               	rlcf	??___ftdiv& (0+255),f,b
  5144  004598  E301               	bnc	u6451
  5145  00459A  81AA               	bsf	(??___ftdiv+1)& (0+255),0,b
  5146  00459C                     u6451:
  5147  00459C  0100               	movlb	0	; () banked
  5148  00459E  51A9               	movf	??___ftdiv& (0+255),w,b
  5149  0045A0  0100               	movlb	0	; () banked
  5150  0045A2  6FB0               	movwf	___ftdiv@exp& (0+255),b
  5151  0045A4  0100               	movlb	0	; () banked
  5152  0045A6  51B0               	movf	___ftdiv@exp& (0+255),w,b
  5153  0045A8  A4D8               	btfss	status,2,c
  5154  0045AA  D00A               	goto	l5900
  5155                           
  5156                           ; BSR set to: 0
  5157  0045AC  0E00               	movlw	0
  5158  0045AE  0100               	movlb	0	; () banked
  5159  0045B0  6FA3               	movwf	?___ftdiv& (0+255),b
  5160  0045B2  0E00               	movlw	0
  5161  0045B4  0100               	movlb	0	; () banked
  5162  0045B6  6FA4               	movwf	(?___ftdiv+1)& (0+255),b
  5163  0045B8  0E00               	movlw	0
  5164  0045BA  0100               	movlb	0	; () banked
  5165  0045BC  6FA5               	movwf	(?___ftdiv+2)& (0+255),b
  5166                           
  5167                           ; BSR set to: 0
  5168  0045BE  0012               	return	
  5169  0045C0                     l5900:
  5170                           
  5171                           ; BSR set to: 0
  5172  0045C0  C0A8  F0A9         	movff	___ftdiv@f2+2,??___ftdiv
  5173  0045C4  0100               	movlb	0	; () banked
  5174  0045C6  6BAA               	clrf	(??___ftdiv+1)& (0+255),b
  5175  0045C8  6BAB               	clrf	(??___ftdiv+2)& (0+255),b
  5176  0045CA  0100               	movlb	0	; () banked
  5177  0045CC  35A7               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5178  0045CE  0100               	movlb	0	; () banked
  5179  0045D0  37A9               	rlcf	??___ftdiv& (0+255),f,b
  5180  0045D2  E301               	bnc	u6471
  5181  0045D4  81AA               	bsf	(??___ftdiv+1)& (0+255),0,b
  5182  0045D6                     u6471:
  5183  0045D6  0100               	movlb	0	; () banked
  5184  0045D8  51A9               	movf	??___ftdiv& (0+255),w,b
  5185  0045DA  0100               	movlb	0	; () banked
  5186  0045DC  6FB1               	movwf	___ftdiv@sign& (0+255),b
  5187  0045DE  0100               	movlb	0	; () banked
  5188  0045E0  51B1               	movf	___ftdiv@sign& (0+255),w,b
  5189  0045E2  A4D8               	btfss	status,2,c
  5190  0045E4  D00A               	goto	l5906
  5191                           
  5192                           ; BSR set to: 0
  5193  0045E6  0E00               	movlw	0
  5194  0045E8  0100               	movlb	0	; () banked
  5195  0045EA  6FA3               	movwf	?___ftdiv& (0+255),b
  5196  0045EC  0E00               	movlw	0
  5197  0045EE  0100               	movlb	0	; () banked
  5198  0045F0  6FA4               	movwf	(?___ftdiv+1)& (0+255),b
  5199  0045F2  0E00               	movlw	0
  5200  0045F4  0100               	movlb	0	; () banked
  5201  0045F6  6FA5               	movwf	(?___ftdiv+2)& (0+255),b
  5202                           
  5203                           ; BSR set to: 0
  5204  0045F8  0012               	return	
  5205  0045FA                     l5906:
  5206                           
  5207                           ; BSR set to: 0
  5208  0045FA  0E00               	movlw	0
  5209  0045FC  0100               	movlb	0	; () banked
  5210  0045FE  6FAD               	movwf	___ftdiv@f3& (0+255),b
  5211  004600  0E00               	movlw	0
  5212  004602  0100               	movlb	0	; () banked
  5213  004604  6FAE               	movwf	(___ftdiv@f3+1)& (0+255),b
  5214  004606  0E00               	movlw	0
  5215  004608  0100               	movlb	0	; () banked
  5216  00460A  6FAF               	movwf	(___ftdiv@f3+2)& (0+255),b
  5217                           
  5218                           ; BSR set to: 0
  5219  00460C  0100               	movlb	0	; () banked
  5220  00460E  51B1               	movf	___ftdiv@sign& (0+255),w,b
  5221  004610  0F89               	addlw	137
  5222  004612  0100               	movlb	0	; () banked
  5223  004614  5FB0               	subwf	___ftdiv@exp& (0+255),f,b
  5224                           
  5225                           ; BSR set to: 0
  5226  004616  C0A5  F0B1         	movff	___ftdiv@f1+2,___ftdiv@sign
  5227                           
  5228                           ; BSR set to: 0
  5229  00461A  0100               	movlb	0	; () banked
  5230  00461C  51A8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5231  00461E  0100               	movlb	0	; () banked
  5232  004620  1BB1               	xorwf	___ftdiv@sign& (0+255),f,b
  5233                           
  5234                           ; BSR set to: 0
  5235  004622  0E80               	movlw	128
  5236  004624  0100               	movlb	0	; () banked
  5237  004626  17B1               	andwf	___ftdiv@sign& (0+255),f,b
  5238                           
  5239                           ; BSR set to: 0
  5240  004628  0100               	movlb	0	; () banked
  5241  00462A  8FA4               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5242                           
  5243                           ; BSR set to: 0
  5244  00462C  0EFF               	movlw	255
  5245  00462E  0100               	movlb	0	; () banked
  5246  004630  17A3               	andwf	___ftdiv@f1& (0+255),f,b
  5247  004632  0EFF               	movlw	255
  5248  004634  0100               	movlb	0	; () banked
  5249  004636  17A4               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5250  004638  0E00               	movlw	0
  5251  00463A  0100               	movlb	0	; () banked
  5252  00463C  17A5               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5253                           
  5254                           ; BSR set to: 0
  5255  00463E  0100               	movlb	0	; () banked
  5256  004640  8FA7               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5257                           
  5258                           ; BSR set to: 0
  5259  004642  0EFF               	movlw	255
  5260  004644  0100               	movlb	0	; () banked
  5261  004646  17A6               	andwf	___ftdiv@f2& (0+255),f,b
  5262  004648  0EFF               	movlw	255
  5263  00464A  0100               	movlb	0	; () banked
  5264  00464C  17A7               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5265  00464E  0E00               	movlw	0
  5266  004650  0100               	movlb	0	; () banked
  5267  004652  17A8               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5268                           
  5269                           ; BSR set to: 0
  5270  004654  0E18               	movlw	24
  5271  004656  0100               	movlb	0	; () banked
  5272  004658  6FAC               	movwf	___ftdiv@cntr& (0+255),b
  5273  00465A                     l5926:
  5274                           
  5275                           ; BSR set to: 0
  5276  00465A  0100               	movlb	0	; () banked
  5277  00465C  90D8               	bcf	status,0,c
  5278  00465E  37AD               	rlcf	___ftdiv@f3& (0+255),f,b
  5279  004660  37AE               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5280  004662  37AF               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5281                           
  5282                           ; BSR set to: 0
  5283  004664  0100               	movlb	0	; () banked
  5284  004666  51A6               	movf	___ftdiv@f2& (0+255),w,b
  5285  004668  0100               	movlb	0	; () banked
  5286  00466A  5DA3               	subwf	___ftdiv@f1& (0+255),w,b
  5287  00466C  0100               	movlb	0	; () banked
  5288  00466E  51A7               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5289  004670  0100               	movlb	0	; () banked
  5290  004672  59A4               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5291  004674  0100               	movlb	0	; () banked
  5292  004676  51A8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5293  004678  0100               	movlb	0	; () banked
  5294  00467A  59A5               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5295  00467C  A0D8               	btfss	status,0,c
  5296  00467E  D00E               	goto	l1185
  5297                           
  5298                           ; BSR set to: 0
  5299  004680  0100               	movlb	0	; () banked
  5300  004682  51A6               	movf	___ftdiv@f2& (0+255),w,b
  5301  004684  0100               	movlb	0	; () banked
  5302  004686  5FA3               	subwf	___ftdiv@f1& (0+255),f,b
  5303  004688  0100               	movlb	0	; () banked
  5304  00468A  51A7               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5305  00468C  0100               	movlb	0	; () banked
  5306  00468E  5BA4               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5307  004690  0100               	movlb	0	; () banked
  5308  004692  51A8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5309  004694  0100               	movlb	0	; () banked
  5310  004696  5BA5               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5311                           
  5312                           ; BSR set to: 0
  5313  004698  0100               	movlb	0	; () banked
  5314  00469A  81AD               	bsf	___ftdiv@f3& (0+255),0,b
  5315  00469C                     l1185:
  5316                           
  5317                           ; BSR set to: 0
  5318  00469C  0100               	movlb	0	; () banked
  5319  00469E  90D8               	bcf	status,0,c
  5320  0046A0  37A3               	rlcf	___ftdiv@f1& (0+255),f,b
  5321  0046A2  37A4               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5322  0046A4  37A5               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5323                           
  5324                           ; BSR set to: 0
  5325  0046A6  0100               	movlb	0	; () banked
  5326  0046A8  2FAC               	decfsz	___ftdiv@cntr& (0+255),f,b
  5327  0046AA  D7D7               	goto	l5926
  5328                           
  5329                           ; BSR set to: 0
  5330                           
  5331                           ; BSR set to: 0
  5332  0046AC  C0AD  F080         	movff	___ftdiv@f3,___ftpack@arg
  5333  0046B0  C0AE  F081         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5334  0046B4  C0AF  F082         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5335  0046B8  C0B0  F083         	movff	___ftdiv@exp,___ftpack@exp
  5336  0046BC  C0B1  F084         	movff	___ftdiv@sign,___ftpack@sign
  5337  0046C0  ECCD  F025         	call	___ftpack	;wreg free
  5338  0046C4  C080  F0A3         	movff	?___ftpack,?___ftdiv
  5339  0046C8  C081  F0A4         	movff	?___ftpack+1,?___ftdiv+1
  5340  0046CC  C082  F0A5         	movff	?___ftpack+2,?___ftdiv+2
  5341  0046D0  0012               	return	
  5342  0046D2                     __end_of___ftdiv:
  5343                           	opt stack 0
  5344                           tblptru	equ	0xFF8
  5345                           tblptrh	equ	0xFF7
  5346                           tblptrl	equ	0xFF6
  5347                           tablat	equ	0xFF5
  5348                           prodh	equ	0xFF4
  5349                           prodl	equ	0xFF3
  5350                           intcon	equ	0xFF2
  5351                           intcon2	equ	0xFF1
  5352                           postinc0	equ	0xFEE
  5353                           wreg	equ	0xFE8
  5354                           indf2	equ	0xFDF
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _printf *****************
  5360 ;; Defined at:
  5361 ;;		line 464 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  f               2   63[BANK0 ] PTR const unsigned char 
  5364 ;;		 -> STR_27(6), STR_26(7), STR_25(7), STR_24(8), 
  5365 ;;		 -> STR_23(11), STR_22(9), STR_21(10), STR_20(12), 
  5366 ;;		 -> STR_19(5), STR_18(5), STR_17(7), STR_16(5), 
  5367 ;;		 -> STR_15(12), STR_14(8), STR_13(11), STR_12(9), 
  5368 ;;		 -> STR_11(10), STR_10(9), STR_9(5), STR_8(9), 
  5369 ;;		 -> STR_7(5), STR_6(11), STR_5(16), STR_4(7), 
  5370 ;;		 -> STR_3(16), STR_2(8), STR_1(16), 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  idx             1   80[BANK0 ] unsigned char 
  5373 ;;  val             4   93[BANK0 ] unsigned long 
  5374 ;;  tmpval          4   85[BANK0 ] struct .
  5375 ;;  fval            3   99[BANK0 ] struct .
  5376 ;;  cp              3    0        PTR const unsigned char 
  5377 ;;  flag            2   97[BANK0 ] unsigned short 
  5378 ;;  exp             2   91[BANK0 ] int 
  5379 ;;  width           2   89[BANK0 ] int 
  5380 ;;  prec            2   83[BANK0 ] int 
  5381 ;;  ap              2   81[BANK0 ] PTR void [1]
  5382 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5383 ;;  len             2    0        unsigned int 
  5384 ;;  c               1  102[BANK0 ] char 
  5385 ;;  d               1    0        unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  2   63[BANK0 ] int 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5395 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;Total ram usage:       40 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    9
  5402 ;; This function calls:
  5403 ;;		___awdiv
  5404 ;;		___ftadd
  5405 ;;		___ftge
  5406 ;;		___ftmul
  5407 ;;		___ftneg
  5408 ;;		___ftsub
  5409 ;;		___fttol
  5410 ;;		___lldiv
  5411 ;;		___llmod
  5412 ;;		___lltoft
  5413 ;;		___wmul
  5414 ;;		__div_to_l_
  5415 ;;		__tdiv_to_l_
  5416 ;;		_fround
  5417 ;;		_isdigit
  5418 ;;		_putch
  5419 ;;		_scale
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text8
  5426  000D96                     __ptext8:
  5427                           	opt stack 0
  5428  000D96                     _printf:
  5429                           	opt stack 21
  5430                           
  5431                           ;doprnt.c: 466: va_list ap;
  5432                           ;doprnt.c: 499: signed char c;
  5433                           ;doprnt.c: 501: int width;
  5434                           ;doprnt.c: 504: int prec;
  5435                           ;doprnt.c: 508: unsigned short flag;
  5436                           ;doprnt.c: 515: char d;
  5437                           ;doprnt.c: 516: double fval;
  5438                           ;doprnt.c: 517: int exp;
  5439                           ;doprnt.c: 523: union {
  5440                           ;doprnt.c: 524: unsigned long vd;
  5441                           ;doprnt.c: 525: double integ;
  5442                           ;doprnt.c: 526: } tmpval;
  5443                           ;doprnt.c: 528: unsigned long val;
  5444                           ;doprnt.c: 529: unsigned len;
  5445                           ;doprnt.c: 530: const char * cp;
  5446                           ;doprnt.c: 533: *ap = __va_start();
  5447                           
  5448                           ;incstack = 0
  5449  000D96  0EC1               	movlw	low (?_printf+2)
  5450  000D98  0100               	movlb	0	; () banked
  5451  000D9A  6FD1               	movwf	printf@ap& (0+255),b
  5452  000D9C  0E00               	movlw	high (?_printf+2)
  5453  000D9E  0100               	movlb	0	; () banked
  5454  000DA0  6FD2               	movwf	(printf@ap+1)& (0+255),b
  5455                           
  5456                           ;doprnt.c: 536: while(c = *f++) {
  5457  000DA2  EF96  F00C         	goto	l6756
  5458  000DA6                     l6470:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;doprnt.c: 538: if(c != '%')
  5462  000DA6  0E25               	movlw	37
  5463  000DA8  0100               	movlb	0	; () banked
  5464  000DAA  19E6               	xorwf	printf@c& (0+255),w,b
  5465  000DAC  B4D8               	btfsc	status,2,c
  5466  000DAE  D006               	goto	l6474
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;doprnt.c: 540: {
  5470                           ;doprnt.c: 541: (putch(c) );
  5471  000DB0  0100               	movlb	0	; () banked
  5472  000DB2  51E6               	movf	printf@c& (0+255),w,b
  5473  000DB4  EC78  F02F         	call	_putch
  5474                           
  5475                           ;doprnt.c: 542: continue;
  5476  000DB8  EF96  F00C         	goto	l6756
  5477  000DBC                     l6474:
  5478                           
  5479                           ;doprnt.c: 543: }
  5480                           ;doprnt.c: 546: width = 0;
  5481  000DBC  0E00               	movlw	0
  5482  000DBE  0100               	movlb	0	; () banked
  5483  000DC0  6FDA               	movwf	(printf@width+1)& (0+255),b
  5484  000DC2  0E00               	movlw	0
  5485  000DC4  6FD9               	movwf	printf@width& (0+255),b
  5486                           
  5487                           ;doprnt.c: 548: flag = 0;
  5488  000DC6  0E00               	movlw	0
  5489  000DC8  0100               	movlb	0	; () banked
  5490  000DCA  6FE2               	movwf	(printf@flag+1)& (0+255),b
  5491  000DCC  0E00               	movlw	0
  5492  000DCE  6FE1               	movwf	printf@flag& (0+255),b
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;doprnt.c: 551: switch(*f) {
  5496                           
  5497                           ;doprnt.c: 550: for(;;) {
  5498  000DD0  D005               	goto	l6480
  5499  000DD2                     l6476:
  5500                           
  5501                           ;doprnt.c: 580: flag |= 0x04;
  5502  000DD2  0100               	movlb	0	; () banked
  5503  000DD4  85E1               	bsf	printf@flag& (0+255),2,b
  5504                           
  5505                           ;doprnt.c: 581: f++;
  5506  000DD6  0100               	movlb	0	; () banked
  5507  000DD8  4BBF               	infsnz	printf@f& (0+255),f,b
  5508  000DDA  2BC0               	incf	(printf@f+1)& (0+255),f,b
  5509  000DDC                     l6480:
  5510  000DDC  C0BF  FFF6         	movff	printf@f,tblptrl
  5511  000DE0  C0C0  FFF7         	movff	printf@f+1,tblptrh
  5512  000DE4                     	if	0	;tblptru may be non-zero
  5513  000DE4                     	endif
  5514  000DE4                     	if	0	;tblptru may be non-zero
  5515  000DE4                     	endif
  5516  000DE4  0008               	tblrd		*
  5517  000DE6  50F5               	movf	tablat,w,c
  5518                           
  5519                           ; Switch size 1, requested type "space"
  5520                           ; Number of cases is 1, Range of values is 48 to 48
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte            4     3 (average)
  5524                           ;	Chosen strategy is simple_byte
  5525  000DE8  0A30               	xorlw	48	; case 48
  5526  000DEA  B4D8               	btfsc	status,2,c
  5527  000DEC  D7F2               	goto	l6476
  5528                           
  5529                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5530                           
  5531                           ;doprnt.c: 586: }
  5532                           
  5533                           ;doprnt.c: 585: break;
  5534  000DEE  C0BF  FFF6         	movff	printf@f,tblptrl
  5535  000DF2  C0C0  FFF7         	movff	printf@f+1,tblptrh
  5536  000DF6                     	if	0	;tblptru may be non-zero
  5537  000DF6                     	endif
  5538  000DF6                     	if	0	;tblptru may be non-zero
  5539  000DF6                     	endif
  5540  000DF6  0008               	tblrd		*
  5541  000DF8  50F5               	movf	tablat,w,c
  5542  000DFA  EC00  F02F         	call	_isdigit
  5543  000DFE  A0D8               	btfss	status,0,c
  5544  000E00  D047               	goto	l6500
  5545                           
  5546                           ;doprnt.c: 598: width = 0;
  5547  000E02  0E00               	movlw	0
  5548  000E04  0100               	movlb	0	; () banked
  5549  000E06  6FDA               	movwf	(printf@width+1)& (0+255),b
  5550  000E08  0E00               	movlw	0
  5551  000E0A  6FD9               	movwf	printf@width& (0+255),b
  5552  000E0C                     l6486:
  5553                           
  5554                           ;doprnt.c: 600: width *= 10;
  5555  000E0C  C0D9  F08E         	movff	printf@width,___wmul@multiplier
  5556  000E10  C0DA  F08F         	movff	printf@width+1,___wmul@multiplier+1
  5557  000E14  0E00               	movlw	0
  5558  000E16  0100               	movlb	0	; () banked
  5559  000E18  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5560  000E1A  0E0A               	movlw	10
  5561  000E1C  6F90               	movwf	___wmul@multiplicand& (0+255),b
  5562  000E1E  EC59  F02E         	call	___wmul	;wreg free
  5563  000E22  C08E  F0D9         	movff	?___wmul,printf@width
  5564  000E26  C08F  F0DA         	movff	?___wmul+1,printf@width+1
  5565                           
  5566                           ;doprnt.c: 601: width += *f++ - '0';
  5567  000E2A  0ED0               	movlw	208
  5568  000E2C  0100               	movlb	0	; () banked
  5569  000E2E  6FC7               	movwf	??_printf& (0+255),b
  5570  000E30  0EFF               	movlw	255
  5571  000E32  0100               	movlb	0	; () banked
  5572  000E34  6FC8               	movwf	(??_printf+1)& (0+255),b
  5573  000E36  C0BF  FFF6         	movff	printf@f,tblptrl
  5574  000E3A  C0C0  FFF7         	movff	printf@f+1,tblptrh
  5575  000E3E                     	if	0	;tblptru may be non-zero
  5576  000E3E                     	endif
  5577  000E3E                     	if	0	;tblptru may be non-zero
  5578  000E3E                     	endif
  5579  000E3E  0008               	tblrd		*
  5580  000E40  50F5               	movf	tablat,w,c
  5581  000E42  0100               	movlb	0	; () banked
  5582  000E44  6FC9               	movwf	(??_printf+2)& (0+255),b
  5583  000E46  6BCA               	clrf	(??_printf+3)& (0+255),b
  5584  000E48  0100               	movlb	0	; () banked
  5585  000E4A  51C7               	movf	??_printf& (0+255),w,b
  5586  000E4C  0100               	movlb	0	; () banked
  5587  000E4E  27C9               	addwf	(??_printf+2)& (0+255),f,b
  5588  000E50  0100               	movlb	0	; () banked
  5589  000E52  51C8               	movf	(??_printf+1)& (0+255),w,b
  5590  000E54  0100               	movlb	0	; () banked
  5591  000E56  23CA               	addwfc	(??_printf+3)& (0+255),f,b
  5592  000E58  0100               	movlb	0	; () banked
  5593  000E5A  51C9               	movf	(??_printf+2)& (0+255),w,b
  5594  000E5C  0100               	movlb	0	; () banked
  5595  000E5E  27D9               	addwf	printf@width& (0+255),f,b
  5596  000E60  0100               	movlb	0	; () banked
  5597  000E62  51CA               	movf	(??_printf+3)& (0+255),w,b
  5598  000E64  0100               	movlb	0	; () banked
  5599  000E66  23DA               	addwfc	(printf@width+1)& (0+255),f,b
  5600                           
  5601                           ; BSR set to: 0
  5602  000E68  0100               	movlb	0	; () banked
  5603  000E6A  4BBF               	infsnz	printf@f& (0+255),f,b
  5604  000E6C  2BC0               	incf	(printf@f+1)& (0+255),f,b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5608  000E6E  C0BF  FFF6         	movff	printf@f,tblptrl
  5609  000E72  C0C0  FFF7         	movff	printf@f+1,tblptrh
  5610  000E76                     	if	0	;tblptru may be non-zero
  5611  000E76                     	endif
  5612  000E76                     	if	0	;tblptru may be non-zero
  5613  000E76                     	endif
  5614  000E76  0008               	tblrd		*
  5615  000E78  50F5               	movf	tablat,w,c
  5616  000E7A  EC00  F02F         	call	_isdigit
  5617  000E7E  A0D8               	btfss	status,0,c
  5618  000E80  D007               	goto	l6500
  5619  000E82  D7C4               	goto	l6486
  5620  000E84                     l6494:
  5621                           
  5622                           ;doprnt.c: 663: flag |= 0x400;
  5623  000E84  0100               	movlb	0	; () banked
  5624  000E86  85E2               	bsf	(printf@flag+1)& (0+255),2,b
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;doprnt.c: 698: case 'i':
  5628                           ;doprnt.c: 699: break;
  5629                           
  5630                           ; BSR set to: 0
  5631                           
  5632                           ;doprnt.c: 697: case 'd':
  5633                           
  5634                           ;doprnt.c: 664: break;
  5635  000E88  D020               	goto	l6502
  5636  000E8A                     l6496:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;doprnt.c: 721: flag |= 0x80;
  5640  000E8A  0100               	movlb	0	; () banked
  5641  000E8C  8FE1               	bsf	printf@flag& (0+255),7,b
  5642                           
  5643                           ;doprnt.c: 723: break;
  5644  000E8E  D01D               	goto	l6502
  5645  000E90                     l6500:
  5646  000E90  C0BF  FFF6         	movff	printf@f,tblptrl
  5647  000E94  C0C0  FFF7         	movff	printf@f+1,tblptrh
  5648  000E98  0100               	movlb	0	; () banked
  5649  000E9A  4BBF               	infsnz	printf@f& (0+255),f,b
  5650  000E9C  2BC0               	incf	(printf@f+1)& (0+255),f,b
  5651  000E9E                     	if	0	;tblptru may be non-zero
  5652  000E9E                     	endif
  5653  000E9E                     	if	0	;tblptru may be non-zero
  5654  000E9E                     	endif
  5655  000E9E  0008               	tblrd		*
  5656  000EA0  CFF5 F0E6          	movff	tablat,printf@c
  5657  000EA4  0100               	movlb	0	; () banked
  5658  000EA6  51E6               	movf	printf@c& (0+255),w,b
  5659                           
  5660                           ; Switch size 1, requested type "space"
  5661                           ; Number of cases is 5, Range of values is 0 to 120
  5662                           ; switch strategies available:
  5663                           ; Name         Instructions Cycles
  5664                           ; simple_byte           16     9 (average)
  5665                           ;	Chosen strategy is simple_byte
  5666  000EA8  0A00               	xorlw	0	; case 0
  5667  000EAA  B4D8               	btfsc	status,2,c
  5668  000EAC  0012               	return	
  5669  000EAE  0A64               	xorlw	100	; case 100
  5670  000EB0  B4D8               	btfsc	status,2,c
  5671  000EB2  D00B               	goto	l6502
  5672  000EB4  0A02               	xorlw	2	; case 102
  5673  000EB6  B4D8               	btfsc	status,2,c
  5674  000EB8  D7E5               	goto	l6494
  5675  000EBA  0A0F               	xorlw	15	; case 105
  5676  000EBC  B4D8               	btfsc	status,2,c
  5677  000EBE  D005               	goto	l6502
  5678  000EC0  0A11               	xorlw	17	; case 120
  5679  000EC2  B4D8               	btfsc	status,2,c
  5680  000EC4  D7E2               	goto	l6496
  5681  000EC6  EF96  F00C         	goto	l6756
  5682  000ECA                     l6502:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;doprnt.c: 825: if(flag & (0x700)) {
  5686  000ECA  0E07               	movlw	7
  5687  000ECC  0100               	movlb	0	; () banked
  5688  000ECE  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  5689  000ED0  B4D8               	btfsc	status,2,c
  5690  000ED2  D37A               	goto	l803
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;doprnt.c: 829: prec = 6;
  5694  000ED4  0E00               	movlw	0
  5695  000ED6  0100               	movlb	0	; () banked
  5696  000ED8  6FD4               	movwf	(printf@prec+1)& (0+255),b
  5697  000EDA  0E06               	movlw	6
  5698  000EDC  6FD3               	movwf	printf@prec& (0+255),b
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5702  000EDE  C0D1  FFD9         	movff	printf@ap,fsr2l
  5703  000EE2  C0D2  FFDA         	movff	printf@ap+1,fsr2h
  5704  000EE6  CFDE F0E3          	movff	postinc2,printf@fval
  5705  000EEA  CFDE F0E4          	movff	postinc2,printf@fval+1
  5706  000EEE  CFDD F0E5          	movff	postdec2,printf@fval+2
  5707                           
  5708                           ; BSR set to: 0
  5709  000EF2  0E03               	movlw	3
  5710  000EF4  0100               	movlb	0	; () banked
  5711  000EF6  27D1               	addwf	printf@ap& (0+255),f,b
  5712  000EF8  0E00               	movlw	0
  5713  000EFA  23D2               	addwfc	(printf@ap+1)& (0+255),f,b
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;doprnt.c: 831: if(fval < 0.0) {
  5717  000EFC  0100               	movlb	0	; () banked
  5718  000EFE  AFE5               	btfss	(printf@fval+2)& (0+255),7,b
  5719  000F00  D011               	goto	l6516
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;doprnt.c: 832: fval = -fval;
  5723  000F02  C0E3  F080         	movff	printf@fval,___ftneg@f1
  5724  000F06  C0E4  F081         	movff	printf@fval+1,___ftneg@f1+1
  5725  000F0A  C0E5  F082         	movff	printf@fval+2,___ftneg@f1+2
  5726  000F0E  ECA6  F02E         	call	___ftneg	;wreg free
  5727  000F12  C080  F0E3         	movff	?___ftneg,printf@fval
  5728  000F16  C081  F0E4         	movff	?___ftneg+1,printf@fval+1
  5729  000F1A  C082  F0E5         	movff	?___ftneg+2,printf@fval+2
  5730                           
  5731                           ;doprnt.c: 833: flag |= 0x03;
  5732  000F1E  0E03               	movlw	3
  5733  000F20  0100               	movlb	0	; () banked
  5734  000F22  13E1               	iorwf	printf@flag& (0+255),f,b
  5735  000F24                     l6516:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;doprnt.c: 834: }
  5739                           ;doprnt.c: 835: exp = 0;
  5740  000F24  0E00               	movlw	0
  5741  000F26  0100               	movlb	0	; () banked
  5742  000F28  6FDC               	movwf	(printf@exp+1)& (0+255),b
  5743  000F2A  0E00               	movlw	0
  5744  000F2C  6FDB               	movwf	printf@exp& (0+255),b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;doprnt.c: 836: if( fval!=0) {
  5748  000F2E  0100               	movlb	0	; () banked
  5749  000F30  51E3               	movf	printf@fval& (0+255),w,b
  5750  000F32  0100               	movlb	0	; () banked
  5751  000F34  11E4               	iorwf	(printf@fval+1)& (0+255),w,b
  5752  000F36  0100               	movlb	0	; () banked
  5753  000F38  11E5               	iorwf	(printf@fval+2)& (0+255),w,b
  5754  000F3A  B4D8               	btfsc	status,2,c
  5755  000F3C  D09B               	goto	l6544
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  5759  000F3E  0E82               	movlw	130
  5760  000F40  0100               	movlb	0	; () banked
  5761  000F42  6FC7               	movwf	??_printf& (0+255),b
  5762  000F44  0EFF               	movlw	255
  5763  000F46  0100               	movlb	0	; () banked
  5764  000F48  6FC8               	movwf	(??_printf+1)& (0+255),b
  5765  000F4A  C0E3  F0C9         	movff	printf@fval,??_printf+2
  5766  000F4E  C0E4  F0CA         	movff	printf@fval+1,??_printf+3
  5767  000F52  C0E5  F0CB         	movff	printf@fval+2,??_printf+4
  5768  000F56  C0E6  F0CC         	movff	printf@fval+3,??_printf+5
  5769  000F5A  0E10               	movlw	16
  5770  000F5C  D006               	goto	u7380
  5771  000F5E                     u7385:
  5772  000F5E  0100               	movlb	0	; () banked
  5773  000F60  90D8               	bcf	status,0,c
  5774  000F62  33CC               	rrcf	(??_printf+5)& (0+255),f,b
  5775  000F64  33CB               	rrcf	(??_printf+4)& (0+255),f,b
  5776  000F66  33CA               	rrcf	(??_printf+3)& (0+255),f,b
  5777  000F68  33C9               	rrcf	(??_printf+2)& (0+255),f,b
  5778  000F6A                     u7380:
  5779  000F6A  2EE8               	decfsz	wreg,f,c
  5780  000F6C  D7F8               	goto	u7385
  5781  000F6E  0100               	movlb	0	; () banked
  5782  000F70  51C9               	movf	(??_printf+2)& (0+255),w,b
  5783  000F72  0100               	movlb	0	; () banked
  5784  000F74  25C7               	addwf	??_printf& (0+255),w,b
  5785  000F76  0100               	movlb	0	; () banked
  5786  000F78  6FDB               	movwf	printf@exp& (0+255),b
  5787  000F7A  0E00               	movlw	0
  5788  000F7C  0100               	movlb	0	; () banked
  5789  000F7E  21C8               	addwfc	(??_printf+1)& (0+255),w,b
  5790  000F80  0100               	movlb	0	; () banked
  5791  000F82  6FDC               	movwf	(printf@exp+1)& (0+255),b
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;doprnt.c: 838: exp--;
  5795  000F84  0100               	movlb	0	; () banked
  5796  000F86  07DB               	decf	printf@exp& (0+255),f,b
  5797  000F88  A0D8               	btfss	status,0,c
  5798  000F8A  07DC               	decf	(printf@exp+1)& (0+255),f,b
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;doprnt.c: 839: exp *= 3;
  5802  000F8C  C0DB  F08E         	movff	printf@exp,___wmul@multiplier
  5803  000F90  C0DC  F08F         	movff	printf@exp+1,___wmul@multiplier+1
  5804  000F94  0E00               	movlw	0
  5805  000F96  0100               	movlb	0	; () banked
  5806  000F98  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5807  000F9A  0E03               	movlw	3
  5808  000F9C  6F90               	movwf	___wmul@multiplicand& (0+255),b
  5809  000F9E  EC59  F02E         	call	___wmul	;wreg free
  5810  000FA2  C08E  F0DB         	movff	?___wmul,printf@exp
  5811  000FA6  C08F  F0DC         	movff	?___wmul+1,printf@exp+1
  5812                           
  5813                           ;doprnt.c: 840: exp /= 10;
  5814  000FAA  C0DB  F086         	movff	printf@exp,___awdiv@dividend
  5815  000FAE  C0DC  F087         	movff	printf@exp+1,___awdiv@dividend+1
  5816  000FB2  0E00               	movlw	0
  5817  000FB4  0100               	movlb	0	; () banked
  5818  000FB6  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5819  000FB8  0E0A               	movlw	10
  5820  000FBA  6F88               	movwf	___awdiv@divisor& (0+255),b
  5821  000FBC  EC1E  F028         	call	___awdiv	;wreg free
  5822  000FC0  C086  F0DB         	movff	?___awdiv,printf@exp
  5823  000FC4  C087  F0DC         	movff	?___awdiv+1,printf@exp+1
  5824                           
  5825                           ;doprnt.c: 841: if(exp < 0)
  5826  000FC8  0100               	movlb	0	; () banked
  5827  000FCA  AFDC               	btfss	(printf@exp+1)& (0+255),7,b
  5828  000FCC  D004               	goto	l6532
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;doprnt.c: 842: exp--;
  5832  000FCE  0100               	movlb	0	; () banked
  5833  000FD0  07DB               	decf	printf@exp& (0+255),f,b
  5834  000FD2  A0D8               	btfss	status,0,c
  5835  000FD4  07DC               	decf	(printf@exp+1)& (0+255),f,b
  5836  000FD6                     l6532:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5840  000FD6  0100               	movlb	0	; () banked
  5841  000FD8  51DB               	movf	printf@exp& (0+255),w,b
  5842  000FDA  0800               	sublw	0
  5843  000FDC  ECDC  F014         	call	_scale
  5844  000FE0  C0A3  F0D5         	movff	?_scale,printf@tmpval
  5845  000FE4  C0A4  F0D6         	movff	?_scale+1,printf@tmpval+1
  5846  000FE8  C0A5  F0D7         	movff	?_scale+2,printf@tmpval+2
  5847                           
  5848                           ;doprnt.c: 847: tmpval.integ *= fval;
  5849  000FEC  C0D5  F094         	movff	printf@tmpval,___ftmul@f1
  5850  000FF0  C0D6  F095         	movff	printf@tmpval+1,___ftmul@f1+1
  5851  000FF4  C0D7  F096         	movff	printf@tmpval+2,___ftmul@f1+2
  5852  000FF8  C0E3  F097         	movff	printf@fval,___ftmul@f2
  5853  000FFC  C0E4  F098         	movff	printf@fval+1,___ftmul@f2+1
  5854  001000  C0E5  F099         	movff	printf@fval+2,___ftmul@f2+2
  5855  001004  EC67  F021         	call	___ftmul	;wreg free
  5856  001008  C094  F0D5         	movff	?___ftmul,printf@tmpval
  5857  00100C  C095  F0D6         	movff	?___ftmul+1,printf@tmpval+1
  5858  001010  C096  F0D7         	movff	?___ftmul+2,printf@tmpval+2
  5859                           
  5860                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5861  001014  C0D5  F080         	movff	printf@tmpval,___ftge@ff1
  5862  001018  C0D6  F081         	movff	printf@tmpval+1,___ftge@ff1+1
  5863  00101C  C0D7  F082         	movff	printf@tmpval+2,___ftge@ff1+2
  5864  001020  0E00               	movlw	0
  5865  001022  0100               	movlb	0	; () banked
  5866  001024  6F83               	movwf	___ftge@ff2& (0+255),b
  5867  001026  0E80               	movlw	128
  5868  001028  0100               	movlb	0	; () banked
  5869  00102A  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  5870  00102C  0E3F               	movlw	63
  5871  00102E  0100               	movlb	0	; () banked
  5872  001030  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  5873  001032  ECBA  F027         	call	___ftge	;wreg free
  5874  001036  0100               	movlb	0	; () banked
  5875  001038  B0D8               	btfsc	status,0,c
  5876  00103A  D005               	goto	l6540
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;doprnt.c: 849: exp--;
  5880  00103C  0100               	movlb	0	; () banked
  5881  00103E  07DB               	decf	printf@exp& (0+255),f,b
  5882  001040  A0D8               	btfss	status,0,c
  5883  001042  07DC               	decf	(printf@exp+1)& (0+255),f,b
  5884  001044  D017               	goto	l6544
  5885  001046                     l6540:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5889  001046  C0D5  F080         	movff	printf@tmpval,___ftge@ff1
  5890  00104A  C0D6  F081         	movff	printf@tmpval+1,___ftge@ff1+1
  5891  00104E  C0D7  F082         	movff	printf@tmpval+2,___ftge@ff1+2
  5892  001052  0E00               	movlw	0
  5893  001054  0100               	movlb	0	; () banked
  5894  001056  6F83               	movwf	___ftge@ff2& (0+255),b
  5895  001058  0E20               	movlw	32
  5896  00105A  0100               	movlb	0	; () banked
  5897  00105C  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  5898  00105E  0E41               	movlw	65
  5899  001060  0100               	movlb	0	; () banked
  5900  001062  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  5901  001064  ECBA  F027         	call	___ftge	;wreg free
  5902  001068  0100               	movlb	0	; () banked
  5903  00106A  A0D8               	btfss	status,0,c
  5904  00106C  D003               	goto	l6544
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;doprnt.c: 851: exp++;
  5908  00106E  0100               	movlb	0	; () banked
  5909  001070  4BDB               	infsnz	printf@exp& (0+255),f,b
  5910  001072  2BDC               	incf	(printf@exp+1)& (0+255),f,b
  5911  001074                     l6544:
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;doprnt.c: 852: }
  5915                           ;doprnt.c: 1112: if(prec <= 12)
  5916  001074  0100               	movlb	0	; () banked
  5917  001076  BFD4               	btfsc	(printf@prec+1)& (0+255),7,b
  5918  001078  D008               	goto	l6546
  5919  00107A  0100               	movlb	0	; () banked
  5920  00107C  51D4               	movf	(printf@prec+1)& (0+255),w,b
  5921  00107E  E11D               	bnz	l6548
  5922  001080  0E0D               	movlw	13
  5923  001082  0100               	movlb	0	; () banked
  5924  001084  5DD3               	subwf	printf@prec& (0+255),w,b
  5925  001086  B0D8               	btfsc	status,0,c
  5926  001088  D018               	goto	l6548
  5927  00108A                     l6546:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;doprnt.c: 1113: fval += fround(prec);
  5931  00108A  C0E3  F0AD         	movff	printf@fval,___ftadd@f1
  5932  00108E  C0E4  F0AE         	movff	printf@fval+1,___ftadd@f1+1
  5933  001092  C0E5  F0AF         	movff	printf@fval+2,___ftadd@f1+2
  5934  001096  0100               	movlb	0	; () banked
  5935  001098  51D3               	movf	printf@prec& (0+255),w,b
  5936  00109A  EC51  F01B         	call	_fround
  5937  00109E  C0A3  F0B0         	movff	?_fround,___ftadd@f2
  5938  0010A2  C0A4  F0B1         	movff	?_fround+1,___ftadd@f2+1
  5939  0010A6  C0A5  F0B2         	movff	?_fround+2,___ftadd@f2+2
  5940  0010AA  ECA7  F01C         	call	___ftadd	;wreg free
  5941  0010AE  C0AD  F0E3         	movff	?___ftadd,printf@fval
  5942  0010B2  C0AE  F0E4         	movff	?___ftadd+1,printf@fval+1
  5943  0010B6  C0AF  F0E5         	movff	?___ftadd+2,printf@fval+2
  5944  0010BA                     l6548:
  5945                           
  5946                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5947  0010BA  0100               	movlb	0	; () banked
  5948  0010BC  BFDC               	btfsc	(printf@exp+1)& (0+255),7,b
  5949  0010BE  D008               	goto	l6550
  5950  0010C0  0100               	movlb	0	; () banked
  5951  0010C2  51DC               	movf	(printf@exp+1)& (0+255),w,b
  5952  0010C4  E12A               	bnz	l6556
  5953  0010C6  0E0A               	movlw	10
  5954  0010C8  0100               	movlb	0	; () banked
  5955  0010CA  5DDB               	subwf	printf@exp& (0+255),w,b
  5956  0010CC  B0D8               	btfsc	status,0,c
  5957  0010CE  D025               	goto	l6556
  5958  0010D0                     l6550:
  5959                           
  5960                           ; BSR set to: 0
  5961  0010D0  0100               	movlb	0	; () banked
  5962  0010D2  51E3               	movf	printf@fval& (0+255),w,b
  5963  0010D4  0100               	movlb	0	; () banked
  5964  0010D6  11E4               	iorwf	(printf@fval+1)& (0+255),w,b
  5965  0010D8  0100               	movlb	0	; () banked
  5966  0010DA  11E5               	iorwf	(printf@fval+2)& (0+255),w,b
  5967  0010DC  B4D8               	btfsc	status,2,c
  5968  0010DE  D063               	goto	l6570
  5969                           
  5970                           ; BSR set to: 0
  5971  0010E0  C0E3  F0AA         	movff	printf@fval,___fttol@f1
  5972  0010E4  C0E4  F0AB         	movff	printf@fval+1,___fttol@f1+1
  5973  0010E8  C0E5  F0AC         	movff	printf@fval+2,___fttol@f1+2
  5974  0010EC  EC69  F023         	call	___fttol	;wreg free
  5975  0010F0  0100               	movlb	0	; () banked
  5976  0010F2  51AA               	movf	?___fttol& (0+255),w,b
  5977  0010F4  0100               	movlb	0	; () banked
  5978  0010F6  11AB               	iorwf	(?___fttol+1)& (0+255),w,b
  5979  0010F8  0100               	movlb	0	; () banked
  5980  0010FA  11AC               	iorwf	(?___fttol+2)& (0+255),w,b
  5981  0010FC  0100               	movlb	0	; () banked
  5982  0010FE  11AD               	iorwf	(?___fttol+3)& (0+255),w,b
  5983  001100  A4D8               	btfss	status,2,c
  5984  001102  D051               	goto	l6570
  5985                           
  5986                           ; BSR set to: 0
  5987  001104  0100               	movlb	0	; () banked
  5988  001106  BFDC               	btfsc	(printf@exp+1)& (0+255),7,b
  5989  001108  D04E               	goto	l6570
  5990  00110A  0100               	movlb	0	; () banked
  5991  00110C  51DC               	movf	(printf@exp+1)& (0+255),w,b
  5992  00110E  E105               	bnz	l6556
  5993  001110  0E02               	movlw	2
  5994  001112  0100               	movlb	0	; () banked
  5995  001114  5DDB               	subwf	printf@exp& (0+255),w,b
  5996  001116  A0D8               	btfss	status,0,c
  5997  001118  D046               	goto	l6570
  5998  00111A                     l6556:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6002  00111A  C0D5  F080         	movff	printf@tmpval,___ftge@ff1
  6003  00111E  C0D6  F081         	movff	printf@tmpval+1,___ftge@ff1+1
  6004  001122  C0D7  F082         	movff	printf@tmpval+2,___ftge@ff1+2
  6005  001126  0E70               	movlw	112
  6006  001128  0100               	movlb	0	; () banked
  6007  00112A  6F83               	movwf	___ftge@ff2& (0+255),b
  6008  00112C  0E89               	movlw	137
  6009  00112E  0100               	movlb	0	; () banked
  6010  001130  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
  6011  001132  0E40               	movlw	64
  6012  001134  0100               	movlb	0	; () banked
  6013  001136  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
  6014  001138  ECBA  F027         	call	___ftge	;wreg free
  6015  00113C  0100               	movlb	0	; () banked
  6016  00113E  B0D8               	btfsc	status,0,c
  6017  001140  D003               	goto	l6560
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6021  001142  0100               	movlb	0	; () banked
  6022  001144  0EF7               	movlw	247
  6023  001146  D002               	goto	L1
  6024  001148                     l6560:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6028  001148  0100               	movlb	0	; () banked
  6029  00114A  0EF8               	movlw	248
  6030  00114C                     L1:
  6031  00114C  27DB               	addwf	printf@exp& (0+255),f,b
  6032  00114E  0EFF               	movlw	255
  6033  001150  23DC               	addwfc	(printf@exp+1)& (0+255),f,b
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;doprnt.c: 1124: }
  6037                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6038                           
  6039                           ; BSR set to: 0
  6040  001152  0100               	movlb	0	; () banked
  6041  001154  51DB               	movf	printf@exp& (0+255),w,b
  6042  001156  ECDC  F014         	call	_scale
  6043  00115A  C0A3  F0D5         	movff	?_scale,printf@tmpval
  6044  00115E  C0A4  F0D6         	movff	?_scale+1,printf@tmpval+1
  6045  001162  C0A5  F0D7         	movff	?_scale+2,printf@tmpval+2
  6046                           
  6047                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6048  001166  C0E3  F080         	movff	printf@fval,__tdiv_to_l_@f1
  6049  00116A  C0E4  F081         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  6050  00116E  C0E5  F082         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  6051  001172  C0D5  F083         	movff	printf@tmpval,__tdiv_to_l_@f2
  6052  001176  C0D6  F084         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  6053  00117A  C0D7  F085         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  6054  00117E  ECD4  F01F         	call	__tdiv_to_l_	;wreg free
  6055  001182  C080  F0DD         	movff	?__tdiv_to_l_,printf@val
  6056  001186  C081  F0DE         	movff	?__tdiv_to_l_+1,printf@val+1
  6057  00118A  C082  F0DF         	movff	?__tdiv_to_l_+2,printf@val+2
  6058  00118E  C083  F0E0         	movff	?__tdiv_to_l_+3,printf@val+3
  6059                           
  6060                           ;doprnt.c: 1129: fval = 0.0;
  6061  001192  0E00               	movlw	0
  6062  001194  0100               	movlb	0	; () banked
  6063  001196  6FE3               	movwf	printf@fval& (0+255),b
  6064  001198  0E00               	movlw	0
  6065  00119A  0100               	movlb	0	; () banked
  6066  00119C  6FE4               	movwf	(printf@fval+1)& (0+255),b
  6067  00119E  0E00               	movlw	0
  6068  0011A0  0100               	movlb	0	; () banked
  6069  0011A2  6FE5               	movwf	(printf@fval+2)& (0+255),b
  6070                           
  6071                           ;doprnt.c: 1130: } else {
  6072  0011A4  D033               	goto	l6574
  6073  0011A6                     l6570:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6077  0011A6  C0E3  F0AA         	movff	printf@fval,___fttol@f1
  6078  0011AA  C0E4  F0AB         	movff	printf@fval+1,___fttol@f1+1
  6079  0011AE  C0E5  F0AC         	movff	printf@fval+2,___fttol@f1+2
  6080  0011B2  EC69  F023         	call	___fttol	;wreg free
  6081  0011B6  C0AA  F0DD         	movff	?___fttol,printf@val
  6082  0011BA  C0AB  F0DE         	movff	?___fttol+1,printf@val+1
  6083  0011BE  C0AC  F0DF         	movff	?___fttol+2,printf@val+2
  6084  0011C2  C0AD  F0E0         	movff	?___fttol+3,printf@val+3
  6085                           
  6086                           ;doprnt.c: 1132: fval -= (double)val;
  6087  0011C6  C0E3  F0B9         	movff	printf@fval,___ftsub@f1
  6088  0011CA  C0E4  F0BA         	movff	printf@fval+1,___ftsub@f1+1
  6089  0011CE  C0E5  F0BB         	movff	printf@fval+2,___ftsub@f1+2
  6090  0011D2  C0DD  F088         	movff	printf@val,___lltoft@c
  6091  0011D6  C0DE  F089         	movff	printf@val+1,___lltoft@c+1
  6092  0011DA  C0DF  F08A         	movff	printf@val+2,___lltoft@c+2
  6093  0011DE  C0E0  F08B         	movff	printf@val+3,___lltoft@c+3
  6094  0011E2  ECE4  F02A         	call	___lltoft	;wreg free
  6095  0011E6  C088  F0BC         	movff	?___lltoft,___ftsub@f2
  6096  0011EA  C089  F0BD         	movff	?___lltoft+1,___ftsub@f2+1
  6097  0011EE  C08A  F0BE         	movff	?___lltoft+2,___ftsub@f2+2
  6098  0011F2  ECAC  F02D         	call	___ftsub	;wreg free
  6099  0011F6  C0B9  F0E3         	movff	?___ftsub,printf@fval
  6100  0011FA  C0BA  F0E4         	movff	?___ftsub+1,printf@fval+1
  6101  0011FE  C0BB  F0E5         	movff	?___ftsub+2,printf@fval+2
  6102                           
  6103                           ;doprnt.c: 1133: exp = 0;
  6104  001202  0E00               	movlw	0
  6105  001204  0100               	movlb	0	; () banked
  6106  001206  6FDC               	movwf	(printf@exp+1)& (0+255),b
  6107  001208  0E00               	movlw	0
  6108  00120A  6FDB               	movwf	printf@exp& (0+255),b
  6109  00120C                     l6574:
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;doprnt.c: 1134: }
  6113                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6114  00120C  0E01               	movlw	1
  6115  00120E  0100               	movlb	0	; () banked
  6116  001210  6FE6               	movwf	printf@c& (0+255),b
  6117  001212                     l6576:
  6118                           
  6119                           ; BSR set to: 0
  6120  001212  0E0A               	movlw	10
  6121  001214  0100               	movlb	0	; () banked
  6122  001216  19E6               	xorwf	printf@c& (0+255),w,b
  6123  001218  B4D8               	btfsc	status,2,c
  6124  00121A  D01E               	goto	l6588
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;doprnt.c: 1137: if(val < dpowers[c])
  6128                           
  6129                           ; BSR set to: 0
  6130                           
  6131                           ; BSR set to: 0
  6132  00121C  0100               	movlb	0	; () banked
  6133  00121E  51E6               	movf	printf@c& (0+255),w,b
  6134  001220  0D04               	mullw	4
  6135  001222  0E91               	movlw	low _dpowers
  6136  001224  24F3               	addwf	prodl,w,c
  6137  001226  6EF6               	movwf	tblptrl,c
  6138  001228  0EFB               	movlw	high _dpowers
  6139  00122A  20F4               	addwfc	prodh,w,c
  6140  00122C  6EF7               	movwf	tblptrh,c
  6141  00122E                     	if	0	;There are less than 3 active tblptr bytes
  6142  00122E                     	endif
  6143  00122E  0009               	tblrd		*+
  6144  001230  50F5               	movf	tablat,w,c
  6145  001232  0100               	movlb	0	; () banked
  6146  001234  5DDD               	subwf	printf@val& (0+255),w,b
  6147  001236  0009               	tblrd		*+
  6148  001238  50F5               	movf	tablat,w,c
  6149  00123A  0100               	movlb	0	; () banked
  6150  00123C  59DE               	subwfb	(printf@val+1)& (0+255),w,b
  6151  00123E  0009               	tblrd		*+
  6152  001240  50F5               	movf	tablat,w,c
  6153  001242  0100               	movlb	0	; () banked
  6154  001244  59DF               	subwfb	(printf@val+2)& (0+255),w,b
  6155  001246  0009               	tblrd		*+
  6156  001248  50F5               	movf	tablat,w,c
  6157  00124A  0100               	movlb	0	; () banked
  6158  00124C  59E0               	subwfb	(printf@val+3)& (0+255),w,b
  6159  00124E  A0D8               	btfss	status,0,c
  6160  001250  D003               	goto	l6588
  6161                           
  6162                           ; BSR set to: 0
  6163                           
  6164                           ; BSR set to: 0
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;doprnt.c: 1138: break;
  6168  001252  0100               	movlb	0	; () banked
  6169  001254  2BE6               	incf	printf@c& (0+255),f,b
  6170  001256  D7DD               	goto	l6576
  6171  001258                     l6588:
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;doprnt.c: 1142: width -= prec + c + exp;
  6175  001258  C0E6  F0C7         	movff	printf@c,??_printf
  6176  00125C  0100               	movlb	0	; () banked
  6177  00125E  6BC8               	clrf	(??_printf+1)& (0+255),b
  6178  001260  BFC7               	btfsc	??_printf& (0+255),7,b
  6179  001262  07C8               	decf	(??_printf+1)& (0+255),f,b
  6180  001264  0100               	movlb	0	; () banked
  6181  001266  51D3               	movf	printf@prec& (0+255),w,b
  6182  001268  0100               	movlb	0	; () banked
  6183  00126A  27C7               	addwf	??_printf& (0+255),f,b
  6184  00126C  0100               	movlb	0	; () banked
  6185  00126E  51D4               	movf	(printf@prec+1)& (0+255),w,b
  6186  001270  0100               	movlb	0	; () banked
  6187  001272  23C8               	addwfc	(??_printf+1)& (0+255),f,b
  6188  001274  0100               	movlb	0	; () banked
  6189  001276  51DB               	movf	printf@exp& (0+255),w,b
  6190  001278  0100               	movlb	0	; () banked
  6191  00127A  27C7               	addwf	??_printf& (0+255),f,b
  6192  00127C  0100               	movlb	0	; () banked
  6193  00127E  51DC               	movf	(printf@exp+1)& (0+255),w,b
  6194  001280  0100               	movlb	0	; () banked
  6195  001282  23C8               	addwfc	(??_printf+1)& (0+255),f,b
  6196  001284  0100               	movlb	0	; () banked
  6197  001286  51C7               	movf	??_printf& (0+255),w,b
  6198  001288  0100               	movlb	0	; () banked
  6199  00128A  5FD9               	subwf	printf@width& (0+255),f,b
  6200  00128C  0100               	movlb	0	; () banked
  6201  00128E  51C8               	movf	(??_printf+1)& (0+255),w,b
  6202  001290  0100               	movlb	0	; () banked
  6203  001292  5BDA               	subwfb	(printf@width+1)& (0+255),f,b
  6204                           
  6205                           ;doprnt.c: 1143: if(
  6206                           ;doprnt.c: 1147: prec)
  6207  001294  0100               	movlb	0	; () banked
  6208  001296  51D3               	movf	printf@prec& (0+255),w,b
  6209  001298  0100               	movlb	0	; () banked
  6210  00129A  11D4               	iorwf	(printf@prec+1)& (0+255),w,b
  6211  00129C  B4D8               	btfsc	status,2,c
  6212  00129E  D004               	goto	l6592
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;doprnt.c: 1148: width--;
  6216  0012A0  0100               	movlb	0	; () banked
  6217  0012A2  07D9               	decf	printf@width& (0+255),f,b
  6218  0012A4  A0D8               	btfss	status,0,c
  6219  0012A6  07DA               	decf	(printf@width+1)& (0+255),f,b
  6220  0012A8                     l6592:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;doprnt.c: 1149: if(flag & 0x03)
  6224  0012A8  0E03               	movlw	3
  6225  0012AA  0100               	movlb	0	; () banked
  6226  0012AC  15E1               	andwf	printf@flag& (0+255),w,b
  6227  0012AE  0100               	movlb	0	; () banked
  6228  0012B0  6FC7               	movwf	??_printf& (0+255),b
  6229  0012B2  0E00               	movlw	0
  6230  0012B4  0100               	movlb	0	; () banked
  6231  0012B6  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  6232  0012B8  0100               	movlb	0	; () banked
  6233  0012BA  6FC8               	movwf	(??_printf+1)& (0+255),b
  6234  0012BC  0100               	movlb	0	; () banked
  6235  0012BE  51C7               	movf	??_printf& (0+255),w,b
  6236  0012C0  0100               	movlb	0	; () banked
  6237  0012C2  11C8               	iorwf	(??_printf+1)& (0+255),w,b
  6238  0012C4  B4D8               	btfsc	status,2,c
  6239  0012C6  D004               	goto	l6596
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;doprnt.c: 1150: width--;
  6243  0012C8  0100               	movlb	0	; () banked
  6244  0012CA  07D9               	decf	printf@width& (0+255),f,b
  6245  0012CC  A0D8               	btfss	status,0,c
  6246  0012CE  07DA               	decf	(printf@width+1)& (0+255),f,b
  6247  0012D0                     l6596:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;doprnt.c: 1153: if(flag & 0x04) {
  6251  0012D0  0100               	movlb	0	; () banked
  6252  0012D2  A5E1               	btfss	printf@flag& (0+255),2,b
  6253  0012D4  D02D               	goto	l6612
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;doprnt.c: 1157: if(flag & 0x03)
  6257  0012D6  0E03               	movlw	3
  6258  0012D8  0100               	movlb	0	; () banked
  6259  0012DA  15E1               	andwf	printf@flag& (0+255),w,b
  6260  0012DC  0100               	movlb	0	; () banked
  6261  0012DE  6FC7               	movwf	??_printf& (0+255),b
  6262  0012E0  0E00               	movlw	0
  6263  0012E2  0100               	movlb	0	; () banked
  6264  0012E4  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  6265  0012E6  0100               	movlb	0	; () banked
  6266  0012E8  6FC8               	movwf	(??_printf+1)& (0+255),b
  6267  0012EA  0100               	movlb	0	; () banked
  6268  0012EC  51C7               	movf	??_printf& (0+255),w,b
  6269  0012EE  0100               	movlb	0	; () banked
  6270  0012F0  11C8               	iorwf	(??_printf+1)& (0+255),w,b
  6271  0012F2  B4D8               	btfsc	status,2,c
  6272  0012F4  D00B               	goto	l6606
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;doprnt.c: 1159: (putch('-') );
  6276  0012F6  0E2D               	movlw	45
  6277  0012F8  EC78  F02F         	call	_putch
  6278                           
  6279                           ;doprnt.c: 1168: while(width > 0) {
  6280  0012FC  D007               	goto	l6606
  6281  0012FE                     l6602:
  6282                           
  6283                           ;doprnt.c: 1169: (putch('0') );
  6284  0012FE  0E30               	movlw	48
  6285  001300  EC78  F02F         	call	_putch
  6286                           
  6287                           ;doprnt.c: 1170: width--;
  6288  001304  0100               	movlb	0	; () banked
  6289  001306  07D9               	decf	printf@width& (0+255),f,b
  6290  001308  A0D8               	btfss	status,0,c
  6291  00130A  07DA               	decf	(printf@width+1)& (0+255),f,b
  6292  00130C                     l6606:
  6293  00130C  0100               	movlb	0	; () banked
  6294  00130E  BFDA               	btfsc	(printf@width+1)& (0+255),7,b
  6295  001310  D074               	goto	l6624
  6296  001312  0100               	movlb	0	; () banked
  6297  001314  51DA               	movf	(printf@width+1)& (0+255),w,b
  6298  001316  E1F3               	bnz	l6602
  6299  001318  0100               	movlb	0	; () banked
  6300  00131A  05D9               	decf	printf@width& (0+255),w,b
  6301  00131C  A0D8               	btfss	status,0,c
  6302  00131E  D06D               	goto	l6624
  6303  001320  D7EE               	goto	l6602
  6304  001322                     l6608:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;doprnt.c: 1181: (putch(' ') );
  6308  001322  0E20               	movlw	32
  6309  001324  EC78  F02F         	call	_putch
  6310                           
  6311                           ;doprnt.c: 1182: width--;
  6312  001328  0100               	movlb	0	; () banked
  6313  00132A  07D9               	decf	printf@width& (0+255),f,b
  6314  00132C  A0D8               	btfss	status,0,c
  6315  00132E  07DA               	decf	(printf@width+1)& (0+255),f,b
  6316  001330                     l6612:
  6317                           
  6318                           ; BSR set to: 0
  6319  001330  0100               	movlb	0	; () banked
  6320  001332  BFDA               	btfsc	(printf@width+1)& (0+255),7,b
  6321  001334  D007               	goto	l6614
  6322  001336  0100               	movlb	0	; () banked
  6323  001338  51DA               	movf	(printf@width+1)& (0+255),w,b
  6324  00133A  E1F3               	bnz	l6608
  6325  00133C  0100               	movlb	0	; () banked
  6326  00133E  05D9               	decf	printf@width& (0+255),w,b
  6327  001340  B0D8               	btfsc	status,0,c
  6328  001342  D7EF               	goto	l6608
  6329  001344                     l6614:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;doprnt.c: 1183: }
  6333                           ;doprnt.c: 1188: if(flag & 0x03)
  6334  001344  0E03               	movlw	3
  6335  001346  0100               	movlb	0	; () banked
  6336  001348  15E1               	andwf	printf@flag& (0+255),w,b
  6337  00134A  0100               	movlb	0	; () banked
  6338  00134C  6FC7               	movwf	??_printf& (0+255),b
  6339  00134E  0E00               	movlw	0
  6340  001350  0100               	movlb	0	; () banked
  6341  001352  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  6342  001354  0100               	movlb	0	; () banked
  6343  001356  6FC8               	movwf	(??_printf+1)& (0+255),b
  6344  001358  0100               	movlb	0	; () banked
  6345  00135A  51C7               	movf	??_printf& (0+255),w,b
  6346  00135C  0100               	movlb	0	; () banked
  6347  00135E  11C8               	iorwf	(??_printf+1)& (0+255),w,b
  6348  001360  B4D8               	btfsc	status,2,c
  6349  001362  D04B               	goto	l6624
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;doprnt.c: 1190: (putch('-') );
  6353  001364  0E2D               	movlw	45
  6354  001366  EC78  F02F         	call	_putch
  6355                           
  6356                           ;doprnt.c: 1195: }
  6357                           ;doprnt.c: 1196: while(c--) {
  6358  00136A  D047               	goto	l6624
  6359  00136C                     l6618:
  6360                           
  6361                           ;doprnt.c: 1200: {
  6362                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6363  00136C  C0DD  F080         	movff	printf@val,___lldiv@dividend
  6364  001370  C0DE  F081         	movff	printf@val+1,___lldiv@dividend+1
  6365  001374  C0DF  F082         	movff	printf@val+2,___lldiv@dividend+2
  6366  001378  C0E0  F083         	movff	printf@val+3,___lldiv@dividend+3
  6367  00137C  0100               	movlb	0	; () banked
  6368  00137E  51E6               	movf	printf@c& (0+255),w,b
  6369  001380  0D04               	mullw	4
  6370  001382  0E91               	movlw	low _dpowers
  6371  001384  24F3               	addwf	prodl,w,c
  6372  001386  6EF6               	movwf	tblptrl,c
  6373  001388  0EFB               	movlw	high _dpowers
  6374  00138A  20F4               	addwfc	prodh,w,c
  6375  00138C  6EF7               	movwf	tblptrh,c
  6376  00138E                     	if	0	;There are less than 3 active tblptr bytes
  6377  00138E                     	endif
  6378  00138E  0009               	tblrd		*+
  6379  001390  CFF5 F084          	movff	tablat,___lldiv@divisor
  6380  001394  0009               	tblrd		*+
  6381  001396  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  6382  00139A  0009               	tblrd		*+
  6383  00139C  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  6384  0013A0  000A               	tblrd		*-
  6385  0013A2  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  6386  0013A6  EC7D  F028         	call	___lldiv	;wreg free
  6387  0013AA  C080  F0D5         	movff	?___lldiv,printf@tmpval
  6388  0013AE  C081  F0D6         	movff	?___lldiv+1,printf@tmpval+1
  6389  0013B2  C082  F0D7         	movff	?___lldiv+2,printf@tmpval+2
  6390  0013B6  C083  F0D8         	movff	?___lldiv+3,printf@tmpval+3
  6391                           
  6392                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6393  0013BA  C0D5  F08D         	movff	printf@tmpval,___llmod@dividend
  6394  0013BE  C0D6  F08E         	movff	printf@tmpval+1,___llmod@dividend+1
  6395  0013C2  C0D7  F08F         	movff	printf@tmpval+2,___llmod@dividend+2
  6396  0013C6  C0D8  F090         	movff	printf@tmpval+3,___llmod@dividend+3
  6397  0013CA  0E0A               	movlw	10
  6398  0013CC  0100               	movlb	0	; () banked
  6399  0013CE  6F91               	movwf	___llmod@divisor& (0+255),b
  6400  0013D0  0E00               	movlw	0
  6401  0013D2  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  6402  0013D4  0E00               	movlw	0
  6403  0013D6  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  6404  0013D8  0E00               	movlw	0
  6405  0013DA  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  6406  0013DC  EC83  F029         	call	___llmod	;wreg free
  6407  0013E0  C08D  F0D5         	movff	?___llmod,printf@tmpval
  6408  0013E4  C08E  F0D6         	movff	?___llmod+1,printf@tmpval+1
  6409  0013E8  C08F  F0D7         	movff	?___llmod+2,printf@tmpval+2
  6410  0013EC  C090  F0D8         	movff	?___llmod+3,printf@tmpval+3
  6411                           
  6412                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  6413  0013F0  0100               	movlb	0	; () banked
  6414  0013F2  51D5               	movf	printf@tmpval& (0+255),w,b
  6415  0013F4  0F30               	addlw	48
  6416  0013F6  EC78  F02F         	call	_putch
  6417  0013FA                     l6624:
  6418  0013FA  0100               	movlb	0	; () banked
  6419  0013FC  07E6               	decf	printf@c& (0+255),f,b
  6420  0013FE  0100               	movlb	0	; () banked
  6421  001400  29E6               	incf	printf@c& (0+255),w,b
  6422  001402  B4D8               	btfsc	status,2,c
  6423  001404  D008               	goto	l6630
  6424  001406  D7B2               	goto	l6618
  6425  001408                     l6626:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;doprnt.c: 1208: (putch('0') );
  6429  001408  0E30               	movlw	48
  6430  00140A  EC78  F02F         	call	_putch
  6431                           
  6432                           ;doprnt.c: 1209: exp--;
  6433  00140E  0100               	movlb	0	; () banked
  6434  001410  07DB               	decf	printf@exp& (0+255),f,b
  6435  001412  A0D8               	btfss	status,0,c
  6436  001414  07DC               	decf	(printf@exp+1)& (0+255),f,b
  6437  001416                     l6630:
  6438                           
  6439                           ; BSR set to: 0
  6440  001416  0100               	movlb	0	; () banked
  6441  001418  BFDC               	btfsc	(printf@exp+1)& (0+255),7,b
  6442  00141A  D007               	goto	l6632
  6443  00141C  0100               	movlb	0	; () banked
  6444  00141E  51DC               	movf	(printf@exp+1)& (0+255),w,b
  6445  001420  E1F3               	bnz	l6626
  6446  001422  0100               	movlb	0	; () banked
  6447  001424  05DB               	decf	printf@exp& (0+255),w,b
  6448  001426  B0D8               	btfsc	status,0,c
  6449  001428  D7EF               	goto	l6626
  6450  00142A                     l6632:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;doprnt.c: 1210: }
  6454                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6455  00142A  0100               	movlb	0	; () banked
  6456  00142C  BFD4               	btfsc	(printf@prec+1)& (0+255),7,b
  6457  00142E  D00C               	goto	l842
  6458  001430  0100               	movlb	0	; () banked
  6459  001432  51D4               	movf	(printf@prec+1)& (0+255),w,b
  6460  001434  E105               	bnz	u7600
  6461  001436  0E09               	movlw	9
  6462  001438  0100               	movlb	0	; () banked
  6463  00143A  5DD3               	subwf	printf@prec& (0+255),w,b
  6464  00143C  A0D8               	btfss	status,0,c
  6465  00143E  D004               	goto	l842
  6466  001440                     u7600:
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6470  001440  0E08               	movlw	8
  6471  001442  0100               	movlb	0	; () banked
  6472  001444  6FE6               	movwf	printf@c& (0+255),b
  6473  001446  D002               	goto	l6636
  6474  001448                     l842:
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;doprnt.c: 1213: else
  6478                           ;doprnt.c: 1214: c = prec;
  6479  001448  C0D3  F0E6         	movff	printf@prec,printf@c
  6480  00144C                     l6636:
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;doprnt.c: 1215: prec -= c;
  6484  00144C  0100               	movlb	0	; () banked
  6485  00144E  51E6               	movf	printf@c& (0+255),w,b
  6486  001450  0100               	movlb	0	; () banked
  6487  001452  5FD3               	subwf	printf@prec& (0+255),f,b
  6488  001454  0E00               	movlw	0
  6489  001456  0100               	movlb	0	; () banked
  6490  001458  BFE6               	btfsc	printf@c& (0+255),7,b
  6491  00145A  0EFF               	movlw	255
  6492  00145C  0100               	movlb	0	; () banked
  6493  00145E  5BD4               	subwfb	(printf@prec+1)& (0+255),f,b
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;doprnt.c: 1219: if(c)
  6497  001460  0100               	movlb	0	; () banked
  6498  001462  51E6               	movf	printf@c& (0+255),w,b
  6499  001464  0100               	movlb	0	; () banked
  6500  001466  B4D8               	btfsc	status,2,c
  6501  001468  D003               	goto	l6642
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;doprnt.c: 1221: (putch('.') );
  6505  00146A  0E2E               	movlw	46
  6506  00146C  EC78  F02F         	call	_putch
  6507  001470                     l6642:
  6508                           
  6509                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6510  001470  0100               	movlb	0	; () banked
  6511  001472  51E6               	movf	printf@c& (0+255),w,b
  6512  001474  ECDC  F014         	call	_scale
  6513  001478  C0A3  F0CD         	movff	?_scale,_printf$1562
  6514  00147C  C0A4  F0CE         	movff	?_scale+1,_printf$1562+1
  6515  001480  C0A5  F0CF         	movff	?_scale+2,_printf$1562+2
  6516                           
  6517                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6518  001484  C0E3  F097         	movff	printf@fval,___ftmul@f2
  6519  001488  C0E4  F098         	movff	printf@fval+1,___ftmul@f2+1
  6520  00148C  C0E5  F099         	movff	printf@fval+2,___ftmul@f2+2
  6521  001490  C0CD  F094         	movff	_printf$1562,___ftmul@f1
  6522  001494  C0CE  F095         	movff	_printf$1562+1,___ftmul@f1+1
  6523  001498  C0CF  F096         	movff	_printf$1562+2,___ftmul@f1+2
  6524  00149C  EC67  F021         	call	___ftmul	;wreg free
  6525  0014A0  C094  F0AA         	movff	?___ftmul,___fttol@f1
  6526  0014A4  C095  F0AB         	movff	?___ftmul+1,___fttol@f1+1
  6527  0014A8  C096  F0AC         	movff	?___ftmul+2,___fttol@f1+2
  6528  0014AC  EC69  F023         	call	___fttol	;wreg free
  6529  0014B0  C0AA  F0DD         	movff	?___fttol,printf@val
  6530  0014B4  C0AB  F0DE         	movff	?___fttol+1,printf@val+1
  6531  0014B8  C0AC  F0DF         	movff	?___fttol+2,printf@val+2
  6532  0014BC  C0AD  F0E0         	movff	?___fttol+3,printf@val+3
  6533                           
  6534                           ;doprnt.c: 1228: while(c--) {
  6535  0014C0  D06E               	goto	l6652
  6536  0014C2                     l6646:
  6537                           
  6538                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6539  0014C2  C0DD  F080         	movff	printf@val,___lldiv@dividend
  6540  0014C6  C0DE  F081         	movff	printf@val+1,___lldiv@dividend+1
  6541  0014CA  C0DF  F082         	movff	printf@val+2,___lldiv@dividend+2
  6542  0014CE  C0E0  F083         	movff	printf@val+3,___lldiv@dividend+3
  6543  0014D2  0100               	movlb	0	; () banked
  6544  0014D4  51E6               	movf	printf@c& (0+255),w,b
  6545  0014D6  0D04               	mullw	4
  6546  0014D8  0E91               	movlw	low _dpowers
  6547  0014DA  24F3               	addwf	prodl,w,c
  6548  0014DC  6EF6               	movwf	tblptrl,c
  6549  0014DE  0EFB               	movlw	high _dpowers
  6550  0014E0  20F4               	addwfc	prodh,w,c
  6551  0014E2  6EF7               	movwf	tblptrh,c
  6552  0014E4                     	if	0	;There are less than 3 active tblptr bytes
  6553  0014E4                     	endif
  6554  0014E4  0009               	tblrd		*+
  6555  0014E6  CFF5 F084          	movff	tablat,___lldiv@divisor
  6556  0014EA  0009               	tblrd		*+
  6557  0014EC  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  6558  0014F0  0009               	tblrd		*+
  6559  0014F2  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  6560  0014F6  000A               	tblrd		*-
  6561  0014F8  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  6562  0014FC  EC7D  F028         	call	___lldiv	;wreg free
  6563  001500  C080  F0D5         	movff	?___lldiv,printf@tmpval
  6564  001504  C081  F0D6         	movff	?___lldiv+1,printf@tmpval+1
  6565  001508  C082  F0D7         	movff	?___lldiv+2,printf@tmpval+2
  6566  00150C  C083  F0D8         	movff	?___lldiv+3,printf@tmpval+3
  6567                           
  6568                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6569  001510  C0D5  F08D         	movff	printf@tmpval,___llmod@dividend
  6570  001514  C0D6  F08E         	movff	printf@tmpval+1,___llmod@dividend+1
  6571  001518  C0D7  F08F         	movff	printf@tmpval+2,___llmod@dividend+2
  6572  00151C  C0D8  F090         	movff	printf@tmpval+3,___llmod@dividend+3
  6573  001520  0E0A               	movlw	10
  6574  001522  0100               	movlb	0	; () banked
  6575  001524  6F91               	movwf	___llmod@divisor& (0+255),b
  6576  001526  0E00               	movlw	0
  6577  001528  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  6578  00152A  0E00               	movlw	0
  6579  00152C  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  6580  00152E  0E00               	movlw	0
  6581  001530  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  6582  001532  EC83  F029         	call	___llmod	;wreg free
  6583  001536  C08D  F0D5         	movff	?___llmod,printf@tmpval
  6584  00153A  C08E  F0D6         	movff	?___llmod+1,printf@tmpval+1
  6585  00153E  C08F  F0D7         	movff	?___llmod+2,printf@tmpval+2
  6586  001542  C090  F0D8         	movff	?___llmod+3,printf@tmpval+3
  6587                           
  6588                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  6589  001546  0100               	movlb	0	; () banked
  6590  001548  51D5               	movf	printf@tmpval& (0+255),w,b
  6591  00154A  0F30               	addlw	48
  6592  00154C  EC78  F02F         	call	_putch
  6593                           
  6594                           ;doprnt.c: 1232: val %= dpowers[c];
  6595  001550  C0DD  F08D         	movff	printf@val,___llmod@dividend
  6596  001554  C0DE  F08E         	movff	printf@val+1,___llmod@dividend+1
  6597  001558  C0DF  F08F         	movff	printf@val+2,___llmod@dividend+2
  6598  00155C  C0E0  F090         	movff	printf@val+3,___llmod@dividend+3
  6599  001560  0100               	movlb	0	; () banked
  6600  001562  51E6               	movf	printf@c& (0+255),w,b
  6601  001564  0D04               	mullw	4
  6602  001566  0E91               	movlw	low _dpowers
  6603  001568  24F3               	addwf	prodl,w,c
  6604  00156A  6EF6               	movwf	tblptrl,c
  6605  00156C  0EFB               	movlw	high _dpowers
  6606  00156E  20F4               	addwfc	prodh,w,c
  6607  001570  6EF7               	movwf	tblptrh,c
  6608  001572                     	if	0	;There are less than 3 active tblptr bytes
  6609  001572                     	endif
  6610  001572  0009               	tblrd		*+
  6611  001574  CFF5 F091          	movff	tablat,___llmod@divisor
  6612  001578  0009               	tblrd		*+
  6613  00157A  CFF5 F092          	movff	tablat,___llmod@divisor+1
  6614  00157E  0009               	tblrd		*+
  6615  001580  CFF5 F093          	movff	tablat,___llmod@divisor+2
  6616  001584  000A               	tblrd		*-
  6617  001586  CFF5 F094          	movff	tablat,___llmod@divisor+3
  6618  00158A  EC83  F029         	call	___llmod	;wreg free
  6619  00158E  C08D  F0DD         	movff	?___llmod,printf@val
  6620  001592  C08E  F0DE         	movff	?___llmod+1,printf@val+1
  6621  001596  C08F  F0DF         	movff	?___llmod+2,printf@val+2
  6622  00159A  C090  F0E0         	movff	?___llmod+3,printf@val+3
  6623  00159E                     l6652:
  6624  00159E  0100               	movlb	0	; () banked
  6625  0015A0  07E6               	decf	printf@c& (0+255),f,b
  6626  0015A2  0100               	movlb	0	; () banked
  6627  0015A4  29E6               	incf	printf@c& (0+255),w,b
  6628  0015A6  B4D8               	btfsc	status,2,c
  6629  0015A8  D008               	goto	l6658
  6630  0015AA  D78B               	goto	l6646
  6631  0015AC                     l6654:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;doprnt.c: 1236: (putch('0') );
  6635  0015AC  0E30               	movlw	48
  6636  0015AE  EC78  F02F         	call	_putch
  6637                           
  6638                           ;doprnt.c: 1237: prec--;
  6639  0015B2  0100               	movlb	0	; () banked
  6640  0015B4  07D3               	decf	printf@prec& (0+255),f,b
  6641  0015B6  A0D8               	btfss	status,0,c
  6642  0015B8  07D4               	decf	(printf@prec+1)& (0+255),f,b
  6643  0015BA                     l6658:
  6644                           
  6645                           ; BSR set to: 0
  6646  0015BA  0100               	movlb	0	; () banked
  6647  0015BC  51D3               	movf	printf@prec& (0+255),w,b
  6648  0015BE  0100               	movlb	0	; () banked
  6649  0015C0  11D4               	iorwf	(printf@prec+1)& (0+255),w,b
  6650  0015C2  B4D8               	btfsc	status,2,c
  6651  0015C4  D1B3               	goto	l6756
  6652  0015C6  D7F2               	goto	l6654
  6653  0015C8                     l803:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;doprnt.c: 1246: }
  6657                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  6658  0015C8  0100               	movlb	0	; () banked
  6659  0015CA  BFE1               	btfsc	printf@flag& (0+255),7,b
  6660  0015CC  D023               	goto	l6670
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;doprnt.c: 1253: {
  6664                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6665  0015CE  C0D1  FFD9         	movff	printf@ap,fsr2l
  6666  0015D2  C0D2  FFDA         	movff	printf@ap+1,fsr2h
  6667  0015D6  CFDE F0DD          	movff	postinc2,printf@val
  6668  0015DA  CFDD F0DE          	movff	postdec2,printf@val+1
  6669  0015DE  0100               	movlb	0	; () banked
  6670  0015E0  0E00               	movlw	0
  6671  0015E2  BFDE               	btfsc	(printf@val+1)& (0+255),7,b
  6672  0015E4  0EFF               	movlw	-1
  6673  0015E6  6FDF               	movwf	(printf@val+2)& (0+255),b
  6674  0015E8  6FE0               	movwf	(printf@val+3)& (0+255),b
  6675                           
  6676                           ; BSR set to: 0
  6677  0015EA  0E02               	movlw	2
  6678  0015EC  0100               	movlb	0	; () banked
  6679  0015EE  27D1               	addwf	printf@ap& (0+255),f,b
  6680  0015F0  0E00               	movlw	0
  6681  0015F2  23D2               	addwfc	(printf@ap+1)& (0+255),f,b
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;doprnt.c: 1261: if((long)val < 0) {
  6685  0015F4  0100               	movlb	0	; () banked
  6686  0015F6  AFE0               	btfss	(printf@val+3)& (0+255),7,b
  6687  0015F8  D06E               	goto	l6704
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;doprnt.c: 1262: flag |= 0x03;
  6691  0015FA  0E03               	movlw	3
  6692  0015FC  0100               	movlb	0	; () banked
  6693  0015FE  13E1               	iorwf	printf@flag& (0+255),f,b
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;doprnt.c: 1263: val = -val;
  6697  001600  0100               	movlb	0	; () banked
  6698  001602  1FE0               	comf	(printf@val+3)& (0+255),f,b
  6699  001604  1FDF               	comf	(printf@val+2)& (0+255),f,b
  6700  001606  1FDE               	comf	(printf@val+1)& (0+255),f,b
  6701  001608  6DDD               	negf	printf@val& (0+255),b
  6702  00160A  0E00               	movlw	0
  6703  00160C  23DE               	addwfc	(printf@val+1)& (0+255),f,b
  6704  00160E  23DF               	addwfc	(printf@val+2)& (0+255),f,b
  6705  001610  23E0               	addwfc	(printf@val+3)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;doprnt.c: 1264: }
  6709                           ;doprnt.c: 1266: }
  6710  001612  D061               	goto	l6704
  6711  001614                     l6670:
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;doprnt.c: 1268: else
  6715                           ;doprnt.c: 1273: {
  6716                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6717  001614  C0D1  FFD9         	movff	printf@ap,fsr2l
  6718  001618  C0D2  FFDA         	movff	printf@ap+1,fsr2h
  6719  00161C  CFDE F0C7          	movff	postinc2,??_printf
  6720  001620  CFDD F0C8          	movff	postdec2,??_printf+1
  6721  001624  C0C7  F0DD         	movff	??_printf,printf@val
  6722  001628  C0C8  F0DE         	movff	??_printf+1,printf@val+1
  6723  00162C  0100               	movlb	0	; () banked
  6724  00162E  6BDF               	clrf	(printf@val+2)& (0+255),b
  6725  001630  6BE0               	clrf	(printf@val+3)& (0+255),b
  6726                           
  6727                           ; BSR set to: 0
  6728  001632  0E02               	movlw	2
  6729  001634  0100               	movlb	0	; () banked
  6730  001636  27D1               	addwf	printf@ap& (0+255),f,b
  6731  001638  0E00               	movlw	0
  6732  00163A  23D2               	addwfc	(printf@ap+1)& (0+255),f,b
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;doprnt.c: 1287: }
  6736                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6737  00163C  D04C               	goto	l6704
  6738  00163E                     l6674:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6742  00163E  0E01               	movlw	1
  6743  001640  0100               	movlb	0	; () banked
  6744  001642  6FE6               	movwf	printf@c& (0+255),b
  6745  001644                     l6676:
  6746                           
  6747                           ; BSR set to: 0
  6748  001644  0E0A               	movlw	10
  6749  001646  0100               	movlb	0	; () banked
  6750  001648  19E6               	xorwf	printf@c& (0+255),w,b
  6751  00164A  B4D8               	btfsc	status,2,c
  6752  00164C  D04D               	goto	l6706
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;doprnt.c: 1306: if(val < dpowers[c])
  6756                           
  6757                           ; BSR set to: 0
  6758                           
  6759                           ; BSR set to: 0
  6760  00164E  0100               	movlb	0	; () banked
  6761  001650  51E6               	movf	printf@c& (0+255),w,b
  6762  001652  0D04               	mullw	4
  6763  001654  0E91               	movlw	low _dpowers
  6764  001656  24F3               	addwf	prodl,w,c
  6765  001658  6EF6               	movwf	tblptrl,c
  6766  00165A  0EFB               	movlw	high _dpowers
  6767  00165C  20F4               	addwfc	prodh,w,c
  6768  00165E  6EF7               	movwf	tblptrh,c
  6769  001660                     	if	0	;There are less than 3 active tblptr bytes
  6770  001660                     	endif
  6771  001660  0009               	tblrd		*+
  6772  001662  50F5               	movf	tablat,w,c
  6773  001664  0100               	movlb	0	; () banked
  6774  001666  5DDD               	subwf	printf@val& (0+255),w,b
  6775  001668  0009               	tblrd		*+
  6776  00166A  50F5               	movf	tablat,w,c
  6777  00166C  0100               	movlb	0	; () banked
  6778  00166E  59DE               	subwfb	(printf@val+1)& (0+255),w,b
  6779  001670  0009               	tblrd		*+
  6780  001672  50F5               	movf	tablat,w,c
  6781  001674  0100               	movlb	0	; () banked
  6782  001676  59DF               	subwfb	(printf@val+2)& (0+255),w,b
  6783  001678  0009               	tblrd		*+
  6784  00167A  50F5               	movf	tablat,w,c
  6785  00167C  0100               	movlb	0	; () banked
  6786  00167E  59E0               	subwfb	(printf@val+3)& (0+255),w,b
  6787  001680  A0D8               	btfss	status,0,c
  6788  001682  D032               	goto	l6706
  6789                           
  6790                           ; BSR set to: 0
  6791                           
  6792                           ; BSR set to: 0
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;doprnt.c: 1307: break;
  6796  001684  0100               	movlb	0	; () banked
  6797  001686  2BE6               	incf	printf@c& (0+255),f,b
  6798  001688  D7DD               	goto	l6676
  6799  00168A                     l6688:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6803  00168A  0E01               	movlw	1
  6804  00168C  0100               	movlb	0	; () banked
  6805  00168E  6FE6               	movwf	printf@c& (0+255),b
  6806  001690                     l6690:
  6807                           
  6808                           ; BSR set to: 0
  6809  001690  0E08               	movlw	8
  6810  001692  0100               	movlb	0	; () banked
  6811  001694  19E6               	xorwf	printf@c& (0+255),w,b
  6812  001696  B4D8               	btfsc	status,2,c
  6813  001698  D027               	goto	l6706
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6817                           
  6818                           ; BSR set to: 0
  6819                           
  6820                           ; BSR set to: 0
  6821  00169A  0100               	movlb	0	; () banked
  6822  00169C  51E6               	movf	printf@c& (0+255),w,b
  6823  00169E  0D04               	mullw	4
  6824  0016A0  0E07               	movlw	low _hexpowers
  6825  0016A2  24F3               	addwf	prodl,w,c
  6826  0016A4  6EF6               	movwf	tblptrl,c
  6827  0016A6  0EFC               	movlw	high _hexpowers
  6828  0016A8  20F4               	addwfc	prodh,w,c
  6829  0016AA  6EF7               	movwf	tblptrh,c
  6830  0016AC                     	if	0	;There are less than 3 active tblptr bytes
  6831  0016AC                     	endif
  6832  0016AC  0009               	tblrd		*+
  6833  0016AE  50F5               	movf	tablat,w,c
  6834  0016B0  0100               	movlb	0	; () banked
  6835  0016B2  5DDD               	subwf	printf@val& (0+255),w,b
  6836  0016B4  0009               	tblrd		*+
  6837  0016B6  50F5               	movf	tablat,w,c
  6838  0016B8  0100               	movlb	0	; () banked
  6839  0016BA  59DE               	subwfb	(printf@val+1)& (0+255),w,b
  6840  0016BC  0009               	tblrd		*+
  6841  0016BE  50F5               	movf	tablat,w,c
  6842  0016C0  0100               	movlb	0	; () banked
  6843  0016C2  59DF               	subwfb	(printf@val+2)& (0+255),w,b
  6844  0016C4  0009               	tblrd		*+
  6845  0016C6  50F5               	movf	tablat,w,c
  6846  0016C8  0100               	movlb	0	; () banked
  6847  0016CA  59E0               	subwfb	(printf@val+3)& (0+255),w,b
  6848  0016CC  A0D8               	btfss	status,0,c
  6849  0016CE  D00C               	goto	l6706
  6850                           
  6851                           ; BSR set to: 0
  6852                           
  6853                           ; BSR set to: 0
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;doprnt.c: 1318: break;
  6857  0016D0  0100               	movlb	0	; () banked
  6858  0016D2  2BE6               	incf	printf@c& (0+255),f,b
  6859  0016D4  D7DD               	goto	l6690
  6860  0016D6                     l6704:
  6861                           
  6862                           ; BSR set to: 0
  6863  0016D6  0100               	movlb	0	; () banked
  6864  0016D8  51E1               	movf	printf@flag& (0+255),w,b
  6865  0016DA  0B80               	andlw	128
  6866                           
  6867                           ; Switch size 1, requested type "space"
  6868                           ; Number of cases is 2, Range of values is 0 to 128
  6869                           ; switch strategies available:
  6870                           ; Name         Instructions Cycles
  6871                           ; simple_byte            7     4 (average)
  6872                           ;	Chosen strategy is simple_byte
  6873  0016DC  0A00               	xorlw	0	; case 0
  6874  0016DE  B4D8               	btfsc	status,2,c
  6875  0016E0  D7AE               	goto	l6674
  6876  0016E2  0A80               	xorlw	128	; case 128
  6877  0016E4  B4D8               	btfsc	status,2,c
  6878  0016E6  D7D1               	goto	l6688
  6879  0016E8                     l6706:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6883  0016E8  0100               	movlb	0	; () banked
  6884  0016EA  51D9               	movf	printf@width& (0+255),w,b
  6885  0016EC  0100               	movlb	0	; () banked
  6886  0016EE  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  6887  0016F0  B4D8               	btfsc	status,2,c
  6888  0016F2  D014               	goto	l6712
  6889                           
  6890                           ; BSR set to: 0
  6891  0016F4  0E03               	movlw	3
  6892  0016F6  0100               	movlb	0	; () banked
  6893  0016F8  15E1               	andwf	printf@flag& (0+255),w,b
  6894  0016FA  0100               	movlb	0	; () banked
  6895  0016FC  6FC7               	movwf	??_printf& (0+255),b
  6896  0016FE  0E00               	movlw	0
  6897  001700  0100               	movlb	0	; () banked
  6898  001702  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  6899  001704  0100               	movlb	0	; () banked
  6900  001706  6FC8               	movwf	(??_printf+1)& (0+255),b
  6901  001708  0100               	movlb	0	; () banked
  6902  00170A  51C7               	movf	??_printf& (0+255),w,b
  6903  00170C  0100               	movlb	0	; () banked
  6904  00170E  11C8               	iorwf	(??_printf+1)& (0+255),w,b
  6905  001710  B4D8               	btfsc	status,2,c
  6906  001712  D004               	goto	l6712
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;doprnt.c: 1346: width--;
  6910  001714  0100               	movlb	0	; () banked
  6911  001716  07D9               	decf	printf@width& (0+255),f,b
  6912  001718  A0D8               	btfss	status,0,c
  6913  00171A  07DA               	decf	(printf@width+1)& (0+255),f,b
  6914  00171C                     l6712:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;doprnt.c: 1381: if(width > c)
  6918  00171C  0E80               	movlw	128
  6919  00171E  0100               	movlb	0	; () banked
  6920  001720  BFE6               	btfsc	printf@c& (0+255),7,b
  6921  001722  0E7F               	movlw	127
  6922  001724  0100               	movlb	0	; () banked
  6923  001726  6FC7               	movwf	??_printf& (0+255),b
  6924  001728  0100               	movlb	0	; () banked
  6925  00172A  51D9               	movf	printf@width& (0+255),w,b
  6926  00172C  0100               	movlb	0	; () banked
  6927  00172E  5DE6               	subwf	printf@c& (0+255),w,b
  6928  001730  0100               	movlb	0	; () banked
  6929  001732  51DA               	movf	(printf@width+1)& (0+255),w,b
  6930  001734  0A80               	xorlw	128
  6931  001736  0100               	movlb	0	; () banked
  6932  001738  59C7               	subwfb	??_printf& (0+255),w,b
  6933  00173A  B0D8               	btfsc	status,0,c
  6934  00173C  D00B               	goto	l6716
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;doprnt.c: 1382: width -= c;
  6938  00173E  0100               	movlb	0	; () banked
  6939  001740  51E6               	movf	printf@c& (0+255),w,b
  6940  001742  0100               	movlb	0	; () banked
  6941  001744  5FD9               	subwf	printf@width& (0+255),f,b
  6942  001746  0E00               	movlw	0
  6943  001748  0100               	movlb	0	; () banked
  6944  00174A  BFE6               	btfsc	printf@c& (0+255),7,b
  6945  00174C  0EFF               	movlw	255
  6946  00174E  0100               	movlb	0	; () banked
  6947  001750  5BDA               	subwfb	(printf@width+1)& (0+255),f,b
  6948  001752  D005               	goto	l6718
  6949  001754                     l6716:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;doprnt.c: 1383: else
  6953                           ;doprnt.c: 1384: width = 0;
  6954  001754  0E00               	movlw	0
  6955  001756  0100               	movlb	0	; () banked
  6956  001758  6FDA               	movwf	(printf@width+1)& (0+255),b
  6957  00175A  0E00               	movlw	0
  6958  00175C  6FD9               	movwf	printf@width& (0+255),b
  6959  00175E                     l6718:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;doprnt.c: 1387: if(flag & 0x04) {
  6963  00175E  0100               	movlb	0	; () banked
  6964  001760  A5E1               	btfss	printf@flag& (0+255),2,b
  6965  001762  D021               	goto	l6730
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;doprnt.c: 1392: if(flag & 0x03)
  6969  001764  0E03               	movlw	3
  6970  001766  0100               	movlb	0	; () banked
  6971  001768  15E1               	andwf	printf@flag& (0+255),w,b
  6972  00176A  0100               	movlb	0	; () banked
  6973  00176C  6FC7               	movwf	??_printf& (0+255),b
  6974  00176E  0E00               	movlw	0
  6975  001770  0100               	movlb	0	; () banked
  6976  001772  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  6977  001774  0100               	movlb	0	; () banked
  6978  001776  6FC8               	movwf	(??_printf+1)& (0+255),b
  6979  001778  0100               	movlb	0	; () banked
  6980  00177A  51C7               	movf	??_printf& (0+255),w,b
  6981  00177C  0100               	movlb	0	; () banked
  6982  00177E  11C8               	iorwf	(??_printf+1)& (0+255),w,b
  6983  001780  B4D8               	btfsc	status,2,c
  6984  001782  D003               	goto	l6724
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;doprnt.c: 1393: (putch('-') );
  6988  001784  0E2D               	movlw	45
  6989  001786  EC78  F02F         	call	_putch
  6990  00178A                     l6724:
  6991                           
  6992                           ;doprnt.c: 1415: if(width)
  6993  00178A  0100               	movlb	0	; () banked
  6994  00178C  51D9               	movf	printf@width& (0+255),w,b
  6995  00178E  0100               	movlb	0	; () banked
  6996  001790  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  6997  001792  B4D8               	btfsc	status,2,c
  6998  001794  D02E               	goto	l6740
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;doprnt.c: 1417: (putch('0') );
  7002                           
  7003                           ; BSR set to: 0
  7004                           
  7005                           ;doprnt.c: 1416: do
  7006  001796  0E30               	movlw	48
  7007  001798  EC78  F02F         	call	_putch
  7008                           
  7009                           ;doprnt.c: 1418: while(--width);
  7010  00179C  0100               	movlb	0	; () banked
  7011  00179E  07D9               	decf	printf@width& (0+255),f,b
  7012  0017A0  A0D8               	btfss	status,0,c
  7013  0017A2  07DA               	decf	(printf@width+1)& (0+255),f,b
  7014  0017A4  D7F2               	goto	l6724
  7015  0017A6                     l6730:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;doprnt.c: 1422: {
  7019                           ;doprnt.c: 1424: if(width
  7020                           ;doprnt.c: 1428: )
  7021  0017A6  0100               	movlb	0	; () banked
  7022  0017A8  51D9               	movf	printf@width& (0+255),w,b
  7023  0017AA  0100               	movlb	0	; () banked
  7024  0017AC  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  7025  0017AE  B4D8               	btfsc	status,2,c
  7026  0017B0  D00D               	goto	l6736
  7027  0017B2                     l6732:
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;doprnt.c: 1430: (putch(' ') );
  7031  0017B2  0E20               	movlw	32
  7032  0017B4  EC78  F02F         	call	_putch
  7033                           
  7034                           ;doprnt.c: 1431: while(--width);
  7035  0017B8  0100               	movlb	0	; () banked
  7036  0017BA  07D9               	decf	printf@width& (0+255),f,b
  7037  0017BC  A0D8               	btfss	status,0,c
  7038  0017BE  07DA               	decf	(printf@width+1)& (0+255),f,b
  7039  0017C0  0100               	movlb	0	; () banked
  7040  0017C2  51D9               	movf	printf@width& (0+255),w,b
  7041  0017C4  0100               	movlb	0	; () banked
  7042  0017C6  11DA               	iorwf	(printf@width+1)& (0+255),w,b
  7043  0017C8  A4D8               	btfss	status,2,c
  7044  0017CA  D7F3               	goto	l6732
  7045  0017CC                     l6736:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;doprnt.c: 1438: if(flag & 0x03)
  7049  0017CC  0E03               	movlw	3
  7050  0017CE  0100               	movlb	0	; () banked
  7051  0017D0  15E1               	andwf	printf@flag& (0+255),w,b
  7052  0017D2  0100               	movlb	0	; () banked
  7053  0017D4  6FC7               	movwf	??_printf& (0+255),b
  7054  0017D6  0E00               	movlw	0
  7055  0017D8  0100               	movlb	0	; () banked
  7056  0017DA  15E2               	andwf	(printf@flag+1)& (0+255),w,b
  7057  0017DC  0100               	movlb	0	; () banked
  7058  0017DE  6FC8               	movwf	(??_printf+1)& (0+255),b
  7059  0017E0  0100               	movlb	0	; () banked
  7060  0017E2  51C7               	movf	??_printf& (0+255),w,b
  7061  0017E4  0100               	movlb	0	; () banked
  7062  0017E6  11C8               	iorwf	(??_printf+1)& (0+255),w,b
  7063  0017E8  B4D8               	btfsc	status,2,c
  7064  0017EA  D003               	goto	l6740
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;doprnt.c: 1439: (putch('-') );
  7068  0017EC  0E2D               	movlw	45
  7069  0017EE  EC78  F02F         	call	_putch
  7070  0017F2                     l6740:
  7071                           
  7072                           ;doprnt.c: 1469: }
  7073                           ;doprnt.c: 1472: prec = c;
  7074  0017F2  0100               	movlb	0	; () banked
  7075  0017F4  51E6               	movf	printf@c& (0+255),w,b
  7076  0017F6  0100               	movlb	0	; () banked
  7077  0017F8  6FD3               	movwf	printf@prec& (0+255),b
  7078  0017FA  6BD4               	clrf	(printf@prec+1)& (0+255),b
  7079  0017FC  BFD3               	btfsc	printf@prec& (0+255),7,b
  7080  0017FE  07D4               	decf	(printf@prec+1)& (0+255),f,b
  7081                           
  7082                           ;doprnt.c: 1474: while(prec--) {
  7083  001800  D08A               	goto	l6754
  7084  001802                     l6742:
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7088  001802  C0D3  F0C7         	movff	printf@prec,??_printf
  7089  001806  C0D4  F0C8         	movff	printf@prec+1,??_printf+1
  7090  00180A  0100               	movlb	0	; () banked
  7091  00180C  90D8               	bcf	status,0,c
  7092  00180E  37C7               	rlcf	??_printf& (0+255),f,b
  7093  001810  37C8               	rlcf	(??_printf+1)& (0+255),f,b
  7094  001812  0100               	movlb	0	; () banked
  7095  001814  90D8               	bcf	status,0,c
  7096  001816  37C7               	rlcf	??_printf& (0+255),f,b
  7097  001818  37C8               	rlcf	(??_printf+1)& (0+255),f,b
  7098  00181A  0E91               	movlw	low _dpowers
  7099  00181C  0100               	movlb	0	; () banked
  7100  00181E  25C7               	addwf	??_printf& (0+255),w,b
  7101  001820  6EF6               	movwf	tblptrl,c
  7102  001822  0EFB               	movlw	high _dpowers
  7103  001824  21C8               	addwfc	(??_printf+1)& (0+255),w,b
  7104  001826  6EF7               	movwf	tblptrh,c
  7105  001828                     	if	0	;There are less than 3 active tblptr bytes
  7106  001828                     	endif
  7107  001828  0009               	tblrd		*+
  7108  00182A  CFF5 F084          	movff	tablat,___lldiv@divisor
  7109  00182E  0009               	tblrd		*+
  7110  001830  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  7111  001834  0009               	tblrd		*+
  7112  001836  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  7113  00183A  000A               	tblrd		*-
  7114  00183C  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  7115  001840  C0DD  F080         	movff	printf@val,___lldiv@dividend
  7116  001844  C0DE  F081         	movff	printf@val+1,___lldiv@dividend+1
  7117  001848  C0DF  F082         	movff	printf@val+2,___lldiv@dividend+2
  7118  00184C  C0E0  F083         	movff	printf@val+3,___lldiv@dividend+3
  7119  001850  EC7D  F028         	call	___lldiv	;wreg free
  7120  001854  C080  F08D         	movff	?___lldiv,___llmod@dividend
  7121  001858  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  7122  00185C  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  7123  001860  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  7124  001864  0E0A               	movlw	10
  7125  001866  0100               	movlb	0	; () banked
  7126  001868  6F91               	movwf	___llmod@divisor& (0+255),b
  7127  00186A  0E00               	movlw	0
  7128  00186C  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  7129  00186E  0E00               	movlw	0
  7130  001870  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  7131  001872  0E00               	movlw	0
  7132  001874  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  7133  001876  EC83  F029         	call	___llmod	;wreg free
  7134  00187A  0100               	movlb	0	; () banked
  7135  00187C  518D               	movf	?___llmod& (0+255),w,b
  7136  00187E  0F30               	addlw	48
  7137  001880  0100               	movlb	0	; () banked
  7138  001882  6FE6               	movwf	printf@c& (0+255),b
  7139                           
  7140                           ;doprnt.c: 1491: break;
  7141  001884  D044               	goto	l6752
  7142  001886                     l6744:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;doprnt.c: 1499: {
  7146                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7147  001886  C0DD  F080         	movff	printf@val,___lldiv@dividend
  7148  00188A  C0DE  F081         	movff	printf@val+1,___lldiv@dividend+1
  7149  00188E  C0DF  F082         	movff	printf@val+2,___lldiv@dividend+2
  7150  001892  C0E0  F083         	movff	printf@val+3,___lldiv@dividend+3
  7151  001896  C0D3  F0C7         	movff	printf@prec,??_printf
  7152  00189A  C0D4  F0C8         	movff	printf@prec+1,??_printf+1
  7153  00189E  0100               	movlb	0	; () banked
  7154  0018A0  90D8               	bcf	status,0,c
  7155  0018A2  37C7               	rlcf	??_printf& (0+255),f,b
  7156  0018A4  37C8               	rlcf	(??_printf+1)& (0+255),f,b
  7157  0018A6  0100               	movlb	0	; () banked
  7158  0018A8  90D8               	bcf	status,0,c
  7159  0018AA  37C7               	rlcf	??_printf& (0+255),f,b
  7160  0018AC  37C8               	rlcf	(??_printf+1)& (0+255),f,b
  7161  0018AE  0E07               	movlw	low _hexpowers
  7162  0018B0  0100               	movlb	0	; () banked
  7163  0018B2  25C7               	addwf	??_printf& (0+255),w,b
  7164  0018B4  6EF6               	movwf	tblptrl,c
  7165  0018B6  0EFC               	movlw	high _hexpowers
  7166  0018B8  21C8               	addwfc	(??_printf+1)& (0+255),w,b
  7167  0018BA  6EF7               	movwf	tblptrh,c
  7168  0018BC                     	if	0	;There are less than 3 active tblptr bytes
  7169  0018BC                     	endif
  7170  0018BC  0009               	tblrd		*+
  7171  0018BE  CFF5 F084          	movff	tablat,___lldiv@divisor
  7172  0018C2  0009               	tblrd		*+
  7173  0018C4  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  7174  0018C8  0009               	tblrd		*+
  7175  0018CA  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  7176  0018CE  000A               	tblrd		*-
  7177  0018D0  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  7178  0018D4  EC7D  F028         	call	___lldiv	;wreg free
  7179  0018D8  0100               	movlb	0	; () banked
  7180  0018DA  5180               	movf	?___lldiv& (0+255),w,b
  7181  0018DC  0B0F               	andlw	15
  7182  0018DE  0100               	movlb	0	; () banked
  7183  0018E0  6FD0               	movwf	printf@idx& (0+255),b
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  7187  0018E2  0100               	movlb	0	; () banked
  7188  0018E4  51D0               	movf	printf@idx& (0+255),w,b
  7189  0018E6  0D01               	mullw	1
  7190  0018E8  0E3F               	movlw	low STR_28
  7191  0018EA  24F3               	addwf	prodl,w,c
  7192  0018EC  6EF6               	movwf	tblptrl,c
  7193  0018EE  0EFC               	movlw	high STR_28
  7194  0018F0  20F4               	addwfc	prodh,w,c
  7195  0018F2  6EF7               	movwf	tblptrh,c
  7196  0018F4                     	if	0	;There are less than 3 active tblptr bytes
  7197  0018F4                     	endif
  7198  0018F4  0008               	tblrd		*
  7199  0018F6  CFF5 F0E6          	movff	tablat,printf@c
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;doprnt.c: 1523: }
  7203                           
  7204                           ;doprnt.c: 1508: }
  7205                           ;doprnt.c: 1510: break;
  7206  0018FA  D009               	goto	l6752
  7207  0018FC                     l6750:
  7208                           
  7209                           ; BSR set to: 0
  7210  0018FC  0100               	movlb	0	; () banked
  7211  0018FE  51E1               	movf	printf@flag& (0+255),w,b
  7212  001900  0B80               	andlw	128
  7213                           
  7214                           ; Switch size 1, requested type "space"
  7215                           ; Number of cases is 2, Range of values is 0 to 128
  7216                           ; switch strategies available:
  7217                           ; Name         Instructions Cycles
  7218                           ; simple_byte            7     4 (average)
  7219                           ;	Chosen strategy is simple_byte
  7220  001902  0A00               	xorlw	0	; case 0
  7221  001904  B4D8               	btfsc	status,2,c
  7222  001906  D77D               	goto	l6742
  7223  001908  0A80               	xorlw	128	; case 128
  7224  00190A  B4D8               	btfsc	status,2,c
  7225  00190C  D7BC               	goto	l6744
  7226  00190E                     l6752:
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;doprnt.c: 1524: (putch(c) );
  7230  00190E  0100               	movlb	0	; () banked
  7231  001910  51E6               	movf	printf@c& (0+255),w,b
  7232  001912  EC78  F02F         	call	_putch
  7233  001916                     l6754:
  7234  001916  0100               	movlb	0	; () banked
  7235  001918  07D3               	decf	printf@prec& (0+255),f,b
  7236  00191A  A0D8               	btfss	status,0,c
  7237  00191C  07D4               	decf	(printf@prec+1)& (0+255),f,b
  7238  00191E  0100               	movlb	0	; () banked
  7239  001920  29D3               	incf	printf@prec& (0+255),w,b
  7240  001922  E1EC               	bnz	l6750
  7241  001924  0100               	movlb	0	; () banked
  7242  001926  29D4               	incf	(printf@prec+1)& (0+255),w,b
  7243  001928  A4D8               	btfss	status,2,c
  7244  00192A  D7E8               	goto	l6750
  7245  00192C                     l6756:
  7246  00192C  C0BF  FFF6         	movff	printf@f,tblptrl
  7247  001930  C0C0  FFF7         	movff	printf@f+1,tblptrh
  7248  001934  0100               	movlb	0	; () banked
  7249  001936  4BBF               	infsnz	printf@f& (0+255),f,b
  7250  001938  2BC0               	incf	(printf@f+1)& (0+255),f,b
  7251  00193A                     	if	0	;tblptru may be non-zero
  7252  00193A                     	endif
  7253  00193A                     	if	0	;tblptru may be non-zero
  7254  00193A                     	endif
  7255  00193A  0008               	tblrd		*
  7256  00193C  CFF5 F0E6          	movff	tablat,printf@c
  7257  001940  0100               	movlb	0	; () banked
  7258  001942  51E6               	movf	printf@c& (0+255),w,b
  7259  001944  B4D8               	btfsc	status,2,c
  7260  001946  0012               	return	
  7261  001948  EFD3  F006         	goto	l6470
  7262  00194C                     __end_of_printf:
  7263                           	opt stack 0
  7264                           tblptru	equ	0xFF8
  7265                           tblptrh	equ	0xFF7
  7266                           tblptrl	equ	0xFF6
  7267                           tablat	equ	0xFF5
  7268                           prodh	equ	0xFF4
  7269                           prodl	equ	0xFF3
  7270                           intcon	equ	0xFF2
  7271                           intcon2	equ	0xFF1
  7272                           postinc0	equ	0xFEE
  7273                           wreg	equ	0xFE8
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _scale *****************
  7282 ;; Defined at:
  7283 ;;		line 425 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  scl             1    wreg     char 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  scl             1   41[BANK0 ] char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  3   35[BANK0 ] char 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7297 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;Total ram usage:        7 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    8
  7304 ;; This function calls:
  7305 ;;		___awdiv
  7306 ;;		___awmod
  7307 ;;		___ftmul
  7308 ;;		___wmul
  7309 ;; This function is called by:
  7310 ;;		_printf
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text9
  7315  0029B8                     __ptext9:
  7316                           	opt stack 0
  7317  0029B8                     _scale:
  7318                           	opt stack 21
  7319                           
  7320                           ;incstack = 0
  7321                           ;scale@scl stored from wreg
  7322  0029B8  0100               	movlb	0	; () banked
  7323  0029BA  6FA9               	movwf	scale@scl& (0+255),b
  7324                           
  7325                           ;doprnt.c: 428: if(scl < 0) {
  7326  0029BC  0100               	movlb	0	; () banked
  7327  0029BE  AFA9               	btfss	scale@scl& (0+255),7,b
  7328  0029C0  D12A               	goto	l5748
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;doprnt.c: 429: scl = -scl;
  7332  0029C2  0100               	movlb	0	; () banked
  7333  0029C4  6DA9               	negf	scale@scl& (0+255),b
  7334                           
  7335                           ;doprnt.c: 430: if(scl>=110)
  7336  0029C6  0100               	movlb	0	; () banked
  7337  0029C8  51A9               	movf	scale@scl& (0+255),w,b
  7338  0029CA  0A80               	xorlw	128
  7339  0029CC  0F12               	addlw	-238
  7340  0029CE  A0D8               	btfss	status,0,c
  7341  0029D0  D0AC               	goto	l5738
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7345  0029D2  0E00               	movlw	0
  7346  0029D4  0100               	movlb	0	; () banked
  7347  0029D6  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7348  0029D8  0E03               	movlw	3
  7349  0029DA  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7350  0029DC  0E00               	movlw	0
  7351  0029DE  0100               	movlb	0	; () banked
  7352  0029E0  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7353  0029E2  0E0A               	movlw	10
  7354  0029E4  6F88               	movwf	___awdiv@divisor& (0+255),b
  7355  0029E6  0E00               	movlw	0
  7356  0029E8  0100               	movlb	0	; () banked
  7357  0029EA  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7358  0029EC  0E64               	movlw	100
  7359  0029EE  6F82               	movwf	___awmod@divisor& (0+255),b
  7360  0029F0  0100               	movlb	0	; () banked
  7361  0029F2  51A9               	movf	scale@scl& (0+255),w,b
  7362  0029F4  0100               	movlb	0	; () banked
  7363  0029F6  6F80               	movwf	___awmod@dividend& (0+255),b
  7364  0029F8  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7365  0029FA  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7366  0029FC  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7367  0029FE  EC32  F029         	call	___awmod	;wreg free
  7368  002A02  C080  F086         	movff	?___awmod,___awdiv@dividend
  7369  002A06  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  7370  002A0A  EC1E  F028         	call	___awdiv	;wreg free
  7371  002A0E  0E09               	movlw	9
  7372  002A10  0100               	movlb	0	; () banked
  7373  002A12  2586               	addwf	?___awdiv& (0+255),w,b
  7374  002A14  0100               	movlb	0	; () banked
  7375  002A16  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7376  002A18  0E00               	movlw	0
  7377  002A1A  0100               	movlb	0	; () banked
  7378  002A1C  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7379  002A1E  0100               	movlb	0	; () banked
  7380  002A20  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7381  002A22  EC59  F02E         	call	___wmul	;wreg free
  7382  002A26  0EE0               	movlw	low __npowers_
  7383  002A28  0100               	movlb	0	; () banked
  7384  002A2A  258E               	addwf	?___wmul& (0+255),w,b
  7385  002A2C  6EF6               	movwf	tblptrl,c
  7386  002A2E  0EFB               	movlw	high __npowers_
  7387  002A30  0100               	movlb	0	; () banked
  7388  002A32  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7389  002A34  6EF7               	movwf	tblptrh,c
  7390  002A36                     	if	0	;There are less than 3 active tblptr bytes
  7391  002A36                     	endif
  7392  002A36  0009               	tblrd		*+
  7393  002A38  CFF5 F097          	movff	tablat,___ftmul@f2
  7394  002A3C  0009               	tblrd		*+
  7395  002A3E  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7396  002A42  000A               	tblrd		*-
  7397  002A44  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7398  002A48  0E00               	movlw	0
  7399  002A4A  0100               	movlb	0	; () banked
  7400  002A4C  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7401  002A4E  0E64               	movlw	100
  7402  002A50  6F88               	movwf	___awdiv@divisor& (0+255),b
  7403  002A52  0100               	movlb	0	; () banked
  7404  002A54  51A9               	movf	scale@scl& (0+255),w,b
  7405  002A56  0100               	movlb	0	; () banked
  7406  002A58  6F86               	movwf	___awdiv@dividend& (0+255),b
  7407  002A5A  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7408  002A5C  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7409  002A5E  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7410  002A60  EC1E  F028         	call	___awdiv	;wreg free
  7411  002A64  0E12               	movlw	18
  7412  002A66  0100               	movlb	0	; () banked
  7413  002A68  2586               	addwf	?___awdiv& (0+255),w,b
  7414  002A6A  0100               	movlb	0	; () banked
  7415  002A6C  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7416  002A6E  0E00               	movlw	0
  7417  002A70  0100               	movlb	0	; () banked
  7418  002A72  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7419  002A74  0100               	movlb	0	; () banked
  7420  002A76  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7421  002A78  0E00               	movlw	0
  7422  002A7A  0100               	movlb	0	; () banked
  7423  002A7C  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7424  002A7E  0E03               	movlw	3
  7425  002A80  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7426  002A82  EC59  F02E         	call	___wmul	;wreg free
  7427  002A86  0EE0               	movlw	low __npowers_
  7428  002A88  0100               	movlb	0	; () banked
  7429  002A8A  258E               	addwf	?___wmul& (0+255),w,b
  7430  002A8C  6EF6               	movwf	tblptrl,c
  7431  002A8E  0EFB               	movlw	high __npowers_
  7432  002A90  0100               	movlb	0	; () banked
  7433  002A92  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7434  002A94  6EF7               	movwf	tblptrh,c
  7435  002A96                     	if	0	;There are less than 3 active tblptr bytes
  7436  002A96                     	endif
  7437  002A96  0009               	tblrd		*+
  7438  002A98  CFF5 F094          	movff	tablat,___ftmul@f1
  7439  002A9C  0009               	tblrd		*+
  7440  002A9E  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7441  002AA2  000A               	tblrd		*-
  7442  002AA4  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7443  002AA8  EC67  F021         	call	___ftmul	;wreg free
  7444  002AAC  C094  F0A6         	movff	?___ftmul,_scale$1561
  7445  002AB0  C095  F0A7         	movff	?___ftmul+1,_scale$1561+1
  7446  002AB4  C096  F0A8         	movff	?___ftmul+2,_scale$1561+2
  7447                           
  7448                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7449  002AB8  C0A6  F094         	movff	_scale$1561,___ftmul@f1
  7450  002ABC  C0A7  F095         	movff	_scale$1561+1,___ftmul@f1+1
  7451  002AC0  C0A8  F096         	movff	_scale$1561+2,___ftmul@f1+2
  7452  002AC4  0E00               	movlw	0
  7453  002AC6  0100               	movlb	0	; () banked
  7454  002AC8  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7455  002ACA  0E03               	movlw	3
  7456  002ACC  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7457  002ACE  0E00               	movlw	0
  7458  002AD0  0100               	movlb	0	; () banked
  7459  002AD2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7460  002AD4  0E0A               	movlw	10
  7461  002AD6  6F82               	movwf	___awmod@divisor& (0+255),b
  7462  002AD8  0100               	movlb	0	; () banked
  7463  002ADA  51A9               	movf	scale@scl& (0+255),w,b
  7464  002ADC  0100               	movlb	0	; () banked
  7465  002ADE  6F80               	movwf	___awmod@dividend& (0+255),b
  7466  002AE0  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7467  002AE2  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7468  002AE4  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7469  002AE6  EC32  F029         	call	___awmod	;wreg free
  7470  002AEA  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7471  002AEE  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7472  002AF2  EC59  F02E         	call	___wmul	;wreg free
  7473  002AF6  0EE0               	movlw	low __npowers_
  7474  002AF8  0100               	movlb	0	; () banked
  7475  002AFA  258E               	addwf	?___wmul& (0+255),w,b
  7476  002AFC  6EF6               	movwf	tblptrl,c
  7477  002AFE  0EFB               	movlw	high __npowers_
  7478  002B00  0100               	movlb	0	; () banked
  7479  002B02  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7480  002B04  6EF7               	movwf	tblptrh,c
  7481  002B06                     	if	0	;There are less than 3 active tblptr bytes
  7482  002B06                     	endif
  7483  002B06  0009               	tblrd		*+
  7484  002B08  CFF5 F097          	movff	tablat,___ftmul@f2
  7485  002B0C  0009               	tblrd		*+
  7486  002B0E  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7487  002B12  000A               	tblrd		*-
  7488  002B14  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7489  002B18  EC67  F021         	call	___ftmul	;wreg free
  7490  002B1C  C094  F0A3         	movff	?___ftmul,?_scale
  7491  002B20  C095  F0A4         	movff	?___ftmul+1,?_scale+1
  7492  002B24  C096  F0A5         	movff	?___ftmul+2,?_scale+2
  7493  002B28  0012               	return	
  7494  002B2A                     l5738:
  7495                           
  7496                           ;doprnt.c: 432: else if(scl > 10)
  7497  002B2A  0100               	movlb	0	; () banked
  7498  002B2C  51A9               	movf	scale@scl& (0+255),w,b
  7499  002B2E  0A80               	xorlw	128
  7500  002B30  0F75               	addlw	-139
  7501  002B32  A0D8               	btfss	status,0,c
  7502  002B34  D05D               	goto	l5744
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7506  002B36  0E00               	movlw	0
  7507  002B38  0100               	movlb	0	; () banked
  7508  002B3A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7509  002B3C  0E0A               	movlw	10
  7510  002B3E  6F88               	movwf	___awdiv@divisor& (0+255),b
  7511  002B40  0100               	movlb	0	; () banked
  7512  002B42  51A9               	movf	scale@scl& (0+255),w,b
  7513  002B44  0100               	movlb	0	; () banked
  7514  002B46  6F86               	movwf	___awdiv@dividend& (0+255),b
  7515  002B48  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7516  002B4A  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7517  002B4C  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7518  002B4E  EC1E  F028         	call	___awdiv	;wreg free
  7519  002B52  0E09               	movlw	9
  7520  002B54  0100               	movlb	0	; () banked
  7521  002B56  2586               	addwf	?___awdiv& (0+255),w,b
  7522  002B58  0100               	movlb	0	; () banked
  7523  002B5A  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7524  002B5C  0E00               	movlw	0
  7525  002B5E  0100               	movlb	0	; () banked
  7526  002B60  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7527  002B62  0100               	movlb	0	; () banked
  7528  002B64  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7529  002B66  0E00               	movlw	0
  7530  002B68  0100               	movlb	0	; () banked
  7531  002B6A  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7532  002B6C  0E03               	movlw	3
  7533  002B6E  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7534  002B70  EC59  F02E         	call	___wmul	;wreg free
  7535  002B74  0EE0               	movlw	low __npowers_
  7536  002B76  0100               	movlb	0	; () banked
  7537  002B78  258E               	addwf	?___wmul& (0+255),w,b
  7538  002B7A  6EF6               	movwf	tblptrl,c
  7539  002B7C  0EFB               	movlw	high __npowers_
  7540  002B7E  0100               	movlb	0	; () banked
  7541  002B80  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7542  002B82  6EF7               	movwf	tblptrh,c
  7543  002B84                     	if	0	;There are less than 3 active tblptr bytes
  7544  002B84                     	endif
  7545  002B84  0009               	tblrd		*+
  7546  002B86  CFF5 F094          	movff	tablat,___ftmul@f1
  7547  002B8A  0009               	tblrd		*+
  7548  002B8C  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7549  002B90  000A               	tblrd		*-
  7550  002B92  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7551  002B96  0E00               	movlw	0
  7552  002B98  0100               	movlb	0	; () banked
  7553  002B9A  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7554  002B9C  0E03               	movlw	3
  7555  002B9E  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7556  002BA0  0E00               	movlw	0
  7557  002BA2  0100               	movlb	0	; () banked
  7558  002BA4  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7559  002BA6  0E0A               	movlw	10
  7560  002BA8  6F82               	movwf	___awmod@divisor& (0+255),b
  7561  002BAA  0100               	movlb	0	; () banked
  7562  002BAC  51A9               	movf	scale@scl& (0+255),w,b
  7563  002BAE  0100               	movlb	0	; () banked
  7564  002BB0  6F80               	movwf	___awmod@dividend& (0+255),b
  7565  002BB2  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7566  002BB4  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7567  002BB6  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7568  002BB8  EC32  F029         	call	___awmod	;wreg free
  7569  002BBC  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7570  002BC0  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7571  002BC4  EC59  F02E         	call	___wmul	;wreg free
  7572  002BC8  0EE0               	movlw	low __npowers_
  7573  002BCA  0100               	movlb	0	; () banked
  7574  002BCC  258E               	addwf	?___wmul& (0+255),w,b
  7575  002BCE  6EF6               	movwf	tblptrl,c
  7576  002BD0  0EFB               	movlw	high __npowers_
  7577  002BD2  0100               	movlb	0	; () banked
  7578  002BD4  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7579  002BD6  6EF7               	movwf	tblptrh,c
  7580  002BD8                     	if	0	;There are less than 3 active tblptr bytes
  7581  002BD8                     	endif
  7582  002BD8  0009               	tblrd		*+
  7583  002BDA  CFF5 F097          	movff	tablat,___ftmul@f2
  7584  002BDE  0009               	tblrd		*+
  7585  002BE0  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7586  002BE4  000A               	tblrd		*-
  7587  002BE6  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7588  002BEA  EC67  F021         	call	___ftmul	;wreg free
  7589  002BEE  D796               	goto	L2
  7590  002BF0                     l5744:
  7591                           
  7592                           ;doprnt.c: 434: return _npowers_[scl];
  7593  002BF0  0100               	movlb	0	; () banked
  7594  002BF2  51A9               	movf	scale@scl& (0+255),w,b
  7595  002BF4  0D03               	mullw	3
  7596  002BF6  0EE0               	movlw	low __npowers_
  7597  002BF8  24F3               	addwf	prodl,w,c
  7598  002BFA  6EF6               	movwf	tblptrl,c
  7599  002BFC  0EFB               	movlw	high __npowers_
  7600  002BFE  20F4               	addwfc	prodh,w,c
  7601  002C00  6EF7               	movwf	tblptrh,c
  7602  002C02                     	if	0	;There are less than 3 active tblptr bytes
  7603  002C02                     	endif
  7604  002C02  0009               	tblrd		*+
  7605  002C04  CFF5 F0A3          	movff	tablat,?_scale
  7606  002C08  0009               	tblrd		*+
  7607  002C0A  CFF5 F0A4          	movff	tablat,?_scale+1
  7608  002C0E  000A               	tblrd		*-
  7609  002C10  CFF5 F0A5          	movff	tablat,?_scale+2
  7610                           
  7611                           ; BSR set to: 0
  7612  002C14  0012               	return	
  7613  002C16                     l5748:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;doprnt.c: 435: }
  7617                           ;doprnt.c: 436: if(scl>=110)
  7618  002C16  0100               	movlb	0	; () banked
  7619  002C18  51A9               	movf	scale@scl& (0+255),w,b
  7620  002C1A  0A80               	xorlw	128
  7621  002C1C  0F12               	addlw	-238
  7622  002C1E  A0D8               	btfss	status,0,c
  7623  002C20  D0AC               	goto	l5756
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7627  002C22  0E00               	movlw	0
  7628  002C24  0100               	movlb	0	; () banked
  7629  002C26  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7630  002C28  0E03               	movlw	3
  7631  002C2A  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7632  002C2C  0E00               	movlw	0
  7633  002C2E  0100               	movlb	0	; () banked
  7634  002C30  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7635  002C32  0E0A               	movlw	10
  7636  002C34  6F88               	movwf	___awdiv@divisor& (0+255),b
  7637  002C36  0E00               	movlw	0
  7638  002C38  0100               	movlb	0	; () banked
  7639  002C3A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7640  002C3C  0E64               	movlw	100
  7641  002C3E  6F82               	movwf	___awmod@divisor& (0+255),b
  7642  002C40  0100               	movlb	0	; () banked
  7643  002C42  51A9               	movf	scale@scl& (0+255),w,b
  7644  002C44  0100               	movlb	0	; () banked
  7645  002C46  6F80               	movwf	___awmod@dividend& (0+255),b
  7646  002C48  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7647  002C4A  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7648  002C4C  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7649  002C4E  EC32  F029         	call	___awmod	;wreg free
  7650  002C52  C080  F086         	movff	?___awmod,___awdiv@dividend
  7651  002C56  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  7652  002C5A  EC1E  F028         	call	___awdiv	;wreg free
  7653  002C5E  0E09               	movlw	9
  7654  002C60  0100               	movlb	0	; () banked
  7655  002C62  2586               	addwf	?___awdiv& (0+255),w,b
  7656  002C64  0100               	movlb	0	; () banked
  7657  002C66  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7658  002C68  0E00               	movlw	0
  7659  002C6A  0100               	movlb	0	; () banked
  7660  002C6C  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7661  002C6E  0100               	movlb	0	; () banked
  7662  002C70  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7663  002C72  EC59  F02E         	call	___wmul	;wreg free
  7664  002C76  0EB9               	movlw	low __powers_
  7665  002C78  0100               	movlb	0	; () banked
  7666  002C7A  258E               	addwf	?___wmul& (0+255),w,b
  7667  002C7C  6EF6               	movwf	tblptrl,c
  7668  002C7E  0EFB               	movlw	high __powers_
  7669  002C80  0100               	movlb	0	; () banked
  7670  002C82  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7671  002C84  6EF7               	movwf	tblptrh,c
  7672  002C86                     	if	0	;There are less than 3 active tblptr bytes
  7673  002C86                     	endif
  7674  002C86  0009               	tblrd		*+
  7675  002C88  CFF5 F097          	movff	tablat,___ftmul@f2
  7676  002C8C  0009               	tblrd		*+
  7677  002C8E  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7678  002C92  000A               	tblrd		*-
  7679  002C94  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7680  002C98  0E00               	movlw	0
  7681  002C9A  0100               	movlb	0	; () banked
  7682  002C9C  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7683  002C9E  0E64               	movlw	100
  7684  002CA0  6F88               	movwf	___awdiv@divisor& (0+255),b
  7685  002CA2  0100               	movlb	0	; () banked
  7686  002CA4  51A9               	movf	scale@scl& (0+255),w,b
  7687  002CA6  0100               	movlb	0	; () banked
  7688  002CA8  6F86               	movwf	___awdiv@dividend& (0+255),b
  7689  002CAA  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7690  002CAC  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7691  002CAE  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7692  002CB0  EC1E  F028         	call	___awdiv	;wreg free
  7693  002CB4  0E12               	movlw	18
  7694  002CB6  0100               	movlb	0	; () banked
  7695  002CB8  2586               	addwf	?___awdiv& (0+255),w,b
  7696  002CBA  0100               	movlb	0	; () banked
  7697  002CBC  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7698  002CBE  0E00               	movlw	0
  7699  002CC0  0100               	movlb	0	; () banked
  7700  002CC2  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7701  002CC4  0100               	movlb	0	; () banked
  7702  002CC6  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7703  002CC8  0E00               	movlw	0
  7704  002CCA  0100               	movlb	0	; () banked
  7705  002CCC  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7706  002CCE  0E03               	movlw	3
  7707  002CD0  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7708  002CD2  EC59  F02E         	call	___wmul	;wreg free
  7709  002CD6  0EB9               	movlw	low __powers_
  7710  002CD8  0100               	movlb	0	; () banked
  7711  002CDA  258E               	addwf	?___wmul& (0+255),w,b
  7712  002CDC  6EF6               	movwf	tblptrl,c
  7713  002CDE  0EFB               	movlw	high __powers_
  7714  002CE0  0100               	movlb	0	; () banked
  7715  002CE2  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7716  002CE4  6EF7               	movwf	tblptrh,c
  7717  002CE6                     	if	0	;There are less than 3 active tblptr bytes
  7718  002CE6                     	endif
  7719  002CE6  0009               	tblrd		*+
  7720  002CE8  CFF5 F094          	movff	tablat,___ftmul@f1
  7721  002CEC  0009               	tblrd		*+
  7722  002CEE  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7723  002CF2  000A               	tblrd		*-
  7724  002CF4  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7725  002CF8  EC67  F021         	call	___ftmul	;wreg free
  7726  002CFC  C094  F0A6         	movff	?___ftmul,_scale$1561
  7727  002D00  C095  F0A7         	movff	?___ftmul+1,_scale$1561+1
  7728  002D04  C096  F0A8         	movff	?___ftmul+2,_scale$1561+2
  7729                           
  7730                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7731  002D08  C0A6  F094         	movff	_scale$1561,___ftmul@f1
  7732  002D0C  C0A7  F095         	movff	_scale$1561+1,___ftmul@f1+1
  7733  002D10  C0A8  F096         	movff	_scale$1561+2,___ftmul@f1+2
  7734  002D14  0E00               	movlw	0
  7735  002D16  0100               	movlb	0	; () banked
  7736  002D18  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7737  002D1A  0E03               	movlw	3
  7738  002D1C  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7739  002D1E  0E00               	movlw	0
  7740  002D20  0100               	movlb	0	; () banked
  7741  002D22  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7742  002D24  0E0A               	movlw	10
  7743  002D26  6F82               	movwf	___awmod@divisor& (0+255),b
  7744  002D28  0100               	movlb	0	; () banked
  7745  002D2A  51A9               	movf	scale@scl& (0+255),w,b
  7746  002D2C  0100               	movlb	0	; () banked
  7747  002D2E  6F80               	movwf	___awmod@dividend& (0+255),b
  7748  002D30  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7749  002D32  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7750  002D34  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7751  002D36  EC32  F029         	call	___awmod	;wreg free
  7752  002D3A  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7753  002D3E  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7754  002D42  EC59  F02E         	call	___wmul	;wreg free
  7755  002D46  0EB9               	movlw	low __powers_
  7756  002D48  0100               	movlb	0	; () banked
  7757  002D4A  258E               	addwf	?___wmul& (0+255),w,b
  7758  002D4C  6EF6               	movwf	tblptrl,c
  7759  002D4E  0EFB               	movlw	high __powers_
  7760  002D50  0100               	movlb	0	; () banked
  7761  002D52  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7762  002D54  6EF7               	movwf	tblptrh,c
  7763  002D56                     	if	0	;There are less than 3 active tblptr bytes
  7764  002D56                     	endif
  7765  002D56  0009               	tblrd		*+
  7766  002D58  CFF5 F097          	movff	tablat,___ftmul@f2
  7767  002D5C  0009               	tblrd		*+
  7768  002D5E  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7769  002D62  000A               	tblrd		*-
  7770  002D64  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7771  002D68  EC67  F021         	call	___ftmul	;wreg free
  7772  002D6C  C094  F0A3         	movff	?___ftmul,?_scale
  7773  002D70  C095  F0A4         	movff	?___ftmul+1,?_scale+1
  7774  002D74  C096  F0A5         	movff	?___ftmul+2,?_scale+2
  7775  002D78  0012               	return	
  7776  002D7A                     l5756:
  7777                           
  7778                           ;doprnt.c: 438: else if(scl > 10)
  7779  002D7A  0100               	movlb	0	; () banked
  7780  002D7C  51A9               	movf	scale@scl& (0+255),w,b
  7781  002D7E  0A80               	xorlw	128
  7782  002D80  0F75               	addlw	-139
  7783  002D82  A0D8               	btfss	status,0,c
  7784  002D84  D05D               	goto	l5762
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7788  002D86  0E00               	movlw	0
  7789  002D88  0100               	movlb	0	; () banked
  7790  002D8A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7791  002D8C  0E0A               	movlw	10
  7792  002D8E  6F88               	movwf	___awdiv@divisor& (0+255),b
  7793  002D90  0100               	movlb	0	; () banked
  7794  002D92  51A9               	movf	scale@scl& (0+255),w,b
  7795  002D94  0100               	movlb	0	; () banked
  7796  002D96  6F86               	movwf	___awdiv@dividend& (0+255),b
  7797  002D98  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  7798  002D9A  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  7799  002D9C  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7800  002D9E  EC1E  F028         	call	___awdiv	;wreg free
  7801  002DA2  0E09               	movlw	9
  7802  002DA4  0100               	movlb	0	; () banked
  7803  002DA6  2586               	addwf	?___awdiv& (0+255),w,b
  7804  002DA8  0100               	movlb	0	; () banked
  7805  002DAA  6F8E               	movwf	___wmul@multiplier& (0+255),b
  7806  002DAC  0E00               	movlw	0
  7807  002DAE  0100               	movlb	0	; () banked
  7808  002DB0  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  7809  002DB2  0100               	movlb	0	; () banked
  7810  002DB4  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7811  002DB6  0E00               	movlw	0
  7812  002DB8  0100               	movlb	0	; () banked
  7813  002DBA  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7814  002DBC  0E03               	movlw	3
  7815  002DBE  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7816  002DC0  EC59  F02E         	call	___wmul	;wreg free
  7817  002DC4  0EB9               	movlw	low __powers_
  7818  002DC6  0100               	movlb	0	; () banked
  7819  002DC8  258E               	addwf	?___wmul& (0+255),w,b
  7820  002DCA  6EF6               	movwf	tblptrl,c
  7821  002DCC  0EFB               	movlw	high __powers_
  7822  002DCE  0100               	movlb	0	; () banked
  7823  002DD0  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7824  002DD2  6EF7               	movwf	tblptrh,c
  7825  002DD4                     	if	0	;There are less than 3 active tblptr bytes
  7826  002DD4                     	endif
  7827  002DD4  0009               	tblrd		*+
  7828  002DD6  CFF5 F094          	movff	tablat,___ftmul@f1
  7829  002DDA  0009               	tblrd		*+
  7830  002DDC  CFF5 F095          	movff	tablat,___ftmul@f1+1
  7831  002DE0  000A               	tblrd		*-
  7832  002DE2  CFF5 F096          	movff	tablat,___ftmul@f1+2
  7833  002DE6  0E00               	movlw	0
  7834  002DE8  0100               	movlb	0	; () banked
  7835  002DEA  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7836  002DEC  0E03               	movlw	3
  7837  002DEE  6F90               	movwf	___wmul@multiplicand& (0+255),b
  7838  002DF0  0E00               	movlw	0
  7839  002DF2  0100               	movlb	0	; () banked
  7840  002DF4  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  7841  002DF6  0E0A               	movlw	10
  7842  002DF8  6F82               	movwf	___awmod@divisor& (0+255),b
  7843  002DFA  0100               	movlb	0	; () banked
  7844  002DFC  51A9               	movf	scale@scl& (0+255),w,b
  7845  002DFE  0100               	movlb	0	; () banked
  7846  002E00  6F80               	movwf	___awmod@dividend& (0+255),b
  7847  002E02  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  7848  002E04  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  7849  002E06  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  7850  002E08  EC32  F029         	call	___awmod	;wreg free
  7851  002E0C  C080  F08E         	movff	?___awmod,___wmul@multiplier
  7852  002E10  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  7853  002E14  EC59  F02E         	call	___wmul	;wreg free
  7854  002E18  0EB9               	movlw	low __powers_
  7855  002E1A  0100               	movlb	0	; () banked
  7856  002E1C  258E               	addwf	?___wmul& (0+255),w,b
  7857  002E1E  6EF6               	movwf	tblptrl,c
  7858  002E20  0EFB               	movlw	high __powers_
  7859  002E22  0100               	movlb	0	; () banked
  7860  002E24  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  7861  002E26  6EF7               	movwf	tblptrh,c
  7862  002E28                     	if	0	;There are less than 3 active tblptr bytes
  7863  002E28                     	endif
  7864  002E28  0009               	tblrd		*+
  7865  002E2A  CFF5 F097          	movff	tablat,___ftmul@f2
  7866  002E2E  0009               	tblrd		*+
  7867  002E30  CFF5 F098          	movff	tablat,___ftmul@f2+1
  7868  002E34  000A               	tblrd		*-
  7869  002E36  CFF5 F099          	movff	tablat,___ftmul@f2+2
  7870  002E3A  EC67  F021         	call	___ftmul	;wreg free
  7871  002E3E  D796               	goto	L3
  7872  002E40                     l5762:
  7873                           
  7874                           ;doprnt.c: 440: return _powers_[scl];
  7875  002E40  0100               	movlb	0	; () banked
  7876  002E42  51A9               	movf	scale@scl& (0+255),w,b
  7877  002E44  0D03               	mullw	3
  7878  002E46  0EB9               	movlw	low __powers_
  7879  002E48  24F3               	addwf	prodl,w,c
  7880  002E4A  6EF6               	movwf	tblptrl,c
  7881  002E4C  0EFB               	movlw	high __powers_
  7882  002E4E  20F4               	addwfc	prodh,w,c
  7883  002E50  6EF7               	movwf	tblptrh,c
  7884  002E52                     	if	0	;There are less than 3 active tblptr bytes
  7885  002E52                     	endif
  7886  002E52  0009               	tblrd		*+
  7887  002E54  CFF5 F0A3          	movff	tablat,?_scale
  7888  002E58  0009               	tblrd		*+
  7889  002E5A  CFF5 F0A4          	movff	tablat,?_scale+1
  7890  002E5E  000A               	tblrd		*-
  7891  002E60  CFF5 F0A5          	movff	tablat,?_scale+2
  7892  002E64  0012               	return	
  7893  002E66                     __end_of_scale:
  7894                           	opt stack 0
  7895                           tblptru	equ	0xFF8
  7896                           tblptrh	equ	0xFF7
  7897                           tblptrl	equ	0xFF6
  7898                           tablat	equ	0xFF5
  7899                           prodh	equ	0xFF4
  7900                           prodl	equ	0xFF3
  7901                           intcon	equ	0xFF2
  7902                           intcon2	equ	0xFF1
  7903                           postinc0	equ	0xFEE
  7904                           wreg	equ	0xFE8
  7905                           indf2	equ	0xFDF
  7906                           postinc2	equ	0xFDE
  7907                           postdec2	equ	0xFDD
  7908                           fsr2h	equ	0xFDA
  7909                           fsr2l	equ	0xFD9
  7910                           status	equ	0xFD8
  7911                           
  7912 ;; *************** function _putch *****************
  7913 ;; Defined at:
  7914 ;;		line 30 in file "lcd.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  data            1    wreg     unsigned char 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  data            1    2[BANK0 ] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;Total ram usage:        1 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    7
  7935 ;; This function calls:
  7936 ;;		_lcdNibble
  7937 ;; This function is called by:
  7938 ;;		_printf
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text10
  7943  005EF0                     __ptext10:
  7944                           	opt stack 0
  7945  005EF0                     _putch:
  7946                           	opt stack 22
  7947                           
  7948                           ;incstack = 0
  7949                           ;putch@data stored from wreg
  7950  005EF0  0100               	movlb	0	; () banked
  7951  005EF2  6F82               	movwf	putch@data& (0+255),b
  7952                           
  7953                           ;lcd.c: 31: LATDbits.LATD2 = 1;
  7954  005EF4  848C               	bsf	3980,2,c	;volatile
  7955                           
  7956                           ;lcd.c: 32: lcdNibble(data);
  7957  005EF6  0100               	movlb	0	; () banked
  7958  005EF8  5182               	movf	putch@data& (0+255),w,b
  7959  005EFA  EC05  F02C         	call	_lcdNibble
  7960  005EFE  0012               	return		;funcret
  7961  005F00                     __end_of_putch:
  7962                           	opt stack 0
  7963                           tblptru	equ	0xFF8
  7964                           tblptrh	equ	0xFF7
  7965                           tblptrl	equ	0xFF6
  7966                           tablat	equ	0xFF5
  7967                           prodh	equ	0xFF4
  7968                           prodl	equ	0xFF3
  7969                           intcon	equ	0xFF2
  7970                           intcon2	equ	0xFF1
  7971                           postinc0	equ	0xFEE
  7972                           wreg	equ	0xFE8
  7973                           indf2	equ	0xFDF
  7974                           postinc2	equ	0xFDE
  7975                           postdec2	equ	0xFDD
  7976                           fsr2h	equ	0xFDA
  7977                           fsr2l	equ	0xFD9
  7978                           status	equ	0xFD8
  7979                           
  7980 ;; *************** function _isdigit *****************
  7981 ;; Defined at:
  7982 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/isdigit.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  c               1    wreg     unsigned char 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  c               1    2[BANK0 ] unsigned char 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;		None               void
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;Total ram usage:        3 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    6
  8003 ;; This function calls:
  8004 ;;		Nothing
  8005 ;; This function is called by:
  8006 ;;		_printf
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text11
  8011  005E00                     __ptext11:
  8012                           	opt stack 0
  8013  005E00                     _isdigit:
  8014                           	opt stack 23
  8015                           
  8016                           ;incstack = 0
  8017                           ;isdigit@c stored from wreg
  8018  005E00  0100               	movlb	0	; () banked
  8019  005E02  6F82               	movwf	isdigit@c& (0+255),b
  8020  005E04  0E00               	movlw	0
  8021  005E06  0100               	movlb	0	; () banked
  8022  005E08  6F81               	movwf	_isdigit$1222& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025  005E0A  0E3A               	movlw	58
  8026  005E0C  0100               	movlb	0	; () banked
  8027  005E0E  6182               	cpfslt	isdigit@c& (0+255),b
  8028  005E10  D007               	goto	l5774
  8029                           
  8030                           ; BSR set to: 0
  8031  005E12  0E2F               	movlw	47
  8032  005E14  0100               	movlb	0	; () banked
  8033  005E16  6582               	cpfsgt	isdigit@c& (0+255),b
  8034  005E18  D003               	goto	l5774
  8035                           
  8036                           ; BSR set to: 0
  8037  005E1A  0E01               	movlw	1
  8038  005E1C  0100               	movlb	0	; () banked
  8039  005E1E  6F81               	movwf	_isdigit$1222& (0+255),b
  8040  005E20                     l5774:
  8041                           
  8042                           ; BSR set to: 0
  8043  005E20  C081  F080         	movff	_isdigit$1222,??_isdigit
  8044  005E24  0100               	movlb	0	; () banked
  8045  005E26  3180               	rrcf	??_isdigit& (0+255),w,b
  8046  005E28  0012               	return	
  8047  005E2A                     __end_of_isdigit:
  8048                           	opt stack 0
  8049                           tblptru	equ	0xFF8
  8050                           tblptrh	equ	0xFF7
  8051                           tblptrl	equ	0xFF6
  8052                           tablat	equ	0xFF5
  8053                           prodh	equ	0xFF4
  8054                           prodl	equ	0xFF3
  8055                           intcon	equ	0xFF2
  8056                           intcon2	equ	0xFF1
  8057                           postinc0	equ	0xFEE
  8058                           wreg	equ	0xFE8
  8059                           indf2	equ	0xFDF
  8060                           postinc2	equ	0xFDE
  8061                           postdec2	equ	0xFDD
  8062                           fsr2h	equ	0xFDA
  8063                           fsr2l	equ	0xFD9
  8064                           status	equ	0xFD8
  8065                           
  8066 ;; *************** function _fround *****************
  8067 ;; Defined at:
  8068 ;;		line 409 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  prec            1    wreg     unsigned char 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;  prec            1   44[BANK0 ] unsigned char 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  3   35[BANK0 ] unsigned char 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;Total ram usage:       10 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    8
  8089 ;; This function calls:
  8090 ;;		___awdiv
  8091 ;;		___awmod
  8092 ;;		___ftmul
  8093 ;;		___wmul
  8094 ;; This function is called by:
  8095 ;;		_printf
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text12
  8100  0036A2                     __ptext12:
  8101                           	opt stack 0
  8102  0036A2                     _fround:
  8103                           	opt stack 21
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;incstack = 0
  8107                           ;fround@prec stored from wreg
  8108  0036A2  0100               	movlb	0	; () banked
  8109  0036A4  6FAC               	movwf	fround@prec& (0+255),b
  8110                           
  8111                           ;doprnt.c: 413: if(prec>=110)
  8112  0036A6  0E6D               	movlw	109
  8113  0036A8  0100               	movlb	0	; () banked
  8114  0036AA  65AC               	cpfsgt	fround@prec& (0+255),b
  8115  0036AC  D0BA               	goto	l5716
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8119  0036AE  0E00               	movlw	0
  8120  0036B0  0100               	movlb	0	; () banked
  8121  0036B2  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8122  0036B4  0E03               	movlw	3
  8123  0036B6  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8124  0036B8  0E00               	movlw	0
  8125  0036BA  0100               	movlb	0	; () banked
  8126  0036BC  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8127  0036BE  0E0A               	movlw	10
  8128  0036C0  6F88               	movwf	___awdiv@divisor& (0+255),b
  8129  0036C2  0E00               	movlw	0
  8130  0036C4  0100               	movlb	0	; () banked
  8131  0036C6  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8132  0036C8  0E64               	movlw	100
  8133  0036CA  6F82               	movwf	___awmod@divisor& (0+255),b
  8134  0036CC  C0AC  F080         	movff	fround@prec,___awmod@dividend
  8135  0036D0  0100               	movlb	0	; () banked
  8136  0036D2  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8137  0036D4  EC32  F029         	call	___awmod	;wreg free
  8138  0036D8  C080  F086         	movff	?___awmod,___awdiv@dividend
  8139  0036DC  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  8140  0036E0  EC1E  F028         	call	___awdiv	;wreg free
  8141  0036E4  0E09               	movlw	9
  8142  0036E6  0100               	movlb	0	; () banked
  8143  0036E8  2586               	addwf	?___awdiv& (0+255),w,b
  8144  0036EA  0100               	movlb	0	; () banked
  8145  0036EC  6F8E               	movwf	___wmul@multiplier& (0+255),b
  8146  0036EE  0E00               	movlw	0
  8147  0036F0  0100               	movlb	0	; () banked
  8148  0036F2  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  8149  0036F4  0100               	movlb	0	; () banked
  8150  0036F6  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8151  0036F8  EC59  F02E         	call	___wmul	;wreg free
  8152  0036FC  0EE0               	movlw	low __npowers_
  8153  0036FE  0100               	movlb	0	; () banked
  8154  003700  258E               	addwf	?___wmul& (0+255),w,b
  8155  003702  6EF6               	movwf	tblptrl,c
  8156  003704  0EFB               	movlw	high __npowers_
  8157  003706  0100               	movlb	0	; () banked
  8158  003708  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8159  00370A  6EF7               	movwf	tblptrh,c
  8160  00370C                     	if	0	;There are less than 3 active tblptr bytes
  8161  00370C                     	endif
  8162  00370C  0009               	tblrd		*+
  8163  00370E  CFF5 F097          	movff	tablat,___ftmul@f2
  8164  003712  0009               	tblrd		*+
  8165  003714  CFF5 F098          	movff	tablat,___ftmul@f2+1
  8166  003718  000A               	tblrd		*-
  8167  00371A  CFF5 F099          	movff	tablat,___ftmul@f2+2
  8168  00371E  0E00               	movlw	0
  8169  003720  0100               	movlb	0	; () banked
  8170  003722  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8171  003724  0E64               	movlw	100
  8172  003726  6F88               	movwf	___awdiv@divisor& (0+255),b
  8173  003728  C0AC  F086         	movff	fround@prec,___awdiv@dividend
  8174  00372C  0100               	movlb	0	; () banked
  8175  00372E  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8176  003730  EC1E  F028         	call	___awdiv	;wreg free
  8177  003734  0E12               	movlw	18
  8178  003736  0100               	movlb	0	; () banked
  8179  003738  2586               	addwf	?___awdiv& (0+255),w,b
  8180  00373A  0100               	movlb	0	; () banked
  8181  00373C  6F8E               	movwf	___wmul@multiplier& (0+255),b
  8182  00373E  0E00               	movlw	0
  8183  003740  0100               	movlb	0	; () banked
  8184  003742  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  8185  003744  0100               	movlb	0	; () banked
  8186  003746  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8187  003748  0E00               	movlw	0
  8188  00374A  0100               	movlb	0	; () banked
  8189  00374C  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8190  00374E  0E03               	movlw	3
  8191  003750  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8192  003752  EC59  F02E         	call	___wmul	;wreg free
  8193  003756  0EE0               	movlw	low __npowers_
  8194  003758  0100               	movlb	0	; () banked
  8195  00375A  258E               	addwf	?___wmul& (0+255),w,b
  8196  00375C  6EF6               	movwf	tblptrl,c
  8197  00375E  0EFB               	movlw	high __npowers_
  8198  003760  0100               	movlb	0	; () banked
  8199  003762  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8200  003764  6EF7               	movwf	tblptrh,c
  8201  003766                     	if	0	;There are less than 3 active tblptr bytes
  8202  003766                     	endif
  8203  003766  0009               	tblrd		*+
  8204  003768  CFF5 F094          	movff	tablat,___ftmul@f1
  8205  00376C  0009               	tblrd		*+
  8206  00376E  CFF5 F095          	movff	tablat,___ftmul@f1+1
  8207  003772  000A               	tblrd		*-
  8208  003774  CFF5 F096          	movff	tablat,___ftmul@f1+2
  8209  003778  EC67  F021         	call	___ftmul	;wreg free
  8210  00377C  C094  F0A9         	movff	?___ftmul,_fround$1559
  8211  003780  C095  F0AA         	movff	?___ftmul+1,_fround$1559+1
  8212  003784  C096  F0AB         	movff	?___ftmul+2,_fround$1559+2
  8213                           
  8214                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8215  003788  0E00               	movlw	0
  8216  00378A  0100               	movlb	0	; () banked
  8217  00378C  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8218  00378E  0E03               	movlw	3
  8219  003790  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8220  003792  0E00               	movlw	0
  8221  003794  0100               	movlb	0	; () banked
  8222  003796  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8223  003798  0E0A               	movlw	10
  8224  00379A  6F82               	movwf	___awmod@divisor& (0+255),b
  8225  00379C  C0AC  F080         	movff	fround@prec,___awmod@dividend
  8226  0037A0  0100               	movlb	0	; () banked
  8227  0037A2  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8228  0037A4  EC32  F029         	call	___awmod	;wreg free
  8229  0037A8  C080  F08E         	movff	?___awmod,___wmul@multiplier
  8230  0037AC  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  8231  0037B0  EC59  F02E         	call	___wmul	;wreg free
  8232  0037B4  0EE0               	movlw	low __npowers_
  8233  0037B6  0100               	movlb	0	; () banked
  8234  0037B8  258E               	addwf	?___wmul& (0+255),w,b
  8235  0037BA  6EF6               	movwf	tblptrl,c
  8236  0037BC  0EFB               	movlw	high __npowers_
  8237  0037BE  0100               	movlb	0	; () banked
  8238  0037C0  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8239  0037C2  6EF7               	movwf	tblptrh,c
  8240  0037C4                     	if	0	;There are less than 3 active tblptr bytes
  8241  0037C4                     	endif
  8242  0037C4  0009               	tblrd		*+
  8243  0037C6  CFF5 F097          	movff	tablat,___ftmul@f2
  8244  0037CA  0009               	tblrd		*+
  8245  0037CC  CFF5 F098          	movff	tablat,___ftmul@f2+1
  8246  0037D0  000A               	tblrd		*-
  8247  0037D2  CFF5 F099          	movff	tablat,___ftmul@f2+2
  8248  0037D6  C0A9  F094         	movff	_fround$1559,___ftmul@f1
  8249  0037DA  C0AA  F095         	movff	_fround$1559+1,___ftmul@f1+1
  8250  0037DE  C0AB  F096         	movff	_fround$1559+2,___ftmul@f1+2
  8251  0037E2  EC67  F021         	call	___ftmul	;wreg free
  8252  0037E6  C094  F0A6         	movff	?___ftmul,_fround$1560
  8253  0037EA  C095  F0A7         	movff	?___ftmul+1,_fround$1560+1
  8254  0037EE  C096  F0A8         	movff	?___ftmul+2,_fround$1560+2
  8255                           
  8256                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8257  0037F2  C0A6  F094         	movff	_fround$1560,___ftmul@f1
  8258  0037F6  C0A7  F095         	movff	_fround$1560+1,___ftmul@f1+1
  8259  0037FA  C0A8  F096         	movff	_fround$1560+2,___ftmul@f1+2
  8260  0037FE  0E00               	movlw	0
  8261  003800  0100               	movlb	0	; () banked
  8262  003802  6F97               	movwf	___ftmul@f2& (0+255),b
  8263  003804  0E00               	movlw	0
  8264  003806  0100               	movlb	0	; () banked
  8265  003808  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  8266  00380A  0E3F               	movlw	63
  8267  00380C  0100               	movlb	0	; () banked
  8268  00380E  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  8269  003810  EC67  F021         	call	___ftmul	;wreg free
  8270  003814  C094  F0A3         	movff	?___ftmul,?_fround
  8271  003818  C095  F0A4         	movff	?___ftmul+1,?_fround+1
  8272  00381C  C096  F0A5         	movff	?___ftmul+2,?_fround+2
  8273  003820  0012               	return	
  8274  003822                     l5716:
  8275                           
  8276                           ;doprnt.c: 415: else if(prec > 10)
  8277  003822  0E0A               	movlw	10
  8278  003824  0100               	movlb	0	; () banked
  8279  003826  65AC               	cpfsgt	fround@prec& (0+255),b
  8280  003828  D06E               	goto	l5724
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8284  00382A  0E00               	movlw	0
  8285  00382C  0100               	movlb	0	; () banked
  8286  00382E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8287  003830  0E03               	movlw	3
  8288  003832  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8289  003834  0E00               	movlw	0
  8290  003836  0100               	movlb	0	; () banked
  8291  003838  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8292  00383A  0E0A               	movlw	10
  8293  00383C  6F82               	movwf	___awmod@divisor& (0+255),b
  8294  00383E  C0AC  F080         	movff	fround@prec,___awmod@dividend
  8295  003842  0100               	movlb	0	; () banked
  8296  003844  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8297  003846  EC32  F029         	call	___awmod	;wreg free
  8298  00384A  C080  F08E         	movff	?___awmod,___wmul@multiplier
  8299  00384E  C081  F08F         	movff	?___awmod+1,___wmul@multiplier+1
  8300  003852  EC59  F02E         	call	___wmul	;wreg free
  8301  003856  0EE0               	movlw	low __npowers_
  8302  003858  0100               	movlb	0	; () banked
  8303  00385A  258E               	addwf	?___wmul& (0+255),w,b
  8304  00385C  6EF6               	movwf	tblptrl,c
  8305  00385E  0EFB               	movlw	high __npowers_
  8306  003860  0100               	movlb	0	; () banked
  8307  003862  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8308  003864  6EF7               	movwf	tblptrh,c
  8309  003866                     	if	0	;There are less than 3 active tblptr bytes
  8310  003866                     	endif
  8311  003866  0009               	tblrd		*+
  8312  003868  CFF5 F097          	movff	tablat,___ftmul@f2
  8313  00386C  0009               	tblrd		*+
  8314  00386E  CFF5 F098          	movff	tablat,___ftmul@f2+1
  8315  003872  000A               	tblrd		*-
  8316  003874  CFF5 F099          	movff	tablat,___ftmul@f2+2
  8317  003878  0E00               	movlw	0
  8318  00387A  0100               	movlb	0	; () banked
  8319  00387C  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8320  00387E  0E0A               	movlw	10
  8321  003880  6F88               	movwf	___awdiv@divisor& (0+255),b
  8322  003882  C0AC  F086         	movff	fround@prec,___awdiv@dividend
  8323  003886  0100               	movlb	0	; () banked
  8324  003888  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8325  00388A  EC1E  F028         	call	___awdiv	;wreg free
  8326  00388E  0E09               	movlw	9
  8327  003890  0100               	movlb	0	; () banked
  8328  003892  2586               	addwf	?___awdiv& (0+255),w,b
  8329  003894  0100               	movlb	0	; () banked
  8330  003896  6F8E               	movwf	___wmul@multiplier& (0+255),b
  8331  003898  0E00               	movlw	0
  8332  00389A  0100               	movlb	0	; () banked
  8333  00389C  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  8334  00389E  0100               	movlb	0	; () banked
  8335  0038A0  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
  8336  0038A2  0E00               	movlw	0
  8337  0038A4  0100               	movlb	0	; () banked
  8338  0038A6  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8339  0038A8  0E03               	movlw	3
  8340  0038AA  6F90               	movwf	___wmul@multiplicand& (0+255),b
  8341  0038AC  EC59  F02E         	call	___wmul	;wreg free
  8342  0038B0  0EE0               	movlw	low __npowers_
  8343  0038B2  0100               	movlb	0	; () banked
  8344  0038B4  258E               	addwf	?___wmul& (0+255),w,b
  8345  0038B6  6EF6               	movwf	tblptrl,c
  8346  0038B8  0EFB               	movlw	high __npowers_
  8347  0038BA  0100               	movlb	0	; () banked
  8348  0038BC  218F               	addwfc	(?___wmul+1)& (0+255),w,b
  8349  0038BE  6EF7               	movwf	tblptrh,c
  8350  0038C0                     	if	0	;There are less than 3 active tblptr bytes
  8351  0038C0                     	endif
  8352  0038C0  0009               	tblrd		*+
  8353  0038C2  CFF5 F094          	movff	tablat,___ftmul@f1
  8354  0038C6  0009               	tblrd		*+
  8355  0038C8  CFF5 F095          	movff	tablat,___ftmul@f1+1
  8356  0038CC  000A               	tblrd		*-
  8357  0038CE  CFF5 F096          	movff	tablat,___ftmul@f1+2
  8358  0038D2  EC67  F021         	call	___ftmul	;wreg free
  8359  0038D6  C094  F0A9         	movff	?___ftmul,_fround$1559
  8360  0038DA  C095  F0AA         	movff	?___ftmul+1,_fround$1559+1
  8361  0038DE  C096  F0AB         	movff	?___ftmul+2,_fround$1559+2
  8362                           
  8363                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8364  0038E2  C0A9  F094         	movff	_fround$1559,___ftmul@f1
  8365  0038E6  C0AA  F095         	movff	_fround$1559+1,___ftmul@f1+1
  8366  0038EA  C0AB  F096         	movff	_fround$1559+2,___ftmul@f1+2
  8367  0038EE  0E00               	movlw	0
  8368  0038F0  0100               	movlb	0	; () banked
  8369  0038F2  6F97               	movwf	___ftmul@f2& (0+255),b
  8370  0038F4  0E00               	movlw	0
  8371  0038F6  0100               	movlb	0	; () banked
  8372  0038F8  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  8373  0038FA  0E3F               	movlw	63
  8374  0038FC  0100               	movlb	0	; () banked
  8375  0038FE  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  8376  003900  EC67  F021         	call	___ftmul	;wreg free
  8377  003904  D787               	goto	L4
  8378  003906                     l5724:
  8379                           
  8380                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8381  003906  0100               	movlb	0	; () banked
  8382  003908  51AC               	movf	fround@prec& (0+255),w,b
  8383  00390A  0D03               	mullw	3
  8384  00390C  0EE0               	movlw	low __npowers_
  8385  00390E  24F3               	addwf	prodl,w,c
  8386  003910  6EF6               	movwf	tblptrl,c
  8387  003912  0EFB               	movlw	high __npowers_
  8388  003914  20F4               	addwfc	prodh,w,c
  8389  003916  6EF7               	movwf	tblptrh,c
  8390  003918                     	if	0	;There are less than 3 active tblptr bytes
  8391  003918                     	endif
  8392  003918  0009               	tblrd		*+
  8393  00391A  CFF5 F094          	movff	tablat,___ftmul@f1
  8394  00391E  0009               	tblrd		*+
  8395  003920  CFF5 F095          	movff	tablat,___ftmul@f1+1
  8396  003924  000A               	tblrd		*-
  8397  003926  CFF5 F096          	movff	tablat,___ftmul@f1+2
  8398  00392A  0E00               	movlw	0
  8399  00392C  0100               	movlb	0	; () banked
  8400  00392E  6F97               	movwf	___ftmul@f2& (0+255),b
  8401  003930  0E00               	movlw	0
  8402  003932  0100               	movlb	0	; () banked
  8403  003934  6F98               	movwf	(___ftmul@f2+1)& (0+255),b
  8404  003936  0E3F               	movlw	63
  8405  003938  0100               	movlb	0	; () banked
  8406  00393A  6F99               	movwf	(___ftmul@f2+2)& (0+255),b
  8407  00393C  EC67  F021         	call	___ftmul	;wreg free
  8408  003940  C094  F0A3         	movff	?___ftmul,?_fround
  8409  003944  C095  F0A4         	movff	?___ftmul+1,?_fround+1
  8410  003948  C096  F0A5         	movff	?___ftmul+2,?_fround+2
  8411  00394C  0012               	return	
  8412  00394E                     __end_of_fround:
  8413                           	opt stack 0
  8414                           tblptru	equ	0xFF8
  8415                           tblptrh	equ	0xFF7
  8416                           tblptrl	equ	0xFF6
  8417                           tablat	equ	0xFF5
  8418                           prodh	equ	0xFF4
  8419                           prodl	equ	0xFF3
  8420                           intcon	equ	0xFF2
  8421                           intcon2	equ	0xFF1
  8422                           postinc0	equ	0xFEE
  8423                           wreg	equ	0xFE8
  8424                           indf2	equ	0xFDF
  8425                           postinc2	equ	0xFDE
  8426                           postdec2	equ	0xFDD
  8427                           fsr2h	equ	0xFDA
  8428                           fsr2l	equ	0xFD9
  8429                           status	equ	0xFD8
  8430                           
  8431 ;; *************** function ___wmul *****************
  8432 ;; Defined at:
  8433 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/Umul16.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  multiplier      2   14[BANK0 ] unsigned int 
  8436 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  product         2   18[BANK0 ] unsigned int 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  2   14[BANK0 ] unsigned int 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, status,0, prodl, prodh
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8448 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;Total ram usage:        6 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    6
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_fround
  8459 ;;		_scale
  8460 ;;		_printf
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text13
  8465  005CB2                     __ptext13:
  8466                           	opt stack 0
  8467  005CB2                     ___wmul:
  8468                           	opt stack 22
  8469                           
  8470                           ;incstack = 0
  8471  005CB2  0100               	movlb	0	; () banked
  8472  005CB4  518E               	movf	___wmul@multiplier& (0+255),w,b
  8473  005CB6  0100               	movlb	0	; () banked
  8474  005CB8  0390               	mulwf	___wmul@multiplicand& (0+255),b
  8475  005CBA  CFF3 F092          	movff	prodl,___wmul@product
  8476  005CBE  CFF4 F093          	movff	prodh,___wmul@product+1
  8477  005CC2  0100               	movlb	0	; () banked
  8478  005CC4  518E               	movf	___wmul@multiplier& (0+255),w,b
  8479  005CC6  0100               	movlb	0	; () banked
  8480  005CC8  0391               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8481  005CCA  50F3               	movf	prodl,w,c
  8482  005CCC  0100               	movlb	0	; () banked
  8483  005CCE  2793               	addwf	(___wmul@product+1)& (0+255),f,b
  8484  005CD0  0100               	movlb	0	; () banked
  8485  005CD2  518F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8486  005CD4  0100               	movlb	0	; () banked
  8487  005CD6  0390               	mulwf	___wmul@multiplicand& (0+255),b
  8488  005CD8  50F3               	movf	prodl,w,c
  8489  005CDA  0100               	movlb	0	; () banked
  8490  005CDC  2793               	addwf	(___wmul@product+1)& (0+255),f,b
  8491                           
  8492                           ; BSR set to: 0
  8493  005CDE  C092  F08E         	movff	___wmul@product,?___wmul
  8494  005CE2  C093  F08F         	movff	___wmul@product+1,?___wmul+1
  8495  005CE6  0012               	return	
  8496  005CE8                     __end_of___wmul:
  8497                           	opt stack 0
  8498                           tblptru	equ	0xFF8
  8499                           tblptrh	equ	0xFF7
  8500                           tblptrl	equ	0xFF6
  8501                           tablat	equ	0xFF5
  8502                           prodh	equ	0xFF4
  8503                           prodl	equ	0xFF3
  8504                           intcon	equ	0xFF2
  8505                           intcon2	equ	0xFF1
  8506                           postinc0	equ	0xFEE
  8507                           wreg	equ	0xFE8
  8508                           indf2	equ	0xFDF
  8509                           postinc2	equ	0xFDE
  8510                           postdec2	equ	0xFDD
  8511                           fsr2h	equ	0xFDA
  8512                           fsr2l	equ	0xFD9
  8513                           status	equ	0xFD8
  8514                           
  8515 ;; *************** function ___ftmul *****************
  8516 ;; Defined at:
  8517 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  f1              3   20[BANK0 ] float 
  8520 ;;  f2              3   23[BANK0 ] float 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  8523 ;;  sign            1   34[BANK0 ] unsigned char 
  8524 ;;  cntr            1   33[BANK0 ] unsigned char 
  8525 ;;  exp             1   29[BANK0 ] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  3   20[BANK0 ] float 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;Total ram usage:       15 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    7
  8542 ;; This function calls:
  8543 ;;		___ftpack
  8544 ;; This function is called by:
  8545 ;;		_abs
  8546 ;;		_readADC
  8547 ;;		_fround
  8548 ;;		_scale
  8549 ;;		_printf
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text14
  8554  0042CE                     __ptext14:
  8555                           	opt stack 0
  8556  0042CE                     ___ftmul:
  8557                           	opt stack 21
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;incstack = 0
  8561  0042CE  C096  F09A         	movff	___ftmul@f1+2,??___ftmul
  8562  0042D2  0100               	movlb	0	; () banked
  8563  0042D4  6B9B               	clrf	(??___ftmul+1)& (0+255),b
  8564  0042D6  6B9C               	clrf	(??___ftmul+2)& (0+255),b
  8565  0042D8  0100               	movlb	0	; () banked
  8566  0042DA  3595               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8567  0042DC  0100               	movlb	0	; () banked
  8568  0042DE  379A               	rlcf	??___ftmul& (0+255),f,b
  8569  0042E0  E301               	bnc	u5461
  8570  0042E2  819B               	bsf	(??___ftmul+1)& (0+255),0,b
  8571  0042E4                     u5461:
  8572  0042E4  0100               	movlb	0	; () banked
  8573  0042E6  519A               	movf	??___ftmul& (0+255),w,b
  8574  0042E8  0100               	movlb	0	; () banked
  8575  0042EA  6F9D               	movwf	___ftmul@exp& (0+255),b
  8576  0042EC  0100               	movlb	0	; () banked
  8577  0042EE  519D               	movf	___ftmul@exp& (0+255),w,b
  8578  0042F0  A4D8               	btfss	status,2,c
  8579  0042F2  D00A               	goto	l5166
  8580                           
  8581                           ; BSR set to: 0
  8582  0042F4  0E00               	movlw	0
  8583  0042F6  0100               	movlb	0	; () banked
  8584  0042F8  6F94               	movwf	?___ftmul& (0+255),b
  8585  0042FA  0E00               	movlw	0
  8586  0042FC  0100               	movlb	0	; () banked
  8587  0042FE  6F95               	movwf	(?___ftmul+1)& (0+255),b
  8588  004300  0E00               	movlw	0
  8589  004302  0100               	movlb	0	; () banked
  8590  004304  6F96               	movwf	(?___ftmul+2)& (0+255),b
  8591                           
  8592                           ; BSR set to: 0
  8593  004306  0012               	return	
  8594  004308                     l5166:
  8595                           
  8596                           ; BSR set to: 0
  8597  004308  C099  F09A         	movff	___ftmul@f2+2,??___ftmul
  8598  00430C  0100               	movlb	0	; () banked
  8599  00430E  6B9B               	clrf	(??___ftmul+1)& (0+255),b
  8600  004310  6B9C               	clrf	(??___ftmul+2)& (0+255),b
  8601  004312  0100               	movlb	0	; () banked
  8602  004314  3598               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8603  004316  0100               	movlb	0	; () banked
  8604  004318  379A               	rlcf	??___ftmul& (0+255),f,b
  8605  00431A  E301               	bnc	u5481
  8606  00431C  819B               	bsf	(??___ftmul+1)& (0+255),0,b
  8607  00431E                     u5481:
  8608  00431E  0100               	movlb	0	; () banked
  8609  004320  519A               	movf	??___ftmul& (0+255),w,b
  8610  004322  0100               	movlb	0	; () banked
  8611  004324  6FA2               	movwf	___ftmul@sign& (0+255),b
  8612  004326  0100               	movlb	0	; () banked
  8613  004328  51A2               	movf	___ftmul@sign& (0+255),w,b
  8614  00432A  A4D8               	btfss	status,2,c
  8615  00432C  D00A               	goto	l5172
  8616                           
  8617                           ; BSR set to: 0
  8618  00432E  0E00               	movlw	0
  8619  004330  0100               	movlb	0	; () banked
  8620  004332  6F94               	movwf	?___ftmul& (0+255),b
  8621  004334  0E00               	movlw	0
  8622  004336  0100               	movlb	0	; () banked
  8623  004338  6F95               	movwf	(?___ftmul+1)& (0+255),b
  8624  00433A  0E00               	movlw	0
  8625  00433C  0100               	movlb	0	; () banked
  8626  00433E  6F96               	movwf	(?___ftmul+2)& (0+255),b
  8627                           
  8628                           ; BSR set to: 0
  8629  004340  0012               	return	
  8630  004342                     l5172:
  8631                           
  8632                           ; BSR set to: 0
  8633  004342  0100               	movlb	0	; () banked
  8634  004344  51A2               	movf	___ftmul@sign& (0+255),w,b
  8635  004346  0F7B               	addlw	123
  8636  004348  0100               	movlb	0	; () banked
  8637  00434A  279D               	addwf	___ftmul@exp& (0+255),f,b
  8638                           
  8639                           ; BSR set to: 0
  8640  00434C  C096  F0A2         	movff	___ftmul@f1+2,___ftmul@sign
  8641  004350  0100               	movlb	0	; () banked
  8642  004352  5199               	movf	(___ftmul@f2+2)& (0+255),w,b
  8643  004354  0100               	movlb	0	; () banked
  8644  004356  1BA2               	xorwf	___ftmul@sign& (0+255),f,b
  8645  004358  0E80               	movlw	128
  8646  00435A  0100               	movlb	0	; () banked
  8647  00435C  17A2               	andwf	___ftmul@sign& (0+255),f,b
  8648                           
  8649                           ; BSR set to: 0
  8650  00435E  0100               	movlb	0	; () banked
  8651  004360  8F95               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8652                           
  8653                           ; BSR set to: 0
  8654  004362  0100               	movlb	0	; () banked
  8655  004364  8F98               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8656                           
  8657                           ; BSR set to: 0
  8658  004366  0EFF               	movlw	255
  8659  004368  0100               	movlb	0	; () banked
  8660  00436A  1797               	andwf	___ftmul@f2& (0+255),f,b
  8661  00436C  0EFF               	movlw	255
  8662  00436E  0100               	movlb	0	; () banked
  8663  004370  1798               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8664  004372  0E00               	movlw	0
  8665  004374  0100               	movlb	0	; () banked
  8666  004376  1799               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8667                           
  8668                           ; BSR set to: 0
  8669  004378  0E00               	movlw	0
  8670  00437A  0100               	movlb	0	; () banked
  8671  00437C  6F9E               	movwf	___ftmul@f3_as_product& (0+255),b
  8672  00437E  0E00               	movlw	0
  8673  004380  0100               	movlb	0	; () banked
  8674  004382  6F9F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8675  004384  0E00               	movlw	0
  8676  004386  0100               	movlb	0	; () banked
  8677  004388  6FA0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8678                           
  8679                           ; BSR set to: 0
  8680  00438A  0E07               	movlw	7
  8681  00438C  0100               	movlb	0	; () banked
  8682  00438E  6FA1               	movwf	___ftmul@cntr& (0+255),b
  8683  004390                     l5186:
  8684                           
  8685                           ; BSR set to: 0
  8686  004390  0100               	movlb	0	; () banked
  8687  004392  A194               	btfss	___ftmul@f1& (0+255),0,b
  8688  004394  D00C               	goto	l5190
  8689                           
  8690                           ; BSR set to: 0
  8691  004396  0100               	movlb	0	; () banked
  8692  004398  5197               	movf	___ftmul@f2& (0+255),w,b
  8693  00439A  0100               	movlb	0	; () banked
  8694  00439C  279E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8695  00439E  0100               	movlb	0	; () banked
  8696  0043A0  5198               	movf	(___ftmul@f2+1)& (0+255),w,b
  8697  0043A2  0100               	movlb	0	; () banked
  8698  0043A4  239F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8699  0043A6  0100               	movlb	0	; () banked
  8700  0043A8  5199               	movf	(___ftmul@f2+2)& (0+255),w,b
  8701  0043AA  0100               	movlb	0	; () banked
  8702  0043AC  23A0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8703  0043AE                     l5190:
  8704                           
  8705                           ; BSR set to: 0
  8706  0043AE  0100               	movlb	0	; () banked
  8707  0043B0  90D8               	bcf	status,0,c
  8708  0043B2  3396               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8709  0043B4  3395               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8710  0043B6  3394               	rrcf	___ftmul@f1& (0+255),f,b
  8711  0043B8  0100               	movlb	0	; () banked
  8712  0043BA  90D8               	bcf	status,0,c
  8713  0043BC  3797               	rlcf	___ftmul@f2& (0+255),f,b
  8714  0043BE  3798               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8715  0043C0  3799               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8716                           
  8717                           ; BSR set to: 0
  8718  0043C2  0100               	movlb	0	; () banked
  8719  0043C4  2FA1               	decfsz	___ftmul@cntr& (0+255),f,b
  8720  0043C6  D7E4               	goto	l5186
  8721                           
  8722                           ; BSR set to: 0
  8723                           
  8724                           ; BSR set to: 0
  8725  0043C8  0E09               	movlw	9
  8726  0043CA  0100               	movlb	0	; () banked
  8727  0043CC  6FA1               	movwf	___ftmul@cntr& (0+255),b
  8728  0043CE                     l5196:
  8729                           
  8730                           ; BSR set to: 0
  8731  0043CE  0100               	movlb	0	; () banked
  8732  0043D0  A194               	btfss	___ftmul@f1& (0+255),0,b
  8733  0043D2  D00C               	goto	l5200
  8734                           
  8735                           ; BSR set to: 0
  8736  0043D4  0100               	movlb	0	; () banked
  8737  0043D6  5197               	movf	___ftmul@f2& (0+255),w,b
  8738  0043D8  0100               	movlb	0	; () banked
  8739  0043DA  279E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8740  0043DC  0100               	movlb	0	; () banked
  8741  0043DE  5198               	movf	(___ftmul@f2+1)& (0+255),w,b
  8742  0043E0  0100               	movlb	0	; () banked
  8743  0043E2  239F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8744  0043E4  0100               	movlb	0	; () banked
  8745  0043E6  5199               	movf	(___ftmul@f2+2)& (0+255),w,b
  8746  0043E8  0100               	movlb	0	; () banked
  8747  0043EA  23A0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8748  0043EC                     l5200:
  8749                           
  8750                           ; BSR set to: 0
  8751  0043EC  0100               	movlb	0	; () banked
  8752  0043EE  90D8               	bcf	status,0,c
  8753  0043F0  3396               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8754  0043F2  3395               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8755  0043F4  3394               	rrcf	___ftmul@f1& (0+255),f,b
  8756  0043F6  0100               	movlb	0	; () banked
  8757  0043F8  90D8               	bcf	status,0,c
  8758  0043FA  33A0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8759  0043FC  339F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8760  0043FE  339E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8761                           
  8762                           ; BSR set to: 0
  8763  004400  0100               	movlb	0	; () banked
  8764  004402  2FA1               	decfsz	___ftmul@cntr& (0+255),f,b
  8765  004404  D7E4               	goto	l5196
  8766                           
  8767                           ; BSR set to: 0
  8768                           
  8769                           ; BSR set to: 0
  8770  004406  C09E  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  8771  00440A  C09F  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8772  00440E  C0A0  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8773  004412  C09D  F083         	movff	___ftmul@exp,___ftpack@exp
  8774  004416  C0A2  F084         	movff	___ftmul@sign,___ftpack@sign
  8775  00441A  ECCD  F025         	call	___ftpack	;wreg free
  8776  00441E  C080  F094         	movff	?___ftpack,?___ftmul
  8777  004422  C081  F095         	movff	?___ftpack+1,?___ftmul+1
  8778  004426  C082  F096         	movff	?___ftpack+2,?___ftmul+2
  8779  00442A  0012               	return	
  8780  00442C                     __end_of___ftmul:
  8781                           	opt stack 0
  8782                           tblptru	equ	0xFF8
  8783                           tblptrh	equ	0xFF7
  8784                           tblptrl	equ	0xFF6
  8785                           tablat	equ	0xFF5
  8786                           prodh	equ	0xFF4
  8787                           prodl	equ	0xFF3
  8788                           intcon	equ	0xFF2
  8789                           intcon2	equ	0xFF1
  8790                           postinc0	equ	0xFEE
  8791                           wreg	equ	0xFE8
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           postdec2	equ	0xFDD
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function ___awmod *****************
  8800 ;; Defined at:
  8801 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awmod.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  dividend        2    0[BANK0 ] int 
  8804 ;;  divisor         2    2[BANK0 ] int 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  sign            1    5[BANK0 ] unsigned char 
  8807 ;;  counter         1    4[BANK0 ] unsigned char 
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  2    0[BANK0 ] int 
  8810 ;; Registers used:
  8811 ;;		wreg, status,2, status,0
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8821 ;;Total ram usage:        6 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    6
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_fround
  8828 ;;		_scale
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text15
  8833  005264                     __ptext15:
  8834                           	opt stack 0
  8835  005264                     ___awmod:
  8836                           	opt stack 22
  8837                           
  8838                           ;incstack = 0
  8839  005264  0E00               	movlw	0
  8840  005266  0100               	movlb	0	; () banked
  8841  005268  6F85               	movwf	___awmod@sign& (0+255),b
  8842                           
  8843                           ; BSR set to: 0
  8844  00526A  0100               	movlb	0	; () banked
  8845  00526C  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8846  00526E  D008               	goto	l5260
  8847                           
  8848                           ; BSR set to: 0
  8849  005270  0100               	movlb	0	; () banked
  8850  005272  6D80               	negf	___awmod@dividend& (0+255),b
  8851  005274  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  8852  005276  B0D8               	btfsc	status,0,c
  8853  005278  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  8854                           
  8855                           ; BSR set to: 0
  8856  00527A  0E01               	movlw	1
  8857  00527C  0100               	movlb	0	; () banked
  8858  00527E  6F85               	movwf	___awmod@sign& (0+255),b
  8859  005280                     l5260:
  8860                           
  8861                           ; BSR set to: 0
  8862  005280  0100               	movlb	0	; () banked
  8863  005282  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8864  005284  D005               	goto	l5264
  8865                           
  8866                           ; BSR set to: 0
  8867  005286  0100               	movlb	0	; () banked
  8868  005288  6D82               	negf	___awmod@divisor& (0+255),b
  8869  00528A  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  8870  00528C  B0D8               	btfsc	status,0,c
  8871  00528E  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  8872  005290                     l5264:
  8873                           
  8874                           ; BSR set to: 0
  8875  005290  0100               	movlb	0	; () banked
  8876  005292  5182               	movf	___awmod@divisor& (0+255),w,b
  8877  005294  0100               	movlb	0	; () banked
  8878  005296  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8879  005298  B4D8               	btfsc	status,2,c
  8880  00529A  D026               	goto	l5280
  8881                           
  8882                           ; BSR set to: 0
  8883  00529C  0E01               	movlw	1
  8884  00529E  0100               	movlb	0	; () banked
  8885  0052A0  6F84               	movwf	___awmod@counter& (0+255),b
  8886  0052A2  D006               	goto	l5270
  8887  0052A4                     l5268:
  8888                           
  8889                           ; BSR set to: 0
  8890  0052A4  0100               	movlb	0	; () banked
  8891  0052A6  90D8               	bcf	status,0,c
  8892  0052A8  3782               	rlcf	___awmod@divisor& (0+255),f,b
  8893  0052AA  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8894  0052AC  0100               	movlb	0	; () banked
  8895  0052AE  2B84               	incf	___awmod@counter& (0+255),f,b
  8896  0052B0                     l5270:
  8897                           
  8898                           ; BSR set to: 0
  8899  0052B0  0100               	movlb	0	; () banked
  8900  0052B2  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8901  0052B4  D7F7               	goto	l5268
  8902  0052B6                     l5272:
  8903                           
  8904                           ; BSR set to: 0
  8905  0052B6  0100               	movlb	0	; () banked
  8906  0052B8  5182               	movf	___awmod@divisor& (0+255),w,b
  8907  0052BA  0100               	movlb	0	; () banked
  8908  0052BC  5D80               	subwf	___awmod@dividend& (0+255),w,b
  8909  0052BE  0100               	movlb	0	; () banked
  8910  0052C0  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  8911  0052C2  0100               	movlb	0	; () banked
  8912  0052C4  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8913  0052C6  A0D8               	btfss	status,0,c
  8914  0052C8  D008               	goto	l5276
  8915                           
  8916                           ; BSR set to: 0
  8917  0052CA  0100               	movlb	0	; () banked
  8918  0052CC  5182               	movf	___awmod@divisor& (0+255),w,b
  8919  0052CE  0100               	movlb	0	; () banked
  8920  0052D0  5F80               	subwf	___awmod@dividend& (0+255),f,b
  8921  0052D2  0100               	movlb	0	; () banked
  8922  0052D4  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  8923  0052D6  0100               	movlb	0	; () banked
  8924  0052D8  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8925  0052DA                     l5276:
  8926                           
  8927                           ; BSR set to: 0
  8928  0052DA  0100               	movlb	0	; () banked
  8929  0052DC  90D8               	bcf	status,0,c
  8930  0052DE  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8931  0052E0  3382               	rrcf	___awmod@divisor& (0+255),f,b
  8932                           
  8933                           ; BSR set to: 0
  8934  0052E2  0100               	movlb	0	; () banked
  8935  0052E4  2F84               	decfsz	___awmod@counter& (0+255),f,b
  8936  0052E6  D7E7               	goto	l5272
  8937  0052E8                     l5280:
  8938                           
  8939                           ; BSR set to: 0
  8940  0052E8  0100               	movlb	0	; () banked
  8941  0052EA  5185               	movf	___awmod@sign& (0+255),w,b
  8942  0052EC  0100               	movlb	0	; () banked
  8943  0052EE  B4D8               	btfsc	status,2,c
  8944  0052F0  D005               	goto	l5284
  8945                           
  8946                           ; BSR set to: 0
  8947  0052F2  0100               	movlb	0	; () banked
  8948  0052F4  6D80               	negf	___awmod@dividend& (0+255),b
  8949  0052F6  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  8950  0052F8  B0D8               	btfsc	status,0,c
  8951  0052FA  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  8952  0052FC                     l5284:
  8953                           
  8954                           ; BSR set to: 0
  8955  0052FC  C080  F080         	movff	___awmod@dividend,?___awmod
  8956  005300  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  8957  005304  0012               	return	
  8958  005306                     __end_of___awmod:
  8959                           	opt stack 0
  8960                           tblptru	equ	0xFF8
  8961                           tblptrh	equ	0xFF7
  8962                           tblptrl	equ	0xFF6
  8963                           tablat	equ	0xFF5
  8964                           prodh	equ	0xFF4
  8965                           prodl	equ	0xFF3
  8966                           intcon	equ	0xFF2
  8967                           intcon2	equ	0xFF1
  8968                           postinc0	equ	0xFEE
  8969                           wreg	equ	0xFE8
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           fsr2h	equ	0xFDA
  8974                           fsr2l	equ	0xFD9
  8975                           status	equ	0xFD8
  8976                           
  8977 ;; *************** function ___awdiv *****************
  8978 ;; Defined at:
  8979 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awdiv.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  dividend        2    6[BANK0 ] int 
  8982 ;;  divisor         2    8[BANK0 ] int 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  quotient        2   12[BANK0 ] int 
  8985 ;;  sign            1   11[BANK0 ] unsigned char 
  8986 ;;  counter         1   10[BANK0 ] unsigned char 
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  2    6[BANK0 ] int 
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;Total ram usage:        8 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    6
  9003 ;; This function calls:
  9004 ;;		Nothing
  9005 ;; This function is called by:
  9006 ;;		_set_external_interrupt1
  9007 ;;		_set_external_interrupt3
  9008 ;;		_fround
  9009 ;;		_scale
  9010 ;;		_printf
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text16
  9015  00503C                     __ptext16:
  9016                           	opt stack 0
  9017  00503C                     ___awdiv:
  9018                           	opt stack 23
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;incstack = 0
  9022  00503C  0E00               	movlw	0
  9023  00503E  0100               	movlb	0	; () banked
  9024  005040  6F8B               	movwf	___awdiv@sign& (0+255),b
  9025                           
  9026                           ; BSR set to: 0
  9027  005042  0100               	movlb	0	; () banked
  9028  005044  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9029  005046  D008               	goto	l5216
  9030                           
  9031                           ; BSR set to: 0
  9032  005048  0100               	movlb	0	; () banked
  9033  00504A  6D88               	negf	___awdiv@divisor& (0+255),b
  9034  00504C  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9035  00504E  B0D8               	btfsc	status,0,c
  9036  005050  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039  005052  0E01               	movlw	1
  9040  005054  0100               	movlb	0	; () banked
  9041  005056  6F8B               	movwf	___awdiv@sign& (0+255),b
  9042  005058                     l5216:
  9043                           
  9044                           ; BSR set to: 0
  9045  005058  0100               	movlb	0	; () banked
  9046  00505A  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9047  00505C  D008               	goto	l5222
  9048                           
  9049                           ; BSR set to: 0
  9050  00505E  0100               	movlb	0	; () banked
  9051  005060  6D86               	negf	___awdiv@dividend& (0+255),b
  9052  005062  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9053  005064  B0D8               	btfsc	status,0,c
  9054  005066  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9055                           
  9056                           ; BSR set to: 0
  9057  005068  0E01               	movlw	1
  9058  00506A  0100               	movlb	0	; () banked
  9059  00506C  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  9060  00506E                     l5222:
  9061                           
  9062                           ; BSR set to: 0
  9063  00506E  0E00               	movlw	0
  9064  005070  0100               	movlb	0	; () banked
  9065  005072  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  9066  005074  0E00               	movlw	0
  9067  005076  6F8C               	movwf	___awdiv@quotient& (0+255),b
  9068                           
  9069                           ; BSR set to: 0
  9070  005078  0100               	movlb	0	; () banked
  9071  00507A  5188               	movf	___awdiv@divisor& (0+255),w,b
  9072  00507C  0100               	movlb	0	; () banked
  9073  00507E  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9074  005080  B4D8               	btfsc	status,2,c
  9075  005082  D02C               	goto	l5244
  9076                           
  9077                           ; BSR set to: 0
  9078  005084  0E01               	movlw	1
  9079  005086  0100               	movlb	0	; () banked
  9080  005088  6F8A               	movwf	___awdiv@counter& (0+255),b
  9081  00508A  D006               	goto	l5230
  9082  00508C                     l5228:
  9083                           
  9084                           ; BSR set to: 0
  9085  00508C  0100               	movlb	0	; () banked
  9086  00508E  90D8               	bcf	status,0,c
  9087  005090  3788               	rlcf	___awdiv@divisor& (0+255),f,b
  9088  005092  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9089  005094  0100               	movlb	0	; () banked
  9090  005096  2B8A               	incf	___awdiv@counter& (0+255),f,b
  9091  005098                     l5230:
  9092                           
  9093                           ; BSR set to: 0
  9094  005098  0100               	movlb	0	; () banked
  9095  00509A  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9096  00509C  D7F7               	goto	l5228
  9097  00509E                     l5232:
  9098                           
  9099                           ; BSR set to: 0
  9100  00509E  0100               	movlb	0	; () banked
  9101  0050A0  90D8               	bcf	status,0,c
  9102  0050A2  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  9103  0050A4  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9104                           
  9105                           ; BSR set to: 0
  9106  0050A6  0100               	movlb	0	; () banked
  9107  0050A8  5188               	movf	___awdiv@divisor& (0+255),w,b
  9108  0050AA  0100               	movlb	0	; () banked
  9109  0050AC  5D86               	subwf	___awdiv@dividend& (0+255),w,b
  9110  0050AE  0100               	movlb	0	; () banked
  9111  0050B0  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9112  0050B2  0100               	movlb	0	; () banked
  9113  0050B4  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9114  0050B6  A0D8               	btfss	status,0,c
  9115  0050B8  D00A               	goto	l5240
  9116                           
  9117                           ; BSR set to: 0
  9118  0050BA  0100               	movlb	0	; () banked
  9119  0050BC  5188               	movf	___awdiv@divisor& (0+255),w,b
  9120  0050BE  0100               	movlb	0	; () banked
  9121  0050C0  5F86               	subwf	___awdiv@dividend& (0+255),f,b
  9122  0050C2  0100               	movlb	0	; () banked
  9123  0050C4  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9124  0050C6  0100               	movlb	0	; () banked
  9125  0050C8  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9126                           
  9127                           ; BSR set to: 0
  9128  0050CA  0100               	movlb	0	; () banked
  9129  0050CC  818C               	bsf	___awdiv@quotient& (0+255),0,b
  9130  0050CE                     l5240:
  9131                           
  9132                           ; BSR set to: 0
  9133  0050CE  0100               	movlb	0	; () banked
  9134  0050D0  90D8               	bcf	status,0,c
  9135  0050D2  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9136  0050D4  3388               	rrcf	___awdiv@divisor& (0+255),f,b
  9137                           
  9138                           ; BSR set to: 0
  9139  0050D6  0100               	movlb	0	; () banked
  9140  0050D8  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  9141  0050DA  D7E1               	goto	l5232
  9142  0050DC                     l5244:
  9143                           
  9144                           ; BSR set to: 0
  9145  0050DC  0100               	movlb	0	; () banked
  9146  0050DE  518B               	movf	___awdiv@sign& (0+255),w,b
  9147  0050E0  0100               	movlb	0	; () banked
  9148  0050E2  B4D8               	btfsc	status,2,c
  9149  0050E4  D005               	goto	l5248
  9150                           
  9151                           ; BSR set to: 0
  9152  0050E6  0100               	movlb	0	; () banked
  9153  0050E8  6D8C               	negf	___awdiv@quotient& (0+255),b
  9154  0050EA  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9155  0050EC  B0D8               	btfsc	status,0,c
  9156  0050EE  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9157  0050F0                     l5248:
  9158                           
  9159                           ; BSR set to: 0
  9160  0050F0  C08C  F086         	movff	___awdiv@quotient,?___awdiv
  9161  0050F4  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
  9162  0050F8  0012               	return	
  9163  0050FA                     __end_of___awdiv:
  9164                           	opt stack 0
  9165                           tblptru	equ	0xFF8
  9166                           tblptrh	equ	0xFF7
  9167                           tblptrl	equ	0xFF6
  9168                           tablat	equ	0xFF5
  9169                           prodh	equ	0xFF4
  9170                           prodl	equ	0xFF3
  9171                           intcon	equ	0xFF2
  9172                           intcon2	equ	0xFF1
  9173                           postinc0	equ	0xFEE
  9174                           wreg	equ	0xFE8
  9175                           indf2	equ	0xFDF
  9176                           postinc2	equ	0xFDE
  9177                           postdec2	equ	0xFDD
  9178                           fsr2h	equ	0xFDA
  9179                           fsr2l	equ	0xFD9
  9180                           status	equ	0xFD8
  9181                           
  9182 ;; *************** function __tdiv_to_l_ *****************
  9183 ;; Defined at:
  9184 ;;		line 60 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdivl.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  f1              3    0[BANK0 ] float 
  9187 ;;  f2              3    3[BANK0 ] float 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  quot            4    9[BANK0 ] unsigned long 
  9190 ;;  exp1            1   14[BANK0 ] unsigned char 
  9191 ;;  cntr            1   13[BANK0 ] unsigned char 
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  4    0[BANK0 ] unsigned long 
  9194 ;; Registers used:
  9195 ;;		wreg, status,2, status,0
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9201 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;Total ram usage:       15 bytes
  9206 ;; Hardware stack levels used:    1
  9207 ;; Hardware stack levels required when called:    6
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		_printf
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text17
  9216  003FA8                     __ptext17:
  9217                           	opt stack 0
  9218  003FA8                     __tdiv_to_l_:
  9219                           	opt stack 23
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;incstack = 0
  9223  003FA8  C082  F086         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9224  003FAC  0100               	movlb	0	; () banked
  9225  003FAE  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9226  003FB0  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9227  003FB2  0100               	movlb	0	; () banked
  9228  003FB4  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9229  003FB6  0100               	movlb	0	; () banked
  9230  003FB8  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9231  003FBA  E301               	bnc	u6291
  9232  003FBC  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9233  003FBE                     u6291:
  9234  003FBE  0100               	movlb	0	; () banked
  9235  003FC0  5186               	movf	??__tdiv_to_l_& (0+255),w,b
  9236  003FC2  0100               	movlb	0	; () banked
  9237  003FC4  6F8E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9238  003FC6  0100               	movlb	0	; () banked
  9239  003FC8  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9240  003FCA  A4D8               	btfss	status,2,c
  9241  003FCC  D00A               	goto	l5784
  9242                           
  9243                           ; BSR set to: 0
  9244  003FCE  0E00               	movlw	0
  9245  003FD0  0100               	movlb	0	; () banked
  9246  003FD2  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9247  003FD4  0E00               	movlw	0
  9248  003FD6  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9249  003FD8  0E00               	movlw	0
  9250  003FDA  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9251  003FDC  0E00               	movlw	0
  9252  003FDE  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9253                           
  9254                           ; BSR set to: 0
  9255  003FE0  0012               	return	
  9256  003FE2                     l5784:
  9257                           
  9258                           ; BSR set to: 0
  9259  003FE2  C085  F086         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9260  003FE6  0100               	movlb	0	; () banked
  9261  003FE8  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9262  003FEA  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9263  003FEC  0100               	movlb	0	; () banked
  9264  003FEE  3584               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9265  003FF0  0100               	movlb	0	; () banked
  9266  003FF2  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9267  003FF4  E301               	bnc	u6311
  9268  003FF6  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9269  003FF8                     u6311:
  9270  003FF8  0100               	movlb	0	; () banked
  9271  003FFA  5186               	movf	??__tdiv_to_l_& (0+255),w,b
  9272  003FFC  0100               	movlb	0	; () banked
  9273  003FFE  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9274  004000  0100               	movlb	0	; () banked
  9275  004002  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9276  004004  A4D8               	btfss	status,2,c
  9277  004006  D00A               	goto	l5790
  9278                           
  9279                           ; BSR set to: 0
  9280  004008  0E00               	movlw	0
  9281  00400A  0100               	movlb	0	; () banked
  9282  00400C  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9283  00400E  0E00               	movlw	0
  9284  004010  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9285  004012  0E00               	movlw	0
  9286  004014  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9287  004016  0E00               	movlw	0
  9288  004018  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9289                           
  9290                           ; BSR set to: 0
  9291  00401A  0012               	return	
  9292  00401C                     l5790:
  9293                           
  9294                           ; BSR set to: 0
  9295  00401C  0100               	movlb	0	; () banked
  9296  00401E  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9297                           
  9298                           ; BSR set to: 0
  9299  004020  0EFF               	movlw	255
  9300  004022  0100               	movlb	0	; () banked
  9301  004024  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9302  004026  0EFF               	movlw	255
  9303  004028  0100               	movlb	0	; () banked
  9304  00402A  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9305  00402C  0E00               	movlw	0
  9306  00402E  0100               	movlb	0	; () banked
  9307  004030  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9308  004032  0100               	movlb	0	; () banked
  9309  004034  8F84               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9310                           
  9311                           ; BSR set to: 0
  9312  004036  0EFF               	movlw	255
  9313  004038  0100               	movlb	0	; () banked
  9314  00403A  1783               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9315  00403C  0EFF               	movlw	255
  9316  00403E  0100               	movlb	0	; () banked
  9317  004040  1784               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9318  004042  0E00               	movlw	0
  9319  004044  0100               	movlb	0	; () banked
  9320  004046  1785               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9321                           
  9322                           ; BSR set to: 0
  9323  004048  0E00               	movlw	0
  9324  00404A  0100               	movlb	0	; () banked
  9325  00404C  6F89               	movwf	__tdiv_to_l_@quot& (0+255),b
  9326  00404E  0E00               	movlw	0
  9327  004050  6F8A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9328  004052  0E00               	movlw	0
  9329  004054  6F8B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9330  004056  0E00               	movlw	0
  9331  004058  6F8C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9332                           
  9333                           ; BSR set to: 0
  9334  00405A  0E7F               	movlw	127
  9335  00405C  0100               	movlb	0	; () banked
  9336  00405E  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9337                           
  9338                           ; BSR set to: 0
  9339  004060  0100               	movlb	0	; () banked
  9340  004062  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9341  004064  0F98               	addlw	152
  9342  004066  0100               	movlb	0	; () banked
  9343  004068  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9344                           
  9345                           ; BSR set to: 0
  9346  00406A  0E18               	movlw	24
  9347  00406C  0100               	movlb	0	; () banked
  9348  00406E  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9349  004070                     l1192:
  9350                           
  9351                           ; BSR set to: 0
  9352  004070  0100               	movlb	0	; () banked
  9353  004072  90D8               	bcf	status,0,c
  9354  004074  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9355  004076  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9356  004078  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9357  00407A  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9358                           
  9359                           ; BSR set to: 0
  9360  00407C  0100               	movlb	0	; () banked
  9361  00407E  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9362  004080  0100               	movlb	0	; () banked
  9363  004082  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9364  004084  0100               	movlb	0	; () banked
  9365  004086  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9366  004088  0100               	movlb	0	; () banked
  9367  00408A  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9368  00408C  0100               	movlb	0	; () banked
  9369  00408E  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9370  004090  0100               	movlb	0	; () banked
  9371  004092  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9372  004094  A0D8               	btfss	status,0,c
  9373  004096  D00E               	goto	l1193
  9374                           
  9375                           ; BSR set to: 0
  9376  004098  0100               	movlb	0	; () banked
  9377  00409A  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9378  00409C  0100               	movlb	0	; () banked
  9379  00409E  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9380  0040A0  0100               	movlb	0	; () banked
  9381  0040A2  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9382  0040A4  0100               	movlb	0	; () banked
  9383  0040A6  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9384  0040A8  0100               	movlb	0	; () banked
  9385  0040AA  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9386  0040AC  0100               	movlb	0	; () banked
  9387  0040AE  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390  0040B0  0100               	movlb	0	; () banked
  9391  0040B2  8189               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9392  0040B4                     l1193:
  9393                           
  9394                           ; BSR set to: 0
  9395  0040B4  0100               	movlb	0	; () banked
  9396  0040B6  90D8               	bcf	status,0,c
  9397  0040B8  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9398  0040BA  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9399  0040BC  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9400                           
  9401                           ; BSR set to: 0
  9402  0040BE  0100               	movlb	0	; () banked
  9403  0040C0  2F8D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9404  0040C2  D7D6               	goto	l1192
  9405                           
  9406                           ; BSR set to: 0
  9407                           
  9408                           ; BSR set to: 0
  9409  0040C4  0100               	movlb	0	; () banked
  9410  0040C6  AF8E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9411  0040C8  D01A               	goto	l5824
  9412                           
  9413                           ; BSR set to: 0
  9414  0040CA  0100               	movlb	0	; () banked
  9415  0040CC  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9416  0040CE  0A80               	xorlw	128
  9417  0040D0  0F97               	addlw	151
  9418  0040D2  B0D8               	btfsc	status,0,c
  9419  0040D4  D00A               	goto	l5820
  9420                           
  9421                           ; BSR set to: 0
  9422  0040D6  0E00               	movlw	0
  9423  0040D8  0100               	movlb	0	; () banked
  9424  0040DA  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9425  0040DC  0E00               	movlw	0
  9426  0040DE  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9427  0040E0  0E00               	movlw	0
  9428  0040E2  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9429  0040E4  0E00               	movlw	0
  9430  0040E6  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9431                           
  9432                           ; BSR set to: 0
  9433  0040E8  0012               	return	
  9434  0040EA                     l5820:
  9435                           
  9436                           ; BSR set to: 0
  9437  0040EA  0100               	movlb	0	; () banked
  9438  0040EC  90D8               	bcf	status,0,c
  9439  0040EE  338C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9440  0040F0  338B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9441  0040F2  338A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9442  0040F4  3389               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9443                           
  9444                           ; BSR set to: 0
  9445  0040F6  0100               	movlb	0	; () banked
  9446  0040F8  3F8E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9447  0040FA  D7F7               	goto	l5820
  9448                           
  9449                           ; BSR set to: 0
  9450  0040FC  D01B               	goto	l1199
  9451  0040FE                     l5824:
  9452                           
  9453                           ; BSR set to: 0
  9454  0040FE  0E17               	movlw	23
  9455  004100  0100               	movlb	0	; () banked
  9456  004102  658E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9457  004104  D012               	goto	l5832
  9458                           
  9459                           ; BSR set to: 0
  9460  004106  0E00               	movlw	0
  9461  004108  0100               	movlb	0	; () banked
  9462  00410A  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  9463  00410C  0E00               	movlw	0
  9464  00410E  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9465  004110  0E00               	movlw	0
  9466  004112  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9467  004114  0E00               	movlw	0
  9468  004116  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9469                           
  9470                           ; BSR set to: 0
  9471  004118  0012               	return	
  9472  00411A                     l5830:
  9473                           
  9474                           ; BSR set to: 0
  9475  00411A  0100               	movlb	0	; () banked
  9476  00411C  90D8               	bcf	status,0,c
  9477  00411E  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9478  004120  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9479  004122  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9480  004124  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9481  004126  0100               	movlb	0	; () banked
  9482  004128  078E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9483  00412A                     l5832:
  9484                           
  9485                           ; BSR set to: 0
  9486  00412A  0100               	movlb	0	; () banked
  9487  00412C  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9488  00412E  0100               	movlb	0	; () banked
  9489  004130  A4D8               	btfss	status,2,c
  9490  004132  D7F3               	goto	l5830
  9491  004134                     l1199:
  9492                           
  9493                           ; BSR set to: 0
  9494  004134  C089  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9495  004138  C08A  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9496  00413C  C08B  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9497  004140  C08C  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9498                           
  9499                           ; BSR set to: 0
  9500  004144  0012               	return		;funcret
  9501  004146                     __end_of__tdiv_to_l_:
  9502                           	opt stack 0
  9503                           tblptru	equ	0xFF8
  9504                           tblptrh	equ	0xFF7
  9505                           tblptrl	equ	0xFF6
  9506                           tablat	equ	0xFF5
  9507                           prodh	equ	0xFF4
  9508                           prodl	equ	0xFF3
  9509                           intcon	equ	0xFF2
  9510                           intcon2	equ	0xFF1
  9511                           postinc0	equ	0xFEE
  9512                           wreg	equ	0xFE8
  9513                           indf2	equ	0xFDF
  9514                           postinc2	equ	0xFDE
  9515                           postdec2	equ	0xFDD
  9516                           fsr2h	equ	0xFDA
  9517                           fsr2l	equ	0xFD9
  9518                           status	equ	0xFD8
  9519                           
  9520 ;; *************** function __div_to_l_ *****************
  9521 ;; Defined at:
  9522 ;;		line 60 in file "/Applications/microchip/xc8/v1.41/sources/common/fldivl.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  f1              3    0[BANK0 ] unsigned long 
  9525 ;;  f2              3    3[BANK0 ] unsigned long 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  quot            4    6[BANK0 ] unsigned long 
  9528 ;;  exp1            1   11[BANK0 ] unsigned char 
  9529 ;;  cntr            1   10[BANK0 ] unsigned char 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  4    0[BANK0 ] unsigned long 
  9532 ;; Registers used:
  9533 ;;		wreg, status,2, status,0
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9539 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;Total ram usage:       12 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    6
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_printf
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text18
  9554  004146                     __ptext18:
  9555                           	opt stack 0
  9556  004146                     __div_to_l_:
  9557                           	opt stack 23
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;incstack = 0
  9561  004146  0100               	movlb	0	; () banked
  9562  004148  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9563  00414A  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9564  00414C  0100               	movlb	0	; () banked
  9565  00414E  6F8B               	movwf	__div_to_l_@exp1& (0+255),b
  9566  004150  0100               	movlb	0	; () banked
  9567  004152  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  9568  004154  A4D8               	btfss	status,2,c
  9569  004156  D00A               	goto	l5840
  9570                           
  9571                           ; BSR set to: 0
  9572  004158  0E00               	movlw	0
  9573  00415A  0100               	movlb	0	; () banked
  9574  00415C  6F80               	movwf	?__div_to_l_& (0+255),b
  9575  00415E  0E00               	movlw	0
  9576  004160  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9577  004162  0E00               	movlw	0
  9578  004164  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9579  004166  0E00               	movlw	0
  9580  004168  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9581                           
  9582                           ; BSR set to: 0
  9583  00416A  0012               	return	
  9584  00416C                     l5840:
  9585                           
  9586                           ; BSR set to: 0
  9587  00416C  0100               	movlb	0	; () banked
  9588  00416E  3585               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9589  004170  3586               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9590  004172  0100               	movlb	0	; () banked
  9591  004174  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
  9592  004176  0100               	movlb	0	; () banked
  9593  004178  518A               	movf	__div_to_l_@cntr& (0+255),w,b
  9594  00417A  A4D8               	btfss	status,2,c
  9595  00417C  D00A               	goto	l5846
  9596                           
  9597                           ; BSR set to: 0
  9598  00417E  0E00               	movlw	0
  9599  004180  0100               	movlb	0	; () banked
  9600  004182  6F80               	movwf	?__div_to_l_& (0+255),b
  9601  004184  0E00               	movlw	0
  9602  004186  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9603  004188  0E00               	movlw	0
  9604  00418A  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9605  00418C  0E00               	movlw	0
  9606  00418E  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9607                           
  9608                           ; BSR set to: 0
  9609  004190  0012               	return	
  9610  004192                     l5846:
  9611                           
  9612                           ; BSR set to: 0
  9613  004192  0100               	movlb	0	; () banked
  9614  004194  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9615                           
  9616                           ; BSR set to: 0
  9617  004196  0EFF               	movlw	255
  9618  004198  0100               	movlb	0	; () banked
  9619  00419A  1780               	andwf	__div_to_l_@f1& (0+255),f,b
  9620  00419C  0EFF               	movlw	255
  9621  00419E  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9622  0041A0  0EFF               	movlw	255
  9623  0041A2  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9624  0041A4  0E00               	movlw	0
  9625  0041A6  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9626                           
  9627                           ; BSR set to: 0
  9628  0041A8  0100               	movlb	0	; () banked
  9629  0041AA  8F85               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9630  0041AC  0EFF               	movlw	255
  9631  0041AE  0100               	movlb	0	; () banked
  9632  0041B0  1783               	andwf	__div_to_l_@f2& (0+255),f,b
  9633  0041B2  0EFF               	movlw	255
  9634  0041B4  1784               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9635  0041B6  0EFF               	movlw	255
  9636  0041B8  1785               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9637  0041BA  0E00               	movlw	0
  9638  0041BC  1786               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9639                           
  9640                           ; BSR set to: 0
  9641  0041BE  0E00               	movlw	0
  9642  0041C0  0100               	movlb	0	; () banked
  9643  0041C2  6F86               	movwf	__div_to_l_@quot& (0+255),b
  9644  0041C4  0E00               	movlw	0
  9645  0041C6  6F87               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9646  0041C8  0E00               	movlw	0
  9647  0041CA  6F88               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9648  0041CC  0E00               	movlw	0
  9649  0041CE  6F89               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9650                           
  9651                           ; BSR set to: 0
  9652  0041D0  0E7F               	movlw	127
  9653  0041D2  0100               	movlb	0	; () banked
  9654  0041D4  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9655                           
  9656                           ; BSR set to: 0
  9657  0041D6  0100               	movlb	0	; () banked
  9658  0041D8  518A               	movf	__div_to_l_@cntr& (0+255),w,b
  9659  0041DA  0FA0               	addlw	160
  9660  0041DC  0100               	movlb	0	; () banked
  9661  0041DE  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
  9662                           
  9663                           ; BSR set to: 0
  9664  0041E0  0E20               	movlw	32
  9665  0041E2  0100               	movlb	0	; () banked
  9666  0041E4  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
  9667  0041E6                     l5860:
  9668                           
  9669                           ; BSR set to: 0
  9670  0041E6  0100               	movlb	0	; () banked
  9671  0041E8  90D8               	bcf	status,0,c
  9672  0041EA  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
  9673  0041EC  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9674  0041EE  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9675  0041F0  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9676                           
  9677                           ; BSR set to: 0
  9678  0041F2  0100               	movlb	0	; () banked
  9679  0041F4  5183               	movf	__div_to_l_@f2& (0+255),w,b
  9680  0041F6  0100               	movlb	0	; () banked
  9681  0041F8  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
  9682  0041FA  0100               	movlb	0	; () banked
  9683  0041FC  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9684  0041FE  0100               	movlb	0	; () banked
  9685  004200  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9686  004202  0100               	movlb	0	; () banked
  9687  004204  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9688  004206  0100               	movlb	0	; () banked
  9689  004208  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9690  00420A  0100               	movlb	0	; () banked
  9691  00420C  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9692  00420E  0100               	movlb	0	; () banked
  9693  004210  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9694  004212  A0D8               	btfss	status,0,c
  9695  004214  D012               	goto	l5868
  9696                           
  9697                           ; BSR set to: 0
  9698  004216  0100               	movlb	0	; () banked
  9699  004218  5183               	movf	__div_to_l_@f2& (0+255),w,b
  9700  00421A  0100               	movlb	0	; () banked
  9701  00421C  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
  9702  00421E  0100               	movlb	0	; () banked
  9703  004220  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9704  004222  0100               	movlb	0	; () banked
  9705  004224  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9706  004226  0100               	movlb	0	; () banked
  9707  004228  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9708  00422A  0100               	movlb	0	; () banked
  9709  00422C  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9710  00422E  0100               	movlb	0	; () banked
  9711  004230  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9712  004232  0100               	movlb	0	; () banked
  9713  004234  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9714                           
  9715                           ; BSR set to: 0
  9716  004236  0100               	movlb	0	; () banked
  9717  004238  8186               	bsf	__div_to_l_@quot& (0+255),0,b
  9718  00423A                     l5868:
  9719                           
  9720                           ; BSR set to: 0
  9721  00423A  0100               	movlb	0	; () banked
  9722  00423C  90D8               	bcf	status,0,c
  9723  00423E  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
  9724  004240  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9725  004242  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9726  004244  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9727                           
  9728                           ; BSR set to: 0
  9729  004246  0100               	movlb	0	; () banked
  9730  004248  2F8A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9731  00424A  D7CD               	goto	l5860
  9732                           
  9733                           ; BSR set to: 0
  9734                           
  9735                           ; BSR set to: 0
  9736  00424C  0100               	movlb	0	; () banked
  9737  00424E  AF8B               	btfss	__div_to_l_@exp1& (0+255),7,b
  9738  004250  D01A               	goto	l5884
  9739                           
  9740                           ; BSR set to: 0
  9741  004252  0100               	movlb	0	; () banked
  9742  004254  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  9743  004256  0A80               	xorlw	128
  9744  004258  0F9F               	addlw	159
  9745  00425A  B0D8               	btfsc	status,0,c
  9746  00425C  D00A               	goto	l5880
  9747                           
  9748                           ; BSR set to: 0
  9749  00425E  0E00               	movlw	0
  9750  004260  0100               	movlb	0	; () banked
  9751  004262  6F80               	movwf	?__div_to_l_& (0+255),b
  9752  004264  0E00               	movlw	0
  9753  004266  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9754  004268  0E00               	movlw	0
  9755  00426A  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9756  00426C  0E00               	movlw	0
  9757  00426E  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9758                           
  9759                           ; BSR set to: 0
  9760  004270  0012               	return	
  9761  004272                     l5880:
  9762                           
  9763                           ; BSR set to: 0
  9764  004272  0100               	movlb	0	; () banked
  9765  004274  90D8               	bcf	status,0,c
  9766  004276  3389               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9767  004278  3388               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9768  00427A  3387               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9769  00427C  3386               	rrcf	__div_to_l_@quot& (0+255),f,b
  9770                           
  9771                           ; BSR set to: 0
  9772  00427E  0100               	movlb	0	; () banked
  9773  004280  3F8B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9774  004282  D7F7               	goto	l5880
  9775                           
  9776                           ; BSR set to: 0
  9777  004284  D01B               	goto	l1095
  9778  004286                     l5884:
  9779                           
  9780                           ; BSR set to: 0
  9781  004286  0E1F               	movlw	31
  9782  004288  0100               	movlb	0	; () banked
  9783  00428A  658B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9784  00428C  D012               	goto	l5892
  9785                           
  9786                           ; BSR set to: 0
  9787  00428E  0E00               	movlw	0
  9788  004290  0100               	movlb	0	; () banked
  9789  004292  6F80               	movwf	?__div_to_l_& (0+255),b
  9790  004294  0E00               	movlw	0
  9791  004296  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  9792  004298  0E00               	movlw	0
  9793  00429A  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  9794  00429C  0E00               	movlw	0
  9795  00429E  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  9796                           
  9797                           ; BSR set to: 0
  9798  0042A0  0012               	return	
  9799  0042A2                     l5890:
  9800                           
  9801                           ; BSR set to: 0
  9802  0042A2  0100               	movlb	0	; () banked
  9803  0042A4  90D8               	bcf	status,0,c
  9804  0042A6  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
  9805  0042A8  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9806  0042AA  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9807  0042AC  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9808  0042AE  0100               	movlb	0	; () banked
  9809  0042B0  078B               	decf	__div_to_l_@exp1& (0+255),f,b
  9810  0042B2                     l5892:
  9811                           
  9812                           ; BSR set to: 0
  9813  0042B2  0100               	movlb	0	; () banked
  9814  0042B4  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  9815  0042B6  0100               	movlb	0	; () banked
  9816  0042B8  A4D8               	btfss	status,2,c
  9817  0042BA  D7F3               	goto	l5890
  9818  0042BC                     l1095:
  9819                           
  9820                           ; BSR set to: 0
  9821  0042BC  C086  F080         	movff	__div_to_l_@quot,?__div_to_l_
  9822  0042C0  C087  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9823  0042C4  C088  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9824  0042C8  C089  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9825                           
  9826                           ; BSR set to: 0
  9827  0042CC  0012               	return		;funcret
  9828  0042CE                     __end_of__div_to_l_:
  9829                           	opt stack 0
  9830                           tblptru	equ	0xFF8
  9831                           tblptrh	equ	0xFF7
  9832                           tblptrl	equ	0xFF6
  9833                           tablat	equ	0xFF5
  9834                           prodh	equ	0xFF4
  9835                           prodl	equ	0xFF3
  9836                           intcon	equ	0xFF2
  9837                           intcon2	equ	0xFF1
  9838                           postinc0	equ	0xFEE
  9839                           wreg	equ	0xFE8
  9840                           indf2	equ	0xFDF
  9841                           postinc2	equ	0xFDE
  9842                           postdec2	equ	0xFDD
  9843                           fsr2h	equ	0xFDA
  9844                           fsr2l	equ	0xFD9
  9845                           status	equ	0xFD8
  9846                           
  9847 ;; *************** function ___lltoft *****************
  9848 ;; Defined at:
  9849 ;;		line 35 in file "/Applications/microchip/xc8/v1.41/sources/common/lltoft.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;  c               4    8[BANK0 ] unsigned long 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  exp             1   16[BANK0 ] unsigned char 
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  3    8[BANK0 ] float 
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9866 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9867 ;;Total ram usage:        9 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:    7
  9870 ;; This function calls:
  9871 ;;		___ftpack
  9872 ;; This function is called by:
  9873 ;;		_printf
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           	psect	text19
  9878  0055C8                     __ptext19:
  9879                           	opt stack 0
  9880  0055C8                     ___lltoft:
  9881                           	opt stack 22
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;incstack = 0
  9885  0055C8  0E8E               	movlw	142
  9886  0055CA  0100               	movlb	0	; () banked
  9887  0055CC  6F90               	movwf	___lltoft@exp& (0+255),b
  9888  0055CE  D008               	goto	l6040
  9889  0055D0                     l6038:
  9890                           
  9891                           ; BSR set to: 0
  9892  0055D0  0100               	movlb	0	; () banked
  9893  0055D2  90D8               	bcf	status,0,c
  9894  0055D4  338B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  9895  0055D6  338A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  9896  0055D8  3389               	rrcf	(___lltoft@c+1)& (0+255),f,b
  9897  0055DA  3388               	rrcf	___lltoft@c& (0+255),f,b
  9898  0055DC  0100               	movlb	0	; () banked
  9899  0055DE  2B90               	incf	___lltoft@exp& (0+255),f,b
  9900  0055E0                     l6040:
  9901                           
  9902                           ; BSR set to: 0
  9903  0055E0  0E00               	movlw	0
  9904  0055E2  0100               	movlb	0	; () banked
  9905  0055E4  1588               	andwf	___lltoft@c& (0+255),w,b
  9906  0055E6  0100               	movlb	0	; () banked
  9907  0055E8  6F8C               	movwf	??___lltoft& (0+255),b
  9908  0055EA  0E00               	movlw	0
  9909  0055EC  0100               	movlb	0	; () banked
  9910  0055EE  1589               	andwf	(___lltoft@c+1)& (0+255),w,b
  9911  0055F0  0100               	movlb	0	; () banked
  9912  0055F2  6F8D               	movwf	(??___lltoft+1)& (0+255),b
  9913  0055F4  0E00               	movlw	0
  9914  0055F6  0100               	movlb	0	; () banked
  9915  0055F8  158A               	andwf	(___lltoft@c+2)& (0+255),w,b
  9916  0055FA  0100               	movlb	0	; () banked
  9917  0055FC  6F8E               	movwf	(??___lltoft+2)& (0+255),b
  9918  0055FE  0EFF               	movlw	255
  9919  005600  0100               	movlb	0	; () banked
  9920  005602  158B               	andwf	(___lltoft@c+3)& (0+255),w,b
  9921  005604  0100               	movlb	0	; () banked
  9922  005606  6F8F               	movwf	(??___lltoft+3)& (0+255),b
  9923  005608  0100               	movlb	0	; () banked
  9924  00560A  518C               	movf	??___lltoft& (0+255),w,b
  9925  00560C  0100               	movlb	0	; () banked
  9926  00560E  118D               	iorwf	(??___lltoft+1)& (0+255),w,b
  9927  005610  0100               	movlb	0	; () banked
  9928  005612  118E               	iorwf	(??___lltoft+2)& (0+255),w,b
  9929  005614  0100               	movlb	0	; () banked
  9930  005616  118F               	iorwf	(??___lltoft+3)& (0+255),w,b
  9931  005618  A4D8               	btfss	status,2,c
  9932  00561A  D7DA               	goto	l6038
  9933                           
  9934                           ; BSR set to: 0
  9935                           
  9936                           ; BSR set to: 0
  9937  00561C  C088  F080         	movff	___lltoft@c,___ftpack@arg
  9938  005620  C089  F081         	movff	___lltoft@c+1,___ftpack@arg+1
  9939  005624  C08A  F082         	movff	___lltoft@c+2,___ftpack@arg+2
  9940  005628  C090  F083         	movff	___lltoft@exp,___ftpack@exp
  9941  00562C  0E00               	movlw	0
  9942  00562E  0100               	movlb	0	; () banked
  9943  005630  6F84               	movwf	___ftpack@sign& (0+255),b
  9944  005632  ECCD  F025         	call	___ftpack	;wreg free
  9945  005636  C080  F088         	movff	?___ftpack,?___lltoft
  9946  00563A  C081  F089         	movff	?___ftpack+1,?___lltoft+1
  9947  00563E  C082  F08A         	movff	?___ftpack+2,?___lltoft+2
  9948  005642  0012               	return	
  9949  005644                     __end_of___lltoft:
  9950                           	opt stack 0
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           intcon	equ	0xFF2
  9958                           intcon2	equ	0xFF1
  9959                           postinc0	equ	0xFEE
  9960                           wreg	equ	0xFE8
  9961                           indf2	equ	0xFDF
  9962                           postinc2	equ	0xFDE
  9963                           postdec2	equ	0xFDD
  9964                           fsr2h	equ	0xFDA
  9965                           fsr2l	equ	0xFD9
  9966                           status	equ	0xFD8
  9967                           
  9968 ;; *************** function ___llmod *****************
  9969 ;; Defined at:
  9970 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/llmod.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  dividend        4   13[BANK0 ] unsigned long 
  9973 ;;  divisor         4   17[BANK0 ] unsigned long 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  counter         1   21[BANK0 ] unsigned char 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  4   13[BANK0 ] unsigned long 
  9978 ;; Registers used:
  9979 ;;		wreg, status,2, status,0
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9985 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;Total ram usage:        9 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    6
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_printf
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text20
 10000  005306                     __ptext20:
 10001                           	opt stack 0
 10002  005306                     ___llmod:
 10003                           	opt stack 23
 10004                           
 10005                           ;incstack = 0
 10006  005306  0100               	movlb	0	; () banked
 10007  005308  5191               	movf	___llmod@divisor& (0+255),w,b
 10008  00530A  0100               	movlb	0	; () banked
 10009  00530C  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10010  00530E  0100               	movlb	0	; () banked
 10011  005310  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10012  005312  0100               	movlb	0	; () banked
 10013  005314  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10014  005316  B4D8               	btfsc	status,2,c
 10015  005318  D03A               	goto	l1284
 10016                           
 10017                           ; BSR set to: 0
 10018  00531A  0E01               	movlw	1
 10019  00531C  0100               	movlb	0	; () banked
 10020  00531E  6F95               	movwf	___llmod@counter& (0+255),b
 10021  005320  D008               	goto	l6026
 10022  005322                     l6024:
 10023                           
 10024                           ; BSR set to: 0
 10025  005322  0100               	movlb	0	; () banked
 10026  005324  90D8               	bcf	status,0,c
 10027  005326  3791               	rlcf	___llmod@divisor& (0+255),f,b
 10028  005328  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10029  00532A  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10030  00532C  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10031  00532E  0100               	movlb	0	; () banked
 10032  005330  2B95               	incf	___llmod@counter& (0+255),f,b
 10033  005332                     l6026:
 10034                           
 10035                           ; BSR set to: 0
 10036  005332  0100               	movlb	0	; () banked
 10037  005334  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10038  005336  D7F5               	goto	l6024
 10039  005338                     l6028:
 10040                           
 10041                           ; BSR set to: 0
 10042  005338  0100               	movlb	0	; () banked
 10043  00533A  5191               	movf	___llmod@divisor& (0+255),w,b
 10044  00533C  0100               	movlb	0	; () banked
 10045  00533E  5D8D               	subwf	___llmod@dividend& (0+255),w,b
 10046  005340  0100               	movlb	0	; () banked
 10047  005342  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
 10048  005344  0100               	movlb	0	; () banked
 10049  005346  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10050  005348  0100               	movlb	0	; () banked
 10051  00534A  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
 10052  00534C  0100               	movlb	0	; () banked
 10053  00534E  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10054  005350  0100               	movlb	0	; () banked
 10055  005352  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
 10056  005354  0100               	movlb	0	; () banked
 10057  005356  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10058  005358  A0D8               	btfss	status,0,c
 10059  00535A  D010               	goto	l6032
 10060                           
 10061                           ; BSR set to: 0
 10062  00535C  0100               	movlb	0	; () banked
 10063  00535E  5191               	movf	___llmod@divisor& (0+255),w,b
 10064  005360  0100               	movlb	0	; () banked
 10065  005362  5F8D               	subwf	___llmod@dividend& (0+255),f,b
 10066  005364  0100               	movlb	0	; () banked
 10067  005366  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
 10068  005368  0100               	movlb	0	; () banked
 10069  00536A  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10070  00536C  0100               	movlb	0	; () banked
 10071  00536E  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
 10072  005370  0100               	movlb	0	; () banked
 10073  005372  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10074  005374  0100               	movlb	0	; () banked
 10075  005376  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
 10076  005378  0100               	movlb	0	; () banked
 10077  00537A  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10078  00537C                     l6032:
 10079                           
 10080                           ; BSR set to: 0
 10081  00537C  0100               	movlb	0	; () banked
 10082  00537E  90D8               	bcf	status,0,c
 10083  005380  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10084  005382  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10085  005384  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10086  005386  3391               	rrcf	___llmod@divisor& (0+255),f,b
 10087                           
 10088                           ; BSR set to: 0
 10089  005388  0100               	movlb	0	; () banked
 10090  00538A  2F95               	decfsz	___llmod@counter& (0+255),f,b
 10091  00538C  D7D5               	goto	l6028
 10092  00538E                     l1284:
 10093                           
 10094                           ; BSR set to: 0
 10095  00538E  C08D  F08D         	movff	___llmod@dividend,?___llmod
 10096  005392  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
 10097  005396  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
 10098  00539A  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
 10099                           
 10100                           ; BSR set to: 0
 10101  00539E  0012               	return		;funcret
 10102  0053A0                     __end_of___llmod:
 10103                           	opt stack 0
 10104                           tblptru	equ	0xFF8
 10105                           tblptrh	equ	0xFF7
 10106                           tblptrl	equ	0xFF6
 10107                           tablat	equ	0xFF5
 10108                           prodh	equ	0xFF4
 10109                           prodl	equ	0xFF3
 10110                           intcon	equ	0xFF2
 10111                           intcon2	equ	0xFF1
 10112                           postinc0	equ	0xFEE
 10113                           wreg	equ	0xFE8
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           postdec2	equ	0xFDD
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8
 10120                           
 10121 ;; *************** function ___fttol *****************
 10122 ;; Defined at:
 10123 ;;		line 44 in file "/Applications/microchip/xc8/v1.41/sources/common/fttol.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  f1              3   42[BANK0 ] float 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  lval            4   52[BANK0 ] unsigned long 
 10128 ;;  exp1            1   56[BANK0 ] unsigned char 
 10129 ;;  sign1           1   51[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  4   42[BANK0 ] long 
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10139 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10140 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;Total ram usage:       15 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    6
 10146 ;; This function calls:
 10147 ;;		Nothing
 10148 ;; This function is called by:
 10149 ;;		_printf
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           	psect	text21
 10154  0046D2                     __ptext21:
 10155                           	opt stack 0
 10156  0046D2                     ___fttol:
 10157                           	opt stack 23
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;incstack = 0
 10161  0046D2  C0AC  F0AE         	movff	___fttol@f1+2,??___fttol
 10162  0046D6  0100               	movlb	0	; () banked
 10163  0046D8  6BAF               	clrf	(??___fttol+1)& (0+255),b
 10164  0046DA  6BB0               	clrf	(??___fttol+2)& (0+255),b
 10165  0046DC  0100               	movlb	0	; () banked
 10166  0046DE  35AB               	rlcf	(___fttol@f1+1)& (0+255),w,b
 10167  0046E0  0100               	movlb	0	; () banked
 10168  0046E2  37AE               	rlcf	??___fttol& (0+255),f,b
 10169  0046E4  E301               	bnc	u6521
 10170  0046E6  81AF               	bsf	(??___fttol+1)& (0+255),0,b
 10171  0046E8                     u6521:
 10172  0046E8  0100               	movlb	0	; () banked
 10173  0046EA  51AE               	movf	??___fttol& (0+255),w,b
 10174  0046EC  0100               	movlb	0	; () banked
 10175  0046EE  6FB8               	movwf	___fttol@exp1& (0+255),b
 10176  0046F0  0100               	movlb	0	; () banked
 10177  0046F2  51B8               	movf	___fttol@exp1& (0+255),w,b
 10178  0046F4  A4D8               	btfss	status,2,c
 10179  0046F6  D00A               	goto	l5958
 10180                           
 10181                           ; BSR set to: 0
 10182  0046F8  0E00               	movlw	0
 10183  0046FA  0100               	movlb	0	; () banked
 10184  0046FC  6FAA               	movwf	?___fttol& (0+255),b
 10185  0046FE  0E00               	movlw	0
 10186  004700  6FAB               	movwf	(?___fttol+1)& (0+255),b
 10187  004702  0E00               	movlw	0
 10188  004704  6FAC               	movwf	(?___fttol+2)& (0+255),b
 10189  004706  0E00               	movlw	0
 10190  004708  6FAD               	movwf	(?___fttol+3)& (0+255),b
 10191                           
 10192                           ; BSR set to: 0
 10193  00470A  0012               	return	
 10194  00470C                     l5958:
 10195                           
 10196                           ; BSR set to: 0
 10197  00470C  0E17               	movlw	23
 10198  00470E  0100               	movlb	0	; () banked
 10199  004710  6FAE               	movwf	??___fttol& (0+255),b
 10200  004712  C0AA  F0AF         	movff	___fttol@f1,??___fttol+1
 10201  004716  C0AB  F0B0         	movff	___fttol@f1+1,??___fttol+2
 10202  00471A  C0AC  F0B1         	movff	___fttol@f1+2,??___fttol+3
 10203  00471E  0100               	movlb	0	; () banked
 10204  004720  29AE               	incf	??___fttol& (0+255),w,b
 10205  004722  0100               	movlb	0	; () banked
 10206  004724  6FB2               	movwf	(??___fttol+4)& (0+255),b
 10207  004726  D005               	goto	u6540
 10208  004728                     u6545:
 10209  004728  0100               	movlb	0	; () banked
 10210  00472A  90D8               	bcf	status,0,c
 10211  00472C  33B1               	rrcf	(??___fttol+3)& (0+255),f,b
 10212  00472E  33B0               	rrcf	(??___fttol+2)& (0+255),f,b
 10213  004730  33AF               	rrcf	(??___fttol+1)& (0+255),f,b
 10214  004732                     u6540:
 10215  004732  0100               	movlb	0	; () banked
 10216  004734  2FB2               	decfsz	(??___fttol+4)& (0+255),f,b
 10217  004736  D7F8               	goto	u6545
 10218  004738  0100               	movlb	0	; () banked
 10219  00473A  51AF               	movf	(??___fttol+1)& (0+255),w,b
 10220  00473C  0100               	movlb	0	; () banked
 10221  00473E  6FB3               	movwf	___fttol@sign1& (0+255),b
 10222                           
 10223                           ; BSR set to: 0
 10224  004740  0100               	movlb	0	; () banked
 10225  004742  8FAB               	bsf	(___fttol@f1+1)& (0+255),7,b
 10226                           
 10227                           ; BSR set to: 0
 10228  004744  0EFF               	movlw	255
 10229  004746  0100               	movlb	0	; () banked
 10230  004748  17AA               	andwf	___fttol@f1& (0+255),f,b
 10231  00474A  0EFF               	movlw	255
 10232  00474C  0100               	movlb	0	; () banked
 10233  00474E  17AB               	andwf	(___fttol@f1+1)& (0+255),f,b
 10234  004750  0E00               	movlw	0
 10235  004752  0100               	movlb	0	; () banked
 10236  004754  17AC               	andwf	(___fttol@f1+2)& (0+255),f,b
 10237                           
 10238                           ; BSR set to: 0
 10239  004756  0100               	movlb	0	; () banked
 10240  004758  51AA               	movf	___fttol@f1& (0+255),w,b
 10241  00475A  0100               	movlb	0	; () banked
 10242  00475C  6FB4               	movwf	___fttol@lval& (0+255),b
 10243  00475E  0100               	movlb	0	; () banked
 10244  004760  51AB               	movf	(___fttol@f1+1)& (0+255),w,b
 10245  004762  0100               	movlb	0	; () banked
 10246  004764  6FB5               	movwf	(___fttol@lval+1)& (0+255),b
 10247  004766  0100               	movlb	0	; () banked
 10248  004768  51AC               	movf	(___fttol@f1+2)& (0+255),w,b
 10249  00476A  0100               	movlb	0	; () banked
 10250  00476C  6FB6               	movwf	(___fttol@lval+2)& (0+255),b
 10251  00476E  0100               	movlb	0	; () banked
 10252  004770  6BB7               	clrf	(___fttol@lval+3)& (0+255),b
 10253                           
 10254                           ; BSR set to: 0
 10255  004772  0E8E               	movlw	142
 10256  004774  0100               	movlb	0	; () banked
 10257  004776  5FB8               	subwf	___fttol@exp1& (0+255),f,b
 10258                           
 10259                           ; BSR set to: 0
 10260  004778  0100               	movlb	0	; () banked
 10261  00477A  AFB8               	btfss	___fttol@exp1& (0+255),7,b
 10262  00477C  D01A               	goto	l5980
 10263                           
 10264                           ; BSR set to: 0
 10265  00477E  0100               	movlb	0	; () banked
 10266  004780  51B8               	movf	___fttol@exp1& (0+255),w,b
 10267  004782  0A80               	xorlw	128
 10268  004784  0F8F               	addlw	143
 10269  004786  B0D8               	btfsc	status,0,c
 10270  004788  D00A               	goto	l5976
 10271                           
 10272                           ; BSR set to: 0
 10273  00478A  0E00               	movlw	0
 10274  00478C  0100               	movlb	0	; () banked
 10275  00478E  6FAA               	movwf	?___fttol& (0+255),b
 10276  004790  0E00               	movlw	0
 10277  004792  6FAB               	movwf	(?___fttol+1)& (0+255),b
 10278  004794  0E00               	movlw	0
 10279  004796  6FAC               	movwf	(?___fttol+2)& (0+255),b
 10280  004798  0E00               	movlw	0
 10281  00479A  6FAD               	movwf	(?___fttol+3)& (0+255),b
 10282                           
 10283                           ; BSR set to: 0
 10284  00479C  0012               	return	
 10285  00479E                     l5976:
 10286                           
 10287                           ; BSR set to: 0
 10288  00479E  0100               	movlb	0	; () banked
 10289  0047A0  90D8               	bcf	status,0,c
 10290  0047A2  33B7               	rrcf	(___fttol@lval+3)& (0+255),f,b
 10291  0047A4  33B6               	rrcf	(___fttol@lval+2)& (0+255),f,b
 10292  0047A6  33B5               	rrcf	(___fttol@lval+1)& (0+255),f,b
 10293  0047A8  33B4               	rrcf	___fttol@lval& (0+255),f,b
 10294                           
 10295                           ; BSR set to: 0
 10296  0047AA  0100               	movlb	0	; () banked
 10297  0047AC  3FB8               	incfsz	___fttol@exp1& (0+255),f,b
 10298  0047AE  D7F7               	goto	l5976
 10299                           
 10300                           ; BSR set to: 0
 10301  0047B0  D01B               	goto	l5990
 10302  0047B2                     l5980:
 10303                           
 10304                           ; BSR set to: 0
 10305  0047B2  0E17               	movlw	23
 10306  0047B4  0100               	movlb	0	; () banked
 10307  0047B6  65B8               	cpfsgt	___fttol@exp1& (0+255),b
 10308  0047B8  D012               	goto	l5988
 10309                           
 10310                           ; BSR set to: 0
 10311  0047BA  0E00               	movlw	0
 10312  0047BC  0100               	movlb	0	; () banked
 10313  0047BE  6FAA               	movwf	?___fttol& (0+255),b
 10314  0047C0  0E00               	movlw	0
 10315  0047C2  6FAB               	movwf	(?___fttol+1)& (0+255),b
 10316  0047C4  0E00               	movlw	0
 10317  0047C6  6FAC               	movwf	(?___fttol+2)& (0+255),b
 10318  0047C8  0E00               	movlw	0
 10319  0047CA  6FAD               	movwf	(?___fttol+3)& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322  0047CC  0012               	return	
 10323  0047CE                     l5986:
 10324                           
 10325                           ; BSR set to: 0
 10326  0047CE  0100               	movlb	0	; () banked
 10327  0047D0  90D8               	bcf	status,0,c
 10328  0047D2  37B4               	rlcf	___fttol@lval& (0+255),f,b
 10329  0047D4  37B5               	rlcf	(___fttol@lval+1)& (0+255),f,b
 10330  0047D6  37B6               	rlcf	(___fttol@lval+2)& (0+255),f,b
 10331  0047D8  37B7               	rlcf	(___fttol@lval+3)& (0+255),f,b
 10332  0047DA  0100               	movlb	0	; () banked
 10333  0047DC  07B8               	decf	___fttol@exp1& (0+255),f,b
 10334  0047DE                     l5988:
 10335                           
 10336                           ; BSR set to: 0
 10337  0047DE  0100               	movlb	0	; () banked
 10338  0047E0  51B8               	movf	___fttol@exp1& (0+255),w,b
 10339  0047E2  0100               	movlb	0	; () banked
 10340  0047E4  A4D8               	btfss	status,2,c
 10341  0047E6  D7F3               	goto	l5986
 10342  0047E8                     l5990:
 10343                           
 10344                           ; BSR set to: 0
 10345  0047E8  0100               	movlb	0	; () banked
 10346  0047EA  51B3               	movf	___fttol@sign1& (0+255),w,b
 10347  0047EC  0100               	movlb	0	; () banked
 10348  0047EE  B4D8               	btfsc	status,2,c
 10349  0047F0  D009               	goto	l5994
 10350                           
 10351                           ; BSR set to: 0
 10352  0047F2  0100               	movlb	0	; () banked
 10353  0047F4  1FB7               	comf	(___fttol@lval+3)& (0+255),f,b
 10354  0047F6  1FB6               	comf	(___fttol@lval+2)& (0+255),f,b
 10355  0047F8  1FB5               	comf	(___fttol@lval+1)& (0+255),f,b
 10356  0047FA  6DB4               	negf	___fttol@lval& (0+255),b
 10357  0047FC  0E00               	movlw	0
 10358  0047FE  23B5               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10359  004800  23B6               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10360  004802  23B7               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10361  004804                     l5994:
 10362                           
 10363                           ; BSR set to: 0
 10364  004804  C0B4  F0AA         	movff	___fttol@lval,?___fttol
 10365  004808  C0B5  F0AB         	movff	___fttol@lval+1,?___fttol+1
 10366  00480C  C0B6  F0AC         	movff	___fttol@lval+2,?___fttol+2
 10367  004810  C0B7  F0AD         	movff	___fttol@lval+3,?___fttol+3
 10368  004814  0012               	return	
 10369  004816                     __end_of___fttol:
 10370                           	opt stack 0
 10371                           tblptru	equ	0xFF8
 10372                           tblptrh	equ	0xFF7
 10373                           tblptrl	equ	0xFF6
 10374                           tablat	equ	0xFF5
 10375                           prodh	equ	0xFF4
 10376                           prodl	equ	0xFF3
 10377                           intcon	equ	0xFF2
 10378                           intcon2	equ	0xFF1
 10379                           postinc0	equ	0xFEE
 10380                           wreg	equ	0xFE8
 10381                           indf2	equ	0xFDF
 10382                           postinc2	equ	0xFDE
 10383                           postdec2	equ	0xFDD
 10384                           fsr2h	equ	0xFDA
 10385                           fsr2l	equ	0xFD9
 10386                           status	equ	0xFD8
 10387                           
 10388 ;; *************** function ___ftsub *****************
 10389 ;; Defined at:
 10390 ;;		line 20 in file "/Applications/microchip/xc8/v1.41/sources/common/ftsub.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  f1              3   57[BANK0 ] float 
 10393 ;;  f2              3   60[BANK0 ] float 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  3   57[BANK0 ] float 
 10398 ;; Registers used:
 10399 ;;		wreg, status,2, status,0, cstack
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10405 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;Total ram usage:        6 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    8
 10412 ;; This function calls:
 10413 ;;		___ftadd
 10414 ;; This function is called by:
 10415 ;;		_printf
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text22
 10420  005B58                     __ptext22:
 10421                           	opt stack 0
 10422  005B58                     ___ftsub:
 10423                           	opt stack 21
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;incstack = 0
 10427  005B58  0100               	movlb	0	; () banked
 10428  005B5A  51BC               	movf	___ftsub@f2& (0+255),w,b
 10429  005B5C  0100               	movlb	0	; () banked
 10430  005B5E  11BD               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 10431  005B60  0100               	movlb	0	; () banked
 10432  005B62  11BE               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 10433  005B64  B4D8               	btfsc	status,2,c
 10434  005B66  D009               	goto	l5944
 10435                           
 10436                           ; BSR set to: 0
 10437  005B68  0E00               	movlw	0
 10438  005B6A  0100               	movlb	0	; () banked
 10439  005B6C  1BBC               	xorwf	___ftsub@f2& (0+255),f,b
 10440  005B6E  0E00               	movlw	0
 10441  005B70  0100               	movlb	0	; () banked
 10442  005B72  1BBD               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10443  005B74  0E80               	movlw	128
 10444  005B76  0100               	movlb	0	; () banked
 10445  005B78  1BBE               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10446  005B7A                     l5944:
 10447                           
 10448                           ; BSR set to: 0
 10449  005B7A  C0B9  F0AD         	movff	___ftsub@f1,___ftadd@f1
 10450  005B7E  C0BA  F0AE         	movff	___ftsub@f1+1,___ftadd@f1+1
 10451  005B82  C0BB  F0AF         	movff	___ftsub@f1+2,___ftadd@f1+2
 10452  005B86  C0BC  F0B0         	movff	___ftsub@f2,___ftadd@f2
 10453  005B8A  C0BD  F0B1         	movff	___ftsub@f2+1,___ftadd@f2+1
 10454  005B8E  C0BE  F0B2         	movff	___ftsub@f2+2,___ftadd@f2+2
 10455  005B92  ECA7  F01C         	call	___ftadd	;wreg free
 10456  005B96  C0AD  F0B9         	movff	?___ftadd,?___ftsub
 10457  005B9A  C0AE  F0BA         	movff	?___ftadd+1,?___ftsub+1
 10458  005B9E  C0AF  F0BB         	movff	?___ftadd+2,?___ftsub+2
 10459  005BA2  0012               	return	
 10460  005BA4                     __end_of___ftsub:
 10461                           	opt stack 0
 10462                           tblptru	equ	0xFF8
 10463                           tblptrh	equ	0xFF7
 10464                           tblptrl	equ	0xFF6
 10465                           tablat	equ	0xFF5
 10466                           prodh	equ	0xFF4
 10467                           prodl	equ	0xFF3
 10468                           intcon	equ	0xFF2
 10469                           intcon2	equ	0xFF1
 10470                           postinc0	equ	0xFEE
 10471                           wreg	equ	0xFE8
 10472                           indf2	equ	0xFDF
 10473                           postinc2	equ	0xFDE
 10474                           postdec2	equ	0xFDD
 10475                           fsr2h	equ	0xFDA
 10476                           fsr2l	equ	0xFD9
 10477                           status	equ	0xFD8
 10478                           
 10479 ;; *************** function ___ftadd *****************
 10480 ;; Defined at:
 10481 ;;		line 86 in file "/Applications/microchip/xc8/v1.41/sources/common/ftadd.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  f1              3   45[BANK0 ] float 
 10484 ;;  f2              3   48[BANK0 ] float 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;  exp1            1   56[BANK0 ] unsigned char 
 10487 ;;  exp2            1   55[BANK0 ] unsigned char 
 10488 ;;  sign            1   54[BANK0 ] unsigned char 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  3   45[BANK0 ] float 
 10491 ;; Registers used:
 10492 ;;		wreg, status,2, status,0, cstack
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10498 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;Total ram usage:       12 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:    7
 10505 ;; This function calls:
 10506 ;;		___ftpack
 10507 ;; This function is called by:
 10508 ;;		_readADC
 10509 ;;		_printf
 10510 ;;		___ftsub
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           	psect	text23
 10515  00394E                     __ptext23:
 10516                           	opt stack 0
 10517  00394E                     ___ftadd:
 10518                           	opt stack 22
 10519                           
 10520                           ;incstack = 0
 10521  00394E  C0AF  F0B3         	movff	___ftadd@f1+2,??___ftadd
 10522  003952  0100               	movlb	0	; () banked
 10523  003954  6BB4               	clrf	(??___ftadd+1)& (0+255),b
 10524  003956  6BB5               	clrf	(??___ftadd+2)& (0+255),b
 10525  003958  0100               	movlb	0	; () banked
 10526  00395A  35AE               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10527  00395C  0100               	movlb	0	; () banked
 10528  00395E  37B3               	rlcf	??___ftadd& (0+255),f,b
 10529  003960  E301               	bnc	u5251
 10530  003962  81B4               	bsf	(??___ftadd+1)& (0+255),0,b
 10531  003964                     u5251:
 10532  003964  0100               	movlb	0	; () banked
 10533  003966  51B3               	movf	??___ftadd& (0+255),w,b
 10534  003968  0100               	movlb	0	; () banked
 10535  00396A  6FB8               	movwf	___ftadd@exp1& (0+255),b
 10536  00396C  C0B2  F0B3         	movff	___ftadd@f2+2,??___ftadd
 10537  003970  0100               	movlb	0	; () banked
 10538  003972  6BB4               	clrf	(??___ftadd+1)& (0+255),b
 10539  003974  6BB5               	clrf	(??___ftadd+2)& (0+255),b
 10540  003976  0100               	movlb	0	; () banked
 10541  003978  35B1               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10542  00397A  0100               	movlb	0	; () banked
 10543  00397C  37B3               	rlcf	??___ftadd& (0+255),f,b
 10544  00397E  E301               	bnc	u5261
 10545  003980  81B4               	bsf	(??___ftadd+1)& (0+255),0,b
 10546  003982                     u5261:
 10547  003982  0100               	movlb	0	; () banked
 10548  003984  51B3               	movf	??___ftadd& (0+255),w,b
 10549  003986  0100               	movlb	0	; () banked
 10550  003988  6FB7               	movwf	___ftadd@exp2& (0+255),b
 10551                           
 10552                           ; BSR set to: 0
 10553  00398A  0100               	movlb	0	; () banked
 10554  00398C  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10555  00398E  0100               	movlb	0	; () banked
 10556  003990  B4D8               	btfsc	status,2,c
 10557  003992  D011               	goto	l1150
 10558                           
 10559                           ; BSR set to: 0
 10560  003994  0100               	movlb	0	; () banked
 10561  003996  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10562  003998  0100               	movlb	0	; () banked
 10563  00399A  5DB8               	subwf	___ftadd@exp1& (0+255),w,b
 10564  00399C  B0D8               	btfsc	status,0,c
 10565  00399E  D012               	goto	l5098
 10566                           
 10567                           ; BSR set to: 0
 10568  0039A0  0100               	movlb	0	; () banked
 10569  0039A2  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10570  0039A4  0800               	sublw	0
 10571  0039A6  0100               	movlb	0	; () banked
 10572  0039A8  25B7               	addwf	___ftadd@exp2& (0+255),w,b
 10573  0039AA  0100               	movlb	0	; () banked
 10574  0039AC  6FB3               	movwf	??___ftadd& (0+255),b
 10575  0039AE  0E18               	movlw	24
 10576  0039B0  0100               	movlb	0	; () banked
 10577  0039B2  65B3               	cpfsgt	??___ftadd& (0+255),b
 10578  0039B4  D007               	goto	l5098
 10579  0039B6                     l1150:
 10580                           
 10581                           ; BSR set to: 0
 10582  0039B6  C0B0  F0AD         	movff	___ftadd@f2,?___ftadd
 10583  0039BA  C0B1  F0AE         	movff	___ftadd@f2+1,?___ftadd+1
 10584  0039BE  C0B2  F0AF         	movff	___ftadd@f2+2,?___ftadd+2
 10585  0039C2  0012               	return	
 10586  0039C4                     l5098:
 10587                           
 10588                           ; BSR set to: 0
 10589  0039C4  0100               	movlb	0	; () banked
 10590  0039C6  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10591  0039C8  0100               	movlb	0	; () banked
 10592  0039CA  B4D8               	btfsc	status,2,c
 10593  0039CC  D011               	goto	l1154
 10594                           
 10595                           ; BSR set to: 0
 10596  0039CE  0100               	movlb	0	; () banked
 10597  0039D0  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10598  0039D2  0100               	movlb	0	; () banked
 10599  0039D4  5DB7               	subwf	___ftadd@exp2& (0+255),w,b
 10600  0039D6  B0D8               	btfsc	status,0,c
 10601  0039D8  D012               	goto	l5104
 10602                           
 10603                           ; BSR set to: 0
 10604  0039DA  0100               	movlb	0	; () banked
 10605  0039DC  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10606  0039DE  0800               	sublw	0
 10607  0039E0  0100               	movlb	0	; () banked
 10608  0039E2  25B8               	addwf	___ftadd@exp1& (0+255),w,b
 10609  0039E4  0100               	movlb	0	; () banked
 10610  0039E6  6FB3               	movwf	??___ftadd& (0+255),b
 10611  0039E8  0E18               	movlw	24
 10612  0039EA  0100               	movlb	0	; () banked
 10613  0039EC  65B3               	cpfsgt	??___ftadd& (0+255),b
 10614  0039EE  D007               	goto	l5104
 10615  0039F0                     l1154:
 10616                           
 10617                           ; BSR set to: 0
 10618  0039F0  C0AD  F0AD         	movff	___ftadd@f1,?___ftadd
 10619  0039F4  C0AE  F0AE         	movff	___ftadd@f1+1,?___ftadd+1
 10620  0039F8  C0AF  F0AF         	movff	___ftadd@f1+2,?___ftadd+2
 10621  0039FC  0012               	return	
 10622  0039FE                     l5104:
 10623                           
 10624                           ; BSR set to: 0
 10625  0039FE  0E06               	movlw	6
 10626  003A00  0100               	movlb	0	; () banked
 10627  003A02  6FB6               	movwf	___ftadd@sign& (0+255),b
 10628                           
 10629                           ; BSR set to: 0
 10630  003A04  0100               	movlb	0	; () banked
 10631  003A06  AFAF               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10632  003A08  D002               	goto	l5110
 10633                           
 10634                           ; BSR set to: 0
 10635  003A0A  0100               	movlb	0	; () banked
 10636  003A0C  8FB6               	bsf	___ftadd@sign& (0+255),7,b
 10637  003A0E                     l5110:
 10638                           
 10639                           ; BSR set to: 0
 10640  003A0E  0100               	movlb	0	; () banked
 10641  003A10  AFB2               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10642  003A12  D002               	goto	l1156
 10643                           
 10644                           ; BSR set to: 0
 10645  003A14  0100               	movlb	0	; () banked
 10646  003A16  8DB6               	bsf	___ftadd@sign& (0+255),6,b
 10647  003A18                     l1156:
 10648                           
 10649                           ; BSR set to: 0
 10650  003A18  0100               	movlb	0	; () banked
 10651  003A1A  8FAE               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10652                           
 10653                           ; BSR set to: 0
 10654  003A1C  0EFF               	movlw	255
 10655  003A1E  0100               	movlb	0	; () banked
 10656  003A20  17AD               	andwf	___ftadd@f1& (0+255),f,b
 10657  003A22  0EFF               	movlw	255
 10658  003A24  0100               	movlb	0	; () banked
 10659  003A26  17AE               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10660  003A28  0E00               	movlw	0
 10661  003A2A  0100               	movlb	0	; () banked
 10662  003A2C  17AF               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10663  003A2E  0100               	movlb	0	; () banked
 10664  003A30  8FB1               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10665                           
 10666                           ; BSR set to: 0
 10667  003A32  0EFF               	movlw	255
 10668  003A34  0100               	movlb	0	; () banked
 10669  003A36  17B0               	andwf	___ftadd@f2& (0+255),f,b
 10670  003A38  0EFF               	movlw	255
 10671  003A3A  0100               	movlb	0	; () banked
 10672  003A3C  17B1               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10673  003A3E  0E00               	movlw	0
 10674  003A40  0100               	movlb	0	; () banked
 10675  003A42  17B2               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10676                           
 10677                           ; BSR set to: 0
 10678  003A44  0100               	movlb	0	; () banked
 10679  003A46  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10680  003A48  0100               	movlb	0	; () banked
 10681  003A4A  5DB8               	subwf	___ftadd@exp1& (0+255),w,b
 10682  003A4C  B0D8               	btfsc	status,0,c
 10683  003A4E  D025               	goto	l5130
 10684  003A50                     l5120:
 10685                           
 10686                           ; BSR set to: 0
 10687  003A50  0100               	movlb	0	; () banked
 10688  003A52  90D8               	bcf	status,0,c
 10689  003A54  37B0               	rlcf	___ftadd@f2& (0+255),f,b
 10690  003A56  37B1               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10691  003A58  37B2               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10692  003A5A  0100               	movlb	0	; () banked
 10693  003A5C  07B7               	decf	___ftadd@exp2& (0+255),f,b
 10694                           
 10695                           ; BSR set to: 0
 10696  003A5E  0100               	movlb	0	; () banked
 10697  003A60  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10698  003A62  0100               	movlb	0	; () banked
 10699  003A64  19B7               	xorwf	___ftadd@exp2& (0+255),w,b
 10700  003A66  B4D8               	btfsc	status,2,c
 10701  003A68  D011               	goto	l5128
 10702                           
 10703                           ; BSR set to: 0
 10704  003A6A  0100               	movlb	0	; () banked
 10705  003A6C  07B6               	decf	___ftadd@sign& (0+255),f,b
 10706  003A6E  C0B6  F0B3         	movff	___ftadd@sign,??___ftadd
 10707  003A72  0E07               	movlw	7
 10708  003A74  0100               	movlb	0	; () banked
 10709  003A76  17B3               	andwf	??___ftadd& (0+255),f,b
 10710  003A78  B4D8               	btfsc	status,2,c
 10711  003A7A  D008               	goto	l5128
 10712  003A7C  D7E9               	goto	l5120
 10713  003A7E                     l5126:
 10714                           
 10715                           ; BSR set to: 0
 10716  003A7E  0100               	movlb	0	; () banked
 10717  003A80  90D8               	bcf	status,0,c
 10718  003A82  33AF               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10719  003A84  33AE               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10720  003A86  33AD               	rrcf	___ftadd@f1& (0+255),f,b
 10721  003A88  0100               	movlb	0	; () banked
 10722  003A8A  2BB8               	incf	___ftadd@exp1& (0+255),f,b
 10723  003A8C                     l5128:
 10724                           
 10725                           ; BSR set to: 0
 10726  003A8C  0100               	movlb	0	; () banked
 10727  003A8E  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10728  003A90  0100               	movlb	0	; () banked
 10729  003A92  19B8               	xorwf	___ftadd@exp1& (0+255),w,b
 10730  003A94  B4D8               	btfsc	status,2,c
 10731  003A96  D02B               	goto	l1165
 10732  003A98  D7F2               	goto	l5126
 10733  003A9A                     l5130:
 10734                           
 10735                           ; BSR set to: 0
 10736  003A9A  0100               	movlb	0	; () banked
 10737  003A9C  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10738  003A9E  0100               	movlb	0	; () banked
 10739  003AA0  5DB7               	subwf	___ftadd@exp2& (0+255),w,b
 10740  003AA2  B0D8               	btfsc	status,0,c
 10741  003AA4  D024               	goto	l1165
 10742  003AA6                     l5132:
 10743                           
 10744                           ; BSR set to: 0
 10745  003AA6  0100               	movlb	0	; () banked
 10746  003AA8  90D8               	bcf	status,0,c
 10747  003AAA  37AD               	rlcf	___ftadd@f1& (0+255),f,b
 10748  003AAC  37AE               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10749  003AAE  37AF               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10750  003AB0  0100               	movlb	0	; () banked
 10751  003AB2  07B8               	decf	___ftadd@exp1& (0+255),f,b
 10752                           
 10753                           ; BSR set to: 0
 10754  003AB4  0100               	movlb	0	; () banked
 10755  003AB6  51B8               	movf	___ftadd@exp1& (0+255),w,b
 10756  003AB8  0100               	movlb	0	; () banked
 10757  003ABA  19B7               	xorwf	___ftadd@exp2& (0+255),w,b
 10758  003ABC  B4D8               	btfsc	status,2,c
 10759  003ABE  D011               	goto	l5140
 10760                           
 10761                           ; BSR set to: 0
 10762  003AC0  0100               	movlb	0	; () banked
 10763  003AC2  07B6               	decf	___ftadd@sign& (0+255),f,b
 10764  003AC4  C0B6  F0B3         	movff	___ftadd@sign,??___ftadd
 10765  003AC8  0E07               	movlw	7
 10766  003ACA  0100               	movlb	0	; () banked
 10767  003ACC  17B3               	andwf	??___ftadd& (0+255),f,b
 10768  003ACE  B4D8               	btfsc	status,2,c
 10769  003AD0  D008               	goto	l5140
 10770  003AD2  D7E9               	goto	l5132
 10771  003AD4                     l5138:
 10772                           
 10773                           ; BSR set to: 0
 10774  003AD4  0100               	movlb	0	; () banked
 10775  003AD6  90D8               	bcf	status,0,c
 10776  003AD8  33B2               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10777  003ADA  33B1               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10778  003ADC  33B0               	rrcf	___ftadd@f2& (0+255),f,b
 10779  003ADE  0100               	movlb	0	; () banked
 10780  003AE0  2BB7               	incf	___ftadd@exp2& (0+255),f,b
 10781  003AE2                     l5140:
 10782                           
 10783                           ; BSR set to: 0
 10784  003AE2  0100               	movlb	0	; () banked
 10785  003AE4  51B7               	movf	___ftadd@exp2& (0+255),w,b
 10786  003AE6  0100               	movlb	0	; () banked
 10787  003AE8  19B8               	xorwf	___ftadd@exp1& (0+255),w,b
 10788  003AEA  A4D8               	btfss	status,2,c
 10789  003AEC  D7F3               	goto	l5138
 10790  003AEE                     l1165:
 10791                           
 10792                           ; BSR set to: 0
 10793  003AEE  0100               	movlb	0	; () banked
 10794  003AF0  AFB6               	btfss	___ftadd@sign& (0+255),7,b
 10795  003AF2  D012               	goto	l1174
 10796                           
 10797                           ; BSR set to: 0
 10798  003AF4  0EFF               	movlw	255
 10799  003AF6  0100               	movlb	0	; () banked
 10800  003AF8  1BAD               	xorwf	___ftadd@f1& (0+255),f,b
 10801  003AFA  0EFF               	movlw	255
 10802  003AFC  0100               	movlb	0	; () banked
 10803  003AFE  1BAE               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10804  003B00  0EFF               	movlw	255
 10805  003B02  0100               	movlb	0	; () banked
 10806  003B04  1BAF               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10807  003B06  0E01               	movlw	1
 10808  003B08  0100               	movlb	0	; () banked
 10809  003B0A  27AD               	addwf	___ftadd@f1& (0+255),f,b
 10810  003B0C  0E00               	movlw	0
 10811  003B0E  0100               	movlb	0	; () banked
 10812  003B10  23AE               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10813  003B12  0E00               	movlw	0
 10814  003B14  0100               	movlb	0	; () banked
 10815  003B16  23AF               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10816  003B18                     l1174:
 10817                           
 10818                           ; BSR set to: 0
 10819  003B18  0100               	movlb	0	; () banked
 10820  003B1A  ADB6               	btfss	___ftadd@sign& (0+255),6,b
 10821  003B1C  D012               	goto	l5146
 10822                           
 10823                           ; BSR set to: 0
 10824  003B1E  0EFF               	movlw	255
 10825  003B20  0100               	movlb	0	; () banked
 10826  003B22  1BB0               	xorwf	___ftadd@f2& (0+255),f,b
 10827  003B24  0EFF               	movlw	255
 10828  003B26  0100               	movlb	0	; () banked
 10829  003B28  1BB1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10830  003B2A  0EFF               	movlw	255
 10831  003B2C  0100               	movlb	0	; () banked
 10832  003B2E  1BB2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10833  003B30  0E01               	movlw	1
 10834  003B32  0100               	movlb	0	; () banked
 10835  003B34  27B0               	addwf	___ftadd@f2& (0+255),f,b
 10836  003B36  0E00               	movlw	0
 10837  003B38  0100               	movlb	0	; () banked
 10838  003B3A  23B1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10839  003B3C  0E00               	movlw	0
 10840  003B3E  0100               	movlb	0	; () banked
 10841  003B40  23B2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10842  003B42                     l5146:
 10843                           
 10844                           ; BSR set to: 0
 10845  003B42  0E00               	movlw	0
 10846  003B44  0100               	movlb	0	; () banked
 10847  003B46  6FB6               	movwf	___ftadd@sign& (0+255),b
 10848                           
 10849                           ; BSR set to: 0
 10850  003B48  0100               	movlb	0	; () banked
 10851  003B4A  51AD               	movf	___ftadd@f1& (0+255),w,b
 10852  003B4C  0100               	movlb	0	; () banked
 10853  003B4E  27B0               	addwf	___ftadd@f2& (0+255),f,b
 10854  003B50  0100               	movlb	0	; () banked
 10855  003B52  51AE               	movf	(___ftadd@f1+1)& (0+255),w,b
 10856  003B54  0100               	movlb	0	; () banked
 10857  003B56  23B1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10858  003B58  0100               	movlb	0	; () banked
 10859  003B5A  51AF               	movf	(___ftadd@f1+2)& (0+255),w,b
 10860  003B5C  0100               	movlb	0	; () banked
 10861  003B5E  23B2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10862                           
 10863                           ; BSR set to: 0
 10864  003B60  0100               	movlb	0	; () banked
 10865  003B62  AFB2               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10866  003B64  D015               	goto	l5156
 10867                           
 10868                           ; BSR set to: 0
 10869  003B66  0EFF               	movlw	255
 10870  003B68  0100               	movlb	0	; () banked
 10871  003B6A  1BB0               	xorwf	___ftadd@f2& (0+255),f,b
 10872  003B6C  0EFF               	movlw	255
 10873  003B6E  0100               	movlb	0	; () banked
 10874  003B70  1BB1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10875  003B72  0EFF               	movlw	255
 10876  003B74  0100               	movlb	0	; () banked
 10877  003B76  1BB2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10878  003B78  0E01               	movlw	1
 10879  003B7A  0100               	movlb	0	; () banked
 10880  003B7C  27B0               	addwf	___ftadd@f2& (0+255),f,b
 10881  003B7E  0E00               	movlw	0
 10882  003B80  0100               	movlb	0	; () banked
 10883  003B82  23B1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10884  003B84  0E00               	movlw	0
 10885  003B86  0100               	movlb	0	; () banked
 10886  003B88  23B2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10887                           
 10888                           ; BSR set to: 0
 10889  003B8A  0E01               	movlw	1
 10890  003B8C  0100               	movlb	0	; () banked
 10891  003B8E  6FB6               	movwf	___ftadd@sign& (0+255),b
 10892  003B90                     l5156:
 10893                           
 10894                           ; BSR set to: 0
 10895  003B90  C0B0  F080         	movff	___ftadd@f2,___ftpack@arg
 10896  003B94  C0B1  F081         	movff	___ftadd@f2+1,___ftpack@arg+1
 10897  003B98  C0B2  F082         	movff	___ftadd@f2+2,___ftpack@arg+2
 10898  003B9C  C0B8  F083         	movff	___ftadd@exp1,___ftpack@exp
 10899  003BA0  C0B6  F084         	movff	___ftadd@sign,___ftpack@sign
 10900  003BA4  ECCD  F025         	call	___ftpack	;wreg free
 10901  003BA8  C080  F0AD         	movff	?___ftpack,?___ftadd
 10902  003BAC  C081  F0AE         	movff	?___ftpack+1,?___ftadd+1
 10903  003BB0  C082  F0AF         	movff	?___ftpack+2,?___ftadd+2
 10904  003BB4  0012               	return	
 10905  003BB6                     __end_of___ftadd:
 10906                           	opt stack 0
 10907                           tblptru	equ	0xFF8
 10908                           tblptrh	equ	0xFF7
 10909                           tblptrl	equ	0xFF6
 10910                           tablat	equ	0xFF5
 10911                           prodh	equ	0xFF4
 10912                           prodl	equ	0xFF3
 10913                           intcon	equ	0xFF2
 10914                           intcon2	equ	0xFF1
 10915                           postinc0	equ	0xFEE
 10916                           wreg	equ	0xFE8
 10917                           indf2	equ	0xFDF
 10918                           postinc2	equ	0xFDE
 10919                           postdec2	equ	0xFDD
 10920                           fsr2h	equ	0xFDA
 10921                           fsr2l	equ	0xFD9
 10922                           status	equ	0xFD8
 10923                           
 10924 ;; *************** function ___ftpack *****************
 10925 ;; Defined at:
 10926 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;  arg             3    0[BANK0 ] unsigned um
 10929 ;;  exp             1    3[BANK0 ] unsigned char 
 10930 ;;  sign            1    4[BANK0 ] unsigned char 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  3    0[BANK0 ] float 
 10935 ;; Registers used:
 10936 ;;		wreg, status,2, status,0
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10942 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10946 ;;Total ram usage:        8 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    6
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		___ftadd
 10953 ;;		___ftdiv
 10954 ;;		___ftmul
 10955 ;;		___lltoft
 10956 ;;		___lwtoft
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           	psect	text24
 10961  004B9A                     __ptext24:
 10962                           	opt stack 0
 10963  004B9A                     ___ftpack:
 10964                           	opt stack 21
 10965                           
 10966                           ;incstack = 0
 10967  004B9A  0100               	movlb	0	; () banked
 10968  004B9C  5183               	movf	___ftpack@exp& (0+255),w,b
 10969  004B9E  0100               	movlb	0	; () banked
 10970  004BA0  B4D8               	btfsc	status,2,c
 10971  004BA2  D008               	goto	l4794
 10972                           
 10973                           ; BSR set to: 0
 10974  004BA4  0100               	movlb	0	; () banked
 10975  004BA6  5180               	movf	___ftpack@arg& (0+255),w,b
 10976  004BA8  0100               	movlb	0	; () banked
 10977  004BAA  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10978  004BAC  0100               	movlb	0	; () banked
 10979  004BAE  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10980  004BB0  A4D8               	btfss	status,2,c
 10981  004BB2  D011               	goto	l4800
 10982  004BB4                     l4794:
 10983                           
 10984                           ; BSR set to: 0
 10985  004BB4  0E00               	movlw	0
 10986  004BB6  0100               	movlb	0	; () banked
 10987  004BB8  6F80               	movwf	?___ftpack& (0+255),b
 10988  004BBA  0E00               	movlw	0
 10989  004BBC  0100               	movlb	0	; () banked
 10990  004BBE  6F81               	movwf	(?___ftpack+1)& (0+255),b
 10991  004BC0  0E00               	movlw	0
 10992  004BC2  0100               	movlb	0	; () banked
 10993  004BC4  6F82               	movwf	(?___ftpack+2)& (0+255),b
 10994                           
 10995                           ; BSR set to: 0
 10996  004BC6  0012               	return	
 10997  004BC8                     l4798:
 10998                           
 10999                           ; BSR set to: 0
 11000  004BC8  0100               	movlb	0	; () banked
 11001  004BCA  2B83               	incf	___ftpack@exp& (0+255),f,b
 11002  004BCC  0100               	movlb	0	; () banked
 11003  004BCE  90D8               	bcf	status,0,c
 11004  004BD0  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11005  004BD2  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11006  004BD4  3380               	rrcf	___ftpack@arg& (0+255),f,b
 11007  004BD6                     l4800:
 11008                           
 11009                           ; BSR set to: 0
 11010  004BD6  0E00               	movlw	0
 11011  004BD8  0100               	movlb	0	; () banked
 11012  004BDA  1580               	andwf	___ftpack@arg& (0+255),w,b
 11013  004BDC  0100               	movlb	0	; () banked
 11014  004BDE  6F85               	movwf	??___ftpack& (0+255),b
 11015  004BE0  0E00               	movlw	0
 11016  004BE2  0100               	movlb	0	; () banked
 11017  004BE4  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11018  004BE6  0100               	movlb	0	; () banked
 11019  004BE8  6F86               	movwf	(??___ftpack+1)& (0+255),b
 11020  004BEA  0EFE               	movlw	254
 11021  004BEC  0100               	movlb	0	; () banked
 11022  004BEE  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11023  004BF0  0100               	movlb	0	; () banked
 11024  004BF2  6F87               	movwf	(??___ftpack+2)& (0+255),b
 11025  004BF4  0100               	movlb	0	; () banked
 11026  004BF6  5185               	movf	??___ftpack& (0+255),w,b
 11027  004BF8  0100               	movlb	0	; () banked
 11028  004BFA  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 11029  004BFC  0100               	movlb	0	; () banked
 11030  004BFE  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 11031  004C00  B4D8               	btfsc	status,2,c
 11032  004C02  D011               	goto	l4806
 11033  004C04  D7E1               	goto	l4798
 11034  004C06                     l4802:
 11035                           
 11036                           ; BSR set to: 0
 11037  004C06  0100               	movlb	0	; () banked
 11038  004C08  2B83               	incf	___ftpack@exp& (0+255),f,b
 11039                           
 11040                           ; BSR set to: 0
 11041  004C0A  0E01               	movlw	1
 11042  004C0C  0100               	movlb	0	; () banked
 11043  004C0E  2780               	addwf	___ftpack@arg& (0+255),f,b
 11044  004C10  0E00               	movlw	0
 11045  004C12  0100               	movlb	0	; () banked
 11046  004C14  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11047  004C16  0E00               	movlw	0
 11048  004C18  0100               	movlb	0	; () banked
 11049  004C1A  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11050  004C1C  0100               	movlb	0	; () banked
 11051  004C1E  90D8               	bcf	status,0,c
 11052  004C20  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11053  004C22  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11054  004C24  3380               	rrcf	___ftpack@arg& (0+255),f,b
 11055  004C26                     l4806:
 11056                           
 11057                           ; BSR set to: 0
 11058  004C26  0E00               	movlw	0
 11059  004C28  0100               	movlb	0	; () banked
 11060  004C2A  1580               	andwf	___ftpack@arg& (0+255),w,b
 11061  004C2C  0100               	movlb	0	; () banked
 11062  004C2E  6F85               	movwf	??___ftpack& (0+255),b
 11063  004C30  0E00               	movlw	0
 11064  004C32  0100               	movlb	0	; () banked
 11065  004C34  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11066  004C36  0100               	movlb	0	; () banked
 11067  004C38  6F86               	movwf	(??___ftpack+1)& (0+255),b
 11068  004C3A  0EFF               	movlw	255
 11069  004C3C  0100               	movlb	0	; () banked
 11070  004C3E  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11071  004C40  0100               	movlb	0	; () banked
 11072  004C42  6F87               	movwf	(??___ftpack+2)& (0+255),b
 11073  004C44  0100               	movlb	0	; () banked
 11074  004C46  5185               	movf	??___ftpack& (0+255),w,b
 11075  004C48  0100               	movlb	0	; () banked
 11076  004C4A  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 11077  004C4C  0100               	movlb	0	; () banked
 11078  004C4E  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 11079  004C50  B4D8               	btfsc	status,2,c
 11080  004C52  D008               	goto	l4810
 11081  004C54  D7D8               	goto	l4802
 11082  004C56                     l4808:
 11083                           
 11084                           ; BSR set to: 0
 11085  004C56  0100               	movlb	0	; () banked
 11086  004C58  0783               	decf	___ftpack@exp& (0+255),f,b
 11087  004C5A  0100               	movlb	0	; () banked
 11088  004C5C  90D8               	bcf	status,0,c
 11089  004C5E  3780               	rlcf	___ftpack@arg& (0+255),f,b
 11090  004C60  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11091  004C62  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11092  004C64                     l4810:
 11093                           
 11094                           ; BSR set to: 0
 11095  004C64  0100               	movlb	0	; () banked
 11096  004C66  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 11097  004C68  D004               	goto	l1127
 11098                           
 11099                           ; BSR set to: 0
 11100  004C6A  0E02               	movlw	2
 11101  004C6C  0100               	movlb	0	; () banked
 11102  004C6E  6183               	cpfslt	___ftpack@exp& (0+255),b
 11103  004C70  D7F2               	goto	l4808
 11104  004C72                     l1127:
 11105                           
 11106                           ; BSR set to: 0
 11107  004C72  0100               	movlb	0	; () banked
 11108  004C74  B183               	btfsc	___ftpack@exp& (0+255),0,b
 11109  004C76  D002               	goto	l4816
 11110                           
 11111                           ; BSR set to: 0
 11112  004C78  0100               	movlb	0	; () banked
 11113  004C7A  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11114  004C7C                     l4816:
 11115                           
 11116                           ; BSR set to: 0
 11117  004C7C  0100               	movlb	0	; () banked
 11118  004C7E  90D8               	bcf	status,0,c
 11119  004C80  3383               	rrcf	___ftpack@exp& (0+255),f,b
 11120  004C82  0100               	movlb	0	; () banked
 11121  004C84  5183               	movf	___ftpack@exp& (0+255),w,b
 11122  004C86  0100               	movlb	0	; () banked
 11123  004C88  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11124                           
 11125                           ; BSR set to: 0
 11126  004C8A  0100               	movlb	0	; () banked
 11127  004C8C  5184               	movf	___ftpack@sign& (0+255),w,b
 11128  004C8E  0100               	movlb	0	; () banked
 11129  004C90  B4D8               	btfsc	status,2,c
 11130  004C92  D002               	goto	l4822
 11131                           
 11132                           ; BSR set to: 0
 11133  004C94  0100               	movlb	0	; () banked
 11134  004C96  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11135  004C98                     l4822:
 11136                           
 11137                           ; BSR set to: 0
 11138  004C98  C080  F080         	movff	___ftpack@arg,?___ftpack
 11139  004C9C  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
 11140  004CA0  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
 11141  004CA4  0012               	return	
 11142  004CA6                     __end_of___ftpack:
 11143                           	opt stack 0
 11144                           tblptru	equ	0xFF8
 11145                           tblptrh	equ	0xFF7
 11146                           tblptrl	equ	0xFF6
 11147                           tablat	equ	0xFF5
 11148                           prodh	equ	0xFF4
 11149                           prodl	equ	0xFF3
 11150                           intcon	equ	0xFF2
 11151                           intcon2	equ	0xFF1
 11152                           postinc0	equ	0xFEE
 11153                           wreg	equ	0xFE8
 11154                           indf2	equ	0xFDF
 11155                           postinc2	equ	0xFDE
 11156                           postdec2	equ	0xFDD
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           
 11161 ;; *************** function ___ftneg *****************
 11162 ;; Defined at:
 11163 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/ftneg.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  f1              3    0[BANK0 ] float 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;		None
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  3    0[BANK0 ] float 
 11170 ;; Registers used:
 11171 ;;		wreg, status,2, status,0
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11177 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11180 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11181 ;;Total ram usage:        3 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    6
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_printf
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text25
 11192  005D4C                     __ptext25:
 11193                           	opt stack 0
 11194  005D4C                     ___ftneg:
 11195                           	opt stack 23
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;incstack = 0
 11199  005D4C  0100               	movlb	0	; () banked
 11200  005D4E  5180               	movf	___ftneg@f1& (0+255),w,b
 11201  005D50  0100               	movlb	0	; () banked
 11202  005D52  1181               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 11203  005D54  0100               	movlb	0	; () banked
 11204  005D56  1182               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 11205  005D58  B4D8               	btfsc	status,2,c
 11206  005D5A  D009               	goto	l1224
 11207                           
 11208                           ; BSR set to: 0
 11209  005D5C  0E00               	movlw	0
 11210  005D5E  0100               	movlb	0	; () banked
 11211  005D60  1B80               	xorwf	___ftneg@f1& (0+255),f,b
 11212  005D62  0E00               	movlw	0
 11213  005D64  0100               	movlb	0	; () banked
 11214  005D66  1B81               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 11215  005D68  0E80               	movlw	128
 11216  005D6A  0100               	movlb	0	; () banked
 11217  005D6C  1B82               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 11218  005D6E                     l1224:
 11219                           
 11220                           ; BSR set to: 0
 11221  005D6E  C080  F080         	movff	___ftneg@f1,?___ftneg
 11222  005D72  C081  F081         	movff	___ftneg@f1+1,?___ftneg+1
 11223  005D76  C082  F082         	movff	___ftneg@f1+2,?___ftneg+2
 11224                           
 11225                           ; BSR set to: 0
 11226  005D7A  0012               	return		;funcret
 11227  005D7C                     __end_of___ftneg:
 11228                           	opt stack 0
 11229                           tblptru	equ	0xFF8
 11230                           tblptrh	equ	0xFF7
 11231                           tblptrl	equ	0xFF6
 11232                           tablat	equ	0xFF5
 11233                           prodh	equ	0xFF4
 11234                           prodl	equ	0xFF3
 11235                           intcon	equ	0xFF2
 11236                           intcon2	equ	0xFF1
 11237                           postinc0	equ	0xFEE
 11238                           wreg	equ	0xFE8
 11239                           indf2	equ	0xFDF
 11240                           postinc2	equ	0xFDE
 11241                           postdec2	equ	0xFDD
 11242                           fsr2h	equ	0xFDA
 11243                           fsr2l	equ	0xFD9
 11244                           status	equ	0xFD8
 11245                           
 11246 ;; *************** function ___ftge *****************
 11247 ;; Defined at:
 11248 ;;		line 4 in file "/Applications/microchip/xc8/v1.41/sources/common/ftge.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  ff1             3    0[BANK0 ] float 
 11251 ;;  ff2             3    3[BANK0 ] float 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;		None               void
 11256 ;; Registers used:
 11257 ;;		wreg, status,2, status,0
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11263 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;Total ram usage:        9 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    6
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_main
 11274 ;;		_abs
 11275 ;;		_printf
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text26
 11280  004F74                     __ptext26:
 11281                           	opt stack 0
 11282  004F74                     ___ftge:
 11283                           	opt stack 22
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;incstack = 0
 11287  004F74  0100               	movlb	0	; () banked
 11288  004F76  AF82               	btfss	(___ftge@ff1+2)& (0+255),7,b
 11289  004F78  D01D               	goto	l5292
 11290                           
 11291                           ; BSR set to: 0
 11292  004F7A  C080  F086         	movff	___ftge@ff1,??___ftge
 11293  004F7E  C081  F087         	movff	___ftge@ff1+1,??___ftge+1
 11294  004F82  C082  F088         	movff	___ftge@ff1+2,??___ftge+2
 11295  004F86  0100               	movlb	0	; () banked
 11296  004F88  1F86               	comf	??___ftge& (0+255),f,b
 11297  004F8A  1F87               	comf	(??___ftge+1)& (0+255),f,b
 11298  004F8C  1F88               	comf	(??___ftge+2)& (0+255),f,b
 11299  004F8E  2B86               	incf	??___ftge& (0+255),f,b
 11300  004F90  0E00               	movlw	0
 11301  004F92  2387               	addwfc	(??___ftge+1)& (0+255),f,b
 11302  004F94  2388               	addwfc	(??___ftge+2)& (0+255),f,b
 11303  004F96  0E00               	movlw	0
 11304  004F98  0100               	movlb	0	; () banked
 11305  004F9A  2586               	addwf	??___ftge& (0+255),w,b
 11306  004F9C  0100               	movlb	0	; () banked
 11307  004F9E  6F80               	movwf	___ftge@ff1& (0+255),b
 11308  004FA0  0E00               	movlw	0
 11309  004FA2  0100               	movlb	0	; () banked
 11310  004FA4  2187               	addwfc	(??___ftge+1)& (0+255),w,b
 11311  004FA6  0100               	movlb	0	; () banked
 11312  004FA8  6F81               	movwf	(___ftge@ff1+1)& (0+255),b
 11313  004FAA  0E80               	movlw	128
 11314  004FAC  0100               	movlb	0	; () banked
 11315  004FAE  2188               	addwfc	(??___ftge+2)& (0+255),w,b
 11316  004FB0  0100               	movlb	0	; () banked
 11317  004FB2  6F82               	movwf	(___ftge@ff1+2)& (0+255),b
 11318  004FB4                     l5292:
 11319                           
 11320                           ; BSR set to: 0
 11321  004FB4  0100               	movlb	0	; () banked
 11322  004FB6  AF85               	btfss	(___ftge@ff2+2)& (0+255),7,b
 11323  004FB8  D01D               	goto	l5296
 11324                           
 11325                           ; BSR set to: 0
 11326  004FBA  C083  F086         	movff	___ftge@ff2,??___ftge
 11327  004FBE  C084  F087         	movff	___ftge@ff2+1,??___ftge+1
 11328  004FC2  C085  F088         	movff	___ftge@ff2+2,??___ftge+2
 11329  004FC6  0100               	movlb	0	; () banked
 11330  004FC8  1F86               	comf	??___ftge& (0+255),f,b
 11331  004FCA  1F87               	comf	(??___ftge+1)& (0+255),f,b
 11332  004FCC  1F88               	comf	(??___ftge+2)& (0+255),f,b
 11333  004FCE  2B86               	incf	??___ftge& (0+255),f,b
 11334  004FD0  0E00               	movlw	0
 11335  004FD2  2387               	addwfc	(??___ftge+1)& (0+255),f,b
 11336  004FD4  2388               	addwfc	(??___ftge+2)& (0+255),f,b
 11337  004FD6  0E00               	movlw	0
 11338  004FD8  0100               	movlb	0	; () banked
 11339  004FDA  2586               	addwf	??___ftge& (0+255),w,b
 11340  004FDC  0100               	movlb	0	; () banked
 11341  004FDE  6F83               	movwf	___ftge@ff2& (0+255),b
 11342  004FE0  0E00               	movlw	0
 11343  004FE2  0100               	movlb	0	; () banked
 11344  004FE4  2187               	addwfc	(??___ftge+1)& (0+255),w,b
 11345  004FE6  0100               	movlb	0	; () banked
 11346  004FE8  6F84               	movwf	(___ftge@ff2+1)& (0+255),b
 11347  004FEA  0E80               	movlw	128
 11348  004FEC  0100               	movlb	0	; () banked
 11349  004FEE  2188               	addwfc	(??___ftge+2)& (0+255),w,b
 11350  004FF0  0100               	movlb	0	; () banked
 11351  004FF2  6F85               	movwf	(___ftge@ff2+2)& (0+255),b
 11352  004FF4                     l5296:
 11353                           
 11354                           ; BSR set to: 0
 11355  004FF4  0E00               	movlw	0
 11356  004FF6  0100               	movlb	0	; () banked
 11357  004FF8  1B80               	xorwf	___ftge@ff1& (0+255),f,b
 11358  004FFA  0E00               	movlw	0
 11359  004FFC  0100               	movlb	0	; () banked
 11360  004FFE  1B81               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 11361  005000  0E80               	movlw	128
 11362  005002  0100               	movlb	0	; () banked
 11363  005004  1B82               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 11364                           
 11365                           ; BSR set to: 0
 11366  005006  0E00               	movlw	0
 11367  005008  0100               	movlb	0	; () banked
 11368  00500A  1B83               	xorwf	___ftge@ff2& (0+255),f,b
 11369  00500C  0E00               	movlw	0
 11370  00500E  0100               	movlb	0	; () banked
 11371  005010  1B84               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 11372  005012  0E80               	movlw	128
 11373  005014  0100               	movlb	0	; () banked
 11374  005016  1B85               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 11375  005018  0100               	movlb	0	; () banked
 11376  00501A  5183               	movf	___ftge@ff2& (0+255),w,b
 11377  00501C  0100               	movlb	0	; () banked
 11378  00501E  5D80               	subwf	___ftge@ff1& (0+255),w,b
 11379  005020  0100               	movlb	0	; () banked
 11380  005022  5184               	movf	(___ftge@ff2+1)& (0+255),w,b
 11381  005024  0100               	movlb	0	; () banked
 11382  005026  5981               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 11383  005028  0100               	movlb	0	; () banked
 11384  00502A  5185               	movf	(___ftge@ff2+2)& (0+255),w,b
 11385  00502C  0100               	movlb	0	; () banked
 11386  00502E  5982               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 11387  005030  B0D8               	btfsc	status,0,c
 11388  005032  D002               	goto	l5302
 11389                           
 11390                           ; BSR set to: 0
 11391  005034  90D8               	bcf	status,0,c
 11392  005036  0012               	return	
 11393  005038                     l5302:
 11394                           
 11395                           ; BSR set to: 0
 11396  005038  80D8               	bsf	status,0,c
 11397                           
 11398                           ; BSR set to: 0
 11399  00503A  0012               	return	
 11400  00503C                     __end_of___ftge:
 11401                           	opt stack 0
 11402                           tblptru	equ	0xFF8
 11403                           tblptrh	equ	0xFF7
 11404                           tblptrl	equ	0xFF6
 11405                           tablat	equ	0xFF5
 11406                           prodh	equ	0xFF4
 11407                           prodl	equ	0xFF3
 11408                           intcon	equ	0xFF2
 11409                           intcon2	equ	0xFF1
 11410                           postinc0	equ	0xFEE
 11411                           wreg	equ	0xFE8
 11412                           indf2	equ	0xFDF
 11413                           postinc2	equ	0xFDE
 11414                           postdec2	equ	0xFDD
 11415                           fsr2h	equ	0xFDA
 11416                           fsr2l	equ	0xFD9
 11417                           status	equ	0xFD8
 11418                           
 11419 ;; *************** function _initLCD *****************
 11420 ;; Defined at:
 11421 ;;		line 14 in file "lcd.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;		None
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1    wreg      void 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0, cstack
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;Total ram usage:        1 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    8
 11442 ;; This function calls:
 11443 ;;		_lcdInst
 11444 ;; This function is called by:
 11445 ;;		_main
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text27
 11450  005BA4                     __ptext27:
 11451                           	opt stack 0
 11452  005BA4                     _initLCD:
 11453                           	opt stack 22
 11454                           
 11455                           ;lcd.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;incstack = 0
 11459  005BA4  0E27               	movlw	39
 11460  005BA6  0100               	movlb	0	; () banked
 11461  005BA8  6F83               	movwf	??_initLCD& (0+255),b
 11462  005BAA  0EF5               	movlw	245
 11463  005BAC                     u9457:
 11464  005BAC  2EE8               	decfsz	wreg,f,c
 11465  005BAE  D7FE               	bra	u9457
 11466  005BB0  2F83               	decfsz	??_initLCD& (0+255),f,b
 11467  005BB2  D7FC               	bra	u9457
 11468                           
 11469                           ;lcd.c: 16: lcdInst(0b00110011);
 11470  005BB4  0E33               	movlw	51
 11471  005BB6  EC80  F02F         	call	_lcdInst
 11472                           
 11473                           ;lcd.c: 17: lcdInst(0b00110010);
 11474  005BBA  0E32               	movlw	50
 11475  005BBC  EC80  F02F         	call	_lcdInst
 11476                           
 11477                           ;lcd.c: 18: lcdInst(0b00101000);
 11478  005BC0  0E28               	movlw	40
 11479  005BC2  EC80  F02F         	call	_lcdInst
 11480                           
 11481                           ;lcd.c: 19: lcdInst(0b00001111);
 11482  005BC6  0E0F               	movlw	15
 11483  005BC8  EC80  F02F         	call	_lcdInst
 11484                           
 11485                           ;lcd.c: 20: lcdInst(0b00000110);
 11486  005BCC  0E06               	movlw	6
 11487  005BCE  EC80  F02F         	call	_lcdInst
 11488                           
 11489                           ;lcd.c: 21: lcdInst(0b00000001);
 11490  005BD2  0E01               	movlw	1
 11491  005BD4  EC80  F02F         	call	_lcdInst
 11492                           
 11493                           ;lcd.c: 22: _delay((unsigned long)((15)*(8000000/4000.0)));
 11494  005BD8  0E27               	movlw	39
 11495  005BDA  0100               	movlb	0	; () banked
 11496  005BDC  6F83               	movwf	??_initLCD& (0+255),b
 11497  005BDE  0EF5               	movlw	245
 11498  005BE0                     u9467:
 11499  005BE0  2EE8               	decfsz	wreg,f,c
 11500  005BE2  D7FE               	bra	u9467
 11501  005BE4  2F83               	decfsz	??_initLCD& (0+255),f,b
 11502  005BE6  D7FC               	bra	u9467
 11503  005BE8  0012               	return		;funcret
 11504  005BEA                     __end_of_initLCD:
 11505                           	opt stack 0
 11506                           tblptru	equ	0xFF8
 11507                           tblptrh	equ	0xFF7
 11508                           tblptrl	equ	0xFF6
 11509                           tablat	equ	0xFF5
 11510                           prodh	equ	0xFF4
 11511                           prodl	equ	0xFF3
 11512                           intcon	equ	0xFF2
 11513                           intcon2	equ	0xFF1
 11514                           postinc0	equ	0xFEE
 11515                           wreg	equ	0xFE8
 11516                           indf2	equ	0xFDF
 11517                           postinc2	equ	0xFDE
 11518                           postdec2	equ	0xFDD
 11519                           fsr2h	equ	0xFDA
 11520                           fsr2l	equ	0xFD9
 11521                           status	equ	0xFD8
 11522                           
 11523 ;; *************** function _lcdInst *****************
 11524 ;; Defined at:
 11525 ;;		line 25 in file "lcd.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  data            1    wreg     unsigned char 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;  data            1    2[BANK0 ] unsigned char 
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      void 
 11532 ;; Registers used:
 11533 ;;		wreg, status,2, status,0, cstack
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;Total ram usage:        1 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:    7
 11546 ;; This function calls:
 11547 ;;		_lcdNibble
 11548 ;; This function is called by:
 11549 ;;		_main
 11550 ;;		_initLCD
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text28
 11555  005F00                     __ptext28:
 11556                           	opt stack 0
 11557  005F00                     _lcdInst:
 11558                           	opt stack 23
 11559                           
 11560                           ;incstack = 0
 11561                           ;lcdInst@data stored from wreg
 11562  005F00  0100               	movlb	0	; () banked
 11563  005F02  6F82               	movwf	lcdInst@data& (0+255),b
 11564                           
 11565                           ;lcd.c: 26: LATDbits.LATD2 = 0;
 11566  005F04  948C               	bcf	3980,2,c	;volatile
 11567                           
 11568                           ;lcd.c: 27: lcdNibble(data);
 11569  005F06  0100               	movlb	0	; () banked
 11570  005F08  5182               	movf	lcdInst@data& (0+255),w,b
 11571  005F0A  EC05  F02C         	call	_lcdNibble
 11572  005F0E  0012               	return		;funcret
 11573  005F10                     __end_of_lcdInst:
 11574                           	opt stack 0
 11575                           tblptru	equ	0xFF8
 11576                           tblptrh	equ	0xFF7
 11577                           tblptrl	equ	0xFF6
 11578                           tablat	equ	0xFF5
 11579                           prodh	equ	0xFF4
 11580                           prodl	equ	0xFF3
 11581                           intcon	equ	0xFF2
 11582                           intcon2	equ	0xFF1
 11583                           postinc0	equ	0xFEE
 11584                           wreg	equ	0xFE8
 11585                           indf2	equ	0xFDF
 11586                           postinc2	equ	0xFDE
 11587                           postdec2	equ	0xFDD
 11588                           fsr2h	equ	0xFDA
 11589                           fsr2l	equ	0xFD9
 11590                           status	equ	0xFD8
 11591                           
 11592 ;; *************** function _lcdNibble *****************
 11593 ;; Defined at:
 11594 ;;		line 35 in file "lcd.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  data            1    wreg     unsigned char 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  data            1    1[BANK0 ] unsigned char 
 11599 ;;  temp            1    0[BANK0 ] unsigned char 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;Total ram usage:        2 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    6
 11616 ;; This function calls:
 11617 ;;		Nothing
 11618 ;; This function is called by:
 11619 ;;		_lcdInst
 11620 ;;		_putch
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text29
 11625  00580A                     __ptext29:
 11626                           	opt stack 0
 11627  00580A                     _lcdNibble:
 11628                           	opt stack 22
 11629                           
 11630                           ;incstack = 0
 11631                           ;lcdNibble@data stored from wreg
 11632  00580A  0100               	movlb	0	; () banked
 11633  00580C  6F81               	movwf	lcdNibble@data& (0+255),b
 11634                           
 11635                           ;lcd.c: 37: char temp = data & 0xF0;
 11636  00580E  0100               	movlb	0	; () banked
 11637  005810  5181               	movf	lcdNibble@data& (0+255),w,b
 11638  005812  0BF0               	andlw	240
 11639  005814  0100               	movlb	0	; () banked
 11640  005816  6F80               	movwf	lcdNibble@temp& (0+255),b
 11641                           
 11642                           ;lcd.c: 38: LATD = LATD & 0x0F;
 11643  005818  508C               	movf	3980,w,c	;volatile
 11644  00581A  0B0F               	andlw	15
 11645  00581C  6E8C               	movwf	3980,c	;volatile
 11646                           
 11647                           ;lcd.c: 39: LATD = temp | LATD;
 11648  00581E  0100               	movlb	0	; () banked
 11649  005820  5180               	movf	lcdNibble@temp& (0+255),w,b
 11650  005822  108C               	iorwf	3980,w,c	;volatile
 11651  005824  6E8C               	movwf	3980,c	;volatile
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;lcd.c: 41: LATDbits.LATD3 = 0;
 11655  005826  968C               	bcf	3980,3,c	;volatile
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;lcd.c: 42: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11659  005828  0E10               	movlw	16
 11660  00582A                     u9477:
 11661  00582A  2EE8               	decfsz	wreg,f,c
 11662  00582C  D7FE               	bra	u9477
 11663  00582E  D000               	nop2	
 11664                           
 11665                           ;lcd.c: 43: LATDbits.LATD3 = 1;
 11666  005830  868C               	bsf	3980,3,c	;volatile
 11667                           
 11668                           ;lcd.c: 44: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11669  005832  0E10               	movlw	16
 11670  005834                     u9487:
 11671  005834  2EE8               	decfsz	wreg,f,c
 11672  005836  D7FE               	bra	u9487
 11673  005838  D000               	nop2	
 11674                           
 11675                           ;lcd.c: 46: data = data << 4;
 11676  00583A  0100               	movlb	0	; () banked
 11677  00583C  3981               	swapf	lcdNibble@data& (0+255),w,b
 11678  00583E  0BF0               	andlw	240
 11679  005840  0100               	movlb	0	; () banked
 11680  005842  6F81               	movwf	lcdNibble@data& (0+255),b
 11681                           
 11682                           ;lcd.c: 48: temp = data & 0xF0;
 11683  005844  0100               	movlb	0	; () banked
 11684  005846  5181               	movf	lcdNibble@data& (0+255),w,b
 11685  005848  0BF0               	andlw	240
 11686  00584A  0100               	movlb	0	; () banked
 11687  00584C  6F80               	movwf	lcdNibble@temp& (0+255),b
 11688                           
 11689                           ;lcd.c: 49: LATD = LATD & 0x0F;
 11690  00584E  508C               	movf	3980,w,c	;volatile
 11691  005850  0B0F               	andlw	15
 11692  005852  6E8C               	movwf	3980,c	;volatile
 11693                           
 11694                           ;lcd.c: 50: LATD = temp | LATD;
 11695  005854  0100               	movlb	0	; () banked
 11696  005856  5180               	movf	lcdNibble@temp& (0+255),w,b
 11697  005858  108C               	iorwf	3980,w,c	;volatile
 11698  00585A  6E8C               	movwf	3980,c	;volatile
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;lcd.c: 52: LATDbits.LATD3 = 0;
 11702  00585C  968C               	bcf	3980,3,c	;volatile
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;lcd.c: 53: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11706  00585E  0E10               	movlw	16
 11707  005860                     u9497:
 11708  005860  2EE8               	decfsz	wreg,f,c
 11709  005862  D7FE               	bra	u9497
 11710  005864  D000               	nop2	
 11711                           
 11712                           ;lcd.c: 54: LATDbits.LATD3 = 1;
 11713  005866  868C               	bsf	3980,3,c	;volatile
 11714                           
 11715                           ;lcd.c: 55: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11716  005868  0E10               	movlw	16
 11717  00586A                     u9507:
 11718  00586A  2EE8               	decfsz	wreg,f,c
 11719  00586C  D7FE               	bra	u9507
 11720  00586E  D000               	nop2	
 11721  005870  0012               	return		;funcret
 11722  005872                     __end_of_lcdNibble:
 11723                           	opt stack 0
 11724                           tblptru	equ	0xFF8
 11725                           tblptrh	equ	0xFF7
 11726                           tblptrl	equ	0xFF6
 11727                           tablat	equ	0xFF5
 11728                           prodh	equ	0xFF4
 11729                           prodl	equ	0xFF3
 11730                           intcon	equ	0xFF2
 11731                           intcon2	equ	0xFF1
 11732                           postinc0	equ	0xFEE
 11733                           wreg	equ	0xFE8
 11734                           indf2	equ	0xFDF
 11735                           postinc2	equ	0xFDE
 11736                           postdec2	equ	0xFDD
 11737                           fsr2h	equ	0xFDA
 11738                           fsr2l	equ	0xFD9
 11739                           status	equ	0xFD8
 11740                           
 11741 ;; *************** function _delay_1s_interrupt *****************
 11742 ;; Defined at:
 11743 ;;		line 72 in file "I2C.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;  n               1    wreg     unsigned char 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;  n               1    5[BANK0 ] unsigned char 
 11748 ;;  i               1    6[BANK0 ] unsigned char 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  2    0[BANK0 ] int 
 11751 ;; Registers used:
 11752 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11762 ;;Total ram usage:        7 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    6
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_main
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text30
 11773  0057A0                     __ptext30:
 11774                           	opt stack 0
 11775  0057A0                     _delay_1s_interrupt:
 11776                           	opt stack 24
 11777                           
 11778                           ;incstack = 0
 11779                           ;delay_1s_interrupt@n stored from wreg
 11780  0057A0  0100               	movlb	0	; () banked
 11781  0057A2  6F85               	movwf	delay_1s_interrupt@n& (0+255),b
 11782                           
 11783                           ;I2C.c: 73: for(char i=0;i<(10*n);i++){
 11784  0057A4  0E00               	movlw	0
 11785  0057A6  0100               	movlb	0	; () banked
 11786  0057A8  6F86               	movwf	delay_1s_interrupt@i& (0+255),b
 11787  0057AA  D013               	goto	l6768
 11788  0057AC                     l740:
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;I2C.c: 74: if (PORTBbits.RB1 == 1){
 11792  0057AC  A281               	btfss	3969,1,c	;volatile
 11793  0057AE  D006               	goto	l6764
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;I2C.c: 75: return 1;
 11797  0057B0  0E00               	movlw	0
 11798  0057B2  0100               	movlb	0	; () banked
 11799  0057B4  6F81               	movwf	(?_delay_1s_interrupt+1)& (0+255),b
 11800  0057B6  0E01               	movlw	1
 11801  0057B8  6F80               	movwf	?_delay_1s_interrupt& (0+255),b
 11802                           
 11803                           ; BSR set to: 0
 11804  0057BA  0012               	return	
 11805  0057BC                     l6764:
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;I2C.c: 76: }
 11809                           ;I2C.c: 77: _delay((unsigned long)((98)*(8000000/4000.0)));
 11810  0057BC  0EFF               	movlw	255
 11811  0057BE  0100               	movlb	0	; () banked
 11812  0057C0  6F82               	movwf	??_delay_1s_interrupt& (0+255),b
 11813  0057C2  0E8A               	movlw	138
 11814  0057C4                     u9517:
 11815  0057C4  2EE8               	decfsz	wreg,f,c
 11816  0057C6  D7FE               	bra	u9517
 11817  0057C8  2F82               	decfsz	??_delay_1s_interrupt& (0+255),f,b
 11818  0057CA  D7FC               	bra	u9517
 11819  0057CC  F000               	nop	
 11820  0057CE  0100               	movlb	0	; () banked
 11821  0057D0  2B86               	incf	delay_1s_interrupt@i& (0+255),f,b
 11822  0057D2                     l6768:
 11823                           
 11824                           ; BSR set to: 0
 11825  0057D2  0100               	movlb	0	; () banked
 11826  0057D4  5185               	movf	delay_1s_interrupt@n& (0+255),w,b
 11827  0057D6  0D0A               	mullw	10
 11828  0057D8  0100               	movlb	0	; () banked
 11829  0057DA  5186               	movf	delay_1s_interrupt@i& (0+255),w,b
 11830  0057DC  0100               	movlb	0	; () banked
 11831  0057DE  6F82               	movwf	??_delay_1s_interrupt& (0+255),b
 11832  0057E0  6B83               	clrf	(??_delay_1s_interrupt+1)& (0+255),b
 11833  0057E2  50F3               	movf	prodl,w,c
 11834  0057E4  0100               	movlb	0	; () banked
 11835  0057E6  5D82               	subwf	??_delay_1s_interrupt& (0+255),w,b
 11836  0057E8  0100               	movlb	0	; () banked
 11837  0057EA  5183               	movf	(??_delay_1s_interrupt+1)& (0+255),w,b
 11838  0057EC  0A80               	xorlw	128
 11839  0057EE  0100               	movlb	0	; () banked
 11840  0057F0  6F84               	movwf	(??_delay_1s_interrupt+2)& (0+255),b
 11841  0057F2  50F4               	movf	prodh,w,c
 11842  0057F4  0A80               	xorlw	128
 11843  0057F6  0100               	movlb	0	; () banked
 11844  0057F8  5984               	subwfb	(??_delay_1s_interrupt+2)& (0+255),w,b
 11845  0057FA  A0D8               	btfss	status,0,c
 11846  0057FC  D7D7               	goto	l740
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;I2C.c: 78: }
 11850                           ;I2C.c: 79: return 0;
 11851                           
 11852                           ; BSR set to: 0
 11853  0057FE  0E00               	movlw	0
 11854  005800  0100               	movlb	0	; () banked
 11855  005802  6F81               	movwf	(?_delay_1s_interrupt+1)& (0+255),b
 11856  005804  0E00               	movlw	0
 11857  005806  6F80               	movwf	?_delay_1s_interrupt& (0+255),b
 11858  005808  0012               	return	
 11859  00580A                     __end_of_delay_1s_interrupt:
 11860                           	opt stack 0
 11861                           tblptru	equ	0xFF8
 11862                           tblptrh	equ	0xFF7
 11863                           tblptrl	equ	0xFF6
 11864                           tablat	equ	0xFF5
 11865                           prodh	equ	0xFF4
 11866                           prodl	equ	0xFF3
 11867                           intcon	equ	0xFF2
 11868                           intcon2	equ	0xFF1
 11869                           postinc0	equ	0xFEE
 11870                           wreg	equ	0xFE8
 11871                           indf2	equ	0xFDF
 11872                           postinc2	equ	0xFDE
 11873                           postdec2	equ	0xFDD
 11874                           fsr2h	equ	0xFDA
 11875                           fsr2l	equ	0xFD9
 11876                           status	equ	0xFD8
 11877                           
 11878 ;; *************** function _I2C_Master_Write *****************
 11879 ;; Defined at:
 11880 ;;		line 47 in file "I2C.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  d               2    1[BANK0 ] unsigned int 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;		None
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      void 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2, status,0, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;Total ram usage:        2 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:    7
 11901 ;; This function calls:
 11902 ;;		_I2C_Master_Wait
 11903 ;; This function is called by:
 11904 ;;		_main
 11905 ;;		_set_time
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text31
 11910  005F28                     __ptext31:
 11911                           	opt stack 0
 11912  005F28                     _I2C_Master_Write:
 11913                           	opt stack 23
 11914                           
 11915                           ;I2C.c: 49: I2C_Master_Wait();
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;incstack = 0
 11919  005F28  EC6E  F02F         	call	_I2C_Master_Wait	;wreg free
 11920                           
 11921                           ;I2C.c: 50: SSPBUF = d;
 11922  005F2C  C081  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 11923  005F30  0012               	return		;funcret
 11924  005F32                     __end_of_I2C_Master_Write:
 11925                           	opt stack 0
 11926                           tblptru	equ	0xFF8
 11927                           tblptrh	equ	0xFF7
 11928                           tblptrl	equ	0xFF6
 11929                           tablat	equ	0xFF5
 11930                           prodh	equ	0xFF4
 11931                           prodl	equ	0xFF3
 11932                           intcon	equ	0xFF2
 11933                           intcon2	equ	0xFF1
 11934                           postinc0	equ	0xFEE
 11935                           wreg	equ	0xFE8
 11936                           indf2	equ	0xFDF
 11937                           postinc2	equ	0xFDE
 11938                           postdec2	equ	0xFDD
 11939                           fsr2h	equ	0xFDA
 11940                           fsr2l	equ	0xFD9
 11941                           status	equ	0xFD8
 11942                           
 11943 ;; *************** function _I2C_Master_Stop *****************
 11944 ;; Defined at:
 11945 ;;		line 41 in file "I2C.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;Total ram usage:        0 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    7
 11966 ;; This function calls:
 11967 ;;		_I2C_Master_Wait
 11968 ;; This function is called by:
 11969 ;;		_main
 11970 ;;		_set_time
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           	psect	text32
 11975  005F32                     __ptext32:
 11976                           	opt stack 0
 11977  005F32                     _I2C_Master_Stop:
 11978                           	opt stack 23
 11979                           
 11980                           ;I2C.c: 43: I2C_Master_Wait();
 11981                           
 11982                           ;incstack = 0
 11983  005F32  EC6E  F02F         	call	_I2C_Master_Wait	;wreg free
 11984                           
 11985                           ;I2C.c: 44: PEN = 1;
 11986  005F36  84C5               	bsf	4037,2,c	;volatile
 11987  005F38  0012               	return		;funcret
 11988  005F3A                     __end_of_I2C_Master_Stop:
 11989                           	opt stack 0
 11990                           tblptru	equ	0xFF8
 11991                           tblptrh	equ	0xFF7
 11992                           tblptrl	equ	0xFF6
 11993                           tablat	equ	0xFF5
 11994                           prodh	equ	0xFF4
 11995                           prodl	equ	0xFF3
 11996                           intcon	equ	0xFF2
 11997                           intcon2	equ	0xFF1
 11998                           postinc0	equ	0xFEE
 11999                           wreg	equ	0xFE8
 12000                           indf2	equ	0xFDF
 12001                           postinc2	equ	0xFDE
 12002                           postdec2	equ	0xFDD
 12003                           fsr2h	equ	0xFDA
 12004                           fsr2l	equ	0xFD9
 12005                           status	equ	0xFD8
 12006                           
 12007 ;; *************** function _I2C_Master_Start *****************
 12008 ;; Defined at:
 12009 ;;		line 29 in file "I2C.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;		None
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  2   60[None  ] int 
 12016 ;; Registers used:
 12017 ;;		wreg, status,2, status,0, cstack
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;Total ram usage:        0 bytes
 12028 ;; Hardware stack levels used:    1
 12029 ;; Hardware stack levels required when called:    7
 12030 ;; This function calls:
 12031 ;;		_I2C_Master_Wait
 12032 ;; This function is called by:
 12033 ;;		_main
 12034 ;;		_set_time
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           	psect	text33
 12039  005F3A                     __ptext33:
 12040                           	opt stack 0
 12041  005F3A                     _I2C_Master_Start:
 12042                           	opt stack 23
 12043                           
 12044                           ;I2C.c: 31: I2C_Master_Wait();
 12045                           
 12046                           ;incstack = 0
 12047  005F3A  EC6E  F02F         	call	_I2C_Master_Wait	;wreg free
 12048                           
 12049                           ;I2C.c: 32: SEN = 1;
 12050  005F3E  80C5               	bsf	4037,0,c	;volatile
 12051  005F40  0012               	return		;funcret
 12052  005F42                     __end_of_I2C_Master_Start:
 12053                           	opt stack 0
 12054                           tblptru	equ	0xFF8
 12055                           tblptrh	equ	0xFF7
 12056                           tblptrl	equ	0xFF6
 12057                           tablat	equ	0xFF5
 12058                           prodh	equ	0xFF4
 12059                           prodl	equ	0xFF3
 12060                           intcon	equ	0xFF2
 12061                           intcon2	equ	0xFF1
 12062                           postinc0	equ	0xFEE
 12063                           wreg	equ	0xFE8
 12064                           indf2	equ	0xFDF
 12065                           postinc2	equ	0xFDE
 12066                           postdec2	equ	0xFDD
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           
 12071 ;; *************** function _I2C_Master_Read *****************
 12072 ;; Defined at:
 12073 ;;		line 53 in file "I2C.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  a               1    wreg     unsigned char 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  a               1    1[BANK0 ] unsigned char 
 12078 ;;  temp            1    2[BANK0 ] unsigned char 
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  1    wreg      unsigned char 
 12081 ;; Registers used:
 12082 ;;		wreg, status,2, status,0, cstack
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12089 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12092 ;;Total ram usage:        2 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:    7
 12095 ;; This function calls:
 12096 ;;		_I2C_Master_Wait
 12097 ;; This function is called by:
 12098 ;;		_main
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text34
 12103  005D7C                     __ptext34:
 12104                           	opt stack 0
 12105  005D7C                     _I2C_Master_Read:
 12106                           	opt stack 23
 12107                           
 12108                           ;incstack = 0
 12109                           ;I2C_Master_Read@a stored from wreg
 12110  005D7C  0100               	movlb	0	; () banked
 12111  005D7E  6F81               	movwf	I2C_Master_Read@a& (0+255),b
 12112                           
 12113                           ;I2C.c: 55: unsigned char temp;
 12114                           ;I2C.c: 56: I2C_Master_Wait();
 12115  005D80  EC6E  F02F         	call	_I2C_Master_Wait	;wreg free
 12116                           
 12117                           ;I2C.c: 57: RCEN = 1;
 12118  005D84  86C5               	bsf	4037,3,c	;volatile
 12119                           
 12120                           ;I2C.c: 58: I2C_Master_Wait();
 12121  005D86  EC6E  F02F         	call	_I2C_Master_Wait	;wreg free
 12122                           
 12123                           ;I2C.c: 59: temp = SSPBUF;
 12124  005D8A  CFC9 F082          	movff	4041,I2C_Master_Read@temp	;volatile
 12125                           
 12126                           ;I2C.c: 60: I2C_Master_Wait();
 12127  005D8E  EC6E  F02F         	call	_I2C_Master_Wait	;wreg free
 12128                           
 12129                           ;I2C.c: 61: ACKDT = (a)?0:1;
 12130  005D92  0100               	movlb	0	; () banked
 12131  005D94  5181               	movf	I2C_Master_Read@a& (0+255),w,b
 12132  005D96  0100               	movlb	0	; () banked
 12133  005D98  A4D8               	btfss	status,2,c
 12134  005D9A  D002               	goto	u7300
 12135  005D9C  8AC5               	bsf	4037,5,c	;volatile
 12136  005D9E  D001               	goto	l6462
 12137  005DA0                     u7300:
 12138  005DA0  9AC5               	bcf	4037,5,c	;volatile
 12139  005DA2                     l6462:
 12140                           
 12141                           ;I2C.c: 62: ACKEN = 1;
 12142  005DA2  88C5               	bsf	4037,4,c	;volatile
 12143                           
 12144                           ;I2C.c: 63: return temp;
 12145  005DA4  0100               	movlb	0	; () banked
 12146  005DA6  5182               	movf	I2C_Master_Read@temp& (0+255),w,b
 12147  005DA8  0012               	return	
 12148  005DAA                     __end_of_I2C_Master_Read:
 12149                           	opt stack 0
 12150                           tblptru	equ	0xFF8
 12151                           tblptrh	equ	0xFF7
 12152                           tblptrl	equ	0xFF6
 12153                           tablat	equ	0xFF5
 12154                           prodh	equ	0xFF4
 12155                           prodl	equ	0xFF3
 12156                           intcon	equ	0xFF2
 12157                           intcon2	equ	0xFF1
 12158                           postinc0	equ	0xFEE
 12159                           wreg	equ	0xFE8
 12160                           indf2	equ	0xFDF
 12161                           postinc2	equ	0xFDE
 12162                           postdec2	equ	0xFDD
 12163                           fsr2h	equ	0xFDA
 12164                           fsr2l	equ	0xFD9
 12165                           status	equ	0xFD8
 12166                           
 12167 ;; *************** function _I2C_Master_Wait *****************
 12168 ;; Defined at:
 12169 ;;		line 24 in file "I2C.c"
 12170 ;; Parameters:    Size  Location     Type
 12171 ;;		None
 12172 ;; Auto vars:     Size  Location     Type
 12173 ;;		None
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  1    wreg      void 
 12176 ;; Registers used:
 12177 ;;		wreg, status,2, status,0
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12185 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12187 ;;Total ram usage:        1 bytes
 12188 ;; Hardware stack levels used:    1
 12189 ;; Hardware stack levels required when called:    6
 12190 ;; This function calls:
 12191 ;;		Nothing
 12192 ;; This function is called by:
 12193 ;;		_I2C_Master_Start
 12194 ;;		_I2C_Master_Stop
 12195 ;;		_I2C_Master_Write
 12196 ;;		_I2C_Master_Read
 12197 ;;		_I2C_Master_RepeatedStart
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           	psect	text35
 12202  005EDC                     __ptext35:
 12203                           	opt stack 0
 12204  005EDC                     _I2C_Master_Wait:
 12205                           	opt stack 23
 12206  005EDC                     l712:
 12207  005EDC  B4C7               	btfsc	4039,2,c	;volatile
 12208  005EDE  D7FE               	goto	l712
 12209  005EE0  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12210  005EE4  0E1F               	movlw	31
 12211  005EE6  0100               	movlb	0	; () banked
 12212  005EE8  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12213  005EEA  B4D8               	btfsc	status,2,c
 12214  005EEC  0012               	return	
 12215  005EEE  D7F6               	goto	l712
 12216  005EF0                     __end_of_I2C_Master_Wait:
 12217                           	opt stack 0
 12218                           tblptru	equ	0xFF8
 12219                           tblptrh	equ	0xFF7
 12220                           tblptrl	equ	0xFF6
 12221                           tablat	equ	0xFF5
 12222                           prodh	equ	0xFF4
 12223                           prodl	equ	0xFF3
 12224                           intcon	equ	0xFF2
 12225                           intcon2	equ	0xFF1
 12226                           postinc0	equ	0xFEE
 12227                           wreg	equ	0xFE8
 12228                           indf2	equ	0xFDF
 12229                           postinc2	equ	0xFDE
 12230                           postdec2	equ	0xFDD
 12231                           fsr2h	equ	0xFDA
 12232                           fsr2l	equ	0xFD9
 12233                           status	equ	0xFD8
 12234                           
 12235 ;; *************** function _I2C_Master_Init *****************
 12236 ;; Defined at:
 12237 ;;		line 13 in file "I2C.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;  c               4   13[BANK0 ] const unsigned long 
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;		None
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;Total ram usage:        8 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    7
 12258 ;; This function calls:
 12259 ;;		___lldiv
 12260 ;; This function is called by:
 12261 ;;		_main
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text36
 12266  00593E                     __ptext36:
 12267                           	opt stack 0
 12268  00593E                     _I2C_Master_Init:
 12269                           	opt stack 23
 12270                           
 12271                           ;I2C.c: 16: SSPSTAT = 0b00000000;
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;incstack = 0
 12275  00593E  0E00               	movlw	0
 12276  005940  6EC7               	movwf	4039,c	;volatile
 12277                           
 12278                           ;I2C.c: 17: SSPCON1 = 0b00101000;
 12279  005942  0E28               	movlw	40
 12280  005944  6EC6               	movwf	4038,c	;volatile
 12281                           
 12282                           ;I2C.c: 18: SSPCON2 = 0b00000000;
 12283  005946  0E00               	movlw	0
 12284  005948  6EC5               	movwf	4037,c	;volatile
 12285                           
 12286                           ;I2C.c: 19: SSPADD = (8000000/(4*c))-1;
 12287  00594A  0E00               	movlw	0
 12288  00594C  0100               	movlb	0	; () banked
 12289  00594E  6F80               	movwf	___lldiv@dividend& (0+255),b
 12290  005950  0E12               	movlw	18
 12291  005952  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12292  005954  0E7A               	movlw	122
 12293  005956  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12294  005958  0E00               	movlw	0
 12295  00595A  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12296  00595C  C08D  F091         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12297  005960  C08E  F092         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12298  005964  C08F  F093         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12299  005968  C090  F094         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12300  00596C  0E02               	movlw	2
 12301  00596E                     u7295:
 12302  00596E  90D8               	bcf	status,0,c
 12303  005970  0100               	movlb	0	; () banked
 12304  005972  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12305  005974  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12306  005976  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12307  005978  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12308  00597A  2EE8               	decfsz	wreg,f,c
 12309  00597C  D7F8               	goto	u7295
 12310  00597E  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12311  005982  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12312  005986  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12313  00598A  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12314  00598E  EC7D  F028         	call	___lldiv	;wreg free
 12315  005992  0100               	movlb	0	; () banked
 12316  005994  0580               	decf	?___lldiv& (0+255),w,b
 12317  005996  6EC8               	movwf	4040,c	;volatile
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;I2C.c: 20: TRISC3 = 1;
 12321  005998  8694               	bsf	3988,3,c	;volatile
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;I2C.c: 21: TRISC4 = 1;
 12325  00599A  8894               	bsf	3988,4,c	;volatile
 12326                           
 12327                           ; BSR set to: 0
 12328  00599C  0012               	return		;funcret
 12329  00599E                     __end_of_I2C_Master_Init:
 12330                           	opt stack 0
 12331                           tblptru	equ	0xFF8
 12332                           tblptrh	equ	0xFF7
 12333                           tblptrl	equ	0xFF6
 12334                           tablat	equ	0xFF5
 12335                           prodh	equ	0xFF4
 12336                           prodl	equ	0xFF3
 12337                           intcon	equ	0xFF2
 12338                           intcon2	equ	0xFF1
 12339                           postinc0	equ	0xFEE
 12340                           wreg	equ	0xFE8
 12341                           indf2	equ	0xFDF
 12342                           postinc2	equ	0xFDE
 12343                           postdec2	equ	0xFDD
 12344                           fsr2h	equ	0xFDA
 12345                           fsr2l	equ	0xFD9
 12346                           status	equ	0xFD8
 12347                           
 12348 ;; *************** function ___lldiv *****************
 12349 ;; Defined at:
 12350 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lldiv.c"
 12351 ;; Parameters:    Size  Location     Type
 12352 ;;  dividend        4    0[BANK0 ] unsigned long 
 12353 ;;  divisor         4    4[BANK0 ] unsigned long 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  quotient        4    8[BANK0 ] unsigned long 
 12356 ;;  counter         1   12[BANK0 ] unsigned char 
 12357 ;; Return value:  Size  Location     Type
 12358 ;;                  4    0[BANK0 ] unsigned long 
 12359 ;; Registers used:
 12360 ;;		wreg, status,2, status,0
 12361 ;; Tracked objects:
 12362 ;;		On entry : 0/0
 12363 ;;		On exit  : 0/0
 12364 ;;		Unchanged: 0/0
 12365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12366 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12367 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12369 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12370 ;;Total ram usage:       13 bytes
 12371 ;; Hardware stack levels used:    1
 12372 ;; Hardware stack levels required when called:    6
 12373 ;; This function calls:
 12374 ;;		Nothing
 12375 ;; This function is called by:
 12376 ;;		_I2C_Master_Init
 12377 ;;		_printf
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text37
 12382  0050FA                     __ptext37:
 12383                           	opt stack 0
 12384  0050FA                     ___lldiv:
 12385                           	opt stack 23
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;incstack = 0
 12389  0050FA  0E00               	movlw	0
 12390  0050FC  0100               	movlb	0	; () banked
 12391  0050FE  6F88               	movwf	___lldiv@quotient& (0+255),b
 12392  005100  0E00               	movlw	0
 12393  005102  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12394  005104  0E00               	movlw	0
 12395  005106  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12396  005108  0E00               	movlw	0
 12397  00510A  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12398                           
 12399                           ; BSR set to: 0
 12400  00510C  0100               	movlb	0	; () banked
 12401  00510E  5184               	movf	___lldiv@divisor& (0+255),w,b
 12402  005110  0100               	movlb	0	; () banked
 12403  005112  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12404  005114  0100               	movlb	0	; () banked
 12405  005116  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12406  005118  0100               	movlb	0	; () banked
 12407  00511A  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12408  00511C  B4D8               	btfsc	status,2,c
 12409  00511E  D042               	goto	l1274
 12410                           
 12411                           ; BSR set to: 0
 12412  005120  0E01               	movlw	1
 12413  005122  0100               	movlb	0	; () banked
 12414  005124  6F8C               	movwf	___lldiv@counter& (0+255),b
 12415  005126  D008               	goto	l6006
 12416  005128                     l6004:
 12417                           
 12418                           ; BSR set to: 0
 12419  005128  0100               	movlb	0	; () banked
 12420  00512A  90D8               	bcf	status,0,c
 12421  00512C  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12422  00512E  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12423  005130  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12424  005132  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12425  005134  0100               	movlb	0	; () banked
 12426  005136  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12427  005138                     l6006:
 12428                           
 12429                           ; BSR set to: 0
 12430  005138  0100               	movlb	0	; () banked
 12431  00513A  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12432  00513C  D7F5               	goto	l6004
 12433  00513E                     l6008:
 12434                           
 12435                           ; BSR set to: 0
 12436  00513E  0100               	movlb	0	; () banked
 12437  005140  90D8               	bcf	status,0,c
 12438  005142  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12439  005144  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12440  005146  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12441  005148  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12442                           
 12443                           ; BSR set to: 0
 12444  00514A  0100               	movlb	0	; () banked
 12445  00514C  5184               	movf	___lldiv@divisor& (0+255),w,b
 12446  00514E  0100               	movlb	0	; () banked
 12447  005150  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12448  005152  0100               	movlb	0	; () banked
 12449  005154  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12450  005156  0100               	movlb	0	; () banked
 12451  005158  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12452  00515A  0100               	movlb	0	; () banked
 12453  00515C  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12454  00515E  0100               	movlb	0	; () banked
 12455  005160  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12456  005162  0100               	movlb	0	; () banked
 12457  005164  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12458  005166  0100               	movlb	0	; () banked
 12459  005168  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12460  00516A  A0D8               	btfss	status,0,c
 12461  00516C  D012               	goto	l6016
 12462                           
 12463                           ; BSR set to: 0
 12464  00516E  0100               	movlb	0	; () banked
 12465  005170  5184               	movf	___lldiv@divisor& (0+255),w,b
 12466  005172  0100               	movlb	0	; () banked
 12467  005174  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12468  005176  0100               	movlb	0	; () banked
 12469  005178  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12470  00517A  0100               	movlb	0	; () banked
 12471  00517C  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12472  00517E  0100               	movlb	0	; () banked
 12473  005180  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12474  005182  0100               	movlb	0	; () banked
 12475  005184  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12476  005186  0100               	movlb	0	; () banked
 12477  005188  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12478  00518A  0100               	movlb	0	; () banked
 12479  00518C  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12480                           
 12481                           ; BSR set to: 0
 12482  00518E  0100               	movlb	0	; () banked
 12483  005190  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12484  005192                     l6016:
 12485                           
 12486                           ; BSR set to: 0
 12487  005192  0100               	movlb	0	; () banked
 12488  005194  90D8               	bcf	status,0,c
 12489  005196  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12490  005198  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12491  00519A  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12492  00519C  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12493                           
 12494                           ; BSR set to: 0
 12495  00519E  0100               	movlb	0	; () banked
 12496  0051A0  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12497  0051A2  D7CD               	goto	l6008
 12498  0051A4                     l1274:
 12499                           
 12500                           ; BSR set to: 0
 12501  0051A4  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12502  0051A8  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12503  0051AC  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12504  0051B0  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12505                           
 12506                           ; BSR set to: 0
 12507  0051B4  0012               	return		;funcret
 12508  0051B6                     __end_of___lldiv:
 12509                           	opt stack 0
 12510                           tblptru	equ	0xFF8
 12511                           tblptrh	equ	0xFF7
 12512                           tblptrl	equ	0xFF6
 12513                           tablat	equ	0xFF5
 12514                           prodh	equ	0xFF4
 12515                           prodl	equ	0xFF3
 12516                           intcon	equ	0xFF2
 12517                           intcon2	equ	0xFF1
 12518                           postinc0	equ	0xFEE
 12519                           wreg	equ	0xFE8
 12520                           indf2	equ	0xFDF
 12521                           postinc2	equ	0xFDE
 12522                           postdec2	equ	0xFDD
 12523                           fsr2h	equ	0xFDA
 12524                           fsr2l	equ	0xFD9
 12525                           status	equ	0xFD8
 12526                           
 12527 ;; *************** function _Eeprom_WriteByte *****************
 12528 ;; Defined at:
 12529 ;;		line 40 in file "eeprom.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  address         1    wreg     char 
 12532 ;;  data            1    0[BANK0 ] char 
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;  address         1    3[BANK0 ] char 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, status,2, status,0
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12544 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;Total ram usage:        4 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:    6
 12551 ;; This function calls:
 12552 ;;		Nothing
 12553 ;; This function is called by:
 12554 ;;		_main
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           	psect	text38
 12559  005C30                     __ptext38:
 12560                           	opt stack 0
 12561  005C30                     _Eeprom_WriteByte:
 12562                           	opt stack 24
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;incstack = 0
 12566                           ;Eeprom_WriteByte@address stored from wreg
 12567  005C30  0100               	movlb	0	; () banked
 12568  005C32  6F83               	movwf	Eeprom_WriteByte@address& (0+255),b
 12569                           
 12570                           ;eeprom.c: 43: EEADRH = (signed char)(address >> 8);
 12571  005C34  C083  F081         	movff	Eeprom_WriteByte@address,??_Eeprom_WriteByte
 12572  005C38  0E08               	movlw	8
 12573  005C3A  0100               	movlb	0	; () banked
 12574  005C3C  6F82               	movwf	(??_Eeprom_WriteByte+1)& (0+255),b
 12575  005C3E                     u7985:
 12576  005C3E  0100               	movlb	0	; () banked
 12577  005C40  3581               	rlcf	??_Eeprom_WriteByte& (0+255),w,b
 12578  005C42  3381               	rrcf	??_Eeprom_WriteByte& (0+255),f,b
 12579  005C44  0100               	movlb	0	; () banked
 12580  005C46  2F82               	decfsz	(??_Eeprom_WriteByte+1)& (0+255),f,b
 12581  005C48  D7FA               	goto	u7985
 12582  005C4A  0100               	movlb	0	; () banked
 12583  005C4C  5181               	movf	??_Eeprom_WriteByte& (0+255),w,b
 12584  005C4E  6EAA               	movwf	4010,c	;volatile
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;eeprom.c: 44: EEADR = (signed char)address;
 12588  005C50  C083  FFA9         	movff	Eeprom_WriteByte@address,4009	;volatile
 12589                           
 12590                           ; BSR set to: 0
 12591                           ;eeprom.c: 46: EEDATA = data;
 12592  005C54  C080  FFA8         	movff	Eeprom_WriteByte@data,4008	;volatile
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;eeprom.c: 47: EECON1bits.EEPGD = 0;
 12596  005C58  9EA6               	bcf	4006,7,c	;volatile
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;eeprom.c: 48: EECON1bits.CFGS = 0;
 12600  005C5A  9CA6               	bcf	4006,6,c	;volatile
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;eeprom.c: 49: EECON1bits.WREN = 1;
 12604  005C5C  84A6               	bsf	4006,2,c	;volatile
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;eeprom.c: 53: EECON2 = 0x55;
 12608  005C5E  0E55               	movlw	85
 12609  005C60  6EA7               	movwf	4007,c	;volatile
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;eeprom.c: 54: EECON2 = 0xAA;
 12613  005C62  0EAA               	movlw	170
 12614  005C64  6EA7               	movwf	4007,c	;volatile
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;eeprom.c: 55: EECON1bits.WR = 1;
 12618  005C66  82A6               	bsf	4006,1,c	;volatile
 12619  005C68                     l673:
 12620  005C68  A8A1               	btfss	4001,4,c	;volatile
 12621  005C6A  D7FE               	goto	l673
 12622                           
 12623                           ;eeprom.c: 61: }
 12624                           ;eeprom.c: 63: PIR2bits.EEIF = 0;
 12625  005C6C  98A1               	bcf	4001,4,c	;volatile
 12626                           
 12627                           ;eeprom.c: 64: EECON1bits.WREN = 0;
 12628  005C6E  94A6               	bcf	4006,2,c	;volatile
 12629  005C70  0012               	return		;funcret
 12630  005C72                     __end_of_Eeprom_WriteByte:
 12631                           	opt stack 0
 12632                           tblptru	equ	0xFF8
 12633                           tblptrh	equ	0xFF7
 12634                           tblptrl	equ	0xFF6
 12635                           tablat	equ	0xFF5
 12636                           prodh	equ	0xFF4
 12637                           prodl	equ	0xFF3
 12638                           intcon	equ	0xFF2
 12639                           intcon2	equ	0xFF1
 12640                           postinc0	equ	0xFEE
 12641                           wreg	equ	0xFE8
 12642                           indf2	equ	0xFDF
 12643                           postinc2	equ	0xFDE
 12644                           postdec2	equ	0xFDD
 12645                           fsr2h	equ	0xFDA
 12646                           fsr2l	equ	0xFD9
 12647                           status	equ	0xFD8
 12648                           
 12649 ;; *************** function _Eeprom_ReadByte *****************
 12650 ;; Defined at:
 12651 ;;		line 21 in file "eeprom.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;  address         1    wreg     char 
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;  address         1    2[BANK0 ] char 
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      char 
 12658 ;; Registers used:
 12659 ;;		wreg, status,2, status,0
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12669 ;;Total ram usage:        3 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:    6
 12672 ;; This function calls:
 12673 ;;		Nothing
 12674 ;; This function is called by:
 12675 ;;		_main
 12676 ;; This function uses a non-reentrant model
 12677 ;;
 12678                           
 12679                           	psect	text39
 12680  005D1A                     __ptext39:
 12681                           	opt stack 0
 12682  005D1A                     _Eeprom_ReadByte:
 12683                           	opt stack 24
 12684                           
 12685                           ;incstack = 0
 12686                           ;Eeprom_ReadByte@address stored from wreg
 12687  005D1A  0100               	movlb	0	; () banked
 12688  005D1C  6F82               	movwf	Eeprom_ReadByte@address& (0+255),b
 12689                           
 12690                           ;eeprom.c: 25: EEADRH = (signed char)(address >> 8);
 12691  005D1E  C082  F080         	movff	Eeprom_ReadByte@address,??_Eeprom_ReadByte
 12692  005D22  0E08               	movlw	8
 12693  005D24  0100               	movlb	0	; () banked
 12694  005D26  6F81               	movwf	(??_Eeprom_ReadByte+1)& (0+255),b
 12695  005D28                     u7965:
 12696  005D28  0100               	movlb	0	; () banked
 12697  005D2A  3580               	rlcf	??_Eeprom_ReadByte& (0+255),w,b
 12698  005D2C  3380               	rrcf	??_Eeprom_ReadByte& (0+255),f,b
 12699  005D2E  0100               	movlb	0	; () banked
 12700  005D30  2F81               	decfsz	(??_Eeprom_ReadByte+1)& (0+255),f,b
 12701  005D32  D7FA               	goto	u7965
 12702  005D34  0100               	movlb	0	; () banked
 12703  005D36  5180               	movf	??_Eeprom_ReadByte& (0+255),w,b
 12704  005D38  6EAA               	movwf	4010,c	;volatile
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;eeprom.c: 26: EEADR = (signed char)address;
 12708  005D3A  C082  FFA9         	movff	Eeprom_ReadByte@address,4009	;volatile
 12709                           
 12710                           ; BSR set to: 0
 12711                           ;eeprom.c: 28: EECON1bits.EEPGD = 0;
 12712  005D3E  9EA6               	bcf	4006,7,c	;volatile
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;eeprom.c: 29: EECON1bits.CFGS = 0;
 12716  005D40  9CA6               	bcf	4006,6,c	;volatile
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;eeprom.c: 30: EECON1bits.RD = 1;
 12720  005D42  80A6               	bsf	4006,0,c	;volatile
 12721  005D44                     l667:
 12722  005D44  B0A6               	btfsc	4006,0,c	;volatile
 12723  005D46  D7FE               	goto	l667
 12724                           
 12725                           ;eeprom.c: 36: return EEDATA;
 12726  005D48  50A8               	movf	4008,w,c	;volatile
 12727  005D4A  0012               	return	
 12728  005D4C                     __end_of_Eeprom_ReadByte:
 12729                           	opt stack 0
 12730                           tblptru	equ	0xFF8
 12731                           tblptrh	equ	0xFF7
 12732                           tblptrl	equ	0xFF6
 12733                           tablat	equ	0xFF5
 12734                           prodh	equ	0xFF4
 12735                           prodl	equ	0xFF3
 12736                           intcon	equ	0xFF2
 12737                           intcon2	equ	0xFF1
 12738                           postinc0	equ	0xFEE
 12739                           wreg	equ	0xFE8
 12740                           indf2	equ	0xFDF
 12741                           postinc2	equ	0xFDE
 12742                           postdec2	equ	0xFDD
 12743                           fsr2h	equ	0xFDA
 12744                           fsr2l	equ	0xFD9
 12745                           status	equ	0xFD8
 12746                           
 12747 ;; *************** function _IRQ *****************
 12748 ;; Defined at:
 12749 ;;		line 641 in file "main.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;		None
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;		None
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  1    wreg      void 
 12756 ;; Registers used:
 12757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12758 ;; Tracked objects:
 12759 ;;		On entry : 0/0
 12760 ;;		On exit  : 0/0
 12761 ;;		Unchanged: 0/0
 12762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12765 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12766 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;Total ram usage:       14 bytes
 12768 ;; Hardware stack levels used:    1
 12769 ;; Hardware stack levels required when called:    5
 12770 ;; This function calls:
 12771 ;;		_servo_ISR_1
 12772 ;;		_servo_ISR_3
 12773 ;; This function is called by:
 12774 ;;		Interrupt level 2
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           	psect	intcode
 12779  000008                     __pintcode:
 12780                           	opt stack 0
 12781  000008                     _IRQ:
 12782                           	opt stack 21
 12783                           
 12784                           ;incstack = 0
 12785  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12786  00000A  EDD0  F029         	call	int_func,f	;refresh shadow registers
 12787                           tblptru	equ	0xFF8
 12788                           tblptrh	equ	0xFF7
 12789                           tblptrl	equ	0xFF6
 12790                           tablat	equ	0xFF5
 12791                           prodh	equ	0xFF4
 12792                           prodl	equ	0xFF3
 12793                           intcon	equ	0xFF2
 12794                           intcon2	equ	0xFF1
 12795                           postinc0	equ	0xFEE
 12796                           wreg	equ	0xFE8
 12797                           indf2	equ	0xFDF
 12798                           postinc2	equ	0xFDE
 12799                           postdec2	equ	0xFDD
 12800                           fsr2h	equ	0xFDA
 12801                           fsr2l	equ	0xFD9
 12802                           status	equ	0xFD8
 12803                           
 12804                           	psect	intcode_body
 12805  0053A0                     __pintcode_body:
 12806                           	opt stack 21
 12807  0053A0                     int_func:
 12808                           	opt stack 21
 12809  0053A0  0006               	pop		; remove dummy address from shadow register refresh
 12810  0053A2  CFFA F067          	movff	pclath,??_IRQ
 12811  0053A6  CFFB F068          	movff	pclatu,??_IRQ+1
 12812  0053AA  CFE9 F069          	movff	fsr0l,??_IRQ+2
 12813  0053AE  CFEA F06A          	movff	fsr0h,??_IRQ+3
 12814  0053B2  CFE1 F06B          	movff	fsr1l,??_IRQ+4
 12815  0053B6  CFE2 F06C          	movff	fsr1h,??_IRQ+5
 12816  0053BA  CFD9 F06D          	movff	fsr2l,??_IRQ+6
 12817  0053BE  CFDA F06E          	movff	fsr2h,??_IRQ+7
 12818  0053C2  CFF3 F06F          	movff	prodl,??_IRQ+8
 12819  0053C6  CFF4 F070          	movff	prodh,??_IRQ+9
 12820  0053CA  CFF6 F071          	movff	tblptrl,??_IRQ+10
 12821  0053CE  CFF7 F072          	movff	tblptrh,??_IRQ+11
 12822  0053D2  CFF8 F073          	movff	tblptru,??_IRQ+12
 12823  0053D6  CFF5 F074          	movff	tablat,??_IRQ+13
 12824                           
 12825                           ;main.c: 642: (INTCONbits.GIE = 0);
 12826  0053DA  9EF2               	bcf	intcon,7,c	;volatile
 12827                           
 12828                           ;main.c: 643: TMR3ON = 0;
 12829  0053DC  90B1               	bcf	4017,0,c	;volatile
 12830                           
 12831                           ;main.c: 644: _delay((unsigned long)((1)*(8000000/4000000.0)));
 12832  0053DE  D000               	nop2		;2 cycle nop
 12833                           
 12834                           ;main.c: 645: TMR1ON = 0;
 12835  0053E0  90CD               	bcf	4045,0,c	;volatile
 12836                           
 12837                           ;main.c: 646: if (TMR1IF) {
 12838  0053E2  A09E               	btfss	3998,0,c	;volatile
 12839  0053E4  D003               	goto	i2l251
 12840                           
 12841                           ;main.c: 647: servo_ISR_1();
 12842  0053E6  EC81  F011         	call	_servo_ISR_1	;wreg free
 12843  0053EA  D004               	goto	i2l7912
 12844  0053EC                     i2l251:
 12845                           
 12846                           ;main.c: 650: }
 12847                           ;main.c: 651: if (TMR3IF) {
 12848  0053EC  A2A1               	btfss	4001,1,c	;volatile
 12849  0053EE  D003               	goto	i2l252
 12850                           
 12851                           ;main.c: 652: servo_ISR_3();
 12852  0053F0  EC33  F017         	call	_servo_ISR_3	;wreg free
 12853  0053F4                     i2l7912:
 12854                           
 12855                           ;main.c: 653: (INTCONbits.GIE = 1);
 12856  0053F4  8EF2               	bsf	intcon,7,c	;volatile
 12857  0053F6                     i2l252:
 12858  0053F6  C074  FFF5         	movff	??_IRQ+13,tablat
 12859  0053FA  C073  FFF8         	movff	??_IRQ+12,tblptru
 12860  0053FE  C072  FFF7         	movff	??_IRQ+11,tblptrh
 12861  005402  C071  FFF6         	movff	??_IRQ+10,tblptrl
 12862  005406  C070  FFF4         	movff	??_IRQ+9,prodh
 12863  00540A  C06F  FFF3         	movff	??_IRQ+8,prodl
 12864  00540E  C06E  FFDA         	movff	??_IRQ+7,fsr2h
 12865  005412  C06D  FFD9         	movff	??_IRQ+6,fsr2l
 12866  005416  C06C  FFE2         	movff	??_IRQ+5,fsr1h
 12867  00541A  C06B  FFE1         	movff	??_IRQ+4,fsr1l
 12868  00541E  C06A  FFEA         	movff	??_IRQ+3,fsr0h
 12869  005422  C069  FFE9         	movff	??_IRQ+2,fsr0l
 12870  005426  C068  FFFB         	movff	??_IRQ+1,pclatu
 12871  00542A  C067  FFFA         	movff	??_IRQ,pclath
 12872  00542E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12873  005430  0011               	retfie		f
 12874  005432                     __end_of_IRQ:
 12875                           	opt stack 0
 12876                           pclatu	equ	0xFFB
 12877                           pclath	equ	0xFFA
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           intcon	equ	0xFF2
 12885                           intcon2	equ	0xFF1
 12886                           postinc0	equ	0xFEE
 12887                           fsr0h	equ	0xFEA
 12888                           fsr0l	equ	0xFE9
 12889                           wreg	equ	0xFE8
 12890                           fsr1h	equ	0xFE2
 12891                           fsr1l	equ	0xFE1
 12892                           indf2	equ	0xFDF
 12893                           postinc2	equ	0xFDE
 12894                           postdec2	equ	0xFDD
 12895                           fsr2h	equ	0xFDA
 12896                           fsr2l	equ	0xFD9
 12897                           status	equ	0xFD8
 12898                           
 12899 ;; *************** function _servo_ISR_3 *****************
 12900 ;; Defined at:
 12901 ;;		line 494 in file "interrupt.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;Total ram usage:        2 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    4
 12922 ;; This function calls:
 12923 ;;		i2___ftge
 12924 ;;		i2_initLCD
 12925 ;;		i2_printf
 12926 ;;		i2_readADC
 12927 ;;		i2_set_external_interrupt3
 12928 ;; This function is called by:
 12929 ;;		_IRQ
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text41
 12934  002E66                     __ptext41:
 12935                           	opt stack 0
 12936  002E66                     _servo_ISR_3:
 12937                           	opt stack 21
 12938                           
 12939                           ;interrupt.c: 496: TMR3IF = 0;
 12940                           
 12941                           ;incstack = 0
 12942  002E66  92A1               	bcf	4001,1,c	;volatile
 12943                           
 12944                           ;interrupt.c: 498: if(LATCbits.LATC1 == 1){
 12945  002E68  A28B               	btfss	3979,1,c	;volatile
 12946  002E6A  D00D               	goto	i2l7270
 12947                           
 12948                           ;interrupt.c: 499: TMR1ON = 1;
 12949  002E6C  80CD               	bsf	4045,0,c	;volatile
 12950  002E6E                     i2l426:
 12951  002E6E  A09E               	btfss	3998,0,c	;volatile
 12952  002E70  D7FE               	goto	i2l426
 12953                           
 12954                           ;interrupt.c: 502: }
 12955                           ;interrupt.c: 503: TMR1IF = 0;
 12956  002E72  909E               	bcf	3998,0,c	;volatile
 12957                           
 12958                           ;interrupt.c: 504: TMR1ON = 0;
 12959  002E74  90CD               	bcf	4045,0,c	;volatile
 12960                           
 12961                           ;interrupt.c: 505: count1++;
 12962  002E76  4A75               	infsnz	_count1,f,c	;volatile
 12963  002E78  2A76               	incf	_count1+1,f,c	;volatile
 12964                           
 12965                           ;interrupt.c: 506: current_state1 = 0;
 12966  002E7A  0E00               	movlw	0
 12967  002E7C  6E7E               	movwf	_current_state1,c	;volatile
 12968                           
 12969                           ;interrupt.c: 507: LATCbits.LATC1 = 0;
 12970  002E7E  928B               	bcf	3979,1,c	;volatile
 12971                           
 12972                           ;interrupt.c: 508: isr1 = 1;
 12973  002E80  0E01               	movlw	1
 12974  002E82  0100               	movlb	0	; () banked
 12975  002E84  6FF1               	movwf	_isr1& (0+255),b	;volatile
 12976  002E86                     i2l7270:
 12977                           
 12978                           ;interrupt.c: 509: }
 12979                           ;interrupt.c: 511: if(LATCbits.LATC6 == 1){
 12980  002E86  AC8B               	btfss	3979,6,c	;volatile
 12981  002E88  D00D               	goto	i2l7282
 12982                           
 12983                           ;interrupt.c: 512: TMR1ON = 1;
 12984  002E8A  80CD               	bsf	4045,0,c	;volatile
 12985  002E8C                     i2l430:
 12986  002E8C  A09E               	btfss	3998,0,c	;volatile
 12987  002E8E  D7FE               	goto	i2l430
 12988                           
 12989                           ;interrupt.c: 515: }
 12990                           ;interrupt.c: 516: TMR1IF = 0;
 12991  002E90  909E               	bcf	3998,0,c	;volatile
 12992                           
 12993                           ;interrupt.c: 517: TMR1ON = 0;
 12994  002E92  90CD               	bcf	4045,0,c	;volatile
 12995                           
 12996                           ;interrupt.c: 518: count1++;
 12997  002E94  4A75               	infsnz	_count1,f,c	;volatile
 12998  002E96  2A76               	incf	_count1+1,f,c	;volatile
 12999                           
 13000                           ;interrupt.c: 519: current_state1 = 0;
 13001  002E98  0E00               	movlw	0
 13002  002E9A  6E7E               	movwf	_current_state1,c	;volatile
 13003                           
 13004                           ;interrupt.c: 520: LATCbits.LATC6 = 0;
 13005  002E9C  9C8B               	bcf	3979,6,c	;volatile
 13006                           
 13007                           ;interrupt.c: 521: isr1 = 1;
 13008  002E9E  0E01               	movlw	1
 13009  002EA0  0100               	movlb	0	; () banked
 13010  002EA2  6FF1               	movwf	_isr1& (0+255),b	;volatile
 13011  002EA4                     i2l7282:
 13012                           
 13013                           ;interrupt.c: 522: }
 13014                           ;interrupt.c: 524: if(stage3 == 1){
 13015  002EA4  047B               	decf	_stage3,w,c	;volatile
 13016  002EA6  A4D8               	btfss	status,2,c
 13017  002EA8  D079               	goto	i2l7336
 13018                           
 13019                           ;interrupt.c: 526: if(volt_check3 == 0){
 13020  002EAA  0101               	movlb	1	; () banked
 13021  002EAC  5151               	movf	_volt_check3& (0+255),w,b	;volatile
 13022  002EAE  A4D8               	btfss	status,2,c
 13023  002EB0  D02F               	goto	i2l7302
 13024                           
 13025                           ; BSR set to: 1
 13026                           ;interrupt.c: 528: voltage_4 = readADC(4);
 13027  002EB2  0E04               	movlw	4
 13028  002EB4  ECA4  F024         	call	i2_readADC
 13029  002EB8  C03D  F13C         	movff	?i2_readADC,_voltage_4	;volatile
 13030  002EBC  C03E  F13D         	movff	?i2_readADC+1,_voltage_4+1	;volatile
 13031  002EC0  C03F  F13E         	movff	?i2_readADC+2,_voltage_4+2	;volatile
 13032                           
 13033                           ;interrupt.c: 529: volt_check3 = 1;
 13034  002EC4  0E01               	movlw	1
 13035  002EC6  0101               	movlb	1	; () banked
 13036  002EC8  6F51               	movwf	_volt_check3& (0+255),b	;volatile
 13037                           
 13038                           ; BSR set to: 1
 13039                           ;interrupt.c: 530: if(voltage_4 > 3.5){
 13040  002ECA  0E00               	movlw	0
 13041  002ECC  6E01               	movwf	i2___ftge@ff1,c
 13042  002ECE  0E60               	movlw	96
 13043  002ED0  6E02               	movwf	i2___ftge@ff1+1,c
 13044  002ED2  0E40               	movlw	64
 13045  002ED4  6E03               	movwf	i2___ftge@ff1+2,c
 13046  002ED6  C13C  F004         	movff	_voltage_4,i2___ftge@ff2	;volatile
 13047  002EDA  C13D  F005         	movff	_voltage_4+1,i2___ftge@ff2+1	;volatile
 13048  002EDE  C13E  F006         	movff	_voltage_4+2,i2___ftge@ff2+2	;volatile
 13049  002EE2  EC19  F02A         	call	i2___ftge	;wreg free
 13050  002EE6  B0D8               	btfsc	status,0,c
 13051  002EE8  D00C               	goto	i2l7298
 13052                           
 13053                           ;interrupt.c: 531: process3 = 0;
 13054  002EEA  0E00               	movlw	0
 13055  002EEC  0101               	movlb	1	; () banked
 13056  002EEE  6F4F               	movwf	_process3& (0+255),b	;volatile
 13057                           
 13058                           ;interrupt.c: 532: volt_check3 = 0;
 13059  002EF0  0E00               	movlw	0
 13060  002EF2  0101               	movlb	1	; () banked
 13061  002EF4  6F51               	movwf	_volt_check3& (0+255),b	;volatile
 13062                           
 13063                           ; BSR set to: 1
 13064                           ;interrupt.c: 533: if(process1 == 1){
 13065  002EF6  0101               	movlb	1	; () banked
 13066  002EF8  0550               	decf	_process1& (0+255),w,b	;volatile
 13067  002EFA  A4D8               	btfss	status,2,c
 13068  002EFC  0012               	return	
 13069                           
 13070                           ; BSR set to: 1
 13071                           ;interrupt.c: 534: TMR1ON = 1;
 13072  002EFE  80CD               	bsf	4045,0,c	;volatile
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;interrupt.c: 535: }
 13076                           ;interrupt.c: 536: return;
 13077  002F00  0012               	return	
 13078  002F02                     i2l7298:
 13079                           
 13080                           ;interrupt.c: 537: }
 13081                           ;interrupt.c: 538: set_external_interrupt3(1000);
 13082  002F02  0E03               	movlw	3
 13083  002F04  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13084  002F06  0EE8               	movlw	232
 13085  002F08  6E0F               	movwf	i2set_external_interrupt3@time,c
 13086  002F0A  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13087                           
 13088                           ;interrupt.c: 539: return;
 13089  002F0E  0012               	return	
 13090  002F10                     i2l7302:
 13091                           
 13092                           ;interrupt.c: 541: }
 13093                           ;interrupt.c: 543: if (count3 < 40){
 13094  002F10  0101               	movlb	1	; () banked
 13095  002F12  BF4E               	btfsc	(_count3+1)& (0+255),7,b	;volatile
 13096  002F14  D008               	goto	i2l7304
 13097  002F16  0101               	movlb	1	; () banked
 13098  002F18  514E               	movf	(_count3+1)& (0+255),w,b	;volatile
 13099  002F1A  E12C               	bnz	i2l7324
 13100  002F1C  0E28               	movlw	40
 13101  002F1E  0101               	movlb	1	; () banked
 13102  002F20  5D4D               	subwf	_count3& (0+255),w,b	;volatile
 13103  002F22  B0D8               	btfsc	status,0,c
 13104  002F24  D027               	goto	i2l7324
 13105  002F26                     i2l7304:
 13106                           
 13107                           ; BSR set to: 1
 13108                           ;interrupt.c: 544: if(current_state3 == 1){
 13109  002F26  047D               	decf	_current_state3,w,c	;volatile
 13110  002F28  A4D8               	btfss	status,2,c
 13111  002F2A  D00F               	goto	i2l7312
 13112                           
 13113                           ; BSR set to: 1
 13114                           ;interrupt.c: 546: current_state3 = 0;
 13115  002F2C  0E00               	movlw	0
 13116  002F2E  6E7D               	movwf	_current_state3,c	;volatile
 13117                           
 13118                           ;interrupt.c: 547: down_period3 = 20000;
 13119  002F30  0E4E               	movlw	78
 13120  002F32  0100               	movlb	0	; () banked
 13121  002F34  6FED               	movwf	(_down_period3+1)& (0+255),b	;volatile
 13122  002F36  0E20               	movlw	32
 13123  002F38  6FEC               	movwf	_down_period3& (0+255),b	;volatile
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;interrupt.c: 548: LATCbits.LATC2 = 0;
 13127  002F3A  948B               	bcf	3979,2,c	;volatile
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;interrupt.c: 549: set_external_interrupt3(down_period3);
 13131  002F3C  C0EC  F00F         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
 13132  002F40  C0ED  F010         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
 13133  002F44  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13134                           
 13135                           ;interrupt.c: 551: }
 13136  002F48  D011               	goto	i2l7320
 13137  002F4A                     i2l7312:
 13138                           
 13139                           ;interrupt.c: 552: else if (current_state3 == 0){
 13140  002F4A  507D               	movf	_current_state3,w,c	;volatile
 13141  002F4C  A4D8               	btfss	status,2,c
 13142  002F4E  D00E               	goto	i2l7320
 13143                           
 13144                           ;interrupt.c: 554: current_state3 = 1;
 13145  002F50  0E01               	movlw	1
 13146  002F52  6E7D               	movwf	_current_state3,c	;volatile
 13147                           
 13148                           ;interrupt.c: 555: up_period3 = 1620;
 13149  002F54  0E06               	movlw	6
 13150  002F56  0100               	movlb	0	; () banked
 13151  002F58  6FEF               	movwf	(_up_period3+1)& (0+255),b	;volatile
 13152  002F5A  0E54               	movlw	84
 13153  002F5C  6FEE               	movwf	_up_period3& (0+255),b	;volatile
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;interrupt.c: 556: LATCbits.LATC2 = 1;
 13157  002F5E  848B               	bsf	3979,2,c	;volatile
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;interrupt.c: 557: set_external_interrupt3(up_period3);
 13161  002F60  C0EE  F00F         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
 13162  002F64  C0EF  F010         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
 13163  002F68  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13164  002F6C                     i2l7320:
 13165                           
 13166                           ;interrupt.c: 559: }
 13167                           ;interrupt.c: 560: count3++;
 13168  002F6C  0101               	movlb	1	; () banked
 13169  002F6E  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 13170  002F70  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 13171                           
 13172                           ; BSR set to: 1
 13173                           ;interrupt.c: 561: return;
 13174  002F72  0012               	return	
 13175  002F74                     i2l7324:
 13176                           
 13177                           ; BSR set to: 1
 13178                           ;interrupt.c: 562: }
 13179                           ;interrupt.c: 563: count3 = 0;
 13180  002F74  0E00               	movlw	0
 13181  002F76  0101               	movlb	1	; () banked
 13182  002F78  6F4E               	movwf	(_count3+1)& (0+255),b	;volatile
 13183  002F7A  0E00               	movlw	0
 13184  002F7C  6F4D               	movwf	_count3& (0+255),b	;volatile
 13185                           
 13186                           ; BSR set to: 1
 13187                           ;interrupt.c: 564: LATCbits.LATC2 = 0;
 13188  002F7E  948B               	bcf	3979,2,c	;volatile
 13189                           
 13190                           ;interrupt.c: 565: current_state3 = 0;
 13191  002F80  0E00               	movlw	0
 13192  002F82  6E7D               	movwf	_current_state3,c	;volatile
 13193                           
 13194                           ; BSR set to: 1
 13195                           ;interrupt.c: 566: set_external_interrupt3(20000);
 13196  002F84  0E4E               	movlw	78
 13197  002F86  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13198  002F88  0E20               	movlw	32
 13199  002F8A  6E0F               	movwf	i2set_external_interrupt3@time,c
 13200  002F8C  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13201                           
 13202                           ;interrupt.c: 567: volt_check3 = 0;
 13203  002F90  0E00               	movlw	0
 13204  002F92  0101               	movlb	1	; () banked
 13205  002F94  6F51               	movwf	_volt_check3& (0+255),b	;volatile
 13206                           
 13207                           ; BSR set to: 1
 13208                           ;interrupt.c: 568: stage3 = 2;
 13209  002F96  0E02               	movlw	2
 13210  002F98  6E7B               	movwf	_stage3,c	;volatile
 13211                           
 13212                           ; BSR set to: 1
 13213                           ;interrupt.c: 569: return;
 13214  002F9A  0012               	return	
 13215  002F9C                     i2l7336:
 13216                           
 13217                           ;interrupt.c: 570: }
 13218                           ;interrupt.c: 572: if(stage3 == 2){
 13219  002F9C  0E02               	movlw	2
 13220  002F9E  187B               	xorwf	_stage3,w,c	;volatile
 13221  002FA0  A4D8               	btfss	status,2,c
 13222  002FA2  D09A               	goto	i2l7406
 13223                           
 13224                           ;interrupt.c: 574: if(volt_check3 == 0){
 13225  002FA4  0101               	movlb	1	; () banked
 13226  002FA6  5151               	movf	_volt_check3& (0+255),w,b	;volatile
 13227  002FA8  A4D8               	btfss	status,2,c
 13228  002FAA  D02E               	goto	i2l7358
 13229                           
 13230                           ; BSR set to: 1
 13231                           ;interrupt.c: 576: LATCbits.LATC5 = 1;
 13232  002FAC  8A8B               	bsf	3979,5,c	;volatile
 13233                           
 13234                           ; BSR set to: 1
 13235                           ;interrupt.c: 577: _delay((unsigned long)((500)*(8000000/4000.0)));
 13236  002FAE  0E06               	movlw	6
 13237  002FB0  6E66               	movwf	(??_servo_ISR_3+1)& (0+255),c
 13238  002FB2  0E13               	movlw	19
 13239  002FB4  6E65               	movwf	??_servo_ISR_3& (0+255),c
 13240  002FB6  0EAE               	movlw	174
 13241  002FB8                     i2u952_47:
 13242  002FB8  2EE8               	decfsz	wreg,f,c
 13243  002FBA  D7FE               	bra	i2u952_47
 13244  002FBC  2E65               	decfsz	??_servo_ISR_3& (0+255),f,c
 13245  002FBE  D7FC               	bra	i2u952_47
 13246  002FC0  2E66               	decfsz	(??_servo_ISR_3+1)& (0+255),f,c
 13247  002FC2  D7FA               	bra	i2u952_47
 13248                           
 13249                           ;interrupt.c: 579: voltage_C = readADC(5);
 13250  002FC4  0E05               	movlw	5
 13251  002FC6  ECA4  F024         	call	i2_readADC
 13252  002FCA  C03D  F133         	movff	?i2_readADC,_voltage_C	;volatile
 13253  002FCE  C03E  F134         	movff	?i2_readADC+1,_voltage_C+1	;volatile
 13254  002FD2  C03F  F135         	movff	?i2_readADC+2,_voltage_C+2	;volatile
 13255                           
 13256                           ;interrupt.c: 581: initLCD();
 13257  002FD6  ECF5  F02D         	call	i2_initLCD	;wreg free
 13258                           
 13259                           ;interrupt.c: 582: printf("c: %f", voltage_C);
 13260  002FDA  0EF3               	movlw	low STR_27
 13261  002FDC  6E40               	movwf	i2printf@f,c
 13262  002FDE  0EFC               	movlw	high STR_27
 13263  002FE0  6E41               	movwf	i2printf@f+1,c
 13264  002FE2  C133  F042         	movff	_voltage_C,?i2_printf+2	;volatile
 13265  002FE6  C134  F043         	movff	_voltage_C+1,?i2_printf+3	;volatile
 13266  002FEA  C135  F044         	movff	_voltage_C+2,?i2_printf+4	;volatile
 13267  002FEE  ECA6  F00C         	call	i2_printf	;wreg free
 13268                           
 13269                           ;interrupt.c: 584: volt_check3 = 1;
 13270  002FF2  0E01               	movlw	1
 13271  002FF4  0101               	movlb	1	; () banked
 13272  002FF6  6F51               	movwf	_volt_check3& (0+255),b	;volatile
 13273                           
 13274                           ; BSR set to: 1
 13275                           ;interrupt.c: 585: set_external_interrupt3(1000);
 13276  002FF8  0E03               	movlw	3
 13277  002FFA  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13278  002FFC  0EE8               	movlw	232
 13279  002FFE  6E0F               	movwf	i2set_external_interrupt3@time,c
 13280  003000  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13281                           
 13282                           ;interrupt.c: 587: LATCbits.LATC5 = 0;
 13283  003004  9A8B               	bcf	3979,5,c	;volatile
 13284                           
 13285                           ;interrupt.c: 589: return;
 13286  003006  0012               	return	
 13287  003008                     i2l7358:
 13288                           
 13289                           ;interrupt.c: 590: }
 13290                           ;interrupt.c: 592: if(voltage_C > 1.23){
 13291  003008  0E71               	movlw	113
 13292  00300A  6E01               	movwf	i2___ftge@ff1,c
 13293  00300C  0E9D               	movlw	157
 13294  00300E  6E02               	movwf	i2___ftge@ff1+1,c
 13295  003010  0E3F               	movlw	63
 13296  003012  6E03               	movwf	i2___ftge@ff1+2,c
 13297  003014  C133  F004         	movff	_voltage_C,i2___ftge@ff2	;volatile
 13298  003018  C134  F005         	movff	_voltage_C+1,i2___ftge@ff2+1	;volatile
 13299  00301C  C135  F006         	movff	_voltage_C+2,i2___ftge@ff2+2	;volatile
 13300  003020  EC19  F02A         	call	i2___ftge	;wreg free
 13301  003024  B0D8               	btfsc	status,0,c
 13302  003026  D00F               	goto	i2l7370
 13303                           
 13304                           ;interrupt.c: 593: stage3 = 4;
 13305  003028  0E04               	movlw	4
 13306  00302A  6E7B               	movwf	_stage3,c	;volatile
 13307                           
 13308                           ;interrupt.c: 594: count_C++;
 13309  00302C  0101               	movlb	1	; () banked
 13310  00302E  4B47               	infsnz	_count_C& (0+255),f,b	;volatile
 13311  003030  2B48               	incf	(_count_C+1)& (0+255),f,b	;volatile
 13312                           
 13313                           ; BSR set to: 1
 13314                           ;interrupt.c: 595: volt_check3 = 0;
 13315  003032  0E00               	movlw	0
 13316  003034  0101               	movlb	1	; () banked
 13317  003036  6F51               	movwf	_volt_check3& (0+255),b	;volatile
 13318                           
 13319                           ; BSR set to: 1
 13320                           ;interrupt.c: 596: set_external_interrupt3(1000);
 13321  003038  0E03               	movlw	3
 13322  00303A  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13323  00303C  0EE8               	movlw	232
 13324  00303E  6E0F               	movwf	i2set_external_interrupt3@time,c
 13325  003040  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13326                           
 13327                           ;interrupt.c: 597: return;
 13328  003044  0012               	return	
 13329  003046                     i2l7370:
 13330                           
 13331                           ;interrupt.c: 598: }
 13332                           ;interrupt.c: 600: if (count3 < 40){
 13333  003046  0101               	movlb	1	; () banked
 13334  003048  BF4E               	btfsc	(_count3+1)& (0+255),7,b	;volatile
 13335  00304A  D008               	goto	i2l7372
 13336  00304C  0101               	movlb	1	; () banked
 13337  00304E  514E               	movf	(_count3+1)& (0+255),w,b	;volatile
 13338  003050  E12C               	bnz	i2l7392
 13339  003052  0E28               	movlw	40
 13340  003054  0101               	movlb	1	; () banked
 13341  003056  5D4D               	subwf	_count3& (0+255),w,b	;volatile
 13342  003058  B0D8               	btfsc	status,0,c
 13343  00305A  D027               	goto	i2l7392
 13344  00305C                     i2l7372:
 13345                           
 13346                           ; BSR set to: 1
 13347                           ;interrupt.c: 601: if(current_state3 == 1){
 13348  00305C  047D               	decf	_current_state3,w,c	;volatile
 13349  00305E  A4D8               	btfss	status,2,c
 13350  003060  D00F               	goto	i2l7380
 13351                           
 13352                           ; BSR set to: 1
 13353                           ;interrupt.c: 603: current_state3 = 0;
 13354  003062  0E00               	movlw	0
 13355  003064  6E7D               	movwf	_current_state3,c	;volatile
 13356                           
 13357                           ;interrupt.c: 604: down_period3 = 20000;
 13358  003066  0E4E               	movlw	78
 13359  003068  0100               	movlb	0	; () banked
 13360  00306A  6FED               	movwf	(_down_period3+1)& (0+255),b	;volatile
 13361  00306C  0E20               	movlw	32
 13362  00306E  6FEC               	movwf	_down_period3& (0+255),b	;volatile
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;interrupt.c: 605: LATCbits.LATC2 = 0;
 13366  003070  948B               	bcf	3979,2,c	;volatile
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;interrupt.c: 606: set_external_interrupt3(down_period3);
 13370  003072  C0EC  F00F         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
 13371  003076  C0ED  F010         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
 13372  00307A  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13373                           
 13374                           ;interrupt.c: 608: }
 13375  00307E  D011               	goto	i2l7388
 13376  003080                     i2l7380:
 13377                           
 13378                           ;interrupt.c: 609: else if (current_state3 == 0){
 13379  003080  507D               	movf	_current_state3,w,c	;volatile
 13380  003082  A4D8               	btfss	status,2,c
 13381  003084  D00E               	goto	i2l7388
 13382                           
 13383                           ;interrupt.c: 611: current_state3 = 1;
 13384  003086  0E01               	movlw	1
 13385  003088  6E7D               	movwf	_current_state3,c	;volatile
 13386                           
 13387                           ;interrupt.c: 612: up_period3 = 900;
 13388  00308A  0E03               	movlw	3
 13389  00308C  0100               	movlb	0	; () banked
 13390  00308E  6FEF               	movwf	(_up_period3+1)& (0+255),b	;volatile
 13391  003090  0E84               	movlw	132
 13392  003092  6FEE               	movwf	_up_period3& (0+255),b	;volatile
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;interrupt.c: 613: LATCbits.LATC2 = 1;
 13396  003094  848B               	bsf	3979,2,c	;volatile
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;interrupt.c: 614: set_external_interrupt3(up_period3);
 13400  003096  C0EE  F00F         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
 13401  00309A  C0EF  F010         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
 13402  00309E  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13403  0030A2                     i2l7388:
 13404                           
 13405                           ;interrupt.c: 616: }
 13406                           ;interrupt.c: 617: count3++;
 13407  0030A2  0101               	movlb	1	; () banked
 13408  0030A4  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 13409  0030A6  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 13410                           
 13411                           ; BSR set to: 1
 13412                           ;interrupt.c: 618: return;
 13413  0030A8  0012               	return	
 13414  0030AA                     i2l7392:
 13415                           
 13416                           ; BSR set to: 1
 13417                           ;interrupt.c: 619: }
 13418                           ;interrupt.c: 620: count3 = 0;
 13419  0030AA  0E00               	movlw	0
 13420  0030AC  0101               	movlb	1	; () banked
 13421  0030AE  6F4E               	movwf	(_count3+1)& (0+255),b	;volatile
 13422  0030B0  0E00               	movlw	0
 13423  0030B2  6F4D               	movwf	_count3& (0+255),b	;volatile
 13424                           
 13425                           ;interrupt.c: 621: current_state3 = 0;
 13426  0030B4  0E00               	movlw	0
 13427  0030B6  6E7D               	movwf	_current_state3,c	;volatile
 13428                           
 13429                           ; BSR set to: 1
 13430                           ;interrupt.c: 622: LATCbits.LATC2 = 0;
 13431  0030B8  948B               	bcf	3979,2,c	;volatile
 13432                           
 13433                           ; BSR set to: 1
 13434                           ;interrupt.c: 623: set_external_interrupt3(20000);
 13435  0030BA  0E4E               	movlw	78
 13436  0030BC  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13437  0030BE  0E20               	movlw	32
 13438  0030C0  6E0F               	movwf	i2set_external_interrupt3@time,c
 13439  0030C2  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13440                           
 13441                           ;interrupt.c: 625: count_drained++;
 13442  0030C6  0101               	movlb	1	; () banked
 13443  0030C8  4B45               	infsnz	_count_drained& (0+255),f,b	;volatile
 13444  0030CA  2B46               	incf	(_count_drained+1)& (0+255),f,b	;volatile
 13445                           
 13446                           ; BSR set to: 1
 13447                           ;interrupt.c: 626: volt_check3 = 0;
 13448  0030CC  0E00               	movlw	0
 13449  0030CE  0101               	movlb	1	; () banked
 13450  0030D0  6F51               	movwf	_volt_check3& (0+255),b	;volatile
 13451                           
 13452                           ; BSR set to: 1
 13453                           ;interrupt.c: 627: stage3 = 3;
 13454  0030D2  0E03               	movlw	3
 13455  0030D4  6E7B               	movwf	_stage3,c	;volatile
 13456                           
 13457                           ; BSR set to: 1
 13458                           ;interrupt.c: 629: return;
 13459  0030D6  0012               	return	
 13460  0030D8                     i2l7406:
 13461                           
 13462                           ;interrupt.c: 630: }
 13463                           ;interrupt.c: 631: if(stage3 == 3){
 13464  0030D8  0E03               	movlw	3
 13465  0030DA  187B               	xorwf	_stage3,w,c	;volatile
 13466  0030DC  A4D8               	btfss	status,2,c
 13467  0030DE  D053               	goto	i2l7444
 13468                           
 13469                           ;interrupt.c: 632: if (count3 < 60){
 13470  0030E0  0101               	movlb	1	; () banked
 13471  0030E2  BF4E               	btfsc	(_count3+1)& (0+255),7,b	;volatile
 13472  0030E4  D008               	goto	i2l7410
 13473  0030E6  0101               	movlb	1	; () banked
 13474  0030E8  514E               	movf	(_count3+1)& (0+255),w,b	;volatile
 13475  0030EA  E12C               	bnz	i2l7430
 13476  0030EC  0E3C               	movlw	60
 13477  0030EE  0101               	movlb	1	; () banked
 13478  0030F0  5D4D               	subwf	_count3& (0+255),w,b	;volatile
 13479  0030F2  B0D8               	btfsc	status,0,c
 13480  0030F4  D027               	goto	i2l7430
 13481  0030F6                     i2l7410:
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;interrupt.c: 633: if(current_state3 == 1){
 13485  0030F6  047D               	decf	_current_state3,w,c	;volatile
 13486  0030F8  A4D8               	btfss	status,2,c
 13487  0030FA  D00F               	goto	i2l7418
 13488                           
 13489                           ; BSR set to: 1
 13490                           ;interrupt.c: 635: current_state3 = 0;
 13491  0030FC  0E00               	movlw	0
 13492  0030FE  6E7D               	movwf	_current_state3,c	;volatile
 13493                           
 13494                           ;interrupt.c: 636: down_period3 = 20000;
 13495  003100  0E4E               	movlw	78
 13496  003102  0100               	movlb	0	; () banked
 13497  003104  6FED               	movwf	(_down_period3+1)& (0+255),b	;volatile
 13498  003106  0E20               	movlw	32
 13499  003108  6FEC               	movwf	_down_period3& (0+255),b	;volatile
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;interrupt.c: 637: LATCbits.LATC2 = 0;
 13503  00310A  948B               	bcf	3979,2,c	;volatile
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;interrupt.c: 638: set_external_interrupt3(down_period3);
 13507  00310C  C0EC  F00F         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
 13508  003110  C0ED  F010         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
 13509  003114  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13510                           
 13511                           ;interrupt.c: 640: }
 13512  003118  D011               	goto	i2l7426
 13513  00311A                     i2l7418:
 13514                           
 13515                           ;interrupt.c: 641: else if (current_state3 == 0){
 13516  00311A  507D               	movf	_current_state3,w,c	;volatile
 13517  00311C  A4D8               	btfss	status,2,c
 13518  00311E  D00E               	goto	i2l7426
 13519                           
 13520                           ;interrupt.c: 643: current_state3 = 1;
 13521  003120  0E01               	movlw	1
 13522  003122  6E7D               	movwf	_current_state3,c	;volatile
 13523                           
 13524                           ;interrupt.c: 644: up_period3 = 2410;
 13525  003124  0E09               	movlw	9
 13526  003126  0100               	movlb	0	; () banked
 13527  003128  6FEF               	movwf	(_up_period3+1)& (0+255),b	;volatile
 13528  00312A  0E6A               	movlw	106
 13529  00312C  6FEE               	movwf	_up_period3& (0+255),b	;volatile
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;interrupt.c: 645: LATCbits.LATC2 = 1;
 13533  00312E  848B               	bsf	3979,2,c	;volatile
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;interrupt.c: 646: set_external_interrupt3(up_period3);
 13537  003130  C0EE  F00F         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
 13538  003134  C0EF  F010         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
 13539  003138  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13540  00313C                     i2l7426:
 13541                           
 13542                           ;interrupt.c: 648: }
 13543                           ;interrupt.c: 649: count3++;
 13544  00313C  0101               	movlb	1	; () banked
 13545  00313E  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 13546  003140  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 13547                           
 13548                           ; BSR set to: 1
 13549                           ;interrupt.c: 650: return;
 13550  003142  0012               	return	
 13551  003144                     i2l7430:
 13552                           
 13553                           ; BSR set to: 1
 13554                           ;interrupt.c: 651: }
 13555                           ;interrupt.c: 653: count3 = 0;
 13556  003144  0E00               	movlw	0
 13557  003146  0101               	movlb	1	; () banked
 13558  003148  6F4E               	movwf	(_count3+1)& (0+255),b	;volatile
 13559  00314A  0E00               	movlw	0
 13560  00314C  6F4D               	movwf	_count3& (0+255),b	;volatile
 13561                           
 13562                           ; BSR set to: 1
 13563                           ;interrupt.c: 654: LATCbits.LATC2 = 0;
 13564  00314E  948B               	bcf	3979,2,c	;volatile
 13565                           
 13566                           ;interrupt.c: 655: current_state3 = 0;
 13567  003150  0E00               	movlw	0
 13568  003152  6E7D               	movwf	_current_state3,c	;volatile
 13569                           
 13570                           ;interrupt.c: 656: stage3 = 1;
 13571  003154  0E01               	movlw	1
 13572  003156  6E7B               	movwf	_stage3,c	;volatile
 13573                           
 13574                           ;interrupt.c: 658: if(init3 == 0){
 13575  003158  0101               	movlb	1	; () banked
 13576  00315A  5154               	movf	_init3& (0+255),w,b	;volatile
 13577  00315C  A4D8               	btfss	status,2,c
 13578  00315E  D00C               	goto	i2l7440
 13579                           
 13580                           ; BSR set to: 1
 13581                           ;interrupt.c: 659: init3 = 1;
 13582  003160  0E01               	movlw	1
 13583  003162  0101               	movlb	1	; () banked
 13584  003164  6F54               	movwf	_init3& (0+255),b	;volatile
 13585                           
 13586                           ;interrupt.c: 660: process3 = 0;
 13587  003166  0E00               	movlw	0
 13588  003168  0101               	movlb	1	; () banked
 13589  00316A  6F4F               	movwf	_process3& (0+255),b	;volatile
 13590                           
 13591                           ; BSR set to: 1
 13592                           ;interrupt.c: 661: if(process1 == 1){
 13593  00316C  0101               	movlb	1	; () banked
 13594  00316E  0550               	decf	_process1& (0+255),w,b	;volatile
 13595  003170  A4D8               	btfss	status,2,c
 13596  003172  0012               	return	
 13597                           
 13598                           ; BSR set to: 1
 13599                           ;interrupt.c: 662: TMR1ON = 1;
 13600  003174  80CD               	bsf	4045,0,c	;volatile
 13601                           
 13602                           ; BSR set to: 1
 13603                           ;interrupt.c: 663: }
 13604                           ;interrupt.c: 664: return;
 13605  003176  0012               	return	
 13606  003178                     i2l7440:
 13607                           
 13608                           ; BSR set to: 1
 13609                           ;interrupt.c: 665: }
 13610                           ;interrupt.c: 667: set_external_interrupt3(20000);
 13611  003178  0E4E               	movlw	78
 13612  00317A  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13613  00317C  0E20               	movlw	32
 13614  00317E  6E0F               	movwf	i2set_external_interrupt3@time,c
 13615  003180  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13616                           
 13617                           ;interrupt.c: 668: return;
 13618  003184  0012               	return	
 13619  003186                     i2l7444:
 13620                           
 13621                           ;interrupt.c: 669: }
 13622                           ;interrupt.c: 670: if(stage3 == 4){
 13623  003186  0E04               	movlw	4
 13624  003188  187B               	xorwf	_stage3,w,c	;volatile
 13625  00318A  A4D8               	btfss	status,2,c
 13626  00318C  0012               	return	
 13627                           
 13628                           ;interrupt.c: 671: if(gate_status3 == 0){
 13629  00318E  0101               	movlb	1	; () banked
 13630  003190  5156               	movf	_gate_status3& (0+255),w,b	;volatile
 13631  003192  A4D8               	btfss	status,2,c
 13632  003194  D044               	goto	i2l7478
 13633                           
 13634                           ; BSR set to: 1
 13635                           ;interrupt.c: 672: if (count3 < 35){
 13636  003196  0101               	movlb	1	; () banked
 13637  003198  BF4E               	btfsc	(_count3+1)& (0+255),7,b	;volatile
 13638  00319A  D008               	goto	i2l7450
 13639  00319C  0101               	movlb	1	; () banked
 13640  00319E  514E               	movf	(_count3+1)& (0+255),w,b	;volatile
 13641  0031A0  E12C               	bnz	i2l7470
 13642  0031A2  0E23               	movlw	35
 13643  0031A4  0101               	movlb	1	; () banked
 13644  0031A6  5D4D               	subwf	_count3& (0+255),w,b	;volatile
 13645  0031A8  B0D8               	btfsc	status,0,c
 13646  0031AA  D027               	goto	i2l7470
 13647  0031AC                     i2l7450:
 13648                           
 13649                           ; BSR set to: 1
 13650                           ;interrupt.c: 673: if(current_state3 == 1){
 13651  0031AC  047D               	decf	_current_state3,w,c	;volatile
 13652  0031AE  A4D8               	btfss	status,2,c
 13653  0031B0  D00F               	goto	i2l7458
 13654                           
 13655                           ; BSR set to: 1
 13656                           ;interrupt.c: 675: current_state3 = 0;
 13657  0031B2  0E00               	movlw	0
 13658  0031B4  6E7D               	movwf	_current_state3,c	;volatile
 13659                           
 13660                           ;interrupt.c: 676: down_period3 = 20000;
 13661  0031B6  0E4E               	movlw	78
 13662  0031B8  0100               	movlb	0	; () banked
 13663  0031BA  6FED               	movwf	(_down_period3+1)& (0+255),b	;volatile
 13664  0031BC  0E20               	movlw	32
 13665  0031BE  6FEC               	movwf	_down_period3& (0+255),b	;volatile
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;interrupt.c: 677: LATCbits.LATC7 = 0;
 13669  0031C0  9E8B               	bcf	3979,7,c	;volatile
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;interrupt.c: 678: set_external_interrupt3(down_period3);
 13673  0031C2  C0EC  F00F         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
 13674  0031C6  C0ED  F010         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
 13675  0031CA  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13676                           
 13677                           ;interrupt.c: 680: }
 13678  0031CE  D011               	goto	i2l7466
 13679  0031D0                     i2l7458:
 13680                           
 13681                           ;interrupt.c: 681: else if (current_state3 == 0){
 13682  0031D0  507D               	movf	_current_state3,w,c	;volatile
 13683  0031D2  A4D8               	btfss	status,2,c
 13684  0031D4  D00E               	goto	i2l7466
 13685                           
 13686                           ;interrupt.c: 683: current_state3 = 1;
 13687  0031D6  0E01               	movlw	1
 13688  0031D8  6E7D               	movwf	_current_state3,c	;volatile
 13689                           
 13690                           ;interrupt.c: 684: up_period3 = 2000;
 13691  0031DA  0E07               	movlw	7
 13692  0031DC  0100               	movlb	0	; () banked
 13693  0031DE  6FEF               	movwf	(_up_period3+1)& (0+255),b	;volatile
 13694  0031E0  0ED0               	movlw	208
 13695  0031E2  6FEE               	movwf	_up_period3& (0+255),b	;volatile
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;interrupt.c: 685: LATCbits.LATC7 = 1;
 13699  0031E4  8E8B               	bsf	3979,7,c	;volatile
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;interrupt.c: 686: set_external_interrupt3(up_period3);
 13703  0031E6  C0EE  F00F         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
 13704  0031EA  C0EF  F010         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
 13705  0031EE  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13706  0031F2                     i2l7466:
 13707                           
 13708                           ;interrupt.c: 688: }
 13709                           ;interrupt.c: 689: count3++;
 13710  0031F2  0101               	movlb	1	; () banked
 13711  0031F4  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 13712  0031F6  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 13713                           
 13714                           ; BSR set to: 1
 13715                           ;interrupt.c: 690: return;
 13716  0031F8  0012               	return	
 13717  0031FA                     i2l7470:
 13718                           
 13719                           ; BSR set to: 1
 13720                           ;interrupt.c: 691: }
 13721                           ;interrupt.c: 692: gate_status3 = 1;
 13722  0031FA  0E01               	movlw	1
 13723  0031FC  0101               	movlb	1	; () banked
 13724  0031FE  6F56               	movwf	_gate_status3& (0+255),b	;volatile
 13725                           
 13726                           ;interrupt.c: 693: count3 = 0;
 13727  003200  0E00               	movlw	0
 13728  003202  0101               	movlb	1	; () banked
 13729  003204  6F4E               	movwf	(_count3+1)& (0+255),b	;volatile
 13730  003206  0E00               	movlw	0
 13731  003208  6F4D               	movwf	_count3& (0+255),b	;volatile
 13732                           
 13733                           ; BSR set to: 1
 13734                           ;interrupt.c: 694: LATCbits.LATC7 = 0;
 13735  00320A  9E8B               	bcf	3979,7,c	;volatile
 13736                           
 13737                           ;interrupt.c: 695: current_state3 = 0;
 13738  00320C  0E00               	movlw	0
 13739  00320E  6E7D               	movwf	_current_state3,c	;volatile
 13740                           
 13741                           ; BSR set to: 1
 13742                           ;interrupt.c: 696: set_external_interrupt3(20000);
 13743  003210  0E4E               	movlw	78
 13744  003212  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13745  003214  0E20               	movlw	32
 13746  003216  6E0F               	movwf	i2set_external_interrupt3@time,c
 13747  003218  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13748                           
 13749                           ;interrupt.c: 697: return;
 13750  00321C  0012               	return	
 13751  00321E                     i2l7478:
 13752                           
 13753                           ;interrupt.c: 698: }
 13754                           ;interrupt.c: 699: if(gate_status3 == 1){
 13755  00321E  0101               	movlb	1	; () banked
 13756  003220  0556               	decf	_gate_status3& (0+255),w,b	;volatile
 13757  003222  A4D8               	btfss	status,2,c
 13758  003224  0012               	return	
 13759                           
 13760                           ; BSR set to: 1
 13761                           ;interrupt.c: 700: if (count3 < 35){
 13762  003226  0101               	movlb	1	; () banked
 13763  003228  BF4E               	btfsc	(_count3+1)& (0+255),7,b	;volatile
 13764  00322A  D008               	goto	i2l7482
 13765  00322C  0101               	movlb	1	; () banked
 13766  00322E  514E               	movf	(_count3+1)& (0+255),w,b	;volatile
 13767  003230  E12C               	bnz	i2l7502
 13768  003232  0E23               	movlw	35
 13769  003234  0101               	movlb	1	; () banked
 13770  003236  5D4D               	subwf	_count3& (0+255),w,b	;volatile
 13771  003238  B0D8               	btfsc	status,0,c
 13772  00323A  D027               	goto	i2l7502
 13773  00323C                     i2l7482:
 13774                           
 13775                           ; BSR set to: 1
 13776                           ;interrupt.c: 701: if(current_state3 == 1){
 13777  00323C  047D               	decf	_current_state3,w,c	;volatile
 13778  00323E  A4D8               	btfss	status,2,c
 13779  003240  D00F               	goto	i2l7490
 13780                           
 13781                           ; BSR set to: 1
 13782                           ;interrupt.c: 703: current_state3 = 0;
 13783  003242  0E00               	movlw	0
 13784  003244  6E7D               	movwf	_current_state3,c	;volatile
 13785                           
 13786                           ;interrupt.c: 704: down_period3 = 20000;
 13787  003246  0E4E               	movlw	78
 13788  003248  0100               	movlb	0	; () banked
 13789  00324A  6FED               	movwf	(_down_period3+1)& (0+255),b	;volatile
 13790  00324C  0E20               	movlw	32
 13791  00324E  6FEC               	movwf	_down_period3& (0+255),b	;volatile
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;interrupt.c: 705: LATCbits.LATC7 = 0;
 13795  003250  9E8B               	bcf	3979,7,c	;volatile
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;interrupt.c: 706: set_external_interrupt3(down_period3);
 13799  003252  C0EC  F00F         	movff	_down_period3,i2set_external_interrupt3@time	;volatile
 13800  003256  C0ED  F010         	movff	_down_period3+1,i2set_external_interrupt3@time+1	;volatile
 13801  00325A  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13802                           
 13803                           ;interrupt.c: 708: }
 13804  00325E  D011               	goto	i2l7498
 13805  003260                     i2l7490:
 13806                           
 13807                           ;interrupt.c: 709: else if (current_state3 == 0){
 13808  003260  507D               	movf	_current_state3,w,c	;volatile
 13809  003262  A4D8               	btfss	status,2,c
 13810  003264  D00E               	goto	i2l7498
 13811                           
 13812                           ;interrupt.c: 711: current_state3 = 1;
 13813  003266  0E01               	movlw	1
 13814  003268  6E7D               	movwf	_current_state3,c	;volatile
 13815                           
 13816                           ;interrupt.c: 712: up_period3 = 3200;
 13817  00326A  0E0C               	movlw	12
 13818  00326C  0100               	movlb	0	; () banked
 13819  00326E  6FEF               	movwf	(_up_period3+1)& (0+255),b	;volatile
 13820  003270  0E80               	movlw	128
 13821  003272  6FEE               	movwf	_up_period3& (0+255),b	;volatile
 13822                           
 13823                           ; BSR set to: 0
 13824                           ;interrupt.c: 713: LATCbits.LATC7 = 1;
 13825  003274  8E8B               	bsf	3979,7,c	;volatile
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;interrupt.c: 714: set_external_interrupt3(up_period3);
 13829  003276  C0EE  F00F         	movff	_up_period3,i2set_external_interrupt3@time	;volatile
 13830  00327A  C0EF  F010         	movff	_up_period3+1,i2set_external_interrupt3@time+1	;volatile
 13831  00327E  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13832  003282                     i2l7498:
 13833                           
 13834                           ;interrupt.c: 716: }
 13835                           ;interrupt.c: 717: count3++;
 13836  003282  0101               	movlb	1	; () banked
 13837  003284  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 13838  003286  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 13839                           
 13840                           ; BSR set to: 1
 13841                           ;interrupt.c: 718: return;
 13842  003288  0012               	return	
 13843  00328A                     i2l7502:
 13844                           
 13845                           ; BSR set to: 1
 13846                           ;interrupt.c: 719: }
 13847                           ;interrupt.c: 720: gate_status3 = 0;
 13848  00328A  0E00               	movlw	0
 13849  00328C  0101               	movlb	1	; () banked
 13850  00328E  6F56               	movwf	_gate_status3& (0+255),b	;volatile
 13851                           
 13852                           ;interrupt.c: 721: count3 = 0;
 13853  003290  0E00               	movlw	0
 13854  003292  0101               	movlb	1	; () banked
 13855  003294  6F4E               	movwf	(_count3+1)& (0+255),b	;volatile
 13856  003296  0E00               	movlw	0
 13857  003298  6F4D               	movwf	_count3& (0+255),b	;volatile
 13858                           
 13859                           ; BSR set to: 1
 13860                           ;interrupt.c: 722: LATCbits.LATC7 = 0;
 13861  00329A  9E8B               	bcf	3979,7,c	;volatile
 13862                           
 13863                           ;interrupt.c: 723: current_state3 = 0;
 13864  00329C  0E00               	movlw	0
 13865  00329E  6E7D               	movwf	_current_state3,c	;volatile
 13866                           
 13867                           ;interrupt.c: 724: stage3 = 3;
 13868  0032A0  0E03               	movlw	3
 13869  0032A2  6E7B               	movwf	_stage3,c	;volatile
 13870                           
 13871                           ; BSR set to: 1
 13872                           ;interrupt.c: 725: set_external_interrupt3(20000);
 13873  0032A4  0E4E               	movlw	78
 13874  0032A6  6E10               	movwf	i2set_external_interrupt3@time+1,c
 13875  0032A8  0E20               	movlw	32
 13876  0032AA  6E0F               	movwf	i2set_external_interrupt3@time,c
 13877  0032AC  ECFD  F02C         	call	i2_set_external_interrupt3	;wreg free
 13878                           
 13879                           ;interrupt.c: 726: return;
 13880  0032B0  0012               	return	
 13881  0032B2                     __end_of_servo_ISR_3:
 13882                           	opt stack 0
 13883                           pclatu	equ	0xFFB
 13884                           pclath	equ	0xFFA
 13885                           tblptru	equ	0xFF8
 13886                           tblptrh	equ	0xFF7
 13887                           tblptrl	equ	0xFF6
 13888                           tablat	equ	0xFF5
 13889                           prodh	equ	0xFF4
 13890                           prodl	equ	0xFF3
 13891                           intcon	equ	0xFF2
 13892                           intcon2	equ	0xFF1
 13893                           postinc0	equ	0xFEE
 13894                           fsr0h	equ	0xFEA
 13895                           fsr0l	equ	0xFE9
 13896                           wreg	equ	0xFE8
 13897                           fsr1h	equ	0xFE2
 13898                           fsr1l	equ	0xFE1
 13899                           indf2	equ	0xFDF
 13900                           postinc2	equ	0xFDE
 13901                           postdec2	equ	0xFDD
 13902                           fsr2h	equ	0xFDA
 13903                           fsr2l	equ	0xFD9
 13904                           status	equ	0xFD8
 13905                           
 13906 ;; *************** function i2_set_external_interrupt3 *****************
 13907 ;; Defined at:
 13908 ;;		line 109 in file "interrupt.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;  time            2   14[COMRAM] int 
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;  set_external    2   16[COMRAM] unsigned int 
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  1    wreg      void 
 13915 ;; Registers used:
 13916 ;;		wreg, status,2, status,0, cstack
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;Total ram usage:        4 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    1
 13929 ;; This function calls:
 13930 ;;		i2___awdiv
 13931 ;; This function is called by:
 13932 ;;		_servo_ISR_3
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text42
 13937  0059FA                     __ptext42:
 13938                           	opt stack 0
 13939  0059FA                     i2_set_external_interrupt3:
 13940                           	opt stack 23
 13941                           
 13942                           ;interrupt.c: 111: unsigned int set_time = 65535 - (time*2/4);
 13943                           
 13944                           ;incstack = 0
 13945  0059FA  90D8               	bcf	status,0,c
 13946  0059FC  340F               	rlcf	i2set_external_interrupt3@time,w,c
 13947  0059FE  6E07               	movwf	i2___awdiv@dividend,c
 13948  005A00  3410               	rlcf	i2set_external_interrupt3@time+1,w,c
 13949  005A02  6E08               	movwf	i2___awdiv@dividend+1,c
 13950  005A04  0E00               	movlw	0
 13951  005A06  6E0A               	movwf	i2___awdiv@divisor+1,c
 13952  005A08  0E04               	movlw	4
 13953  005A0A  6E09               	movwf	i2___awdiv@divisor,c
 13954  005A0C  EC61  F02A         	call	i2___awdiv	;wreg free
 13955  005A10  1E07               	comf	?i2___awdiv,f,c
 13956  005A12  1E08               	comf	?i2___awdiv+1,f,c
 13957  005A14  4A07               	infsnz	?i2___awdiv,f,c
 13958  005A16  2A08               	incf	?i2___awdiv+1,f,c
 13959  005A18  0EFF               	movlw	255
 13960  005A1A  2407               	addwf	?i2___awdiv,w,c
 13961  005A1C  6E11               	movwf	i2set_external_interrupt3@set_time,c
 13962  005A1E  0EFF               	movlw	255
 13963  005A20  2008               	addwfc	?i2___awdiv+1,w,c
 13964  005A22  6E12               	movwf	i2set_external_interrupt3@set_time+1,c
 13965                           
 13966                           ;interrupt.c: 113: TMR3H = set_time >> 8;
 13967  005A24  5012               	movf	i2set_external_interrupt3@set_time+1,w,c
 13968  005A26  6EB3               	movwf	4019,c	;volatile
 13969                           
 13970                           ;interrupt.c: 114: TMR3L = set_time & 0b11111111;
 13971  005A28  C011  FFB2         	movff	i2set_external_interrupt3@set_time,4018	;volatile
 13972                           
 13973                           ;interrupt.c: 116: TMR3ON = 1;
 13974  005A2C  80B1               	bsf	4017,0,c	;volatile
 13975                           
 13976                           ;interrupt.c: 117: if(isr1 == 1){
 13977  005A2E  0100               	movlb	0	; () banked
 13978  005A30  05F1               	decf	_isr1& (0+255),w,b	;volatile
 13979  005A32  A4D8               	btfss	status,2,c
 13980  005A34  D008               	goto	i2l6082
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;interrupt.c: 119: set_time = 65535 - (20000*2/4);
 13984  005A36  0E18               	movlw	24
 13985  005A38  6E12               	movwf	i2set_external_interrupt3@set_time+1,c
 13986  005A3A  0EEF               	movlw	239
 13987  005A3C  6E11               	movwf	i2set_external_interrupt3@set_time,c
 13988                           
 13989                           ;interrupt.c: 121: TMR1H = set_time >> 8;
 13990  005A3E  5012               	movf	i2set_external_interrupt3@set_time+1,w,c
 13991  005A40  6ECF               	movwf	4047,c	;volatile
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;interrupt.c: 122: TMR1L = set_time & 0b11111111;
 13995  005A42  C011  FFCE         	movff	i2set_external_interrupt3@set_time,4046	;volatile
 13996  005A46                     i2l6082:
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;interrupt.c: 124: }
 14000                           ;interrupt.c: 126: if(process1 == 1){
 14001  005A46  0101               	movlb	1	; () banked
 14002  005A48  0550               	decf	_process1& (0+255),w,b	;volatile
 14003  005A4A  A4D8               	btfss	status,2,c
 14004  005A4C  0012               	return	
 14005                           
 14006                           ; BSR set to: 1
 14007                           ;interrupt.c: 127: TMR1ON = 1;
 14008  005A4E  80CD               	bsf	4045,0,c	;volatile
 14009  005A50  0012               	return	
 14010  005A52                     __end_ofi2_set_external_interrupt3:
 14011                           	opt stack 0
 14012                           pclatu	equ	0xFFB
 14013                           pclath	equ	0xFFA
 14014                           tblptru	equ	0xFF8
 14015                           tblptrh	equ	0xFF7
 14016                           tblptrl	equ	0xFF6
 14017                           tablat	equ	0xFF5
 14018                           prodh	equ	0xFF4
 14019                           prodl	equ	0xFF3
 14020                           intcon	equ	0xFF2
 14021                           intcon2	equ	0xFF1
 14022                           postinc0	equ	0xFEE
 14023                           fsr0h	equ	0xFEA
 14024                           fsr0l	equ	0xFE9
 14025                           wreg	equ	0xFE8
 14026                           fsr1h	equ	0xFE2
 14027                           fsr1l	equ	0xFE1
 14028                           indf2	equ	0xFDF
 14029                           postinc2	equ	0xFDE
 14030                           postdec2	equ	0xFDD
 14031                           fsr2h	equ	0xFDA
 14032                           fsr2l	equ	0xFD9
 14033                           status	equ	0xFD8
 14034                           
 14035 ;; *************** function _servo_ISR_1 *****************
 14036 ;; Defined at:
 14037 ;;		line 132 in file "interrupt.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;		None
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;		None
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  1    wreg      void 
 14044 ;; Registers used:
 14045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14055 ;;Total ram usage:        2 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:    4
 14058 ;; This function calls:
 14059 ;;		i2___ftge
 14060 ;;		i2___ftmul
 14061 ;;		i2_initLCD
 14062 ;;		i2_printf
 14063 ;;		i2_readADC
 14064 ;;		i2_set_external_interrupt1
 14065 ;; This function is called by:
 14066 ;;		_IRQ
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text43
 14071  002302                     __ptext43:
 14072                           	opt stack 0
 14073  002302                     _servo_ISR_1:
 14074                           	opt stack 21
 14075                           
 14076                           ;interrupt.c: 133: TMR1IF = 0;
 14077                           
 14078                           ; BSR set to: 1
 14079                           ;incstack = 0
 14080  002302  909E               	bcf	3998,0,c	;volatile
 14081                           
 14082                           ;interrupt.c: 135: if(LATCbits.LATC2 == 1){
 14083  002304  A48B               	btfss	3979,2,c	;volatile
 14084  002306  D00E               	goto	i2l6884
 14085                           
 14086                           ;interrupt.c: 136: TMR3ON = 1;
 14087  002308  80B1               	bsf	4017,0,c	;volatile
 14088  00230A                     i2l363:
 14089  00230A  A2A1               	btfss	4001,1,c	;volatile
 14090  00230C  D7FE               	goto	i2l363
 14091                           
 14092                           ;interrupt.c: 139: }
 14093                           ;interrupt.c: 140: TMR3IF = 0;
 14094  00230E  92A1               	bcf	4001,1,c	;volatile
 14095                           
 14096                           ;interrupt.c: 141: TMR3ON = 0;
 14097  002310  90B1               	bcf	4017,0,c	;volatile
 14098                           
 14099                           ;interrupt.c: 142: count3++;
 14100  002312  0101               	movlb	1	; () banked
 14101  002314  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 14102  002316  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 14103                           
 14104                           ; BSR set to: 1
 14105                           ;interrupt.c: 143: current_state3 = 0;
 14106  002318  0E00               	movlw	0
 14107  00231A  6E7D               	movwf	_current_state3,c	;volatile
 14108                           
 14109                           ; BSR set to: 1
 14110                           ;interrupt.c: 144: isr3 = 1;
 14111  00231C  0E01               	movlw	1
 14112  00231E  0100               	movlb	0	; () banked
 14113  002320  6FF0               	movwf	_isr3& (0+255),b	;volatile
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;interrupt.c: 145: LATCbits.LATC2 = 0;
 14117  002322  948B               	bcf	3979,2,c	;volatile
 14118  002324                     i2l6884:
 14119                           
 14120                           ;interrupt.c: 146: }
 14121                           ;interrupt.c: 148: if(LATCbits.LATC7 == 1){
 14122  002324  AE8B               	btfss	3979,7,c	;volatile
 14123  002326  D00E               	goto	i2l6896
 14124                           
 14125                           ;interrupt.c: 149: TMR3ON = 1;
 14126  002328  80B1               	bsf	4017,0,c	;volatile
 14127  00232A                     i2l367:
 14128  00232A  A2A1               	btfss	4001,1,c	;volatile
 14129  00232C  D7FE               	goto	i2l367
 14130                           
 14131                           ;interrupt.c: 152: }
 14132                           ;interrupt.c: 153: TMR3IF = 0;
 14133  00232E  92A1               	bcf	4001,1,c	;volatile
 14134                           
 14135                           ;interrupt.c: 154: TMR3ON = 0;
 14136  002330  90B1               	bcf	4017,0,c	;volatile
 14137                           
 14138                           ;interrupt.c: 155: count3++;
 14139  002332  0101               	movlb	1	; () banked
 14140  002334  4B4D               	infsnz	_count3& (0+255),f,b	;volatile
 14141  002336  2B4E               	incf	(_count3+1)& (0+255),f,b	;volatile
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;interrupt.c: 156: current_state3 = 0;
 14145  002338  0E00               	movlw	0
 14146  00233A  6E7D               	movwf	_current_state3,c	;volatile
 14147                           
 14148                           ; BSR set to: 1
 14149                           ;interrupt.c: 157: isr3 = 1;
 14150  00233C  0E01               	movlw	1
 14151  00233E  0100               	movlb	0	; () banked
 14152  002340  6FF0               	movwf	_isr3& (0+255),b	;volatile
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;interrupt.c: 158: LATCbits.LATC7 = 0;
 14156  002342  9E8B               	bcf	3979,7,c	;volatile
 14157  002344                     i2l6896:
 14158                           
 14159                           ;interrupt.c: 159: }
 14160                           ;interrupt.c: 161: if(stage1 == 1){
 14161  002344  047C               	decf	_stage1,w,c	;volatile
 14162  002346  A4D8               	btfss	status,2,c
 14163  002348  D07A               	goto	i2l6954
 14164                           
 14165                           ;interrupt.c: 163: if(volt_check1 == 0){
 14166  00234A  0101               	movlb	1	; () banked
 14167  00234C  5152               	movf	_volt_check1& (0+255),w,b	;volatile
 14168  00234E  A4D8               	btfss	status,2,c
 14169  002350  D02F               	goto	i2l6916
 14170                           
 14171                           ; BSR set to: 1
 14172                           ;interrupt.c: 165: voltage_3 = readADC(3);
 14173  002352  0E03               	movlw	3
 14174  002354  ECA4  F024         	call	i2_readADC
 14175  002358  C03D  F13F         	movff	?i2_readADC,_voltage_3	;volatile
 14176  00235C  C03E  F140         	movff	?i2_readADC+1,_voltage_3+1	;volatile
 14177  002360  C03F  F141         	movff	?i2_readADC+2,_voltage_3+2	;volatile
 14178                           
 14179                           ;interrupt.c: 167: volt_check1 = 1;
 14180  002364  0E01               	movlw	1
 14181  002366  0101               	movlb	1	; () banked
 14182  002368  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14183                           
 14184                           ; BSR set to: 1
 14185                           ;interrupt.c: 168: if(voltage_3 > 3.5){
 14186  00236A  0E00               	movlw	0
 14187  00236C  6E01               	movwf	i2___ftge@ff1,c
 14188  00236E  0E60               	movlw	96
 14189  002370  6E02               	movwf	i2___ftge@ff1+1,c
 14190  002372  0E40               	movlw	64
 14191  002374  6E03               	movwf	i2___ftge@ff1+2,c
 14192  002376  C13F  F004         	movff	_voltage_3,i2___ftge@ff2	;volatile
 14193  00237A  C140  F005         	movff	_voltage_3+1,i2___ftge@ff2+1	;volatile
 14194  00237E  C141  F006         	movff	_voltage_3+2,i2___ftge@ff2+2	;volatile
 14195  002382  EC19  F02A         	call	i2___ftge	;wreg free
 14196  002386  B0D8               	btfsc	status,0,c
 14197  002388  D00C               	goto	i2l6912
 14198                           
 14199                           ;interrupt.c: 169: process1 = 0;
 14200  00238A  0E00               	movlw	0
 14201  00238C  0101               	movlb	1	; () banked
 14202  00238E  6F50               	movwf	_process1& (0+255),b	;volatile
 14203                           
 14204                           ;interrupt.c: 170: volt_check1 = 0;
 14205  002390  0E00               	movlw	0
 14206  002392  0101               	movlb	1	; () banked
 14207  002394  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14208                           
 14209                           ; BSR set to: 1
 14210                           ;interrupt.c: 171: if(process3 == 1){
 14211  002396  0101               	movlb	1	; () banked
 14212  002398  054F               	decf	_process3& (0+255),w,b	;volatile
 14213  00239A  A4D8               	btfss	status,2,c
 14214  00239C  0012               	return	
 14215                           
 14216                           ; BSR set to: 1
 14217                           ;interrupt.c: 172: TMR3ON = 1;
 14218  00239E  80B1               	bsf	4017,0,c	;volatile
 14219                           
 14220                           ; BSR set to: 1
 14221                           ;interrupt.c: 173: }
 14222                           ;interrupt.c: 174: return;
 14223  0023A0  0012               	return	
 14224  0023A2                     i2l6912:
 14225                           
 14226                           ;interrupt.c: 175: }
 14227                           ;interrupt.c: 176: set_external_interrupt1(1000);
 14228  0023A2  0E03               	movlw	3
 14229  0023A4  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14230  0023A6  0EE8               	movlw	232
 14231  0023A8  6E0F               	movwf	i2set_external_interrupt1@time,c
 14232  0023AA  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14233                           
 14234                           ;interrupt.c: 177: return;
 14235  0023AE  0012               	return	
 14236  0023B0                     i2l6916:
 14237                           
 14238                           ;interrupt.c: 178: }
 14239                           ;interrupt.c: 180: if (count1 < 40){
 14240  0023B0  BE76               	btfsc	_count1+1,7,c	;volatile
 14241  0023B2  D006               	goto	i2l6918
 14242  0023B4  5076               	movf	_count1+1,w,c	;volatile
 14243  0023B6  E130               	bnz	i2l6942
 14244  0023B8  0E28               	movlw	40
 14245  0023BA  5C75               	subwf	_count1,w,c	;volatile
 14246  0023BC  B0D8               	btfsc	status,0,c
 14247  0023BE  D02C               	goto	i2l6942
 14248  0023C0                     i2l6918:
 14249                           
 14250                           ;interrupt.c: 181: if(current_state1 == 1){
 14251  0023C0  047E               	decf	_current_state1,w,c	;volatile
 14252  0023C2  A4D8               	btfss	status,2,c
 14253  0023C4  D00E               	goto	i2l6926
 14254                           
 14255                           ;interrupt.c: 183: current_state1 = 0;
 14256  0023C6  0E00               	movlw	0
 14257  0023C8  6E7E               	movwf	_current_state1,c	;volatile
 14258                           
 14259                           ;interrupt.c: 184: down_period1 = 20000;
 14260  0023CA  0E4E               	movlw	78
 14261  0023CC  6E78               	movwf	_down_period1+1,c	;volatile
 14262  0023CE  0E20               	movlw	32
 14263  0023D0  6E77               	movwf	_down_period1,c	;volatile
 14264                           
 14265                           ;interrupt.c: 185: LATCbits.LATC1 = 0;
 14266  0023D2  928B               	bcf	3979,1,c	;volatile
 14267                           
 14268                           ;interrupt.c: 186: set_external_interrupt1(down_period1);
 14269  0023D4  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 14270  0023D8  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 14271  0023DC  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14272                           
 14273                           ;interrupt.c: 188: }
 14274  0023E0  D018               	goto	i2l6938
 14275  0023E2                     i2l6926:
 14276                           
 14277                           ;interrupt.c: 189: else if (current_state1 == 0){
 14278  0023E2  507E               	movf	_current_state1,w,c	;volatile
 14279  0023E4  A4D8               	btfss	status,2,c
 14280  0023E6  D015               	goto	i2l6938
 14281                           
 14282                           ;interrupt.c: 191: current_state1 = 1;
 14283  0023E8  0E01               	movlw	1
 14284  0023EA  6E7E               	movwf	_current_state1,c	;volatile
 14285                           
 14286                           ;interrupt.c: 192: up_period1 = 1415;
 14287  0023EC  0E05               	movlw	5
 14288  0023EE  6E7A               	movwf	_up_period1+1,c	;volatile
 14289  0023F0  0E87               	movlw	135
 14290  0023F2  6E79               	movwf	_up_period1,c	;volatile
 14291                           
 14292                           ;interrupt.c: 193: if(process3 == 1){
 14293  0023F4  0101               	movlb	1	; () banked
 14294  0023F6  054F               	decf	_process3& (0+255),w,b	;volatile
 14295  0023F8  A4D8               	btfss	status,2,c
 14296  0023FA  D004               	goto	i2l6934
 14297                           
 14298                           ; BSR set to: 1
 14299                           ;interrupt.c: 194: up_period1 = 1445;
 14300  0023FC  0E05               	movlw	5
 14301  0023FE  6E7A               	movwf	_up_period1+1,c	;volatile
 14302  002400  0EA5               	movlw	165
 14303  002402  6E79               	movwf	_up_period1,c	;volatile
 14304  002404                     i2l6934:
 14305                           
 14306                           ; BSR set to: 1
 14307                           ;interrupt.c: 195: }
 14308                           ;interrupt.c: 196: LATCbits.LATC1 = 1;
 14309  002404  828B               	bsf	3979,1,c	;volatile
 14310                           
 14311                           ; BSR set to: 1
 14312                           ;interrupt.c: 197: set_external_interrupt1(up_period1);
 14313  002406  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 14314  00240A  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 14315  00240E  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14316  002412                     i2l6938:
 14317                           
 14318                           ;interrupt.c: 199: }
 14319                           ;interrupt.c: 200: count1++;
 14320  002412  4A75               	infsnz	_count1,f,c	;volatile
 14321  002414  2A76               	incf	_count1+1,f,c	;volatile
 14322                           
 14323                           ;interrupt.c: 201: return;
 14324  002416  0012               	return	
 14325  002418                     i2l6942:
 14326                           
 14327                           ;interrupt.c: 202: }
 14328                           ;interrupt.c: 204: count1 = 0;
 14329  002418  0E00               	movlw	0
 14330  00241A  6E76               	movwf	_count1+1,c	;volatile
 14331  00241C  0E00               	movlw	0
 14332  00241E  6E75               	movwf	_count1,c	;volatile
 14333                           
 14334                           ;interrupt.c: 205: LATCbits.LATC1 = 0;
 14335  002420  928B               	bcf	3979,1,c	;volatile
 14336                           
 14337                           ;interrupt.c: 206: current_state1 = 0;
 14338  002422  0E00               	movlw	0
 14339  002424  6E7E               	movwf	_current_state1,c	;volatile
 14340                           
 14341                           ;interrupt.c: 207: set_external_interrupt1(20000);
 14342  002426  0E4E               	movlw	78
 14343  002428  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14344  00242A  0E20               	movlw	32
 14345  00242C  6E0F               	movwf	i2set_external_interrupt1@time,c
 14346  00242E  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14347                           
 14348                           ;interrupt.c: 208: volt_check1 = 0;
 14349  002432  0E00               	movlw	0
 14350  002434  0101               	movlb	1	; () banked
 14351  002436  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14352                           
 14353                           ; BSR set to: 1
 14354                           ;interrupt.c: 209: stage1 = 2;
 14355  002438  0E02               	movlw	2
 14356  00243A  6E7C               	movwf	_stage1,c	;volatile
 14357                           
 14358                           ; BSR set to: 1
 14359                           ;interrupt.c: 210: return;
 14360  00243C  0012               	return	
 14361  00243E                     i2l6954:
 14362                           
 14363                           ;interrupt.c: 211: }
 14364                           ;interrupt.c: 213: if(stage1 == 2){
 14365  00243E  0E02               	movlw	2
 14366  002440  187C               	xorwf	_stage1,w,c	;volatile
 14367  002442  A4D8               	btfss	status,2,c
 14368  002444  D1C9               	goto	i2l7140
 14369                           
 14370                           ;interrupt.c: 215: if(volt_check1 == 0){
 14371  002446  0101               	movlb	1	; () banked
 14372  002448  5152               	movf	_volt_check1& (0+255),w,b	;volatile
 14373  00244A  A4D8               	btfss	status,2,c
 14374  00244C  D0BF               	goto	i2l7012
 14375                           
 14376                           ; BSR set to: 1
 14377                           ;interrupt.c: 217: LATDbits.LATD1 = 1;
 14378  00244E  828C               	bsf	3980,1,c	;volatile
 14379                           
 14380                           ; BSR set to: 1
 14381                           ;interrupt.c: 218: _delay((unsigned long)((500)*(8000000/4000.0)));
 14382  002450  0E06               	movlw	6
 14383  002452  6E66               	movwf	(??_servo_ISR_1+1)& (0+255),c
 14384  002454  0E13               	movlw	19
 14385  002456  6E65               	movwf	??_servo_ISR_1& (0+255),c
 14386  002458  0EAE               	movlw	174
 14387  00245A                     i2u953_47:
 14388  00245A  2EE8               	decfsz	wreg,f,c
 14389  00245C  D7FE               	bra	i2u953_47
 14390  00245E  2E65               	decfsz	??_servo_ISR_1& (0+255),f,c
 14391  002460  D7FC               	bra	i2u953_47
 14392  002462  2E66               	decfsz	(??_servo_ISR_1+1)& (0+255),f,c
 14393  002464  D7FA               	bra	i2u953_47
 14394                           
 14395                           ;interrupt.c: 220: voltage_0 = readADC(0);
 14396  002466  0E00               	movlw	0
 14397  002468  ECA4  F024         	call	i2_readADC
 14398  00246C  C03D  F142         	movff	?i2_readADC,_voltage_0	;volatile
 14399  002470  C03E  F143         	movff	?i2_readADC+1,_voltage_0+1	;volatile
 14400  002474  C03F  F144         	movff	?i2_readADC+2,_voltage_0+2	;volatile
 14401                           
 14402                           ;interrupt.c: 222: if(voltage_0 > 3.5){
 14403  002478  0E00               	movlw	0
 14404  00247A  6E01               	movwf	i2___ftge@ff1,c
 14405  00247C  0E60               	movlw	96
 14406  00247E  6E02               	movwf	i2___ftge@ff1+1,c
 14407  002480  0E40               	movlw	64
 14408  002482  6E03               	movwf	i2___ftge@ff1+2,c
 14409  002484  C142  F004         	movff	_voltage_0,i2___ftge@ff2	;volatile
 14410  002488  C143  F005         	movff	_voltage_0+1,i2___ftge@ff2+1	;volatile
 14411  00248C  C144  F006         	movff	_voltage_0+2,i2___ftge@ff2+2	;volatile
 14412  002490  EC19  F02A         	call	i2___ftge	;wreg free
 14413  002494  B0D8               	btfsc	status,0,c
 14414  002496  D039               	goto	i2l6990
 14415                           
 14416                           ;interrupt.c: 224: LATCbits.LATC0 = 1;
 14417  002498  808B               	bsf	3979,0,c	;volatile
 14418                           
 14419                           ;interrupt.c: 225: _delay((unsigned long)((100)*(8000000/4000.0)));
 14420  00249A  0E02               	movlw	2
 14421  00249C  6E66               	movwf	(??_servo_ISR_1+1)& (0+255),c
 14422  00249E  0E04               	movlw	4
 14423  0024A0  6E65               	movwf	??_servo_ISR_1& (0+255),c
 14424  0024A2  0EBA               	movlw	186
 14425  0024A4                     i2u954_47:
 14426  0024A4  2EE8               	decfsz	wreg,f,c
 14427  0024A6  D7FE               	bra	i2u954_47
 14428  0024A8  2E65               	decfsz	??_servo_ISR_1& (0+255),f,c
 14429  0024AA  D7FC               	bra	i2u954_47
 14430  0024AC  2E66               	decfsz	(??_servo_ISR_1+1)& (0+255),f,c
 14431  0024AE  D7FA               	bra	i2u954_47
 14432  0024B0  D000               	nop2	
 14433                           
 14434                           ;interrupt.c: 226: voltage_6 = readADC(6);
 14435  0024B2  0E06               	movlw	6
 14436  0024B4  ECA4  F024         	call	i2_readADC
 14437  0024B8  C03D  F0E9         	movff	?i2_readADC,_voltage_6	;volatile
 14438  0024BC  C03E  F0EA         	movff	?i2_readADC+1,_voltage_6+1	;volatile
 14439  0024C0  C03F  F0EB         	movff	?i2_readADC+2,_voltage_6+2	;volatile
 14440                           
 14441                           ;interrupt.c: 227: AA_or_9V = 1;
 14442  0024C4  0E01               	movlw	1
 14443  0024C6  0101               	movlb	1	; () banked
 14444  0024C8  6F53               	movwf	_AA_or_9V& (0+255),b	;volatile
 14445                           
 14446                           ; BSR set to: 1
 14447                           ;interrupt.c: 228: voltage_AA = voltage_6;
 14448  0024CA  C0E9  F139         	movff	_voltage_6,_voltage_AA	;volatile
 14449  0024CE  C0EA  F13A         	movff	_voltage_6+1,_voltage_AA+1	;volatile
 14450  0024D2  C0EB  F13B         	movff	_voltage_6+2,_voltage_AA+2	;volatile
 14451                           
 14452                           ; BSR set to: 1
 14453                           ;interrupt.c: 229: volt_check1 = 1;
 14454  0024D6  0E01               	movlw	1
 14455  0024D8  0101               	movlb	1	; () banked
 14456  0024DA  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14457                           
 14458                           ; BSR set to: 1
 14459                           ;interrupt.c: 230: set_external_interrupt1(1000);
 14460  0024DC  0E03               	movlw	3
 14461  0024DE  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14462  0024E0  0EE8               	movlw	232
 14463  0024E2  6E0F               	movwf	i2set_external_interrupt1@time,c
 14464  0024E4  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14465                           
 14466                           ;interrupt.c: 231: LATCbits.LATC0 = 0;
 14467  0024E8  908B               	bcf	3979,0,c	;volatile
 14468                           
 14469                           ;interrupt.c: 232: LATDbits.LATD1 = 0;
 14470  0024EA  928C               	bcf	3980,1,c	;volatile
 14471                           
 14472                           ;interrupt.c: 234: initLCD();
 14473  0024EC  ECF5  F02D         	call	i2_initLCD	;wreg free
 14474                           
 14475                           ;interrupt.c: 235: printf("AA: %f", voltage_AA);
 14476  0024F0  0ED7               	movlw	low STR_25
 14477  0024F2  6E40               	movwf	i2printf@f,c
 14478  0024F4  0EFC               	movlw	high STR_25
 14479  0024F6  6E41               	movwf	i2printf@f+1,c
 14480  0024F8  C139  F042         	movff	_voltage_AA,?i2_printf+2	;volatile
 14481  0024FC  C13A  F043         	movff	_voltage_AA+1,?i2_printf+3	;volatile
 14482  002500  C13B  F044         	movff	_voltage_AA+2,?i2_printf+4	;volatile
 14483  002504  ECA6  F00C         	call	i2_printf	;wreg free
 14484                           
 14485                           ;interrupt.c: 237: return;
 14486  002508  0012               	return	
 14487  00250A                     i2l6990:
 14488                           
 14489                           ;interrupt.c: 238: }
 14490                           ;interrupt.c: 240: AA_or_9V = 2;
 14491  00250A  0E02               	movlw	2
 14492  00250C  0101               	movlb	1	; () banked
 14493  00250E  6F53               	movwf	_AA_or_9V& (0+255),b	;volatile
 14494                           
 14495                           ; BSR set to: 1
 14496                           ;interrupt.c: 242: voltage_1 = readADC(1);
 14497  002510  0E01               	movlw	1
 14498  002512  ECA4  F024         	call	i2_readADC
 14499  002516  C03D  F15B         	movff	?i2_readADC,_voltage_1	;volatile
 14500  00251A  C03E  F15C         	movff	?i2_readADC+1,_voltage_1+1	;volatile
 14501  00251E  C03F  F15D         	movff	?i2_readADC+2,_voltage_1+2	;volatile
 14502                           
 14503                           ;interrupt.c: 243: voltage_2 = readADC(2);
 14504  002522  0E02               	movlw	2
 14505  002524  ECA4  F024         	call	i2_readADC
 14506  002528  C03D  F158         	movff	?i2_readADC,_voltage_2	;volatile
 14507  00252C  C03E  F159         	movff	?i2_readADC+1,_voltage_2+1	;volatile
 14508  002530  C03F  F15A         	movff	?i2_readADC+2,_voltage_2+2	;volatile
 14509                           
 14510                           ;interrupt.c: 253: if(voltage_1 >= voltage_2){
 14511  002534  C15B  F001         	movff	_voltage_1,i2___ftge@ff1	;volatile
 14512  002538  C15C  F002         	movff	_voltage_1+1,i2___ftge@ff1+1	;volatile
 14513  00253C  C15D  F003         	movff	_voltage_1+2,i2___ftge@ff1+2	;volatile
 14514  002540  C158  F004         	movff	_voltage_2,i2___ftge@ff2	;volatile
 14515  002544  C159  F005         	movff	_voltage_2+1,i2___ftge@ff2+1	;volatile
 14516  002548  C15A  F006         	movff	_voltage_2+2,i2___ftge@ff2+2	;volatile
 14517  00254C  EC19  F02A         	call	i2___ftge	;wreg free
 14518  002550  A0D8               	btfss	status,0,c
 14519  002552  D00F               	goto	i2l7000
 14520                           
 14521                           ;interrupt.c: 254: voltage_9V = voltage_1*(1.33/1.26);
 14522  002554  C15B  F015         	movff	_voltage_1,i2___ftmul@f1	;volatile
 14523  002558  C15C  F016         	movff	_voltage_1+1,i2___ftmul@f1+1	;volatile
 14524  00255C  C15D  F017         	movff	_voltage_1+2,i2___ftmul@f1+2	;volatile
 14525  002560  0E1C               	movlw	28
 14526  002562  6E18               	movwf	i2___ftmul@f2,c
 14527  002564  0E87               	movlw	135
 14528  002566  6E19               	movwf	i2___ftmul@f2+1,c
 14529  002568  0E3F               	movlw	63
 14530  00256A  6E1A               	movwf	i2___ftmul@f2+2,c
 14531  00256C  EC53  F026         	call	i2___ftmul	;wreg free
 14532  002570  D00E               	goto	L5
 14533  002572                     i2l7000:
 14534                           
 14535                           ;interrupt.c: 256: else{
 14536                           ;interrupt.c: 257: voltage_9V = voltage_2*(1.3/1.2);
 14537  002572  C158  F015         	movff	_voltage_2,i2___ftmul@f1	;volatile
 14538  002576  C159  F016         	movff	_voltage_2+1,i2___ftmul@f1+1	;volatile
 14539  00257A  C15A  F017         	movff	_voltage_2+2,i2___ftmul@f1+2	;volatile
 14540  00257E  0EAB               	movlw	171
 14541  002580  6E18               	movwf	i2___ftmul@f2,c
 14542  002582  0E8A               	movlw	138
 14543  002584  6E19               	movwf	i2___ftmul@f2+1,c
 14544  002586  0E3F               	movlw	63
 14545  002588  6E1A               	movwf	i2___ftmul@f2+2,c
 14546  00258A  EC53  F026         	call	i2___ftmul	;wreg free
 14547  00258E                     L5:
 14548  00258E  C015  F136         	movff	?i2___ftmul,_voltage_9V	;volatile
 14549  002592  C016  F137         	movff	?i2___ftmul+1,_voltage_9V+1	;volatile
 14550  002596  C017  F138         	movff	?i2___ftmul+2,_voltage_9V+2	;volatile
 14551                           
 14552                           ;interrupt.c: 258: }
 14553                           ;interrupt.c: 260: initLCD();
 14554  00259A  ECF5  F02D         	call	i2_initLCD	;wreg free
 14555                           
 14556                           ;interrupt.c: 261: printf("9V: %f", voltage_9V);
 14557  00259E  0EDE               	movlw	low STR_26
 14558  0025A0  6E40               	movwf	i2printf@f,c
 14559  0025A2  0EFC               	movlw	high STR_26
 14560  0025A4  6E41               	movwf	i2printf@f+1,c
 14561  0025A6  C136  F042         	movff	_voltage_9V,?i2_printf+2	;volatile
 14562  0025AA  C137  F043         	movff	_voltage_9V+1,?i2_printf+3	;volatile
 14563  0025AE  C138  F044         	movff	_voltage_9V+2,?i2_printf+4	;volatile
 14564  0025B2  ECA6  F00C         	call	i2_printf	;wreg free
 14565                           
 14566                           ;interrupt.c: 263: volt_check1 = 1;
 14567  0025B6  0E01               	movlw	1
 14568  0025B8  0101               	movlb	1	; () banked
 14569  0025BA  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14570                           
 14571                           ; BSR set to: 1
 14572                           ;interrupt.c: 264: set_external_interrupt1(1000);
 14573  0025BC  0E03               	movlw	3
 14574  0025BE  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14575  0025C0  0EE8               	movlw	232
 14576  0025C2  6E0F               	movwf	i2set_external_interrupt1@time,c
 14577  0025C4  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14578                           
 14579                           ;interrupt.c: 265: LATDbits.LATD1 = 0;
 14580  0025C8  928C               	bcf	3980,1,c	;volatile
 14581                           
 14582                           ;interrupt.c: 267: return;
 14583  0025CA  0012               	return	
 14584  0025CC                     i2l7012:
 14585                           
 14586                           ;interrupt.c: 269: }
 14587                           ;interrupt.c: 271: if(AA_or_9V == 1){
 14588  0025CC  0101               	movlb	1	; () banked
 14589  0025CE  0553               	decf	_AA_or_9V& (0+255),w,b	;volatile
 14590  0025D0  A4D8               	btfss	status,2,c
 14591  0025D2  D09C               	goto	i2l7090
 14592                           
 14593                           ; BSR set to: 1
 14594                           ;interrupt.c: 273: if(voltage_AA < 1.23){
 14595  0025D4  C139  F001         	movff	_voltage_AA,i2___ftge@ff1	;volatile
 14596  0025D8  C13A  F002         	movff	_voltage_AA+1,i2___ftge@ff1+1	;volatile
 14597  0025DC  C13B  F003         	movff	_voltage_AA+2,i2___ftge@ff1+2	;volatile
 14598  0025E0  0E71               	movlw	113
 14599  0025E2  6E04               	movwf	i2___ftge@ff2,c
 14600  0025E4  0E9D               	movlw	157
 14601  0025E6  6E05               	movwf	i2___ftge@ff2+1,c
 14602  0025E8  0E3F               	movlw	63
 14603  0025EA  6E06               	movwf	i2___ftge@ff2+2,c
 14604  0025EC  EC19  F02A         	call	i2___ftge	;wreg free
 14605  0025F0  B0D8               	btfsc	status,0,c
 14606  0025F2  D042               	goto	i2l7052
 14607                           
 14608                           ;interrupt.c: 275: if (count1 < 40){
 14609  0025F4  BE76               	btfsc	_count1+1,7,c	;volatile
 14610  0025F6  D006               	goto	i2l7018
 14611  0025F8  5076               	movf	_count1+1,w,c	;volatile
 14612  0025FA  E128               	bnz	i2l7038
 14613  0025FC  0E28               	movlw	40
 14614  0025FE  5C75               	subwf	_count1,w,c	;volatile
 14615  002600  B0D8               	btfsc	status,0,c
 14616  002602  D024               	goto	i2l7038
 14617  002604                     i2l7018:
 14618                           
 14619                           ;interrupt.c: 276: if(current_state1 == 1){
 14620  002604  047E               	decf	_current_state1,w,c	;volatile
 14621  002606  A4D8               	btfss	status,2,c
 14622  002608  D00E               	goto	i2l7026
 14623                           
 14624                           ;interrupt.c: 278: current_state1 = 0;
 14625  00260A  0E00               	movlw	0
 14626  00260C  6E7E               	movwf	_current_state1,c	;volatile
 14627                           
 14628                           ;interrupt.c: 279: down_period1 = 20000;
 14629  00260E  0E4E               	movlw	78
 14630  002610  6E78               	movwf	_down_period1+1,c	;volatile
 14631  002612  0E20               	movlw	32
 14632  002614  6E77               	movwf	_down_period1,c	;volatile
 14633                           
 14634                           ;interrupt.c: 280: LATCbits.LATC1 = 0;
 14635  002616  928B               	bcf	3979,1,c	;volatile
 14636                           
 14637                           ;interrupt.c: 281: set_external_interrupt1(down_period1);
 14638  002618  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 14639  00261C  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 14640  002620  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14641                           
 14642                           ;interrupt.c: 283: }
 14643  002624  D010               	goto	i2l7034
 14644  002626                     i2l7026:
 14645                           
 14646                           ;interrupt.c: 284: else if (current_state1 == 0){
 14647  002626  507E               	movf	_current_state1,w,c	;volatile
 14648  002628  A4D8               	btfss	status,2,c
 14649  00262A  D00D               	goto	i2l7034
 14650                           
 14651                           ;interrupt.c: 286: current_state1 = 1;
 14652  00262C  0E01               	movlw	1
 14653  00262E  6E7E               	movwf	_current_state1,c	;volatile
 14654                           
 14655                           ;interrupt.c: 287: up_period1 = 1800;
 14656  002630  0E07               	movlw	7
 14657  002632  6E7A               	movwf	_up_period1+1,c	;volatile
 14658  002634  0E08               	movlw	8
 14659  002636  6E79               	movwf	_up_period1,c	;volatile
 14660                           
 14661                           ;interrupt.c: 288: LATCbits.LATC1 = 1;
 14662  002638  828B               	bsf	3979,1,c	;volatile
 14663                           
 14664                           ;interrupt.c: 289: set_external_interrupt1(up_period1);
 14665  00263A  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 14666  00263E  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 14667  002642  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14668  002646                     i2l7034:
 14669                           
 14670                           ;interrupt.c: 291: }
 14671                           ;interrupt.c: 292: count1++;
 14672  002646  4A75               	infsnz	_count1,f,c	;volatile
 14673  002648  2A76               	incf	_count1+1,f,c	;volatile
 14674                           
 14675                           ;interrupt.c: 293: return;
 14676  00264A  0012               	return	
 14677  00264C                     i2l7038:
 14678                           
 14679                           ;interrupt.c: 294: }
 14680                           ;interrupt.c: 296: count1 = 0;
 14681  00264C  0E00               	movlw	0
 14682  00264E  6E76               	movwf	_count1+1,c	;volatile
 14683  002650  0E00               	movlw	0
 14684  002652  6E75               	movwf	_count1,c	;volatile
 14685                           
 14686                           ;interrupt.c: 297: current_state1 = 0;
 14687  002654  0E00               	movlw	0
 14688  002656  6E7E               	movwf	_current_state1,c	;volatile
 14689                           
 14690                           ;interrupt.c: 298: LATCbits.LATC1 = 0;
 14691  002658  928B               	bcf	3979,1,c	;volatile
 14692                           
 14693                           ;interrupt.c: 299: set_external_interrupt1(20000);
 14694  00265A  0E4E               	movlw	78
 14695  00265C  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14696  00265E  0E20               	movlw	32
 14697  002660  6E0F               	movwf	i2set_external_interrupt1@time,c
 14698  002662  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14699                           
 14700                           ;interrupt.c: 301: stage1 = 3;
 14701  002666  0E03               	movlw	3
 14702  002668  6E7C               	movwf	_stage1,c	;volatile
 14703                           
 14704                           ;interrupt.c: 302: count_drained++;
 14705  00266A  0101               	movlb	1	; () banked
 14706  00266C  4B45               	infsnz	_count_drained& (0+255),f,b	;volatile
 14707  00266E  2B46               	incf	(_count_drained+1)& (0+255),f,b	;volatile
 14708                           
 14709                           ; BSR set to: 1
 14710                           ;interrupt.c: 303: volt_check1 = 0;
 14711  002670  0E00               	movlw	0
 14712  002672  0101               	movlb	1	; () banked
 14713  002674  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14714                           
 14715                           ; BSR set to: 1
 14716                           ;interrupt.c: 304: return;
 14717  002676  0012               	return	
 14718  002678                     i2l7052:
 14719                           
 14720                           ;interrupt.c: 306: }
 14721                           ;interrupt.c: 307: if (count1 < 40){
 14722  002678  BE76               	btfsc	_count1+1,7,c	;volatile
 14723  00267A  D006               	goto	i2l7054
 14724  00267C  5076               	movf	_count1+1,w,c	;volatile
 14725  00267E  E130               	bnz	i2l7078
 14726  002680  0E28               	movlw	40
 14727  002682  5C75               	subwf	_count1,w,c	;volatile
 14728  002684  B0D8               	btfsc	status,0,c
 14729  002686  D02C               	goto	i2l7078
 14730  002688                     i2l7054:
 14731                           
 14732                           ;interrupt.c: 308: if(current_state1 == 1){
 14733  002688  047E               	decf	_current_state1,w,c	;volatile
 14734  00268A  A4D8               	btfss	status,2,c
 14735  00268C  D00E               	goto	i2l7062
 14736                           
 14737                           ;interrupt.c: 310: current_state1 = 0;
 14738  00268E  0E00               	movlw	0
 14739  002690  6E7E               	movwf	_current_state1,c	;volatile
 14740                           
 14741                           ;interrupt.c: 311: down_period1 = 20000;
 14742  002692  0E4E               	movlw	78
 14743  002694  6E78               	movwf	_down_period1+1,c	;volatile
 14744  002696  0E20               	movlw	32
 14745  002698  6E77               	movwf	_down_period1,c	;volatile
 14746                           
 14747                           ;interrupt.c: 312: LATCbits.LATC1 = 0;
 14748  00269A  928B               	bcf	3979,1,c	;volatile
 14749                           
 14750                           ;interrupt.c: 313: set_external_interrupt1(down_period1);
 14751  00269C  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 14752  0026A0  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 14753  0026A4  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14754                           
 14755                           ;interrupt.c: 315: }
 14756  0026A8  D018               	goto	i2l7074
 14757  0026AA                     i2l7062:
 14758                           
 14759                           ;interrupt.c: 316: else if (current_state1 == 0){
 14760  0026AA  507E               	movf	_current_state1,w,c	;volatile
 14761  0026AC  A4D8               	btfss	status,2,c
 14762  0026AE  D015               	goto	i2l7074
 14763                           
 14764                           ;interrupt.c: 318: current_state1 = 1;
 14765  0026B0  0E01               	movlw	1
 14766  0026B2  6E7E               	movwf	_current_state1,c	;volatile
 14767                           
 14768                           ;interrupt.c: 319: up_period1 = 1100;
 14769  0026B4  0E04               	movlw	4
 14770  0026B6  6E7A               	movwf	_up_period1+1,c	;volatile
 14771  0026B8  0E4C               	movlw	76
 14772  0026BA  6E79               	movwf	_up_period1,c	;volatile
 14773                           
 14774                           ;interrupt.c: 320: if(process3 == 1){
 14775  0026BC  0101               	movlb	1	; () banked
 14776  0026BE  054F               	decf	_process3& (0+255),w,b	;volatile
 14777  0026C0  A4D8               	btfss	status,2,c
 14778  0026C2  D004               	goto	i2l7070
 14779                           
 14780                           ; BSR set to: 1
 14781                           ;interrupt.c: 321: up_period1 = 1130;
 14782  0026C4  0E04               	movlw	4
 14783  0026C6  6E7A               	movwf	_up_period1+1,c	;volatile
 14784  0026C8  0E6A               	movlw	106
 14785  0026CA  6E79               	movwf	_up_period1,c	;volatile
 14786  0026CC                     i2l7070:
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;interrupt.c: 322: }
 14790                           ;interrupt.c: 323: LATCbits.LATC1 = 1;
 14791  0026CC  828B               	bsf	3979,1,c	;volatile
 14792                           
 14793                           ; BSR set to: 1
 14794                           ;interrupt.c: 324: set_external_interrupt1(up_period1);
 14795  0026CE  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 14796  0026D2  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 14797  0026D6  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14798  0026DA                     i2l7074:
 14799                           
 14800                           ;interrupt.c: 326: }
 14801                           ;interrupt.c: 327: count1++;
 14802  0026DA  4A75               	infsnz	_count1,f,c	;volatile
 14803  0026DC  2A76               	incf	_count1+1,f,c	;volatile
 14804                           
 14805                           ;interrupt.c: 328: return;
 14806  0026DE  0012               	return	
 14807  0026E0                     i2l7078:
 14808                           
 14809                           ;interrupt.c: 329: }
 14810                           ;interrupt.c: 331: count1 = 0;
 14811  0026E0  0E00               	movlw	0
 14812  0026E2  6E76               	movwf	_count1+1,c	;volatile
 14813  0026E4  0E00               	movlw	0
 14814  0026E6  6E75               	movwf	_count1,c	;volatile
 14815                           
 14816                           ;interrupt.c: 332: current_state1 = 0;
 14817  0026E8  0E00               	movlw	0
 14818  0026EA  6E7E               	movwf	_current_state1,c	;volatile
 14819                           
 14820                           ;interrupt.c: 333: LATCbits.LATC1 = 0;
 14821  0026EC  928B               	bcf	3979,1,c	;volatile
 14822                           
 14823                           ;interrupt.c: 334: volt_check1 = 0;
 14824  0026EE  0E00               	movlw	0
 14825  0026F0  0101               	movlb	1	; () banked
 14826  0026F2  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14827                           
 14828                           ; BSR set to: 1
 14829                           ;interrupt.c: 335: count_AA++;
 14830  0026F4  0101               	movlb	1	; () banked
 14831  0026F6  4B4B               	infsnz	_count_AA& (0+255),f,b	;volatile
 14832  0026F8  2B4C               	incf	(_count_AA+1)& (0+255),f,b	;volatile
 14833                           
 14834                           ; BSR set to: 1
 14835                           ;interrupt.c: 336: stage1 = 4;
 14836  0026FA  0E04               	movlw	4
 14837  0026FC  6E7C               	movwf	_stage1,c	;volatile
 14838                           
 14839                           ; BSR set to: 1
 14840                           ;interrupt.c: 337: set_external_interrupt1(20000);
 14841  0026FE  0E4E               	movlw	78
 14842  002700  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14843  002702  0E20               	movlw	32
 14844  002704  6E0F               	movwf	i2set_external_interrupt1@time,c
 14845  002706  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14846                           
 14847                           ;interrupt.c: 338: return;
 14848  00270A  0012               	return	
 14849  00270C                     i2l7090:
 14850                           
 14851                           ;interrupt.c: 339: }
 14852                           ;interrupt.c: 340: if(AA_or_9V == 2){
 14853  00270C  0E02               	movlw	2
 14854  00270E  0101               	movlb	1	; () banked
 14855  002710  1953               	xorwf	_AA_or_9V& (0+255),w,b	;volatile
 14856  002712  A4D8               	btfss	status,2,c
 14857  002714  D061               	goto	i2l7140
 14858                           
 14859                           ; BSR set to: 1
 14860                           ;interrupt.c: 342: if(voltage_9V > 1.23){
 14861  002716  0E71               	movlw	113
 14862  002718  6E01               	movwf	i2___ftge@ff1,c
 14863  00271A  0E9D               	movlw	157
 14864  00271C  6E02               	movwf	i2___ftge@ff1+1,c
 14865  00271E  0E3F               	movlw	63
 14866  002720  6E03               	movwf	i2___ftge@ff1+2,c
 14867  002722  C136  F004         	movff	_voltage_9V,i2___ftge@ff2	;volatile
 14868  002726  C137  F005         	movff	_voltage_9V+1,i2___ftge@ff2+1	;volatile
 14869  00272A  C138  F006         	movff	_voltage_9V+2,i2___ftge@ff2+2	;volatile
 14870  00272E  EC19  F02A         	call	i2___ftge	;wreg free
 14871  002732  B0D8               	btfsc	status,0,c
 14872  002734  D00F               	goto	i2l7104
 14873                           
 14874                           ;interrupt.c: 344: stage1 = 4;
 14875  002736  0E04               	movlw	4
 14876  002738  6E7C               	movwf	_stage1,c	;volatile
 14877                           
 14878                           ;interrupt.c: 345: set_external_interrupt1(1000);
 14879  00273A  0E03               	movlw	3
 14880  00273C  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14881  00273E  0EE8               	movlw	232
 14882  002740  6E0F               	movwf	i2set_external_interrupt1@time,c
 14883  002742  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14884                           
 14885                           ;interrupt.c: 346: count_9V++;
 14886  002746  0101               	movlb	1	; () banked
 14887  002748  4B49               	infsnz	_count_9V& (0+255),f,b	;volatile
 14888  00274A  2B4A               	incf	(_count_9V+1)& (0+255),f,b	;volatile
 14889                           
 14890                           ; BSR set to: 1
 14891                           ;interrupt.c: 347: volt_check1 = 0;
 14892  00274C  0E00               	movlw	0
 14893  00274E  0101               	movlb	1	; () banked
 14894  002750  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14895                           
 14896                           ; BSR set to: 1
 14897                           ;interrupt.c: 348: return;
 14898  002752  0012               	return	
 14899  002754                     i2l7104:
 14900                           
 14901                           ;interrupt.c: 350: }
 14902                           ;interrupt.c: 351: if (count1 < 40){
 14903  002754  BE76               	btfsc	_count1+1,7,c	;volatile
 14904  002756  D006               	goto	i2l7106
 14905  002758  5076               	movf	_count1+1,w,c	;volatile
 14906  00275A  E128               	bnz	i2l7126
 14907  00275C  0E28               	movlw	40
 14908  00275E  5C75               	subwf	_count1,w,c	;volatile
 14909  002760  B0D8               	btfsc	status,0,c
 14910  002762  D024               	goto	i2l7126
 14911  002764                     i2l7106:
 14912                           
 14913                           ;interrupt.c: 352: if(current_state1 == 1){
 14914  002764  047E               	decf	_current_state1,w,c	;volatile
 14915  002766  A4D8               	btfss	status,2,c
 14916  002768  D00E               	goto	i2l7114
 14917                           
 14918                           ;interrupt.c: 354: current_state1 = 0;
 14919  00276A  0E00               	movlw	0
 14920  00276C  6E7E               	movwf	_current_state1,c	;volatile
 14921                           
 14922                           ;interrupt.c: 355: down_period1 = 20000;
 14923  00276E  0E4E               	movlw	78
 14924  002770  6E78               	movwf	_down_period1+1,c	;volatile
 14925  002772  0E20               	movlw	32
 14926  002774  6E77               	movwf	_down_period1,c	;volatile
 14927                           
 14928                           ;interrupt.c: 356: LATCbits.LATC1 = 0;
 14929  002776  928B               	bcf	3979,1,c	;volatile
 14930                           
 14931                           ;interrupt.c: 357: set_external_interrupt1(down_period1);
 14932  002778  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 14933  00277C  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 14934  002780  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14935                           
 14936                           ;interrupt.c: 359: }
 14937  002784  D010               	goto	i2l7122
 14938  002786                     i2l7114:
 14939                           
 14940                           ;interrupt.c: 360: else if (current_state1 == 0){
 14941  002786  507E               	movf	_current_state1,w,c	;volatile
 14942  002788  A4D8               	btfss	status,2,c
 14943  00278A  D00D               	goto	i2l7122
 14944                           
 14945                           ;interrupt.c: 362: current_state1 = 1;
 14946  00278C  0E01               	movlw	1
 14947  00278E  6E7E               	movwf	_current_state1,c	;volatile
 14948                           
 14949                           ;interrupt.c: 363: up_period1 = 1800;
 14950  002790  0E07               	movlw	7
 14951  002792  6E7A               	movwf	_up_period1+1,c	;volatile
 14952  002794  0E08               	movlw	8
 14953  002796  6E79               	movwf	_up_period1,c	;volatile
 14954                           
 14955                           ;interrupt.c: 364: LATCbits.LATC1 = 1;
 14956  002798  828B               	bsf	3979,1,c	;volatile
 14957                           
 14958                           ;interrupt.c: 365: set_external_interrupt1(up_period1);
 14959  00279A  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 14960  00279E  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 14961  0027A2  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14962  0027A6                     i2l7122:
 14963                           
 14964                           ;interrupt.c: 367: }
 14965                           ;interrupt.c: 368: count1++;
 14966  0027A6  4A75               	infsnz	_count1,f,c	;volatile
 14967  0027A8  2A76               	incf	_count1+1,f,c	;volatile
 14968                           
 14969                           ;interrupt.c: 369: return;
 14970  0027AA  0012               	return	
 14971  0027AC                     i2l7126:
 14972                           
 14973                           ;interrupt.c: 370: }
 14974                           ;interrupt.c: 371: count1 = 0;
 14975  0027AC  0E00               	movlw	0
 14976  0027AE  6E76               	movwf	_count1+1,c	;volatile
 14977  0027B0  0E00               	movlw	0
 14978  0027B2  6E75               	movwf	_count1,c	;volatile
 14979                           
 14980                           ;interrupt.c: 372: current_state1 = 0;
 14981  0027B4  0E00               	movlw	0
 14982  0027B6  6E7E               	movwf	_current_state1,c	;volatile
 14983                           
 14984                           ;interrupt.c: 373: LATCbits.LATC1 = 0;
 14985  0027B8  928B               	bcf	3979,1,c	;volatile
 14986                           
 14987                           ;interrupt.c: 374: set_external_interrupt1(20000);
 14988  0027BA  0E4E               	movlw	78
 14989  0027BC  6E10               	movwf	i2set_external_interrupt1@time+1,c
 14990  0027BE  0E20               	movlw	32
 14991  0027C0  6E0F               	movwf	i2set_external_interrupt1@time,c
 14992  0027C2  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 14993                           
 14994                           ;interrupt.c: 376: volt_check1 = 0;
 14995  0027C6  0E00               	movlw	0
 14996  0027C8  0101               	movlb	1	; () banked
 14997  0027CA  6F52               	movwf	_volt_check1& (0+255),b	;volatile
 14998                           
 14999                           ; BSR set to: 1
 15000                           ;interrupt.c: 377: count_drained++;
 15001  0027CC  0101               	movlb	1	; () banked
 15002  0027CE  4B45               	infsnz	_count_drained& (0+255),f,b	;volatile
 15003  0027D0  2B46               	incf	(_count_drained+1)& (0+255),f,b	;volatile
 15004                           
 15005                           ; BSR set to: 1
 15006                           ;interrupt.c: 379: stage1 = 3;
 15007  0027D2  0E03               	movlw	3
 15008  0027D4  6E7C               	movwf	_stage1,c	;volatile
 15009                           
 15010                           ; BSR set to: 1
 15011                           ;interrupt.c: 380: return;
 15012  0027D6  0012               	return	
 15013  0027D8                     i2l7140:
 15014                           
 15015                           ;interrupt.c: 381: }
 15016                           ;interrupt.c: 382: }
 15017                           ;interrupt.c: 383: if(stage1 == 3){
 15018  0027D8  0E03               	movlw	3
 15019  0027DA  187C               	xorwf	_stage1,w,c	;volatile
 15020  0027DC  A4D8               	btfss	status,2,c
 15021  0027DE  D054               	goto	i2l7182
 15022                           
 15023                           ;interrupt.c: 385: if (count1 < 60){
 15024  0027E0  BE76               	btfsc	_count1+1,7,c	;volatile
 15025  0027E2  D006               	goto	i2l7144
 15026  0027E4  5076               	movf	_count1+1,w,c	;volatile
 15027  0027E6  E130               	bnz	i2l7168
 15028  0027E8  0E3C               	movlw	60
 15029  0027EA  5C75               	subwf	_count1,w,c	;volatile
 15030  0027EC  B0D8               	btfsc	status,0,c
 15031  0027EE  D02C               	goto	i2l7168
 15032  0027F0                     i2l7144:
 15033                           
 15034                           ;interrupt.c: 386: if(current_state1 == 1){
 15035  0027F0  047E               	decf	_current_state1,w,c	;volatile
 15036  0027F2  A4D8               	btfss	status,2,c
 15037  0027F4  D00E               	goto	i2l7152
 15038                           
 15039                           ;interrupt.c: 388: current_state1 = 0;
 15040  0027F6  0E00               	movlw	0
 15041  0027F8  6E7E               	movwf	_current_state1,c	;volatile
 15042                           
 15043                           ;interrupt.c: 389: down_period1 = 20000;
 15044  0027FA  0E4E               	movlw	78
 15045  0027FC  6E78               	movwf	_down_period1+1,c	;volatile
 15046  0027FE  0E20               	movlw	32
 15047  002800  6E77               	movwf	_down_period1,c	;volatile
 15048                           
 15049                           ;interrupt.c: 390: LATCbits.LATC1 = 0;
 15050  002802  928B               	bcf	3979,1,c	;volatile
 15051                           
 15052                           ;interrupt.c: 391: set_external_interrupt1(down_period1);
 15053  002804  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 15054  002808  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 15055  00280C  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15056                           
 15057                           ;interrupt.c: 393: }
 15058  002810  D018               	goto	i2l7164
 15059  002812                     i2l7152:
 15060                           
 15061                           ;interrupt.c: 394: else if (current_state1 == 0){
 15062  002812  507E               	movf	_current_state1,w,c	;volatile
 15063  002814  A4D8               	btfss	status,2,c
 15064  002816  D015               	goto	i2l7164
 15065                           
 15066                           ;interrupt.c: 396: current_state1 = 1;
 15067  002818  0E01               	movlw	1
 15068  00281A  6E7E               	movwf	_current_state1,c	;volatile
 15069                           
 15070                           ;interrupt.c: 397: up_period1 = 920;
 15071  00281C  0E03               	movlw	3
 15072  00281E  6E7A               	movwf	_up_period1+1,c	;volatile
 15073  002820  0E98               	movlw	152
 15074  002822  6E79               	movwf	_up_period1,c	;volatile
 15075                           
 15076                           ;interrupt.c: 398: if(process3 == 1){
 15077  002824  0101               	movlb	1	; () banked
 15078  002826  054F               	decf	_process3& (0+255),w,b	;volatile
 15079  002828  A4D8               	btfss	status,2,c
 15080  00282A  D004               	goto	i2l7160
 15081                           
 15082                           ; BSR set to: 1
 15083                           ;interrupt.c: 399: up_period1 = 945;
 15084  00282C  0E03               	movlw	3
 15085  00282E  6E7A               	movwf	_up_period1+1,c	;volatile
 15086  002830  0EB1               	movlw	177
 15087  002832  6E79               	movwf	_up_period1,c	;volatile
 15088  002834                     i2l7160:
 15089                           
 15090                           ; BSR set to: 1
 15091                           ;interrupt.c: 400: }
 15092                           ;interrupt.c: 401: LATCbits.LATC1 = 1;
 15093  002834  828B               	bsf	3979,1,c	;volatile
 15094                           
 15095                           ; BSR set to: 1
 15096                           ;interrupt.c: 402: set_external_interrupt1(up_period1);
 15097  002836  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 15098  00283A  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 15099  00283E  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15100  002842                     i2l7164:
 15101                           
 15102                           ;interrupt.c: 404: }
 15103                           ;interrupt.c: 405: count1++;
 15104  002842  4A75               	infsnz	_count1,f,c	;volatile
 15105  002844  2A76               	incf	_count1+1,f,c	;volatile
 15106                           
 15107                           ;interrupt.c: 406: return;
 15108  002846  0012               	return	
 15109  002848                     i2l7168:
 15110                           
 15111                           ;interrupt.c: 407: }
 15112                           ;interrupt.c: 408: count1 = 0;
 15113  002848  0E00               	movlw	0
 15114  00284A  6E76               	movwf	_count1+1,c	;volatile
 15115  00284C  0E00               	movlw	0
 15116  00284E  6E75               	movwf	_count1,c	;volatile
 15117                           
 15118                           ;interrupt.c: 409: LATCbits.LATC1 = 0;
 15119  002850  928B               	bcf	3979,1,c	;volatile
 15120                           
 15121                           ;interrupt.c: 410: current_state1 = 0;
 15122  002852  0E00               	movlw	0
 15123  002854  6E7E               	movwf	_current_state1,c	;volatile
 15124                           
 15125                           ;interrupt.c: 411: stage1 = 1;
 15126  002856  0E01               	movlw	1
 15127  002858  6E7C               	movwf	_stage1,c	;volatile
 15128                           
 15129                           ;interrupt.c: 413: if(init1 == 0){
 15130  00285A  0101               	movlb	1	; () banked
 15131  00285C  5155               	movf	_init1& (0+255),w,b	;volatile
 15132  00285E  A4D8               	btfss	status,2,c
 15133  002860  D00C               	goto	i2l7178
 15134                           
 15135                           ; BSR set to: 1
 15136                           ;interrupt.c: 414: init1 = 1;
 15137  002862  0E01               	movlw	1
 15138  002864  0101               	movlb	1	; () banked
 15139  002866  6F55               	movwf	_init1& (0+255),b	;volatile
 15140                           
 15141                           ;interrupt.c: 415: process1 = 0;
 15142  002868  0E00               	movlw	0
 15143  00286A  0101               	movlb	1	; () banked
 15144  00286C  6F50               	movwf	_process1& (0+255),b	;volatile
 15145                           
 15146                           ; BSR set to: 1
 15147                           ;interrupt.c: 416: if(process3 == 1){
 15148  00286E  0101               	movlb	1	; () banked
 15149  002870  054F               	decf	_process3& (0+255),w,b	;volatile
 15150  002872  A4D8               	btfss	status,2,c
 15151  002874  0012               	return	
 15152                           
 15153                           ; BSR set to: 1
 15154                           ;interrupt.c: 417: TMR3ON = 1;
 15155  002876  80B1               	bsf	4017,0,c	;volatile
 15156                           
 15157                           ; BSR set to: 1
 15158                           ;interrupt.c: 418: }
 15159                           ;interrupt.c: 419: return;
 15160  002878  0012               	return	
 15161  00287A                     i2l7178:
 15162                           
 15163                           ; BSR set to: 1
 15164                           ;interrupt.c: 420: }
 15165                           ;interrupt.c: 422: set_external_interrupt1(20000);
 15166  00287A  0E4E               	movlw	78
 15167  00287C  6E10               	movwf	i2set_external_interrupt1@time+1,c
 15168  00287E  0E20               	movlw	32
 15169  002880  6E0F               	movwf	i2set_external_interrupt1@time,c
 15170  002882  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15171                           
 15172                           ;interrupt.c: 423: return;
 15173  002886  0012               	return	
 15174  002888                     i2l7182:
 15175                           
 15176                           ;interrupt.c: 424: }
 15177                           ;interrupt.c: 425: if(stage1 == 4){
 15178  002888  0E04               	movlw	4
 15179  00288A  187C               	xorwf	_stage1,w,c	;volatile
 15180  00288C  A4D8               	btfss	status,2,c
 15181  00288E  0012               	return	
 15182                           
 15183                           ;interrupt.c: 427: if(gate_status1 == 0){
 15184  002890  0101               	movlb	1	; () banked
 15185  002892  5157               	movf	_gate_status1& (0+255),w,b	;volatile
 15186  002894  A4D8               	btfss	status,2,c
 15187  002896  D045               	goto	i2l7220
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;interrupt.c: 428: if (count1 < 35){
 15191  002898  BE76               	btfsc	_count1+1,7,c	;volatile
 15192  00289A  D006               	goto	i2l7188
 15193  00289C  5076               	movf	_count1+1,w,c	;volatile
 15194  00289E  E130               	bnz	i2l7212
 15195  0028A0  0E23               	movlw	35
 15196  0028A2  5C75               	subwf	_count1,w,c	;volatile
 15197  0028A4  B0D8               	btfsc	status,0,c
 15198  0028A6  D02C               	goto	i2l7212
 15199  0028A8                     i2l7188:
 15200                           
 15201                           ; BSR set to: 1
 15202                           ;interrupt.c: 429: if(current_state1 == 1){
 15203  0028A8  047E               	decf	_current_state1,w,c	;volatile
 15204  0028AA  A4D8               	btfss	status,2,c
 15205  0028AC  D00E               	goto	i2l7196
 15206                           
 15207                           ; BSR set to: 1
 15208                           ;interrupt.c: 431: current_state1 = 0;
 15209  0028AE  0E00               	movlw	0
 15210  0028B0  6E7E               	movwf	_current_state1,c	;volatile
 15211                           
 15212                           ;interrupt.c: 432: down_period1 = 20000;
 15213  0028B2  0E4E               	movlw	78
 15214  0028B4  6E78               	movwf	_down_period1+1,c	;volatile
 15215  0028B6  0E20               	movlw	32
 15216  0028B8  6E77               	movwf	_down_period1,c	;volatile
 15217                           
 15218                           ; BSR set to: 1
 15219                           ;interrupt.c: 433: LATCbits.LATC6 = 0;
 15220  0028BA  9C8B               	bcf	3979,6,c	;volatile
 15221                           
 15222                           ; BSR set to: 1
 15223                           ;interrupt.c: 434: set_external_interrupt1(down_period1);
 15224  0028BC  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 15225  0028C0  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 15226  0028C4  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15227                           
 15228                           ;interrupt.c: 436: }
 15229  0028C8  D018               	goto	i2l7208
 15230  0028CA                     i2l7196:
 15231                           
 15232                           ;interrupt.c: 437: else if (current_state1 == 0){
 15233  0028CA  507E               	movf	_current_state1,w,c	;volatile
 15234  0028CC  A4D8               	btfss	status,2,c
 15235  0028CE  D015               	goto	i2l7208
 15236                           
 15237                           ;interrupt.c: 439: current_state1 = 1;
 15238  0028D0  0E01               	movlw	1
 15239  0028D2  6E7E               	movwf	_current_state1,c	;volatile
 15240                           
 15241                           ;interrupt.c: 440: up_period1 = 650;
 15242  0028D4  0E02               	movlw	2
 15243  0028D6  6E7A               	movwf	_up_period1+1,c	;volatile
 15244  0028D8  0E8A               	movlw	138
 15245  0028DA  6E79               	movwf	_up_period1,c	;volatile
 15246                           
 15247                           ;interrupt.c: 441: if(process3 == 1){
 15248  0028DC  0101               	movlb	1	; () banked
 15249  0028DE  054F               	decf	_process3& (0+255),w,b	;volatile
 15250  0028E0  A4D8               	btfss	status,2,c
 15251  0028E2  D004               	goto	i2l7204
 15252                           
 15253                           ; BSR set to: 1
 15254                           ;interrupt.c: 442: up_period1 = 680;
 15255  0028E4  0E02               	movlw	2
 15256  0028E6  6E7A               	movwf	_up_period1+1,c	;volatile
 15257  0028E8  0EA8               	movlw	168
 15258  0028EA  6E79               	movwf	_up_period1,c	;volatile
 15259  0028EC                     i2l7204:
 15260                           
 15261                           ; BSR set to: 1
 15262                           ;interrupt.c: 443: }
 15263                           ;interrupt.c: 444: LATCbits.LATC6 = 1;
 15264  0028EC  8C8B               	bsf	3979,6,c	;volatile
 15265                           
 15266                           ; BSR set to: 1
 15267                           ;interrupt.c: 445: set_external_interrupt1(up_period1);
 15268  0028EE  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 15269  0028F2  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 15270  0028F6  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15271  0028FA                     i2l7208:
 15272                           
 15273                           ;interrupt.c: 447: }
 15274                           ;interrupt.c: 448: count1++;
 15275  0028FA  4A75               	infsnz	_count1,f,c	;volatile
 15276  0028FC  2A76               	incf	_count1+1,f,c	;volatile
 15277                           
 15278                           ;interrupt.c: 449: return;
 15279  0028FE  0012               	return	
 15280  002900                     i2l7212:
 15281                           
 15282                           ;interrupt.c: 450: }
 15283                           ;interrupt.c: 451: gate_status1 = 1;
 15284  002900  0E01               	movlw	1
 15285  002902  0101               	movlb	1	; () banked
 15286  002904  6F57               	movwf	_gate_status1& (0+255),b	;volatile
 15287                           
 15288                           ;interrupt.c: 452: count1 = 0;
 15289  002906  0E00               	movlw	0
 15290  002908  6E76               	movwf	_count1+1,c	;volatile
 15291  00290A  0E00               	movlw	0
 15292  00290C  6E75               	movwf	_count1,c	;volatile
 15293                           
 15294                           ; BSR set to: 1
 15295                           ;interrupt.c: 453: LATCbits.LATC6 = 0;
 15296  00290E  9C8B               	bcf	3979,6,c	;volatile
 15297                           
 15298                           ;interrupt.c: 454: current_state1 = 0;
 15299  002910  0E00               	movlw	0
 15300  002912  6E7E               	movwf	_current_state1,c	;volatile
 15301                           
 15302                           ; BSR set to: 1
 15303                           ;interrupt.c: 455: set_external_interrupt1(20000);
 15304  002914  0E4E               	movlw	78
 15305  002916  6E10               	movwf	i2set_external_interrupt1@time+1,c
 15306  002918  0E20               	movlw	32
 15307  00291A  6E0F               	movwf	i2set_external_interrupt1@time,c
 15308  00291C  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15309                           
 15310                           ;interrupt.c: 456: return;
 15311  002920  0012               	return	
 15312  002922                     i2l7220:
 15313                           
 15314                           ;interrupt.c: 457: }
 15315                           ;interrupt.c: 458: if(gate_status1 == 1){
 15316  002922  0101               	movlb	1	; () banked
 15317  002924  0557               	decf	_gate_status1& (0+255),w,b	;volatile
 15318  002926  A4D8               	btfss	status,2,c
 15319  002928  0012               	return	
 15320                           
 15321                           ; BSR set to: 1
 15322                           ;interrupt.c: 459: if (count1 < 35){
 15323  00292A  BE76               	btfsc	_count1+1,7,c	;volatile
 15324  00292C  D006               	goto	i2l7224
 15325  00292E  5076               	movf	_count1+1,w,c	;volatile
 15326  002930  E130               	bnz	i2l7248
 15327  002932  0E23               	movlw	35
 15328  002934  5C75               	subwf	_count1,w,c	;volatile
 15329  002936  B0D8               	btfsc	status,0,c
 15330  002938  D02C               	goto	i2l7248
 15331  00293A                     i2l7224:
 15332                           
 15333                           ; BSR set to: 1
 15334                           ;interrupt.c: 460: if(current_state1 == 1){
 15335  00293A  047E               	decf	_current_state1,w,c	;volatile
 15336  00293C  A4D8               	btfss	status,2,c
 15337  00293E  D00E               	goto	i2l7232
 15338                           
 15339                           ; BSR set to: 1
 15340                           ;interrupt.c: 462: current_state1 = 0;
 15341  002940  0E00               	movlw	0
 15342  002942  6E7E               	movwf	_current_state1,c	;volatile
 15343                           
 15344                           ;interrupt.c: 463: down_period1 = 20000;
 15345  002944  0E4E               	movlw	78
 15346  002946  6E78               	movwf	_down_period1+1,c	;volatile
 15347  002948  0E20               	movlw	32
 15348  00294A  6E77               	movwf	_down_period1,c	;volatile
 15349                           
 15350                           ; BSR set to: 1
 15351                           ;interrupt.c: 464: LATCbits.LATC6 = 0;
 15352  00294C  9C8B               	bcf	3979,6,c	;volatile
 15353                           
 15354                           ; BSR set to: 1
 15355                           ;interrupt.c: 465: set_external_interrupt1(down_period1);
 15356  00294E  C077  F00F         	movff	_down_period1,i2set_external_interrupt1@time	;volatile
 15357  002952  C078  F010         	movff	_down_period1+1,i2set_external_interrupt1@time+1	;volatile
 15358  002956  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15359                           
 15360                           ;interrupt.c: 467: }
 15361  00295A  D018               	goto	i2l7244
 15362  00295C                     i2l7232:
 15363                           
 15364                           ;interrupt.c: 468: else if (current_state1 == 0){
 15365  00295C  507E               	movf	_current_state1,w,c	;volatile
 15366  00295E  A4D8               	btfss	status,2,c
 15367  002960  D015               	goto	i2l7244
 15368                           
 15369                           ;interrupt.c: 470: current_state1 = 1;
 15370  002962  0E01               	movlw	1
 15371  002964  6E7E               	movwf	_current_state1,c	;volatile
 15372                           
 15373                           ;interrupt.c: 471: up_period1 = 1575;
 15374  002966  0E06               	movlw	6
 15375  002968  6E7A               	movwf	_up_period1+1,c	;volatile
 15376  00296A  0E27               	movlw	39
 15377  00296C  6E79               	movwf	_up_period1,c	;volatile
 15378                           
 15379                           ;interrupt.c: 472: if(process3 == 1){
 15380  00296E  0101               	movlb	1	; () banked
 15381  002970  054F               	decf	_process3& (0+255),w,b	;volatile
 15382  002972  A4D8               	btfss	status,2,c
 15383  002974  D004               	goto	i2l7240
 15384                           
 15385                           ; BSR set to: 1
 15386                           ;interrupt.c: 473: up_period1 = 1605;
 15387  002976  0E06               	movlw	6
 15388  002978  6E7A               	movwf	_up_period1+1,c	;volatile
 15389  00297A  0E45               	movlw	69
 15390  00297C  6E79               	movwf	_up_period1,c	;volatile
 15391  00297E                     i2l7240:
 15392                           
 15393                           ; BSR set to: 1
 15394                           ;interrupt.c: 474: }
 15395                           ;interrupt.c: 475: LATCbits.LATC6 = 1;
 15396  00297E  8C8B               	bsf	3979,6,c	;volatile
 15397                           
 15398                           ; BSR set to: 1
 15399                           ;interrupt.c: 476: set_external_interrupt1(up_period1);
 15400  002980  C079  F00F         	movff	_up_period1,i2set_external_interrupt1@time	;volatile
 15401  002984  C07A  F010         	movff	_up_period1+1,i2set_external_interrupt1@time+1	;volatile
 15402  002988  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15403  00298C                     i2l7244:
 15404                           
 15405                           ;interrupt.c: 478: }
 15406                           ;interrupt.c: 479: count1++;
 15407  00298C  4A75               	infsnz	_count1,f,c	;volatile
 15408  00298E  2A76               	incf	_count1+1,f,c	;volatile
 15409                           
 15410                           ;interrupt.c: 480: return;
 15411  002990  0012               	return	
 15412  002992                     i2l7248:
 15413                           
 15414                           ;interrupt.c: 481: }
 15415                           ;interrupt.c: 482: gate_status1 = 0;
 15416  002992  0E00               	movlw	0
 15417  002994  0101               	movlb	1	; () banked
 15418  002996  6F57               	movwf	_gate_status1& (0+255),b	;volatile
 15419                           
 15420                           ;interrupt.c: 483: count1 = 0;
 15421  002998  0E00               	movlw	0
 15422  00299A  6E76               	movwf	_count1+1,c	;volatile
 15423  00299C  0E00               	movlw	0
 15424  00299E  6E75               	movwf	_count1,c	;volatile
 15425                           
 15426                           ; BSR set to: 1
 15427                           ;interrupt.c: 484: LATCbits.LATC6 = 0;
 15428  0029A0  9C8B               	bcf	3979,6,c	;volatile
 15429                           
 15430                           ;interrupt.c: 485: current_state1 = 0;
 15431  0029A2  0E00               	movlw	0
 15432  0029A4  6E7E               	movwf	_current_state1,c	;volatile
 15433                           
 15434                           ; BSR set to: 1
 15435                           ;interrupt.c: 486: set_external_interrupt1(20000);
 15436  0029A6  0E4E               	movlw	78
 15437  0029A8  6E10               	movwf	i2set_external_interrupt1@time+1,c
 15438  0029AA  0E20               	movlw	32
 15439  0029AC  6E0F               	movwf	i2set_external_interrupt1@time,c
 15440  0029AE  EC29  F02D         	call	i2_set_external_interrupt1	;wreg free
 15441                           
 15442                           ;interrupt.c: 487: stage1 = 3;
 15443  0029B2  0E03               	movlw	3
 15444  0029B4  6E7C               	movwf	_stage1,c	;volatile
 15445                           
 15446                           ;interrupt.c: 488: return;
 15447  0029B6  0012               	return	
 15448  0029B8                     __end_of_servo_ISR_1:
 15449                           	opt stack 0
 15450                           pclatu	equ	0xFFB
 15451                           pclath	equ	0xFFA
 15452                           tblptru	equ	0xFF8
 15453                           tblptrh	equ	0xFF7
 15454                           tblptrl	equ	0xFF6
 15455                           tablat	equ	0xFF5
 15456                           prodh	equ	0xFF4
 15457                           prodl	equ	0xFF3
 15458                           intcon	equ	0xFF2
 15459                           intcon2	equ	0xFF1
 15460                           postinc0	equ	0xFEE
 15461                           fsr0h	equ	0xFEA
 15462                           fsr0l	equ	0xFE9
 15463                           wreg	equ	0xFE8
 15464                           fsr1h	equ	0xFE2
 15465                           fsr1l	equ	0xFE1
 15466                           indf2	equ	0xFDF
 15467                           postinc2	equ	0xFDE
 15468                           postdec2	equ	0xFDD
 15469                           fsr2h	equ	0xFDA
 15470                           fsr2l	equ	0xFD9
 15471                           status	equ	0xFD8
 15472                           
 15473 ;; *************** function i2_set_external_interrupt1 *****************
 15474 ;; Defined at:
 15475 ;;		line 85 in file "interrupt.c"
 15476 ;; Parameters:    Size  Location     Type
 15477 ;;  time            2   14[COMRAM] int 
 15478 ;; Auto vars:     Size  Location     Type
 15479 ;;  set_external    2   16[COMRAM] unsigned int 
 15480 ;; Return value:  Size  Location     Type
 15481 ;;                  1    wreg      void 
 15482 ;; Registers used:
 15483 ;;		wreg, status,2, status,0, cstack
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15492 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15493 ;;Total ram usage:        4 bytes
 15494 ;; Hardware stack levels used:    1
 15495 ;; Hardware stack levels required when called:    1
 15496 ;; This function calls:
 15497 ;;		i2___awdiv
 15498 ;; This function is called by:
 15499 ;;		_servo_ISR_1
 15500 ;; This function uses a non-reentrant model
 15501 ;;
 15502                           
 15503                           	psect	text44
 15504  005A52                     __ptext44:
 15505                           	opt stack 0
 15506  005A52                     i2_set_external_interrupt1:
 15507                           	opt stack 23
 15508                           
 15509                           ;interrupt.c: 87: unsigned int set_time = 65535 - (time*2/4);
 15510                           
 15511                           ;incstack = 0
 15512  005A52  90D8               	bcf	status,0,c
 15513  005A54  340F               	rlcf	i2set_external_interrupt1@time,w,c
 15514  005A56  6E07               	movwf	i2___awdiv@dividend,c
 15515  005A58  3410               	rlcf	i2set_external_interrupt1@time+1,w,c
 15516  005A5A  6E08               	movwf	i2___awdiv@dividend+1,c
 15517  005A5C  0E00               	movlw	0
 15518  005A5E  6E0A               	movwf	i2___awdiv@divisor+1,c
 15519  005A60  0E04               	movlw	4
 15520  005A62  6E09               	movwf	i2___awdiv@divisor,c
 15521  005A64  EC61  F02A         	call	i2___awdiv	;wreg free
 15522  005A68  1E07               	comf	?i2___awdiv,f,c
 15523  005A6A  1E08               	comf	?i2___awdiv+1,f,c
 15524  005A6C  4A07               	infsnz	?i2___awdiv,f,c
 15525  005A6E  2A08               	incf	?i2___awdiv+1,f,c
 15526  005A70  0EFF               	movlw	255
 15527  005A72  2407               	addwf	?i2___awdiv,w,c
 15528  005A74  6E11               	movwf	i2set_external_interrupt1@set_time,c
 15529  005A76  0EFF               	movlw	255
 15530  005A78  2008               	addwfc	?i2___awdiv+1,w,c
 15531  005A7A  6E12               	movwf	i2set_external_interrupt1@set_time+1,c
 15532                           
 15533                           ;interrupt.c: 89: TMR1H = set_time >> 8;
 15534  005A7C  5012               	movf	i2set_external_interrupt1@set_time+1,w,c
 15535  005A7E  6ECF               	movwf	4047,c	;volatile
 15536                           
 15537                           ;interrupt.c: 90: TMR1L = set_time & 0b11111111;
 15538  005A80  C011  FFCE         	movff	i2set_external_interrupt1@set_time,4046	;volatile
 15539                           
 15540                           ;interrupt.c: 91: TMR1ON = 1;
 15541  005A84  80CD               	bsf	4045,0,c	;volatile
 15542                           
 15543                           ;interrupt.c: 93: if(isr3 == 1){
 15544  005A86  0100               	movlb	0	; () banked
 15545  005A88  05F0               	decf	_isr3& (0+255),w,b	;volatile
 15546  005A8A  A4D8               	btfss	status,2,c
 15547  005A8C  D008               	goto	i2l6064
 15548                           
 15549                           ; BSR set to: 0
 15550                           ;interrupt.c: 95: set_time = 65535 - (20000*2/4);
 15551  005A8E  0E18               	movlw	24
 15552  005A90  6E12               	movwf	i2set_external_interrupt1@set_time+1,c
 15553  005A92  0EEF               	movlw	239
 15554  005A94  6E11               	movwf	i2set_external_interrupt1@set_time,c
 15555                           
 15556                           ;interrupt.c: 97: TMR3H = set_time >> 8;
 15557  005A96  5012               	movf	i2set_external_interrupt1@set_time+1,w,c
 15558  005A98  6EB3               	movwf	4019,c	;volatile
 15559                           
 15560                           ; BSR set to: 0
 15561                           ;interrupt.c: 98: TMR3L = set_time & 0b11111111;
 15562  005A9A  C011  FFB2         	movff	i2set_external_interrupt1@set_time,4018	;volatile
 15563  005A9E                     i2l6064:
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;interrupt.c: 100: }
 15567                           ;interrupt.c: 102: if(process3 == 1){
 15568  005A9E  0101               	movlb	1	; () banked
 15569  005AA0  054F               	decf	_process3& (0+255),w,b	;volatile
 15570  005AA2  A4D8               	btfss	status,2,c
 15571  005AA4  0012               	return	
 15572                           
 15573                           ; BSR set to: 1
 15574                           ;interrupt.c: 103: TMR3ON = 1;
 15575  005AA6  80B1               	bsf	4017,0,c	;volatile
 15576  005AA8  0012               	return	
 15577  005AAA                     __end_ofi2_set_external_interrupt1:
 15578                           	opt stack 0
 15579                           pclatu	equ	0xFFB
 15580                           pclath	equ	0xFFA
 15581                           tblptru	equ	0xFF8
 15582                           tblptrh	equ	0xFF7
 15583                           tblptrl	equ	0xFF6
 15584                           tablat	equ	0xFF5
 15585                           prodh	equ	0xFF4
 15586                           prodl	equ	0xFF3
 15587                           intcon	equ	0xFF2
 15588                           intcon2	equ	0xFF1
 15589                           postinc0	equ	0xFEE
 15590                           fsr0h	equ	0xFEA
 15591                           fsr0l	equ	0xFE9
 15592                           wreg	equ	0xFE8
 15593                           fsr1h	equ	0xFE2
 15594                           fsr1l	equ	0xFE1
 15595                           indf2	equ	0xFDF
 15596                           postinc2	equ	0xFDE
 15597                           postdec2	equ	0xFDD
 15598                           fsr2h	equ	0xFDA
 15599                           fsr2l	equ	0xFD9
 15600                           status	equ	0xFD8
 15601                           
 15602 ;; *************** function i2_readADC *****************
 15603 ;; Defined at:
 15604 ;;		line 35 in file "ADC.c"
 15605 ;; Parameters:    Size  Location     Type
 15606 ;;  channel         1    wreg     unsigned char 
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;  channel         1   70[COMRAM] unsigned char 
 15609 ;;  readADC         3   67[COMRAM] float 
 15610 ;;  readADC         3   63[COMRAM] float 
 15611 ;;  readADC         1   66[COMRAM] unsigned char 
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  3   60[COMRAM] float 
 15614 ;; Registers used:
 15615 ;;		wreg, status,2, status,0, cstack
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15621 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15622 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15624 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15625 ;;Total ram usage:       11 bytes
 15626 ;; Hardware stack levels used:    1
 15627 ;; Hardware stack levels required when called:    3
 15628 ;; This function calls:
 15629 ;;		i2___ftadd
 15630 ;;		i2___ftdiv
 15631 ;;		i2___ftmul
 15632 ;;		i2___lwtoft
 15633 ;;		i2_abs
 15634 ;;		i2_read
 15635 ;; This function is called by:
 15636 ;;		_servo_ISR_1
 15637 ;;		_servo_ISR_3
 15638 ;; This function uses a non-reentrant model
 15639 ;;
 15640                           
 15641                           	psect	text45
 15642  004948                     __ptext45:
 15643                           	opt stack 0
 15644  004948                     i2_readADC:
 15645                           	opt stack 21
 15646                           
 15647                           ; BSR set to: 1
 15648                           ;incstack = 0
 15649                           ;i2readADC@channel stored from wreg
 15650  004948  6E47               	movwf	i2readADC@channel,c
 15651                           
 15652                           ;ADC.c: 37: signed float a = 0;
 15653  00494A  0E00               	movlw	0
 15654  00494C  6E44               	movwf	i2readADC@a,c
 15655  00494E  0E00               	movlw	0
 15656  004950  6E45               	movwf	i2readADC@a+1,c
 15657  004952  0E00               	movlw	0
 15658  004954  6E46               	movwf	i2readADC@a+2,c
 15659                           
 15660                           ;ADC.c: 39: for(unsigned char i = 0; i < 25; i++){
 15661  004956  0E00               	movlw	0
 15662  004958  6E43               	movwf	i2readADC@i,c
 15663  00495A                     i2l6088:
 15664  00495A  0E18               	movlw	24
 15665  00495C  6443               	cpfsgt	i2readADC@i,c
 15666  00495E  D001               	goto	i2l6092
 15667  004960  D020               	goto	i2l6100
 15668  004962                     i2l6092:
 15669                           
 15670                           ;ADC.c: 41: read(channel);
 15671  004962  5047               	movf	i2readADC@channel,w,c
 15672  004964  EC15  F02F         	call	i2_read
 15673                           
 15674                           ;ADC.c: 42: a = a + ADRES;
 15675  004968  CFC3 F009          	movff	4035,i2___lwtoft@c	;volatile
 15676  00496C  CFC4 F00A          	movff	4036,i2___lwtoft@c+1	;volatile
 15677  004970  EC3B  F02F         	call	i2___lwtoft	;wreg free
 15678  004974  C009  F02E         	movff	?i2___lwtoft,i2___ftadd@f1
 15679  004978  C00A  F02F         	movff	?i2___lwtoft+1,i2___ftadd@f1+1
 15680  00497C  C00B  F030         	movff	?i2___lwtoft+2,i2___ftadd@f1+2
 15681  004980  C044  F031         	movff	i2readADC@a,i2___ftadd@f2
 15682  004984  C045  F032         	movff	i2readADC@a+1,i2___ftadd@f2+1
 15683  004988  C046  F033         	movff	i2readADC@a+2,i2___ftadd@f2+2
 15684  00498C  ECFE  F01E         	call	i2___ftadd	;wreg free
 15685  004990  C02E  F044         	movff	?i2___ftadd,i2readADC@a
 15686  004994  C02F  F045         	movff	?i2___ftadd+1,i2readADC@a+1
 15687  004998  C030  F046         	movff	?i2___ftadd+2,i2readADC@a+2
 15688                           
 15689                           ;ADC.c: 44: _delay((unsigned long)((1)*(8000000/4000000.0)));
 15690  00499C  D000               	nop2		;2 cycle nop
 15691  00499E  2A43               	incf	i2readADC@i,f,c
 15692  0049A0  D7DC               	goto	i2l6088
 15693  0049A2                     i2l6100:
 15694                           
 15695                           ;ADC.c: 45: }
 15696                           ;ADC.c: 47: a = a/25;
 15697  0049A2  C044  F024         	movff	i2readADC@a,i2___ftdiv@f1
 15698  0049A6  C045  F025         	movff	i2readADC@a+1,i2___ftdiv@f1+1
 15699  0049AA  C046  F026         	movff	i2readADC@a+2,i2___ftdiv@f1+2
 15700  0049AE  0E00               	movlw	0
 15701  0049B0  6E27               	movwf	i2___ftdiv@f2,c
 15702  0049B2  0EC8               	movlw	200
 15703  0049B4  6E28               	movwf	i2___ftdiv@f2+1,c
 15704  0049B6  0E41               	movlw	65
 15705  0049B8  6E29               	movwf	i2___ftdiv@f2+2,c
 15706  0049BA  EC47  F027         	call	i2___ftdiv	;wreg free
 15707  0049BE  C024  F044         	movff	?i2___ftdiv,i2readADC@a
 15708  0049C2  C025  F045         	movff	?i2___ftdiv+1,i2readADC@a+1
 15709  0049C6  C026  F046         	movff	?i2___ftdiv+2,i2readADC@a+2
 15710                           
 15711                           ;ADC.c: 49: signed float volt = a*4.957152/1023;
 15712  0049CA  0EA1               	movlw	161
 15713  0049CC  6E18               	movwf	i2___ftmul@f2,c
 15714  0049CE  0E9E               	movlw	158
 15715  0049D0  6E19               	movwf	i2___ftmul@f2+1,c
 15716  0049D2  0E40               	movlw	64
 15717  0049D4  6E1A               	movwf	i2___ftmul@f2+2,c
 15718  0049D6  C044  F015         	movff	i2readADC@a,i2___ftmul@f1
 15719  0049DA  C045  F016         	movff	i2readADC@a+1,i2___ftmul@f1+1
 15720  0049DE  C046  F017         	movff	i2readADC@a+2,i2___ftmul@f1+2
 15721  0049E2  EC53  F026         	call	i2___ftmul	;wreg free
 15722  0049E6  C015  F024         	movff	?i2___ftmul,i2___ftdiv@f1
 15723  0049EA  C016  F025         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 15724  0049EE  C017  F026         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 15725  0049F2  0EC0               	movlw	192
 15726  0049F4  6E27               	movwf	i2___ftdiv@f2,c
 15727  0049F6  0E7F               	movlw	127
 15728  0049F8  6E28               	movwf	i2___ftdiv@f2+1,c
 15729  0049FA  0E44               	movlw	68
 15730  0049FC  6E29               	movwf	i2___ftdiv@f2+2,c
 15731  0049FE  EC47  F027         	call	i2___ftdiv	;wreg free
 15732  004A02  C024  F040         	movff	?i2___ftdiv,i2readADC@volt
 15733  004A06  C025  F041         	movff	?i2___ftdiv+1,i2readADC@volt+1
 15734  004A0A  C026  F042         	movff	?i2___ftdiv+2,i2readADC@volt+2
 15735                           
 15736                           ;ADC.c: 51: if(channel == 1 || channel == 2 || channel == 5 || channel == 6){
 15737  004A0E  0447               	decf	i2readADC@channel,w,c
 15738  004A10  B4D8               	btfsc	status,2,c
 15739  004A12  D00C               	goto	i2l6110
 15740  004A14  0E02               	movlw	2
 15741  004A16  1847               	xorwf	i2readADC@channel,w,c
 15742  004A18  B4D8               	btfsc	status,2,c
 15743  004A1A  D008               	goto	i2l6110
 15744  004A1C  0E05               	movlw	5
 15745  004A1E  1847               	xorwf	i2readADC@channel,w,c
 15746  004A20  B4D8               	btfsc	status,2,c
 15747  004A22  D004               	goto	i2l6110
 15748  004A24  0E06               	movlw	6
 15749  004A26  1847               	xorwf	i2readADC@channel,w,c
 15750  004A28  A4D8               	btfss	status,2,c
 15751  004A2A  D01C               	goto	i2l6112
 15752  004A2C                     i2l6110:
 15753                           
 15754                           ;ADC.c: 52: volt = abs(volt - 2.5);
 15755  004A2C  C040  F02E         	movff	i2readADC@volt,i2___ftadd@f1
 15756  004A30  C041  F02F         	movff	i2readADC@volt+1,i2___ftadd@f1+1
 15757  004A34  C042  F030         	movff	i2readADC@volt+2,i2___ftadd@f1+2
 15758  004A38  0E00               	movlw	0
 15759  004A3A  6E31               	movwf	i2___ftadd@f2,c
 15760  004A3C  0E20               	movlw	32
 15761  004A3E  6E32               	movwf	i2___ftadd@f2+1,c
 15762  004A40  0EC0               	movlw	192
 15763  004A42  6E33               	movwf	i2___ftadd@f2+2,c
 15764  004A44  ECFE  F01E         	call	i2___ftadd	;wreg free
 15765  004A48  C02E  F03A         	movff	?i2___ftadd,i2abs@num
 15766  004A4C  C02F  F03B         	movff	?i2___ftadd+1,i2abs@num+1
 15767  004A50  C030  F03C         	movff	?i2___ftadd+2,i2abs@num+2
 15768  004A54  EC55  F02D         	call	i2_abs	;wreg free
 15769  004A58  C03A  F040         	movff	?i2_abs,i2readADC@volt
 15770  004A5C  C03B  F041         	movff	?i2_abs+1,i2readADC@volt+1
 15771  004A60  C03C  F042         	movff	?i2_abs+2,i2readADC@volt+2
 15772  004A64                     i2l6112:
 15773                           
 15774                           ;ADC.c: 53: }
 15775                           ;ADC.c: 55: return volt;
 15776  004A64  C040  F03D         	movff	i2readADC@volt,?i2_readADC
 15777  004A68  C041  F03E         	movff	i2readADC@volt+1,?i2_readADC+1
 15778  004A6C  C042  F03F         	movff	i2readADC@volt+2,?i2_readADC+2
 15779  004A70  0012               	return	
 15780  004A72                     __end_ofi2_readADC:
 15781                           	opt stack 0
 15782                           pclatu	equ	0xFFB
 15783                           pclath	equ	0xFFA
 15784                           tblptru	equ	0xFF8
 15785                           tblptrh	equ	0xFF7
 15786                           tblptrl	equ	0xFF6
 15787                           tablat	equ	0xFF5
 15788                           prodh	equ	0xFF4
 15789                           prodl	equ	0xFF3
 15790                           intcon	equ	0xFF2
 15791                           intcon2	equ	0xFF1
 15792                           postinc0	equ	0xFEE
 15793                           fsr0h	equ	0xFEA
 15794                           fsr0l	equ	0xFE9
 15795                           wreg	equ	0xFE8
 15796                           fsr1h	equ	0xFE2
 15797                           fsr1l	equ	0xFE1
 15798                           indf2	equ	0xFDF
 15799                           postinc2	equ	0xFDE
 15800                           postdec2	equ	0xFDD
 15801                           fsr2h	equ	0xFDA
 15802                           fsr2l	equ	0xFD9
 15803                           status	equ	0xFD8
 15804                           
 15805 ;; *************** function i2_read *****************
 15806 ;; Defined at:
 15807 ;;		line 27 in file "ADC.c"
 15808 ;; Parameters:    Size  Location     Type
 15809 ;;  channel2        1    wreg     unsigned char 
 15810 ;; Auto vars:     Size  Location     Type
 15811 ;;  channel2        1    1[COMRAM] unsigned char 
 15812 ;; Return value:  Size  Location     Type
 15813 ;;                  1    wreg      void 
 15814 ;; Registers used:
 15815 ;;		wreg, status,2, status,0, cstack
 15816 ;; Tracked objects:
 15817 ;;		On entry : 0/0
 15818 ;;		On exit  : 0/0
 15819 ;;		Unchanged: 0/0
 15820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15825 ;;Total ram usage:        2 bytes
 15826 ;; Hardware stack levels used:    1
 15827 ;; This function calls:
 15828 ;;		Nothing
 15829 ;; This function is called by:
 15830 ;;		i2_readADC
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           	psect	text46
 15835  005E2A                     __ptext46:
 15836                           	opt stack 0
 15837  005E2A                     i2_read:
 15838                           	opt stack 23
 15839                           
 15840                           ;incstack = 0
 15841                           ;i2read@channel2 stored from wreg
 15842  005E2A  6E02               	movwf	i2read@channel2,c
 15843                           
 15844                           ;ADC.c: 29: ADCON0 = ((channel2 << 2));
 15845  005E2C  4402               	rlncf	i2read@channel2,w,c
 15846  005E2E  46E8               	rlncf	wreg,f,c
 15847  005E30  0BFC               	andlw	252
 15848  005E32  6EC2               	movwf	4034,c	;volatile
 15849                           
 15850                           ;ADC.c: 30: ADON = 1;
 15851  005E34  80C2               	bsf	4034,0,c	;volatile
 15852                           
 15853                           ;ADC.c: 31: ADCON0bits.GO = 1;
 15854  005E36  82C2               	bsf	4034,1,c	;volatile
 15855                           
 15856                           ;ADC.c: 32: while(ADCON0bits.GO_NOT_DONE){_delay((unsigned long)((2)*(8000000/4000.0)));
      +                          }
 15857  005E38  D008               	goto	i2l5322
 15858  005E3A                     i2l5320:
 15859  005E3A  0E06               	movlw	6
 15860  005E3C  6E01               	movwf	??i2_read& (0+255),c
 15861  005E3E  0E30               	movlw	48
 15862  005E40                     i2u955_47:
 15863  005E40  2EE8               	decfsz	wreg,f,c
 15864  005E42  D7FE               	bra	i2u955_47
 15865  005E44  2E01               	decfsz	??i2_read& (0+255),f,c
 15866  005E46  D7FC               	bra	i2u955_47
 15867  005E48  D000               	nop2	
 15868  005E4A                     i2l5322:
 15869  005E4A  A2C2               	btfss	4034,1,c	;volatile
 15870  005E4C  0012               	return	
 15871  005E4E  D7F5               	goto	i2l5320
 15872  005E50                     __end_ofi2_read:
 15873                           	opt stack 0
 15874                           pclatu	equ	0xFFB
 15875                           pclath	equ	0xFFA
 15876                           tblptru	equ	0xFF8
 15877                           tblptrh	equ	0xFF7
 15878                           tblptrl	equ	0xFF6
 15879                           tablat	equ	0xFF5
 15880                           prodh	equ	0xFF4
 15881                           prodl	equ	0xFF3
 15882                           intcon	equ	0xFF2
 15883                           intcon2	equ	0xFF1
 15884                           postinc0	equ	0xFEE
 15885                           fsr0h	equ	0xFEA
 15886                           fsr0l	equ	0xFE9
 15887                           wreg	equ	0xFE8
 15888                           fsr1h	equ	0xFE2
 15889                           fsr1l	equ	0xFE1
 15890                           indf2	equ	0xFDF
 15891                           postinc2	equ	0xFDE
 15892                           postdec2	equ	0xFDD
 15893                           fsr2h	equ	0xFDA
 15894                           fsr2l	equ	0xFD9
 15895                           status	equ	0xFD8
 15896                           
 15897 ;; *************** function i2_abs *****************
 15898 ;; Defined at:
 15899 ;;		line 20 in file "ADC.c"
 15900 ;; Parameters:    Size  Location     Type
 15901 ;;  num             3   57[COMRAM] float 
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;		None
 15904 ;; Return value:  Size  Location     Type
 15905 ;;                  3   57[COMRAM] float 
 15906 ;; Registers used:
 15907 ;;		wreg, status,2, status,0, cstack
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15913 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15917 ;;Total ram usage:        3 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:    2
 15920 ;; This function calls:
 15921 ;;		i2___ftge
 15922 ;;		i2___ftmul
 15923 ;; This function is called by:
 15924 ;;		i2_readADC
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           	psect	text47
 15929  005AAA                     __ptext47:
 15930                           	opt stack 0
 15931  005AAA                     i2_abs:
 15932                           	opt stack 21
 15933                           
 15934                           ;ADC.c: 21: if(num > 0){
 15935                           
 15936                           ;incstack = 0
 15937  005AAA  0E00               	movlw	0
 15938  005AAC  6E01               	movwf	i2___ftge@ff1,c
 15939  005AAE  0E00               	movlw	0
 15940  005AB0  6E02               	movwf	i2___ftge@ff1+1,c
 15941  005AB2  0E00               	movlw	0
 15942  005AB4  6E03               	movwf	i2___ftge@ff1+2,c
 15943  005AB6  C03A  F004         	movff	i2abs@num,i2___ftge@ff2
 15944  005ABA  C03B  F005         	movff	i2abs@num+1,i2___ftge@ff2+1
 15945  005ABE  C03C  F006         	movff	i2abs@num+2,i2___ftge@ff2+2
 15946  005AC2  EC19  F02A         	call	i2___ftge	;wreg free
 15947  005AC6  B0D8               	btfsc	status,0,c
 15948  005AC8  D007               	goto	i2l5310
 15949                           
 15950                           ;ADC.c: 22: return num;
 15951  005ACA  C03A  F03A         	movff	i2abs@num,?i2_abs
 15952  005ACE  C03B  F03B         	movff	i2abs@num+1,?i2_abs+1
 15953  005AD2  C03C  F03C         	movff	i2abs@num+2,?i2_abs+2
 15954  005AD6  0012               	return	
 15955  005AD8                     i2l5310:
 15956                           
 15957                           ;ADC.c: 23: }
 15958                           ;ADC.c: 24: return (-1)*num;
 15959  005AD8  C03A  F015         	movff	i2abs@num,i2___ftmul@f1
 15960  005ADC  C03B  F016         	movff	i2abs@num+1,i2___ftmul@f1+1
 15961  005AE0  C03C  F017         	movff	i2abs@num+2,i2___ftmul@f1+2
 15962  005AE4  0E00               	movlw	0
 15963  005AE6  6E18               	movwf	i2___ftmul@f2,c
 15964  005AE8  0E80               	movlw	128
 15965  005AEA  6E19               	movwf	i2___ftmul@f2+1,c
 15966  005AEC  0EBF               	movlw	191
 15967  005AEE  6E1A               	movwf	i2___ftmul@f2+2,c
 15968  005AF0  EC53  F026         	call	i2___ftmul	;wreg free
 15969  005AF4  C015  F03A         	movff	?i2___ftmul,?i2_abs
 15970  005AF8  C016  F03B         	movff	?i2___ftmul+1,?i2_abs+1
 15971  005AFC  C017  F03C         	movff	?i2___ftmul+2,?i2_abs+2
 15972  005B00  0012               	return	
 15973  005B02                     __end_ofi2_abs:
 15974                           	opt stack 0
 15975                           pclatu	equ	0xFFB
 15976                           pclath	equ	0xFFA
 15977                           tblptru	equ	0xFF8
 15978                           tblptrh	equ	0xFF7
 15979                           tblptrl	equ	0xFF6
 15980                           tablat	equ	0xFF5
 15981                           prodh	equ	0xFF4
 15982                           prodl	equ	0xFF3
 15983                           intcon	equ	0xFF2
 15984                           intcon2	equ	0xFF1
 15985                           postinc0	equ	0xFEE
 15986                           fsr0h	equ	0xFEA
 15987                           fsr0l	equ	0xFE9
 15988                           wreg	equ	0xFE8
 15989                           fsr1h	equ	0xFE2
 15990                           fsr1l	equ	0xFE1
 15991                           indf2	equ	0xFDF
 15992                           postinc2	equ	0xFDE
 15993                           postdec2	equ	0xFDD
 15994                           fsr2h	equ	0xFDA
 15995                           fsr2l	equ	0xFD9
 15996                           status	equ	0xFD8
 15997                           
 15998 ;; *************** function i2___lwtoft *****************
 15999 ;; Defined at:
 16000 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  c               2    8[COMRAM] unsigned int 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  3    8[COMRAM] float 
 16007 ;; Registers used:
 16008 ;;		wreg, status,2, status,0, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16014 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16017 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16018 ;;Total ram usage:        3 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:    1
 16021 ;; This function calls:
 16022 ;;		i2___ftpack
 16023 ;; This function is called by:
 16024 ;;		i2_readADC
 16025 ;; This function uses a non-reentrant model
 16026 ;;
 16027                           
 16028                           	psect	text48
 16029  005E76                     __ptext48:
 16030                           	opt stack 0
 16031  005E76                     i2___lwtoft:
 16032                           	opt stack 22
 16033                           
 16034                           ;incstack = 0
 16035  005E76  C009  F001         	movff	i2___lwtoft@c,i2___ftpack@arg
 16036  005E7A  C00A  F002         	movff	i2___lwtoft@c+1,i2___ftpack@arg+1
 16037  005E7E  6A03               	clrf	i2___ftpack@arg+2,c
 16038  005E80  0E8E               	movlw	142
 16039  005E82  6E04               	movwf	i2___ftpack@exp,c
 16040  005E84  0E00               	movlw	0
 16041  005E86  6E05               	movwf	i2___ftpack@sign,c
 16042  005E88  ECDB  F028         	call	i2___ftpack	;wreg free
 16043  005E8C  C001  F009         	movff	?i2___ftpack,?i2___lwtoft
 16044  005E90  C002  F00A         	movff	?i2___ftpack+1,?i2___lwtoft+1
 16045  005E94  C003  F00B         	movff	?i2___ftpack+2,?i2___lwtoft+2
 16046  005E98  0012               	return	
 16047  005E9A                     __end_ofi2___lwtoft:
 16048                           	opt stack 0
 16049                           pclatu	equ	0xFFB
 16050                           pclath	equ	0xFFA
 16051                           tblptru	equ	0xFF8
 16052                           tblptrh	equ	0xFF7
 16053                           tblptrl	equ	0xFF6
 16054                           tablat	equ	0xFF5
 16055                           prodh	equ	0xFF4
 16056                           prodl	equ	0xFF3
 16057                           intcon	equ	0xFF2
 16058                           intcon2	equ	0xFF1
 16059                           postinc0	equ	0xFEE
 16060                           fsr0h	equ	0xFEA
 16061                           fsr0l	equ	0xFE9
 16062                           wreg	equ	0xFE8
 16063                           fsr1h	equ	0xFE2
 16064                           fsr1l	equ	0xFE1
 16065                           indf2	equ	0xFDF
 16066                           postinc2	equ	0xFDE
 16067                           postdec2	equ	0xFDD
 16068                           fsr2h	equ	0xFDA
 16069                           fsr2l	equ	0xFD9
 16070                           status	equ	0xFD8
 16071                           
 16072 ;; *************** function i2___ftdiv *****************
 16073 ;; Defined at:
 16074 ;;		line 54 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;  f1              3   35[COMRAM] float 
 16077 ;;  f2              3   38[COMRAM] float 
 16078 ;; Auto vars:     Size  Location     Type
 16079 ;;  __ftdiv         3   45[COMRAM] float 
 16080 ;;  __ftdiv         1   49[COMRAM] unsigned char 
 16081 ;;  __ftdiv         1   48[COMRAM] unsigned char 
 16082 ;;  __ftdiv         1   44[COMRAM] unsigned char 
 16083 ;; Return value:  Size  Location     Type
 16084 ;;                  3   35[COMRAM] float 
 16085 ;; Registers used:
 16086 ;;		wreg, status,2, status,0, cstack
 16087 ;; Tracked objects:
 16088 ;;		On entry : 0/0
 16089 ;;		On exit  : 0/0
 16090 ;;		Unchanged: 0/0
 16091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16092 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16093 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16094 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16095 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16096 ;;Total ram usage:       15 bytes
 16097 ;; Hardware stack levels used:    1
 16098 ;; Hardware stack levels required when called:    1
 16099 ;; This function calls:
 16100 ;;		i2___ftpack
 16101 ;; This function is called by:
 16102 ;;		i2_readADC
 16103 ;; This function uses a non-reentrant model
 16104 ;;
 16105                           
 16106                           	psect	text49
 16107  004E8E                     __ptext49:
 16108                           	opt stack 0
 16109  004E8E                     i2___ftdiv:
 16110                           	opt stack 22
 16111                           
 16112                           ;incstack = 0
 16113  004E8E  C026  F02A         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 16114  004E92  6A2B               	clrf	(??i2___ftdiv+1)& (0+255),c
 16115  004E94  6A2C               	clrf	(??i2___ftdiv+2)& (0+255),c
 16116  004E96  3425               	rlcf	i2___ftdiv@f1+1,w,c
 16117  004E98  362A               	rlcf	??i2___ftdiv& (0+255),f,c
 16118  004E9A  E301               	bnc	u583_41
 16119  004E9C  802B               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 16120  004E9E                     u583_41:
 16121  004E9E  502A               	movf	??i2___ftdiv,w,c
 16122  004EA0  6E31               	movwf	i2___ftdiv@exp,c
 16123  004EA2  5031               	movf	i2___ftdiv@exp,w,c
 16124  004EA4  A4D8               	btfss	status,2,c
 16125  004EA6  D007               	goto	i2l5458
 16126  004EA8  0E00               	movlw	0
 16127  004EAA  6E24               	movwf	?i2___ftdiv,c
 16128  004EAC  0E00               	movlw	0
 16129  004EAE  6E25               	movwf	?i2___ftdiv+1,c
 16130  004EB0  0E00               	movlw	0
 16131  004EB2  6E26               	movwf	?i2___ftdiv+2,c
 16132  004EB4  0012               	return	
 16133  004EB6                     i2l5458:
 16134  004EB6  C029  F02A         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 16135  004EBA  6A2B               	clrf	(??i2___ftdiv+1)& (0+255),c
 16136  004EBC  6A2C               	clrf	(??i2___ftdiv+2)& (0+255),c
 16137  004EBE  3428               	rlcf	i2___ftdiv@f2+1,w,c
 16138  004EC0  362A               	rlcf	??i2___ftdiv& (0+255),f,c
 16139  004EC2  E301               	bnc	u585_41
 16140  004EC4  802B               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 16141  004EC6                     u585_41:
 16142  004EC6  502A               	movf	??i2___ftdiv,w,c
 16143  004EC8  6E32               	movwf	i2___ftdiv@sign,c
 16144  004ECA  5032               	movf	i2___ftdiv@sign,w,c
 16145  004ECC  A4D8               	btfss	status,2,c
 16146  004ECE  D007               	goto	i2l5464
 16147  004ED0  0E00               	movlw	0
 16148  004ED2  6E24               	movwf	?i2___ftdiv,c
 16149  004ED4  0E00               	movlw	0
 16150  004ED6  6E25               	movwf	?i2___ftdiv+1,c
 16151  004ED8  0E00               	movlw	0
 16152  004EDA  6E26               	movwf	?i2___ftdiv+2,c
 16153  004EDC  0012               	return	
 16154  004EDE                     i2l5464:
 16155  004EDE  0E00               	movlw	0
 16156  004EE0  6E2E               	movwf	i2___ftdiv@f3,c
 16157  004EE2  0E00               	movlw	0
 16158  004EE4  6E2F               	movwf	i2___ftdiv@f3+1,c
 16159  004EE6  0E00               	movlw	0
 16160  004EE8  6E30               	movwf	i2___ftdiv@f3+2,c
 16161  004EEA  5032               	movf	i2___ftdiv@sign,w,c
 16162  004EEC  0F89               	addlw	137
 16163  004EEE  5E31               	subwf	i2___ftdiv@exp,f,c
 16164  004EF0  C026  F032         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 16165  004EF4  5029               	movf	i2___ftdiv@f2+2,w,c
 16166  004EF6  1A32               	xorwf	i2___ftdiv@sign,f,c
 16167  004EF8  0E80               	movlw	128
 16168  004EFA  1632               	andwf	i2___ftdiv@sign,f,c
 16169  004EFC  8E25               	bsf	i2___ftdiv@f1+1,7,c
 16170  004EFE  0EFF               	movlw	255
 16171  004F00  1624               	andwf	i2___ftdiv@f1,f,c
 16172  004F02  0EFF               	movlw	255
 16173  004F04  1625               	andwf	i2___ftdiv@f1+1,f,c
 16174  004F06  0E00               	movlw	0
 16175  004F08  1626               	andwf	i2___ftdiv@f1+2,f,c
 16176  004F0A  8E28               	bsf	i2___ftdiv@f2+1,7,c
 16177  004F0C  0EFF               	movlw	255
 16178  004F0E  1627               	andwf	i2___ftdiv@f2,f,c
 16179  004F10  0EFF               	movlw	255
 16180  004F12  1628               	andwf	i2___ftdiv@f2+1,f,c
 16181  004F14  0E00               	movlw	0
 16182  004F16  1629               	andwf	i2___ftdiv@f2+2,f,c
 16183  004F18  0E18               	movlw	24
 16184  004F1A  6E2D               	movwf	i2___ftdiv@cntr,c
 16185  004F1C                     i2l5484:
 16186  004F1C  90D8               	bcf	status,0,c
 16187  004F1E  362E               	rlcf	i2___ftdiv@f3,f,c
 16188  004F20  362F               	rlcf	i2___ftdiv@f3+1,f,c
 16189  004F22  3630               	rlcf	i2___ftdiv@f3+2,f,c
 16190  004F24  5027               	movf	i2___ftdiv@f2,w,c
 16191  004F26  5C24               	subwf	i2___ftdiv@f1,w,c
 16192  004F28  5028               	movf	i2___ftdiv@f2+1,w,c
 16193  004F2A  5825               	subwfb	i2___ftdiv@f1+1,w,c
 16194  004F2C  5029               	movf	i2___ftdiv@f2+2,w,c
 16195  004F2E  5826               	subwfb	i2___ftdiv@f1+2,w,c
 16196  004F30  A0D8               	btfss	status,0,c
 16197  004F32  D007               	goto	i2l1185
 16198  004F34  5027               	movf	i2___ftdiv@f2,w,c
 16199  004F36  5E24               	subwf	i2___ftdiv@f1,f,c
 16200  004F38  5028               	movf	i2___ftdiv@f2+1,w,c
 16201  004F3A  5A25               	subwfb	i2___ftdiv@f1+1,f,c
 16202  004F3C  5029               	movf	i2___ftdiv@f2+2,w,c
 16203  004F3E  5A26               	subwfb	i2___ftdiv@f1+2,f,c
 16204  004F40  802E               	bsf	i2___ftdiv@f3,0,c
 16205  004F42                     i2l1185:
 16206  004F42  90D8               	bcf	status,0,c
 16207  004F44  3624               	rlcf	i2___ftdiv@f1,f,c
 16208  004F46  3625               	rlcf	i2___ftdiv@f1+1,f,c
 16209  004F48  3626               	rlcf	i2___ftdiv@f1+2,f,c
 16210  004F4A  2E2D               	decfsz	i2___ftdiv@cntr,f,c
 16211  004F4C  D7E7               	goto	i2l5484
 16212  004F4E  C02E  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 16213  004F52  C02F  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 16214  004F56  C030  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 16215  004F5A  C031  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 16216  004F5E  C032  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 16217  004F62  ECDB  F028         	call	i2___ftpack	;wreg free
 16218  004F66  C001  F024         	movff	?i2___ftpack,?i2___ftdiv
 16219  004F6A  C002  F025         	movff	?i2___ftpack+1,?i2___ftdiv+1
 16220  004F6E  C003  F026         	movff	?i2___ftpack+2,?i2___ftdiv+2
 16221  004F72  0012               	return	
 16222  004F74                     __end_ofi2___ftdiv:
 16223                           	opt stack 0
 16224                           pclatu	equ	0xFFB
 16225                           pclath	equ	0xFFA
 16226                           tblptru	equ	0xFF8
 16227                           tblptrh	equ	0xFF7
 16228                           tblptrl	equ	0xFF6
 16229                           tablat	equ	0xFF5
 16230                           prodh	equ	0xFF4
 16231                           prodl	equ	0xFF3
 16232                           intcon	equ	0xFF2
 16233                           intcon2	equ	0xFF1
 16234                           postinc0	equ	0xFEE
 16235                           fsr0h	equ	0xFEA
 16236                           fsr0l	equ	0xFE9
 16237                           wreg	equ	0xFE8
 16238                           fsr1h	equ	0xFE2
 16239                           fsr1l	equ	0xFE1
 16240                           indf2	equ	0xFDF
 16241                           postinc2	equ	0xFDE
 16242                           postdec2	equ	0xFDD
 16243                           fsr2h	equ	0xFDA
 16244                           fsr2l	equ	0xFD9
 16245                           status	equ	0xFD8
 16246                           
 16247 ;; *************** function i2_printf *****************
 16248 ;; Defined at:
 16249 ;;		line 464 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;  f               2   63[COMRAM] PTR const unsigned char 
 16252 ;;		 -> STR_27(6), STR_26(7), STR_25(7), STR_24(8), 
 16253 ;;		 -> STR_23(11), STR_22(9), STR_21(10), STR_20(12), 
 16254 ;;		 -> STR_19(5), STR_18(5), STR_17(7), STR_16(5), 
 16255 ;;		 -> STR_15(12), STR_14(8), STR_13(11), STR_12(9), 
 16256 ;;		 -> STR_11(10), STR_10(9), STR_9(5), STR_8(9), 
 16257 ;;		 -> STR_7(5), STR_6(11), STR_5(16), STR_4(7), 
 16258 ;;		 -> STR_3(16), STR_2(8), STR_1(16), 
 16259 ;; Auto vars:     Size  Location     Type
 16260 ;;  printf          4   90[COMRAM] unsigned long 
 16261 ;;  printf          4   82[COMRAM] struct .
 16262 ;;  printf          3   96[COMRAM] struct .
 16263 ;;  printf          3    0        PTR const unsigned char 
 16264 ;;  printf          2   94[COMRAM] unsigned short 
 16265 ;;  printf          2   88[COMRAM] int 
 16266 ;;  printf          2   86[COMRAM] int 
 16267 ;;  printf          2   80[COMRAM] int 
 16268 ;;  printf          2   78[COMRAM] PTR void [1]
 16269 ;;		 -> ?i2_printf(2), ?_printf(2), 
 16270 ;;  printf          2    0        unsigned int 
 16271 ;;  printf          1   99[COMRAM] char 
 16272 ;;  printf          1   77[COMRAM] unsigned char 
 16273 ;;  printf          1    0        unsigned char 
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  2   63[COMRAM] int 
 16276 ;; Registers used:
 16277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16283 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16284 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16285 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16286 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16287 ;;Total ram usage:       37 bytes
 16288 ;; Hardware stack levels used:    1
 16289 ;; Hardware stack levels required when called:    3
 16290 ;; This function calls:
 16291 ;;		i2___awdiv
 16292 ;;		i2___ftadd
 16293 ;;		i2___ftge
 16294 ;;		i2___ftmul
 16295 ;;		i2___ftneg
 16296 ;;		i2___ftsub
 16297 ;;		i2___fttol
 16298 ;;		i2___lldiv
 16299 ;;		i2___llmod
 16300 ;;		i2___lltoft
 16301 ;;		i2___wmul
 16302 ;;		i2__div_to_l_
 16303 ;;		i2__tdiv_to_l_
 16304 ;;		i2_fround
 16305 ;;		i2_isdigit
 16306 ;;		i2_putch
 16307 ;;		i2_scale
 16308 ;; This function is called by:
 16309 ;;		_servo_ISR_1
 16310 ;;		_servo_ISR_3
 16311 ;; This function uses a non-reentrant model
 16312 ;;
 16313                           
 16314                           	psect	text50
 16315  00194C                     __ptext50:
 16316                           	opt stack 0
 16317  00194C                     i2_printf:
 16318                           	opt stack 21
 16319                           
 16320                           ;doprnt.c: 466: va_list ap;
 16321                           ;doprnt.c: 499: signed char c;
 16322                           ;doprnt.c: 501: int width;
 16323                           ;doprnt.c: 504: int prec;
 16324                           ;doprnt.c: 508: unsigned short flag;
 16325                           ;doprnt.c: 515: char d;
 16326                           ;doprnt.c: 516: double fval;
 16327                           ;doprnt.c: 517: int exp;
 16328                           ;doprnt.c: 523: union {
 16329                           ;doprnt.c: 524: unsigned long vd;
 16330                           ;doprnt.c: 525: double integ;
 16331                           ;doprnt.c: 526: } tmpval;
 16332                           ;doprnt.c: 528: unsigned long val;
 16333                           ;doprnt.c: 529: unsigned len;
 16334                           ;doprnt.c: 530: const char * cp;
 16335                           ;doprnt.c: 533: *ap = __va_start();
 16336                           
 16337                           ;incstack = 0
 16338  00194C  0E42               	movlw	low (?i2_printf+2)
 16339  00194E  6E4F               	movwf	i2printf@ap,c
 16340  001950  0E00               	movlw	high (?i2_printf+2)
 16341  001952  6E50               	movwf	i2printf@ap+1,c
 16342                           
 16343                           ;doprnt.c: 536: while(c = *f++) {
 16344  001954  EF73  F011         	goto	i2l6418
 16345  001958                     i2l6132:
 16346                           
 16347                           ;doprnt.c: 538: if(c != '%')
 16348  001958  0E25               	movlw	37
 16349  00195A  1864               	xorwf	i2printf@c,w,c
 16350  00195C  B4D8               	btfsc	status,2,c
 16351  00195E  D005               	goto	i2l6136
 16352                           
 16353                           ;doprnt.c: 540: {
 16354                           ;doprnt.c: 541: (putch(c) );
 16355  001960  5064               	movf	i2printf@c,w,c
 16356  001962  EC88  F02F         	call	i2_putch
 16357                           
 16358                           ;doprnt.c: 542: continue;
 16359  001966  EF73  F011         	goto	i2l6418
 16360  00196A                     i2l6136:
 16361                           
 16362                           ;doprnt.c: 543: }
 16363                           ;doprnt.c: 546: width = 0;
 16364  00196A  0E00               	movlw	0
 16365  00196C  6E58               	movwf	i2printf@width+1,c
 16366  00196E  0E00               	movlw	0
 16367  001970  6E57               	movwf	i2printf@width,c
 16368                           
 16369                           ;doprnt.c: 548: flag = 0;
 16370  001972  0E00               	movlw	0
 16371  001974  6E60               	movwf	i2printf@flag+1,c
 16372  001976  0E00               	movlw	0
 16373  001978  6E5F               	movwf	i2printf@flag,c
 16374                           
 16375                           ;doprnt.c: 551: switch(*f) {
 16376                           
 16377                           ;doprnt.c: 550: for(;;) {
 16378  00197A  D003               	goto	i2l6142
 16379  00197C                     i2l6138:
 16380                           
 16381                           ;doprnt.c: 580: flag |= 0x04;
 16382  00197C  845F               	bsf	i2printf@flag,2,c
 16383                           
 16384                           ;doprnt.c: 581: f++;
 16385  00197E  4A40               	infsnz	i2printf@f,f,c
 16386  001980  2A41               	incf	i2printf@f+1,f,c
 16387  001982                     i2l6142:
 16388  001982  C040  FFF6         	movff	i2printf@f,tblptrl
 16389  001986  C041  FFF7         	movff	i2printf@f+1,tblptrh
 16390  00198A                     	if	0	;tblptru may be non-zero
 16391  00198A                     	endif
 16392  00198A                     	if	0	;tblptru may be non-zero
 16393  00198A                     	endif
 16394  00198A  0008               	tblrd		*
 16395  00198C  50F5               	movf	tablat,w,c
 16396                           
 16397                           ; Switch size 1, requested type "space"
 16398                           ; Number of cases is 1, Range of values is 48 to 48
 16399                           ; switch strategies available:
 16400                           ; Name         Instructions Cycles
 16401                           ; simple_byte            4     3 (average)
 16402                           ;	Chosen strategy is simple_byte
 16403  00198E  0A30               	xorlw	48	; case 48
 16404  001990  B4D8               	btfsc	status,2,c
 16405  001992  D7F4               	goto	i2l6138
 16406                           
 16407                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 16408                           
 16409                           ;doprnt.c: 586: }
 16410                           
 16411                           ;doprnt.c: 585: break;
 16412  001994  C040  FFF6         	movff	i2printf@f,tblptrl
 16413  001998  C041  FFF7         	movff	i2printf@f+1,tblptrh
 16414  00199C                     	if	0	;tblptru may be non-zero
 16415  00199C                     	endif
 16416  00199C                     	if	0	;tblptru may be non-zero
 16417  00199C                     	endif
 16418  00199C  0008               	tblrd		*
 16419  00199E  50F5               	movf	tablat,w,c
 16420  0019A0  EC5F  F02F         	call	i2_isdigit
 16421  0019A4  A0D8               	btfss	status,0,c
 16422  0019A6  D037               	goto	i2l6162
 16423                           
 16424                           ;doprnt.c: 598: width = 0;
 16425  0019A8  0E00               	movlw	0
 16426  0019AA  6E58               	movwf	i2printf@width+1,c
 16427  0019AC  0E00               	movlw	0
 16428  0019AE  6E57               	movwf	i2printf@width,c
 16429  0019B0                     i2l6148:
 16430                           
 16431                           ;doprnt.c: 600: width *= 10;
 16432  0019B0  C057  F00F         	movff	i2printf@width,i2___wmul@multiplier
 16433  0019B4  C058  F010         	movff	i2printf@width+1,i2___wmul@multiplier+1
 16434  0019B8  0E00               	movlw	0
 16435  0019BA  6E12               	movwf	i2___wmul@multiplicand+1,c
 16436  0019BC  0E0A               	movlw	10
 16437  0019BE  6E11               	movwf	i2___wmul@multiplicand,c
 16438  0019C0  EC28  F02F         	call	i2___wmul	;wreg free
 16439  0019C4  C00F  F057         	movff	?i2___wmul,i2printf@width
 16440  0019C8  C010  F058         	movff	?i2___wmul+1,i2printf@width+1
 16441                           
 16442                           ;doprnt.c: 601: width += *f++ - '0';
 16443  0019CC  0ED0               	movlw	208
 16444  0019CE  6E45               	movwf	??i2_printf& (0+255),c
 16445  0019D0  0EFF               	movlw	255
 16446  0019D2  6E46               	movwf	(??i2_printf+1)& (0+255),c
 16447  0019D4  C040  FFF6         	movff	i2printf@f,tblptrl
 16448  0019D8  C041  FFF7         	movff	i2printf@f+1,tblptrh
 16449  0019DC                     	if	0	;tblptru may be non-zero
 16450  0019DC                     	endif
 16451  0019DC                     	if	0	;tblptru may be non-zero
 16452  0019DC                     	endif
 16453  0019DC  0008               	tblrd		*
 16454  0019DE  50F5               	movf	tablat,w,c
 16455  0019E0  6E47               	movwf	(??i2_printf+2)& (0+255),c
 16456  0019E2  6A48               	clrf	(??i2_printf+3)& (0+255),c
 16457  0019E4  5045               	movf	??i2_printf,w,c
 16458  0019E6  2647               	addwf	??i2_printf+2,f,c
 16459  0019E8  5046               	movf	??i2_printf+1,w,c
 16460  0019EA  2248               	addwfc	??i2_printf+3,f,c
 16461  0019EC  5047               	movf	??i2_printf+2,w,c
 16462  0019EE  2657               	addwf	i2printf@width,f,c
 16463  0019F0  5048               	movf	??i2_printf+3,w,c
 16464  0019F2  2258               	addwfc	i2printf@width+1,f,c
 16465  0019F4  4A40               	infsnz	i2printf@f,f,c
 16466  0019F6  2A41               	incf	i2printf@f+1,f,c
 16467                           
 16468                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 16469  0019F8  C040  FFF6         	movff	i2printf@f,tblptrl
 16470  0019FC  C041  FFF7         	movff	i2printf@f+1,tblptrh
 16471  001A00                     	if	0	;tblptru may be non-zero
 16472  001A00                     	endif
 16473  001A00                     	if	0	;tblptru may be non-zero
 16474  001A00                     	endif
 16475  001A00  0008               	tblrd		*
 16476  001A02  50F5               	movf	tablat,w,c
 16477  001A04  EC5F  F02F         	call	i2_isdigit
 16478  001A08  A0D8               	btfss	status,0,c
 16479  001A0A  D005               	goto	i2l6162
 16480  001A0C  D7D1               	goto	i2l6148
 16481  001A0E                     i2l6156:
 16482                           
 16483                           ;doprnt.c: 663: flag |= 0x400;
 16484  001A0E  8460               	bsf	i2printf@flag+1,2,c
 16485                           
 16486                           ;doprnt.c: 698: case 'i':
 16487                           ;doprnt.c: 699: break;
 16488                           
 16489                           ;doprnt.c: 697: case 'd':
 16490                           
 16491                           ;doprnt.c: 664: break;
 16492  001A10  D01D               	goto	i2l6164
 16493  001A12                     i2l6158:
 16494                           
 16495                           ;doprnt.c: 721: flag |= 0x80;
 16496  001A12  8E5F               	bsf	i2printf@flag,7,c
 16497                           
 16498                           ;doprnt.c: 723: break;
 16499  001A14  D01B               	goto	i2l6164
 16500  001A16                     i2l6162:
 16501  001A16  C040  FFF6         	movff	i2printf@f,tblptrl
 16502  001A1A  C041  FFF7         	movff	i2printf@f+1,tblptrh
 16503  001A1E  4A40               	infsnz	i2printf@f,f,c
 16504  001A20  2A41               	incf	i2printf@f+1,f,c
 16505  001A22                     	if	0	;tblptru may be non-zero
 16506  001A22                     	endif
 16507  001A22                     	if	0	;tblptru may be non-zero
 16508  001A22                     	endif
 16509  001A22  0008               	tblrd		*
 16510  001A24  CFF5 F064          	movff	tablat,i2printf@c
 16511  001A28  5064               	movf	i2printf@c,w,c
 16512                           
 16513                           ; Switch size 1, requested type "space"
 16514                           ; Number of cases is 5, Range of values is 0 to 120
 16515                           ; switch strategies available:
 16516                           ; Name         Instructions Cycles
 16517                           ; simple_byte           16     9 (average)
 16518                           ;	Chosen strategy is simple_byte
 16519  001A2A  0A00               	xorlw	0	; case 0
 16520  001A2C  B4D8               	btfsc	status,2,c
 16521  001A2E  0012               	return	
 16522  001A30  0A64               	xorlw	100	; case 100
 16523  001A32  B4D8               	btfsc	status,2,c
 16524  001A34  D00B               	goto	i2l6164
 16525  001A36  0A02               	xorlw	2	; case 102
 16526  001A38  B4D8               	btfsc	status,2,c
 16527  001A3A  D7E9               	goto	i2l6156
 16528  001A3C  0A0F               	xorlw	15	; case 105
 16529  001A3E  B4D8               	btfsc	status,2,c
 16530  001A40  D005               	goto	i2l6164
 16531  001A42  0A11               	xorlw	17	; case 120
 16532  001A44  B4D8               	btfsc	status,2,c
 16533  001A46  D7E5               	goto	i2l6158
 16534  001A48  EF73  F011         	goto	i2l6418
 16535  001A4C                     i2l6164:
 16536                           
 16537                           ;doprnt.c: 825: if(flag & (0x700)) {
 16538  001A4C  0E07               	movlw	7
 16539  001A4E  1460               	andwf	i2printf@flag+1,w,c
 16540  001A50  B4D8               	btfsc	status,2,c
 16541  001A52  D2EC               	goto	i2l803
 16542                           
 16543                           ;doprnt.c: 829: prec = 6;
 16544  001A54  0E00               	movlw	0
 16545  001A56  6E52               	movwf	i2printf@prec+1,c
 16546  001A58  0E06               	movlw	6
 16547  001A5A  6E51               	movwf	i2printf@prec,c
 16548                           
 16549                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 16550  001A5C  C04F  FFD9         	movff	i2printf@ap,fsr2l
 16551  001A60  C050  FFDA         	movff	i2printf@ap+1,fsr2h
 16552  001A64  CFDE F061          	movff	postinc2,i2printf@fval
 16553  001A68  CFDE F062          	movff	postinc2,i2printf@fval+1
 16554  001A6C  CFDD F063          	movff	postdec2,i2printf@fval+2
 16555  001A70  0E03               	movlw	3
 16556  001A72  264F               	addwf	i2printf@ap,f,c
 16557  001A74  0E00               	movlw	0
 16558  001A76  2250               	addwfc	i2printf@ap+1,f,c
 16559                           
 16560                           ;doprnt.c: 831: if(fval < 0.0) {
 16561  001A78  AE63               	btfss	i2printf@fval+2,7,c
 16562  001A7A  D010               	goto	i2l6178
 16563                           
 16564                           ;doprnt.c: 832: fval = -fval;
 16565  001A7C  C061  F001         	movff	i2printf@fval,i2___ftneg@f1
 16566  001A80  C062  F002         	movff	i2printf@fval+1,i2___ftneg@f1+1
 16567  001A84  C063  F003         	movff	i2printf@fval+2,i2___ftneg@f1+2
 16568  001A88  EC4D  F02F         	call	i2___ftneg	;wreg free
 16569  001A8C  C001  F061         	movff	?i2___ftneg,i2printf@fval
 16570  001A90  C002  F062         	movff	?i2___ftneg+1,i2printf@fval+1
 16571  001A94  C003  F063         	movff	?i2___ftneg+2,i2printf@fval+2
 16572                           
 16573                           ;doprnt.c: 833: flag |= 0x03;
 16574  001A98  0E03               	movlw	3
 16575  001A9A  125F               	iorwf	i2printf@flag,f,c
 16576  001A9C                     i2l6178:
 16577                           
 16578                           ;doprnt.c: 834: }
 16579                           ;doprnt.c: 835: exp = 0;
 16580  001A9C  0E00               	movlw	0
 16581  001A9E  6E5A               	movwf	i2printf@exp+1,c
 16582  001AA0  0E00               	movlw	0
 16583  001AA2  6E59               	movwf	i2printf@exp,c
 16584                           
 16585                           ;doprnt.c: 836: if( fval!=0) {
 16586  001AA4  5061               	movf	i2printf@fval,w,c
 16587  001AA6  1062               	iorwf	i2printf@fval+1,w,c
 16588  001AA8  1063               	iorwf	i2printf@fval+2,w,c
 16589  001AAA  B4D8               	btfsc	status,2,c
 16590  001AAC  D083               	goto	i2l6206
 16591                           
 16592                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 16593  001AAE  0E82               	movlw	130
 16594  001AB0  6E45               	movwf	??i2_printf& (0+255),c
 16595  001AB2  0EFF               	movlw	255
 16596  001AB4  6E46               	movwf	(??i2_printf+1)& (0+255),c
 16597  001AB6  C061  F047         	movff	i2printf@fval,??i2_printf+2
 16598  001ABA  C062  F048         	movff	i2printf@fval+1,??i2_printf+3
 16599  001ABE  C063  F049         	movff	i2printf@fval+2,??i2_printf+4
 16600  001AC2  C064  F04A         	movff	i2printf@fval+3,??i2_printf+5
 16601  001AC6  0E10               	movlw	16
 16602  001AC8  D005               	goto	i2u683_40
 16603  001ACA                     i2u683_45:
 16604  001ACA  90D8               	bcf	status,0,c
 16605  001ACC  324A               	rrcf	??i2_printf+5,f,c
 16606  001ACE  3249               	rrcf	??i2_printf+4,f,c
 16607  001AD0  3248               	rrcf	??i2_printf+3,f,c
 16608  001AD2  3247               	rrcf	??i2_printf+2,f,c
 16609  001AD4                     i2u683_40:
 16610  001AD4  2EE8               	decfsz	wreg,f,c
 16611  001AD6  D7F9               	goto	i2u683_45
 16612  001AD8  5047               	movf	??i2_printf+2,w,c
 16613  001ADA  2445               	addwf	??i2_printf,w,c
 16614  001ADC  6E59               	movwf	i2printf@exp,c
 16615  001ADE  0E00               	movlw	0
 16616  001AE0  2046               	addwfc	??i2_printf+1,w,c
 16617  001AE2  6E5A               	movwf	i2printf@exp+1,c
 16618                           
 16619                           ;doprnt.c: 838: exp--;
 16620  001AE4  0659               	decf	i2printf@exp,f,c
 16621  001AE6  A0D8               	btfss	status,0,c
 16622  001AE8  065A               	decf	i2printf@exp+1,f,c
 16623                           
 16624                           ;doprnt.c: 839: exp *= 3;
 16625  001AEA  C059  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 16626  001AEE  C05A  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 16627  001AF2  0E00               	movlw	0
 16628  001AF4  6E12               	movwf	i2___wmul@multiplicand+1,c
 16629  001AF6  0E03               	movlw	3
 16630  001AF8  6E11               	movwf	i2___wmul@multiplicand,c
 16631  001AFA  EC28  F02F         	call	i2___wmul	;wreg free
 16632  001AFE  C00F  F059         	movff	?i2___wmul,i2printf@exp
 16633  001B02  C010  F05A         	movff	?i2___wmul+1,i2printf@exp+1
 16634                           
 16635                           ;doprnt.c: 840: exp /= 10;
 16636  001B06  C059  F007         	movff	i2printf@exp,i2___awdiv@dividend
 16637  001B0A  C05A  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 16638  001B0E  0E00               	movlw	0
 16639  001B10  6E0A               	movwf	i2___awdiv@divisor+1,c
 16640  001B12  0E0A               	movlw	10
 16641  001B14  6E09               	movwf	i2___awdiv@divisor,c
 16642  001B16  EC61  F02A         	call	i2___awdiv	;wreg free
 16643  001B1A  C007  F059         	movff	?i2___awdiv,i2printf@exp
 16644  001B1E  C008  F05A         	movff	?i2___awdiv+1,i2printf@exp+1
 16645                           
 16646                           ;doprnt.c: 841: if(exp < 0)
 16647  001B22  AE5A               	btfss	i2printf@exp+1,7,c
 16648  001B24  D003               	goto	i2l6194
 16649                           
 16650                           ;doprnt.c: 842: exp--;
 16651  001B26  0659               	decf	i2printf@exp,f,c
 16652  001B28  A0D8               	btfss	status,0,c
 16653  001B2A  065A               	decf	i2printf@exp+1,f,c
 16654  001B2C                     i2l6194:
 16655                           
 16656                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 16657  001B2C  5059               	movf	i2printf@exp,w,c
 16658  001B2E  0800               	sublw	0
 16659  001B30  EC59  F019         	call	i2_scale
 16660  001B34  C024  F053         	movff	?i2_scale,i2printf@tmpval
 16661  001B38  C025  F054         	movff	?i2_scale+1,i2printf@tmpval+1
 16662  001B3C  C026  F055         	movff	?i2_scale+2,i2printf@tmpval+2
 16663                           
 16664                           ;doprnt.c: 847: tmpval.integ *= fval;
 16665  001B40  C053  F015         	movff	i2printf@tmpval,i2___ftmul@f1
 16666  001B44  C054  F016         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 16667  001B48  C055  F017         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 16668  001B4C  C061  F018         	movff	i2printf@fval,i2___ftmul@f2
 16669  001B50  C062  F019         	movff	i2printf@fval+1,i2___ftmul@f2+1
 16670  001B54  C063  F01A         	movff	i2printf@fval+2,i2___ftmul@f2+2
 16671  001B58  EC53  F026         	call	i2___ftmul	;wreg free
 16672  001B5C  C015  F053         	movff	?i2___ftmul,i2printf@tmpval
 16673  001B60  C016  F054         	movff	?i2___ftmul+1,i2printf@tmpval+1
 16674  001B64  C017  F055         	movff	?i2___ftmul+2,i2printf@tmpval+2
 16675                           
 16676                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 16677  001B68  C053  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 16678  001B6C  C054  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 16679  001B70  C055  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 16680  001B74  0E00               	movlw	0
 16681  001B76  6E04               	movwf	i2___ftge@ff2,c
 16682  001B78  0E80               	movlw	128
 16683  001B7A  6E05               	movwf	i2___ftge@ff2+1,c
 16684  001B7C  0E3F               	movlw	63
 16685  001B7E  6E06               	movwf	i2___ftge@ff2+2,c
 16686  001B80  EC19  F02A         	call	i2___ftge	;wreg free
 16687  001B84  B0D8               	btfsc	status,0,c
 16688  001B86  D004               	goto	i2l6202
 16689                           
 16690                           ;doprnt.c: 849: exp--;
 16691  001B88  0659               	decf	i2printf@exp,f,c
 16692  001B8A  A0D8               	btfss	status,0,c
 16693  001B8C  065A               	decf	i2printf@exp+1,f,c
 16694  001B8E  D012               	goto	i2l6206
 16695  001B90                     i2l6202:
 16696                           
 16697                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 16698  001B90  C053  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 16699  001B94  C054  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 16700  001B98  C055  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 16701  001B9C  0E00               	movlw	0
 16702  001B9E  6E04               	movwf	i2___ftge@ff2,c
 16703  001BA0  0E20               	movlw	32
 16704  001BA2  6E05               	movwf	i2___ftge@ff2+1,c
 16705  001BA4  0E41               	movlw	65
 16706  001BA6  6E06               	movwf	i2___ftge@ff2+2,c
 16707  001BA8  EC19  F02A         	call	i2___ftge	;wreg free
 16708  001BAC  A0D8               	btfss	status,0,c
 16709  001BAE  D002               	goto	i2l6206
 16710                           
 16711                           ;doprnt.c: 851: exp++;
 16712  001BB0  4A59               	infsnz	i2printf@exp,f,c
 16713  001BB2  2A5A               	incf	i2printf@exp+1,f,c
 16714  001BB4                     i2l6206:
 16715                           
 16716                           ;doprnt.c: 852: }
 16717                           ;doprnt.c: 1112: if(prec <= 12)
 16718  001BB4  BE52               	btfsc	i2printf@prec+1,7,c
 16719  001BB6  D006               	goto	i2l6208
 16720  001BB8  5052               	movf	i2printf@prec+1,w,c
 16721  001BBA  E11B               	bnz	i2l6210
 16722  001BBC  0E0D               	movlw	13
 16723  001BBE  5C51               	subwf	i2printf@prec,w,c
 16724  001BC0  B0D8               	btfsc	status,0,c
 16725  001BC2  D017               	goto	i2l6210
 16726  001BC4                     i2l6208:
 16727                           
 16728                           ;doprnt.c: 1113: fval += fround(prec);
 16729  001BC4  C061  F02E         	movff	i2printf@fval,i2___ftadd@f1
 16730  001BC8  C062  F02F         	movff	i2printf@fval+1,i2___ftadd@f1+1
 16731  001BCC  C063  F030         	movff	i2printf@fval+2,i2___ftadd@f1+2
 16732  001BD0  5051               	movf	i2printf@prec,w,c
 16733  001BD2  ECDB  F01D         	call	i2_fround
 16734  001BD6  C024  F031         	movff	?i2_fround,i2___ftadd@f2
 16735  001BDA  C025  F032         	movff	?i2_fround+1,i2___ftadd@f2+1
 16736  001BDE  C026  F033         	movff	?i2_fround+2,i2___ftadd@f2+2
 16737  001BE2  ECFE  F01E         	call	i2___ftadd	;wreg free
 16738  001BE6  C02E  F061         	movff	?i2___ftadd,i2printf@fval
 16739  001BEA  C02F  F062         	movff	?i2___ftadd+1,i2printf@fval+1
 16740  001BEE  C030  F063         	movff	?i2___ftadd+2,i2printf@fval+2
 16741  001BF2                     i2l6210:
 16742                           
 16743                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 16744  001BF2  BE5A               	btfsc	i2printf@exp+1,7,c
 16745  001BF4  D006               	goto	i2l6212
 16746  001BF6  505A               	movf	i2printf@exp+1,w,c
 16747  001BF8  E11E               	bnz	i2l6218
 16748  001BFA  0E0A               	movlw	10
 16749  001BFC  5C59               	subwf	i2printf@exp,w,c
 16750  001BFE  B0D8               	btfsc	status,0,c
 16751  001C00  D01A               	goto	i2l6218
 16752  001C02                     i2l6212:
 16753  001C02  5061               	movf	i2printf@fval,w,c
 16754  001C04  1062               	iorwf	i2printf@fval+1,w,c
 16755  001C06  1063               	iorwf	i2printf@fval+2,w,c
 16756  001C08  B4D8               	btfsc	status,2,c
 16757  001C0A  D051               	goto	i2l6232
 16758  001C0C  C061  F02B         	movff	i2printf@fval,i2___fttol@f1
 16759  001C10  C062  F02C         	movff	i2printf@fval+1,i2___fttol@f1+1
 16760  001C14  C063  F02D         	movff	i2printf@fval+2,i2___fttol@f1+2
 16761  001C18  ECCD  F026         	call	i2___fttol	;wreg free
 16762  001C1C  502B               	movf	?i2___fttol,w,c
 16763  001C1E  102C               	iorwf	?i2___fttol+1,w,c
 16764  001C20  102D               	iorwf	?i2___fttol+2,w,c
 16765  001C22  102E               	iorwf	?i2___fttol+3,w,c
 16766  001C24  B4D8               	btfsc	status,2,c
 16767  001C26  BE5A               	btfsc	i2printf@exp+1,7,c
 16768  001C28  D042               	goto	i2l6232
 16769  001C2A  505A               	movf	i2printf@exp+1,w,c
 16770  001C2C  E104               	bnz	i2l6218
 16771  001C2E  0E02               	movlw	2
 16772  001C30  5C59               	subwf	i2printf@exp,w,c
 16773  001C32  A0D8               	btfss	status,0,c
 16774  001C34  D03C               	goto	i2l6232
 16775  001C36                     i2l6218:
 16776                           
 16777                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 16778  001C36  C053  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 16779  001C3A  C054  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 16780  001C3E  C055  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 16781  001C42  0E70               	movlw	112
 16782  001C44  6E04               	movwf	i2___ftge@ff2,c
 16783  001C46  0E89               	movlw	137
 16784  001C48  6E05               	movwf	i2___ftge@ff2+1,c
 16785  001C4A  0E40               	movlw	64
 16786  001C4C  6E06               	movwf	i2___ftge@ff2+2,c
 16787  001C4E  EC19  F02A         	call	i2___ftge	;wreg free
 16788  001C52  B0D8               	btfsc	status,0,c
 16789  001C54  D002               	goto	i2l6222
 16790                           
 16791                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 16792  001C56  0EF7               	movlw	247
 16793  001C58  D001               	goto	L6
 16794  001C5A                     i2l6222:
 16795                           
 16796                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 16797  001C5A  0EF8               	movlw	248
 16798  001C5C                     L6:
 16799  001C5C  2659               	addwf	i2printf@exp,f,c
 16800  001C5E  0EFF               	movlw	255
 16801  001C60  225A               	addwfc	i2printf@exp+1,f,c
 16802                           
 16803                           ;doprnt.c: 1124: }
 16804                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 16805  001C62  5059               	movf	i2printf@exp,w,c
 16806  001C64  EC59  F019         	call	i2_scale
 16807  001C68  C024  F053         	movff	?i2_scale,i2printf@tmpval
 16808  001C6C  C025  F054         	movff	?i2_scale+1,i2printf@tmpval+1
 16809  001C70  C026  F055         	movff	?i2_scale+2,i2printf@tmpval+2
 16810                           
 16811                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 16812  001C74  C061  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 16813  001C78  C062  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 16814  001C7C  C063  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 16815  001C80  C053  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 16816  001C84  C054  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 16817  001C88  C055  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 16818  001C8C  EC0B  F024         	call	i2__tdiv_to_l_	;wreg free
 16819  001C90  C001  F05B         	movff	?i2__tdiv_to_l_,i2printf@val
 16820  001C94  C002  F05C         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 16821  001C98  C003  F05D         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 16822  001C9C  C004  F05E         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 16823                           
 16824                           ;doprnt.c: 1129: fval = 0.0;
 16825  001CA0  0E00               	movlw	0
 16826  001CA2  6E61               	movwf	i2printf@fval,c
 16827  001CA4  0E00               	movlw	0
 16828  001CA6  6E62               	movwf	i2printf@fval+1,c
 16829  001CA8  0E00               	movlw	0
 16830  001CAA  6E63               	movwf	i2printf@fval+2,c
 16831                           
 16832                           ;doprnt.c: 1130: } else {
 16833  001CAC  D032               	goto	i2l6236
 16834  001CAE                     i2l6232:
 16835                           
 16836                           ;doprnt.c: 1131: val = (unsigned long)fval;
 16837  001CAE  C061  F02B         	movff	i2printf@fval,i2___fttol@f1
 16838  001CB2  C062  F02C         	movff	i2printf@fval+1,i2___fttol@f1+1
 16839  001CB6  C063  F02D         	movff	i2printf@fval+2,i2___fttol@f1+2
 16840  001CBA  ECCD  F026         	call	i2___fttol	;wreg free
 16841  001CBE  C02B  F05B         	movff	?i2___fttol,i2printf@val
 16842  001CC2  C02C  F05C         	movff	?i2___fttol+1,i2printf@val+1
 16843  001CC6  C02D  F05D         	movff	?i2___fttol+2,i2printf@val+2
 16844  001CCA  C02E  F05E         	movff	?i2___fttol+3,i2printf@val+3
 16845                           
 16846                           ;doprnt.c: 1132: fval -= (double)val;
 16847  001CCE  C061  F03A         	movff	i2printf@fval,i2___ftsub@f1
 16848  001CD2  C062  F03B         	movff	i2printf@fval+1,i2___ftsub@f1+1
 16849  001CD6  C063  F03C         	movff	i2printf@fval+2,i2___ftsub@f1+2
 16850  001CDA  C05B  F009         	movff	i2printf@val,i2___lltoft@c
 16851  001CDE  C05C  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 16852  001CE2  C05D  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 16853  001CE6  C05E  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 16854  001CEA  ECCF  F02C         	call	i2___lltoft	;wreg free
 16855  001CEE  C009  F03D         	movff	?i2___lltoft,i2___ftsub@f2
 16856  001CF2  C00A  F03E         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 16857  001CF6  C00B  F03F         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 16858  001CFA  EC39  F02E         	call	i2___ftsub	;wreg free
 16859  001CFE  C03A  F061         	movff	?i2___ftsub,i2printf@fval
 16860  001D02  C03B  F062         	movff	?i2___ftsub+1,i2printf@fval+1
 16861  001D06  C03C  F063         	movff	?i2___ftsub+2,i2printf@fval+2
 16862                           
 16863                           ;doprnt.c: 1133: exp = 0;
 16864  001D0A  0E00               	movlw	0
 16865  001D0C  6E5A               	movwf	i2printf@exp+1,c
 16866  001D0E  0E00               	movlw	0
 16867  001D10  6E59               	movwf	i2printf@exp,c
 16868  001D12                     i2l6236:
 16869                           
 16870                           ;doprnt.c: 1134: }
 16871                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 16872  001D12  0E01               	movlw	1
 16873  001D14  6E64               	movwf	i2printf@c,c
 16874  001D16                     i2l6238:
 16875  001D16  0E0A               	movlw	10
 16876  001D18  1864               	xorwf	i2printf@c,w,c
 16877  001D1A  B4D8               	btfsc	status,2,c
 16878  001D1C  D018               	goto	i2l6250
 16879                           
 16880                           ;doprnt.c: 1137: if(val < dpowers[c])
 16881  001D1E  5064               	movf	i2printf@c,w,c
 16882  001D20  0D04               	mullw	4
 16883  001D22  0E91               	movlw	low _dpowers
 16884  001D24  24F3               	addwf	prodl,w,c
 16885  001D26  6EF6               	movwf	tblptrl,c
 16886  001D28  0EFB               	movlw	high _dpowers
 16887  001D2A  20F4               	addwfc	prodh,w,c
 16888  001D2C  6EF7               	movwf	tblptrh,c
 16889  001D2E                     	if	0	;There are less than 3 active tblptr bytes
 16890  001D2E                     	endif
 16891  001D2E  0009               	tblrd		*+
 16892  001D30  50F5               	movf	tablat,w,c
 16893  001D32  5C5B               	subwf	i2printf@val,w,c
 16894  001D34  0009               	tblrd		*+
 16895  001D36  50F5               	movf	tablat,w,c
 16896  001D38  585C               	subwfb	i2printf@val+1,w,c
 16897  001D3A  0009               	tblrd		*+
 16898  001D3C  50F5               	movf	tablat,w,c
 16899  001D3E  585D               	subwfb	i2printf@val+2,w,c
 16900  001D40  0009               	tblrd		*+
 16901  001D42  50F5               	movf	tablat,w,c
 16902  001D44  585E               	subwfb	i2printf@val+3,w,c
 16903  001D46  A0D8               	btfss	status,0,c
 16904  001D48  D002               	goto	i2l6250
 16905                           
 16906                           ;doprnt.c: 1138: break;
 16907  001D4A  2A64               	incf	i2printf@c,f,c
 16908  001D4C  D7E4               	goto	i2l6238
 16909  001D4E                     i2l6250:
 16910                           
 16911                           ;doprnt.c: 1142: width -= prec + c + exp;
 16912  001D4E  C064  F045         	movff	i2printf@c,??i2_printf
 16913  001D52  6A46               	clrf	(??i2_printf+1)& (0+255),c
 16914  001D54  BE45               	btfsc	??i2_printf& (0+255),7,c
 16915  001D56  0646               	decf	(??i2_printf+1)& (0+255),f,c
 16916  001D58  5051               	movf	i2printf@prec,w,c
 16917  001D5A  2645               	addwf	??i2_printf,f,c
 16918  001D5C  5052               	movf	i2printf@prec+1,w,c
 16919  001D5E  2246               	addwfc	??i2_printf+1,f,c
 16920  001D60  5059               	movf	i2printf@exp,w,c
 16921  001D62  2645               	addwf	??i2_printf,f,c
 16922  001D64  505A               	movf	i2printf@exp+1,w,c
 16923  001D66  2246               	addwfc	??i2_printf+1,f,c
 16924  001D68  5045               	movf	??i2_printf,w,c
 16925  001D6A  5E57               	subwf	i2printf@width,f,c
 16926  001D6C  5046               	movf	??i2_printf+1,w,c
 16927  001D6E  5A58               	subwfb	i2printf@width+1,f,c
 16928                           
 16929                           ;doprnt.c: 1143: if(
 16930                           ;doprnt.c: 1147: prec)
 16931  001D70  5051               	movf	i2printf@prec,w,c
 16932  001D72  1052               	iorwf	i2printf@prec+1,w,c
 16933  001D74  B4D8               	btfsc	status,2,c
 16934  001D76  D003               	goto	i2l6254
 16935                           
 16936                           ;doprnt.c: 1148: width--;
 16937  001D78  0657               	decf	i2printf@width,f,c
 16938  001D7A  A0D8               	btfss	status,0,c
 16939  001D7C  0658               	decf	i2printf@width+1,f,c
 16940  001D7E                     i2l6254:
 16941                           
 16942                           ;doprnt.c: 1149: if(flag & 0x03)
 16943  001D7E  0E03               	movlw	3
 16944  001D80  145F               	andwf	i2printf@flag,w,c
 16945  001D82  6E45               	movwf	??i2_printf& (0+255),c
 16946  001D84  0E00               	movlw	0
 16947  001D86  1460               	andwf	i2printf@flag+1,w,c
 16948  001D88  6E46               	movwf	(??i2_printf+1)& (0+255),c
 16949  001D8A  5045               	movf	??i2_printf,w,c
 16950  001D8C  1046               	iorwf	??i2_printf+1,w,c
 16951  001D8E  B4D8               	btfsc	status,2,c
 16952  001D90  D003               	goto	i2l6258
 16953                           
 16954                           ;doprnt.c: 1150: width--;
 16955  001D92  0657               	decf	i2printf@width,f,c
 16956  001D94  A0D8               	btfss	status,0,c
 16957  001D96  0658               	decf	i2printf@width+1,f,c
 16958  001D98                     i2l6258:
 16959                           
 16960                           ;doprnt.c: 1153: if(flag & 0x04) {
 16961  001D98  A45F               	btfss	i2printf@flag,2,c
 16962  001D9A  D022               	goto	i2l6274
 16963                           
 16964                           ;doprnt.c: 1157: if(flag & 0x03)
 16965  001D9C  0E03               	movlw	3
 16966  001D9E  145F               	andwf	i2printf@flag,w,c
 16967  001DA0  6E45               	movwf	??i2_printf& (0+255),c
 16968  001DA2  0E00               	movlw	0
 16969  001DA4  1460               	andwf	i2printf@flag+1,w,c
 16970  001DA6  6E46               	movwf	(??i2_printf+1)& (0+255),c
 16971  001DA8  5045               	movf	??i2_printf,w,c
 16972  001DAA  1046               	iorwf	??i2_printf+1,w,c
 16973  001DAC  B4D8               	btfsc	status,2,c
 16974  001DAE  D00A               	goto	i2l6268
 16975                           
 16976                           ;doprnt.c: 1159: (putch('-') );
 16977  001DB0  0E2D               	movlw	45
 16978  001DB2  EC88  F02F         	call	i2_putch
 16979                           
 16980                           ;doprnt.c: 1168: while(width > 0) {
 16981  001DB6  D006               	goto	i2l6268
 16982  001DB8                     i2l6264:
 16983                           
 16984                           ;doprnt.c: 1169: (putch('0') );
 16985  001DB8  0E30               	movlw	48
 16986  001DBA  EC88  F02F         	call	i2_putch
 16987                           
 16988                           ;doprnt.c: 1170: width--;
 16989  001DBE  0657               	decf	i2printf@width,f,c
 16990  001DC0  A0D8               	btfss	status,0,c
 16991  001DC2  0658               	decf	i2printf@width+1,f,c
 16992  001DC4                     i2l6268:
 16993  001DC4  BE58               	btfsc	i2printf@width+1,7,c
 16994  001DC6  D065               	goto	i2l6286
 16995  001DC8  5058               	movf	i2printf@width+1,w,c
 16996  001DCA  E1F6               	bnz	i2l6264
 16997  001DCC  0457               	decf	i2printf@width,w,c
 16998  001DCE  A0D8               	btfss	status,0,c
 16999  001DD0  D060               	goto	i2l6286
 17000  001DD2  D7F2               	goto	i2l6264
 17001  001DD4                     i2l6270:
 17002                           
 17003                           ;doprnt.c: 1181: (putch(' ') );
 17004  001DD4  0E20               	movlw	32
 17005  001DD6  EC88  F02F         	call	i2_putch
 17006                           
 17007                           ;doprnt.c: 1182: width--;
 17008  001DDA  0657               	decf	i2printf@width,f,c
 17009  001DDC  A0D8               	btfss	status,0,c
 17010  001DDE  0658               	decf	i2printf@width+1,f,c
 17011  001DE0                     i2l6274:
 17012  001DE0  BE58               	btfsc	i2printf@width+1,7,c
 17013  001DE2  D005               	goto	i2l6276
 17014  001DE4  5058               	movf	i2printf@width+1,w,c
 17015  001DE6  E1F6               	bnz	i2l6270
 17016  001DE8  0457               	decf	i2printf@width,w,c
 17017  001DEA  B0D8               	btfsc	status,0,c
 17018  001DEC  D7F3               	goto	i2l6270
 17019  001DEE                     i2l6276:
 17020                           
 17021                           ;doprnt.c: 1183: }
 17022                           ;doprnt.c: 1188: if(flag & 0x03)
 17023  001DEE  0E03               	movlw	3
 17024  001DF0  145F               	andwf	i2printf@flag,w,c
 17025  001DF2  6E45               	movwf	??i2_printf& (0+255),c
 17026  001DF4  0E00               	movlw	0
 17027  001DF6  1460               	andwf	i2printf@flag+1,w,c
 17028  001DF8  6E46               	movwf	(??i2_printf+1)& (0+255),c
 17029  001DFA  5045               	movf	??i2_printf,w,c
 17030  001DFC  1046               	iorwf	??i2_printf+1,w,c
 17031  001DFE  B4D8               	btfsc	status,2,c
 17032  001E00  D048               	goto	i2l6286
 17033                           
 17034                           ;doprnt.c: 1190: (putch('-') );
 17035  001E02  0E2D               	movlw	45
 17036  001E04  EC88  F02F         	call	i2_putch
 17037                           
 17038                           ;doprnt.c: 1195: }
 17039                           ;doprnt.c: 1196: while(c--) {
 17040  001E08  D044               	goto	i2l6286
 17041  001E0A                     i2l6280:
 17042                           
 17043                           ;doprnt.c: 1200: {
 17044                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 17045  001E0A  C05B  F001         	movff	i2printf@val,i2___lldiv@dividend
 17046  001E0E  C05C  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 17047  001E12  C05D  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 17048  001E16  C05E  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 17049  001E1A  5064               	movf	i2printf@c,w,c
 17050  001E1C  0D04               	mullw	4
 17051  001E1E  0E91               	movlw	low _dpowers
 17052  001E20  24F3               	addwf	prodl,w,c
 17053  001E22  6EF6               	movwf	tblptrl,c
 17054  001E24  0EFB               	movlw	high _dpowers
 17055  001E26  20F4               	addwfc	prodh,w,c
 17056  001E28  6EF7               	movwf	tblptrh,c
 17057  001E2A                     	if	0	;There are less than 3 active tblptr bytes
 17058  001E2A                     	endif
 17059  001E2A  0009               	tblrd		*+
 17060  001E2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 17061  001E30  0009               	tblrd		*+
 17062  001E32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 17063  001E36  0009               	tblrd		*+
 17064  001E38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 17065  001E3C  000A               	tblrd		*-
 17066  001E3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 17067  001E42  ECA3  F02A         	call	i2___lldiv	;wreg free
 17068  001E46  C001  F053         	movff	?i2___lldiv,i2printf@tmpval
 17069  001E4A  C002  F054         	movff	?i2___lldiv+1,i2printf@tmpval+1
 17070  001E4E  C003  F055         	movff	?i2___lldiv+2,i2printf@tmpval+2
 17071  001E52  C004  F056         	movff	?i2___lldiv+3,i2printf@tmpval+3
 17072                           
 17073                           ;doprnt.c: 1202: tmpval.vd %= 10;
 17074  001E56  C053  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 17075  001E5A  C054  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 17076  001E5E  C055  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 17077  001E62  C056  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 17078  001E66  0E0A               	movlw	10
 17079  001E68  6E12               	movwf	i2___llmod@divisor,c
 17080  001E6A  0E00               	movlw	0
 17081  001E6C  6E13               	movwf	i2___llmod@divisor+1,c
 17082  001E6E  0E00               	movlw	0
 17083  001E70  6E14               	movwf	i2___llmod@divisor+2,c
 17084  001E72  0E00               	movlw	0
 17085  001E74  6E15               	movwf	i2___llmod@divisor+3,c
 17086  001E76  EC6C  F02C         	call	i2___llmod	;wreg free
 17087  001E7A  C00E  F053         	movff	?i2___llmod,i2printf@tmpval
 17088  001E7E  C00F  F054         	movff	?i2___llmod+1,i2printf@tmpval+1
 17089  001E82  C010  F055         	movff	?i2___llmod+2,i2printf@tmpval+2
 17090  001E86  C011  F056         	movff	?i2___llmod+3,i2printf@tmpval+3
 17091                           
 17092                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 17093  001E8A  5053               	movf	i2printf@tmpval,w,c
 17094  001E8C  0F30               	addlw	48
 17095  001E8E  EC88  F02F         	call	i2_putch
 17096  001E92                     i2l6286:
 17097  001E92  0664               	decf	i2printf@c,f,c
 17098  001E94  2864               	incf	i2printf@c,w,c
 17099  001E96  B4D8               	btfsc	status,2,c
 17100  001E98  D007               	goto	i2l6292
 17101  001E9A  D7B7               	goto	i2l6280
 17102  001E9C                     i2l6288:
 17103                           
 17104                           ;doprnt.c: 1208: (putch('0') );
 17105  001E9C  0E30               	movlw	48
 17106  001E9E  EC88  F02F         	call	i2_putch
 17107                           
 17108                           ;doprnt.c: 1209: exp--;
 17109  001EA2  0659               	decf	i2printf@exp,f,c
 17110  001EA4  A0D8               	btfss	status,0,c
 17111  001EA6  065A               	decf	i2printf@exp+1,f,c
 17112  001EA8                     i2l6292:
 17113  001EA8  BE5A               	btfsc	i2printf@exp+1,7,c
 17114  001EAA  D005               	goto	i2l6294
 17115  001EAC  505A               	movf	i2printf@exp+1,w,c
 17116  001EAE  E1F6               	bnz	i2l6288
 17117  001EB0  0459               	decf	i2printf@exp,w,c
 17118  001EB2  B0D8               	btfsc	status,0,c
 17119  001EB4  D7F3               	goto	i2l6288
 17120  001EB6                     i2l6294:
 17121                           
 17122                           ;doprnt.c: 1210: }
 17123                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 17124  001EB6  BE52               	btfsc	i2printf@prec+1,7,c
 17125  001EB8  D009               	goto	i2l842
 17126  001EBA  5052               	movf	i2printf@prec+1,w,c
 17127  001EBC  E104               	bnz	i2u705_40
 17128  001EBE  0E09               	movlw	9
 17129  001EC0  5C51               	subwf	i2printf@prec,w,c
 17130  001EC2  A0D8               	btfss	status,0,c
 17131  001EC4  D003               	goto	i2l842
 17132  001EC6                     i2u705_40:
 17133                           
 17134                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 17135  001EC6  0E08               	movlw	8
 17136  001EC8  6E64               	movwf	i2printf@c,c
 17137  001ECA  D002               	goto	i2l6298
 17138  001ECC                     i2l842:
 17139                           
 17140                           ;doprnt.c: 1213: else
 17141                           ;doprnt.c: 1214: c = prec;
 17142  001ECC  C051  F064         	movff	i2printf@prec,i2printf@c
 17143  001ED0                     i2l6298:
 17144                           
 17145                           ;doprnt.c: 1215: prec -= c;
 17146  001ED0  5064               	movf	i2printf@c,w,c
 17147  001ED2  5E51               	subwf	i2printf@prec,f,c
 17148  001ED4  0E00               	movlw	0
 17149  001ED6  BE64               	btfsc	i2printf@c,7,c
 17150  001ED8  0EFF               	movlw	255
 17151  001EDA  5A52               	subwfb	i2printf@prec+1,f,c
 17152                           
 17153                           ;doprnt.c: 1219: if(c)
 17154  001EDC  5064               	movf	i2printf@c,w,c
 17155  001EDE  B4D8               	btfsc	status,2,c
 17156  001EE0  D003               	goto	i2l6304
 17157                           
 17158                           ;doprnt.c: 1221: (putch('.') );
 17159  001EE2  0E2E               	movlw	46
 17160  001EE4  EC88  F02F         	call	i2_putch
 17161  001EE8                     i2l6304:
 17162                           
 17163                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 17164  001EE8  5064               	movf	i2printf@c,w,c
 17165  001EEA  EC59  F019         	call	i2_scale
 17166  001EEE  C024  F04B         	movff	?i2_scale,i2_printf$1786
 17167  001EF2  C025  F04C         	movff	?i2_scale+1,i2_printf$1786+1
 17168  001EF6  C026  F04D         	movff	?i2_scale+2,i2_printf$1786+2
 17169                           
 17170                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 17171  001EFA  C061  F018         	movff	i2printf@fval,i2___ftmul@f2
 17172  001EFE  C062  F019         	movff	i2printf@fval+1,i2___ftmul@f2+1
 17173  001F02  C063  F01A         	movff	i2printf@fval+2,i2___ftmul@f2+2
 17174  001F06  C04B  F015         	movff	i2_printf$1786,i2___ftmul@f1
 17175  001F0A  C04C  F016         	movff	i2_printf$1786+1,i2___ftmul@f1+1
 17176  001F0E  C04D  F017         	movff	i2_printf$1786+2,i2___ftmul@f1+2
 17177  001F12  EC53  F026         	call	i2___ftmul	;wreg free
 17178  001F16  C015  F02B         	movff	?i2___ftmul,i2___fttol@f1
 17179  001F1A  C016  F02C         	movff	?i2___ftmul+1,i2___fttol@f1+1
 17180  001F1E  C017  F02D         	movff	?i2___ftmul+2,i2___fttol@f1+2
 17181  001F22  ECCD  F026         	call	i2___fttol	;wreg free
 17182  001F26  C02B  F05B         	movff	?i2___fttol,i2printf@val
 17183  001F2A  C02C  F05C         	movff	?i2___fttol+1,i2printf@val+1
 17184  001F2E  C02D  F05D         	movff	?i2___fttol+2,i2printf@val+2
 17185  001F32  C02E  F05E         	movff	?i2___fttol+3,i2printf@val+3
 17186                           
 17187                           ;doprnt.c: 1228: while(c--) {
 17188  001F36  D06A               	goto	i2l6314
 17189  001F38                     i2l6308:
 17190                           
 17191                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 17192  001F38  C05B  F001         	movff	i2printf@val,i2___lldiv@dividend
 17193  001F3C  C05C  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 17194  001F40  C05D  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 17195  001F44  C05E  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 17196  001F48  5064               	movf	i2printf@c,w,c
 17197  001F4A  0D04               	mullw	4
 17198  001F4C  0E91               	movlw	low _dpowers
 17199  001F4E  24F3               	addwf	prodl,w,c
 17200  001F50  6EF6               	movwf	tblptrl,c
 17201  001F52  0EFB               	movlw	high _dpowers
 17202  001F54  20F4               	addwfc	prodh,w,c
 17203  001F56  6EF7               	movwf	tblptrh,c
 17204  001F58                     	if	0	;There are less than 3 active tblptr bytes
 17205  001F58                     	endif
 17206  001F58  0009               	tblrd		*+
 17207  001F5A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 17208  001F5E  0009               	tblrd		*+
 17209  001F60  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 17210  001F64  0009               	tblrd		*+
 17211  001F66  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 17212  001F6A  000A               	tblrd		*-
 17213  001F6C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 17214  001F70  ECA3  F02A         	call	i2___lldiv	;wreg free
 17215  001F74  C001  F053         	movff	?i2___lldiv,i2printf@tmpval
 17216  001F78  C002  F054         	movff	?i2___lldiv+1,i2printf@tmpval+1
 17217  001F7C  C003  F055         	movff	?i2___lldiv+2,i2printf@tmpval+2
 17218  001F80  C004  F056         	movff	?i2___lldiv+3,i2printf@tmpval+3
 17219                           
 17220                           ;doprnt.c: 1230: tmpval.vd %= 10;
 17221  001F84  C053  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 17222  001F88  C054  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 17223  001F8C  C055  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 17224  001F90  C056  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 17225  001F94  0E0A               	movlw	10
 17226  001F96  6E12               	movwf	i2___llmod@divisor,c
 17227  001F98  0E00               	movlw	0
 17228  001F9A  6E13               	movwf	i2___llmod@divisor+1,c
 17229  001F9C  0E00               	movlw	0
 17230  001F9E  6E14               	movwf	i2___llmod@divisor+2,c
 17231  001FA0  0E00               	movlw	0
 17232  001FA2  6E15               	movwf	i2___llmod@divisor+3,c
 17233  001FA4  EC6C  F02C         	call	i2___llmod	;wreg free
 17234  001FA8  C00E  F053         	movff	?i2___llmod,i2printf@tmpval
 17235  001FAC  C00F  F054         	movff	?i2___llmod+1,i2printf@tmpval+1
 17236  001FB0  C010  F055         	movff	?i2___llmod+2,i2printf@tmpval+2
 17237  001FB4  C011  F056         	movff	?i2___llmod+3,i2printf@tmpval+3
 17238                           
 17239                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 17240  001FB8  5053               	movf	i2printf@tmpval,w,c
 17241  001FBA  0F30               	addlw	48
 17242  001FBC  EC88  F02F         	call	i2_putch
 17243                           
 17244                           ;doprnt.c: 1232: val %= dpowers[c];
 17245  001FC0  C05B  F00E         	movff	i2printf@val,i2___llmod@dividend
 17246  001FC4  C05C  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 17247  001FC8  C05D  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 17248  001FCC  C05E  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 17249  001FD0  5064               	movf	i2printf@c,w,c
 17250  001FD2  0D04               	mullw	4
 17251  001FD4  0E91               	movlw	low _dpowers
 17252  001FD6  24F3               	addwf	prodl,w,c
 17253  001FD8  6EF6               	movwf	tblptrl,c
 17254  001FDA  0EFB               	movlw	high _dpowers
 17255  001FDC  20F4               	addwfc	prodh,w,c
 17256  001FDE  6EF7               	movwf	tblptrh,c
 17257  001FE0                     	if	0	;There are less than 3 active tblptr bytes
 17258  001FE0                     	endif
 17259  001FE0  0009               	tblrd		*+
 17260  001FE2  CFF5 F012          	movff	tablat,i2___llmod@divisor
 17261  001FE6  0009               	tblrd		*+
 17262  001FE8  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 17263  001FEC  0009               	tblrd		*+
 17264  001FEE  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 17265  001FF2  000A               	tblrd		*-
 17266  001FF4  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 17267  001FF8  EC6C  F02C         	call	i2___llmod	;wreg free
 17268  001FFC  C00E  F05B         	movff	?i2___llmod,i2printf@val
 17269  002000  C00F  F05C         	movff	?i2___llmod+1,i2printf@val+1
 17270  002004  C010  F05D         	movff	?i2___llmod+2,i2printf@val+2
 17271  002008  C011  F05E         	movff	?i2___llmod+3,i2printf@val+3
 17272  00200C                     i2l6314:
 17273  00200C  0664               	decf	i2printf@c,f,c
 17274  00200E  2864               	incf	i2printf@c,w,c
 17275  002010  B4D8               	btfsc	status,2,c
 17276  002012  D007               	goto	i2l6320
 17277  002014  D791               	goto	i2l6308
 17278  002016                     i2l6316:
 17279                           
 17280                           ;doprnt.c: 1236: (putch('0') );
 17281  002016  0E30               	movlw	48
 17282  002018  EC88  F02F         	call	i2_putch
 17283                           
 17284                           ;doprnt.c: 1237: prec--;
 17285  00201C  0651               	decf	i2printf@prec,f,c
 17286  00201E  A0D8               	btfss	status,0,c
 17287  002020  0652               	decf	i2printf@prec+1,f,c
 17288  002022                     i2l6320:
 17289  002022  5051               	movf	i2printf@prec,w,c
 17290  002024  1052               	iorwf	i2printf@prec+1,w,c
 17291  002026  B4D8               	btfsc	status,2,c
 17292  002028  D15E               	goto	i2l6418
 17293  00202A  D7F5               	goto	i2l6316
 17294  00202C                     i2l803:
 17295                           
 17296                           ;doprnt.c: 1246: }
 17297                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 17298  00202C  BE5F               	btfsc	i2printf@flag,7,c
 17299  00202E  D01E               	goto	i2l6332
 17300                           
 17301                           ;doprnt.c: 1253: {
 17302                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 17303  002030  C04F  FFD9         	movff	i2printf@ap,fsr2l
 17304  002034  C050  FFDA         	movff	i2printf@ap+1,fsr2h
 17305  002038  CFDE F05B          	movff	postinc2,i2printf@val
 17306  00203C  CFDD F05C          	movff	postdec2,i2printf@val+1
 17307  002040  0E00               	movlw	0
 17308  002042  BE5C               	btfsc	i2printf@val+1,7,c
 17309  002044  0EFF               	movlw	-1
 17310  002046  6E5D               	movwf	i2printf@val+2,c
 17311  002048  6E5E               	movwf	i2printf@val+3,c
 17312  00204A  0E02               	movlw	2
 17313  00204C  264F               	addwf	i2printf@ap,f,c
 17314  00204E  0E00               	movlw	0
 17315  002050  2250               	addwfc	i2printf@ap+1,f,c
 17316                           
 17317                           ;doprnt.c: 1261: if((long)val < 0) {
 17318  002052  AE5E               	btfss	i2printf@val+3,7,c
 17319  002054  D05A               	goto	i2l6366
 17320                           
 17321                           ;doprnt.c: 1262: flag |= 0x03;
 17322  002056  0E03               	movlw	3
 17323  002058  125F               	iorwf	i2printf@flag,f,c
 17324                           
 17325                           ;doprnt.c: 1263: val = -val;
 17326  00205A  1E5E               	comf	i2printf@val+3,f,c
 17327  00205C  1E5D               	comf	i2printf@val+2,f,c
 17328  00205E  1E5C               	comf	i2printf@val+1,f,c
 17329  002060  6C5B               	negf	i2printf@val,c
 17330  002062  0E00               	movlw	0
 17331  002064  225C               	addwfc	i2printf@val+1,f,c
 17332  002066  225D               	addwfc	i2printf@val+2,f,c
 17333  002068  225E               	addwfc	i2printf@val+3,f,c
 17334                           
 17335                           ;doprnt.c: 1264: }
 17336                           ;doprnt.c: 1266: }
 17337  00206A  D04F               	goto	i2l6366
 17338  00206C                     i2l6332:
 17339                           
 17340                           ;doprnt.c: 1268: else
 17341                           ;doprnt.c: 1273: {
 17342                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 17343  00206C  C04F  FFD9         	movff	i2printf@ap,fsr2l
 17344  002070  C050  FFDA         	movff	i2printf@ap+1,fsr2h
 17345  002074  CFDE F045          	movff	postinc2,??i2_printf
 17346  002078  CFDD F046          	movff	postdec2,??i2_printf+1
 17347  00207C  C045  F05B         	movff	??i2_printf,i2printf@val
 17348  002080  C046  F05C         	movff	??i2_printf+1,i2printf@val+1
 17349  002084  6A5D               	clrf	i2printf@val+2,c
 17350  002086  6A5E               	clrf	i2printf@val+3,c
 17351  002088  0E02               	movlw	2
 17352  00208A  264F               	addwf	i2printf@ap,f,c
 17353  00208C  0E00               	movlw	0
 17354  00208E  2250               	addwfc	i2printf@ap+1,f,c
 17355                           
 17356                           ;doprnt.c: 1287: }
 17357                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 17358  002090  D03C               	goto	i2l6366
 17359  002092                     i2l6336:
 17360                           
 17361                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 17362  002092  0E01               	movlw	1
 17363  002094  6E64               	movwf	i2printf@c,c
 17364  002096                     i2l6338:
 17365  002096  0E0A               	movlw	10
 17366  002098  1864               	xorwf	i2printf@c,w,c
 17367  00209A  B4D8               	btfsc	status,2,c
 17368  00209C  D03E               	goto	i2l6368
 17369                           
 17370                           ;doprnt.c: 1306: if(val < dpowers[c])
 17371  00209E  5064               	movf	i2printf@c,w,c
 17372  0020A0  0D04               	mullw	4
 17373  0020A2  0E91               	movlw	low _dpowers
 17374  0020A4  24F3               	addwf	prodl,w,c
 17375  0020A6  6EF6               	movwf	tblptrl,c
 17376  0020A8  0EFB               	movlw	high _dpowers
 17377  0020AA  20F4               	addwfc	prodh,w,c
 17378  0020AC  6EF7               	movwf	tblptrh,c
 17379  0020AE                     	if	0	;There are less than 3 active tblptr bytes
 17380  0020AE                     	endif
 17381  0020AE  0009               	tblrd		*+
 17382  0020B0  50F5               	movf	tablat,w,c
 17383  0020B2  5C5B               	subwf	i2printf@val,w,c
 17384  0020B4  0009               	tblrd		*+
 17385  0020B6  50F5               	movf	tablat,w,c
 17386  0020B8  585C               	subwfb	i2printf@val+1,w,c
 17387  0020BA  0009               	tblrd		*+
 17388  0020BC  50F5               	movf	tablat,w,c
 17389  0020BE  585D               	subwfb	i2printf@val+2,w,c
 17390  0020C0  0009               	tblrd		*+
 17391  0020C2  50F5               	movf	tablat,w,c
 17392  0020C4  585E               	subwfb	i2printf@val+3,w,c
 17393  0020C6  A0D8               	btfss	status,0,c
 17394  0020C8  D028               	goto	i2l6368
 17395                           
 17396                           ;doprnt.c: 1307: break;
 17397  0020CA  2A64               	incf	i2printf@c,f,c
 17398  0020CC  D7E4               	goto	i2l6338
 17399  0020CE                     i2l6350:
 17400                           
 17401                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 17402  0020CE  0E01               	movlw	1
 17403  0020D0  6E64               	movwf	i2printf@c,c
 17404  0020D2                     i2l6352:
 17405  0020D2  0E08               	movlw	8
 17406  0020D4  1864               	xorwf	i2printf@c,w,c
 17407  0020D6  B4D8               	btfsc	status,2,c
 17408  0020D8  D020               	goto	i2l6368
 17409                           
 17410                           ;doprnt.c: 1317: if(val < hexpowers[c])
 17411  0020DA  5064               	movf	i2printf@c,w,c
 17412  0020DC  0D04               	mullw	4
 17413  0020DE  0E07               	movlw	low _hexpowers
 17414  0020E0  24F3               	addwf	prodl,w,c
 17415  0020E2  6EF6               	movwf	tblptrl,c
 17416  0020E4  0EFC               	movlw	high _hexpowers
 17417  0020E6  20F4               	addwfc	prodh,w,c
 17418  0020E8  6EF7               	movwf	tblptrh,c
 17419  0020EA                     	if	0	;There are less than 3 active tblptr bytes
 17420  0020EA                     	endif
 17421  0020EA  0009               	tblrd		*+
 17422  0020EC  50F5               	movf	tablat,w,c
 17423  0020EE  5C5B               	subwf	i2printf@val,w,c
 17424  0020F0  0009               	tblrd		*+
 17425  0020F2  50F5               	movf	tablat,w,c
 17426  0020F4  585C               	subwfb	i2printf@val+1,w,c
 17427  0020F6  0009               	tblrd		*+
 17428  0020F8  50F5               	movf	tablat,w,c
 17429  0020FA  585D               	subwfb	i2printf@val+2,w,c
 17430  0020FC  0009               	tblrd		*+
 17431  0020FE  50F5               	movf	tablat,w,c
 17432  002100  585E               	subwfb	i2printf@val+3,w,c
 17433  002102  A0D8               	btfss	status,0,c
 17434  002104  D00A               	goto	i2l6368
 17435                           
 17436                           ;doprnt.c: 1318: break;
 17437  002106  2A64               	incf	i2printf@c,f,c
 17438  002108  D7E4               	goto	i2l6352
 17439  00210A                     i2l6366:
 17440  00210A  505F               	movf	i2printf@flag,w,c
 17441  00210C  0B80               	andlw	128
 17442                           
 17443                           ; Switch size 1, requested type "space"
 17444                           ; Number of cases is 2, Range of values is 0 to 128
 17445                           ; switch strategies available:
 17446                           ; Name         Instructions Cycles
 17447                           ; simple_byte            7     4 (average)
 17448                           ;	Chosen strategy is simple_byte
 17449  00210E  0A00               	xorlw	0	; case 0
 17450  002110  B4D8               	btfsc	status,2,c
 17451  002112  D7BF               	goto	i2l6336
 17452  002114  0A80               	xorlw	128	; case 128
 17453  002116  B4D8               	btfsc	status,2,c
 17454  002118  D7DA               	goto	i2l6350
 17455  00211A                     i2l6368:
 17456                           
 17457                           ;doprnt.c: 1345: if(width && flag & 0x03)
 17458  00211A  5057               	movf	i2printf@width,w,c
 17459  00211C  1058               	iorwf	i2printf@width+1,w,c
 17460  00211E  B4D8               	btfsc	status,2,c
 17461  002120  D00D               	goto	i2l6374
 17462  002122  0E03               	movlw	3
 17463  002124  145F               	andwf	i2printf@flag,w,c
 17464  002126  6E45               	movwf	??i2_printf& (0+255),c
 17465  002128  0E00               	movlw	0
 17466  00212A  1460               	andwf	i2printf@flag+1,w,c
 17467  00212C  6E46               	movwf	(??i2_printf+1)& (0+255),c
 17468  00212E  5045               	movf	??i2_printf,w,c
 17469  002130  1046               	iorwf	??i2_printf+1,w,c
 17470  002132  B4D8               	btfsc	status,2,c
 17471  002134  D003               	goto	i2l6374
 17472                           
 17473                           ;doprnt.c: 1346: width--;
 17474  002136  0657               	decf	i2printf@width,f,c
 17475  002138  A0D8               	btfss	status,0,c
 17476  00213A  0658               	decf	i2printf@width+1,f,c
 17477  00213C                     i2l6374:
 17478                           
 17479                           ;doprnt.c: 1381: if(width > c)
 17480  00213C  0E80               	movlw	128
 17481  00213E  BE64               	btfsc	i2printf@c,7,c
 17482  002140  0E7F               	movlw	127
 17483  002142  6E45               	movwf	??i2_printf& (0+255),c
 17484  002144  5057               	movf	i2printf@width,w,c
 17485  002146  5C64               	subwf	i2printf@c,w,c
 17486  002148  5058               	movf	i2printf@width+1,w,c
 17487  00214A  0A80               	xorlw	128
 17488  00214C  5845               	subwfb	??i2_printf& (0+255),w,c
 17489  00214E  B0D8               	btfsc	status,0,c
 17490  002150  D007               	goto	i2l6378
 17491                           
 17492                           ;doprnt.c: 1382: width -= c;
 17493  002152  5064               	movf	i2printf@c,w,c
 17494  002154  5E57               	subwf	i2printf@width,f,c
 17495  002156  0E00               	movlw	0
 17496  002158  BE64               	btfsc	i2printf@c,7,c
 17497  00215A  0EFF               	movlw	255
 17498  00215C  5A58               	subwfb	i2printf@width+1,f,c
 17499  00215E  D004               	goto	i2l6380
 17500  002160                     i2l6378:
 17501                           
 17502                           ;doprnt.c: 1383: else
 17503                           ;doprnt.c: 1384: width = 0;
 17504  002160  0E00               	movlw	0
 17505  002162  6E58               	movwf	i2printf@width+1,c
 17506  002164  0E00               	movlw	0
 17507  002166  6E57               	movwf	i2printf@width,c
 17508  002168                     i2l6380:
 17509                           
 17510                           ;doprnt.c: 1387: if(flag & 0x04) {
 17511  002168  A45F               	btfss	i2printf@flag,2,c
 17512  00216A  D018               	goto	i2l6392
 17513                           
 17514                           ;doprnt.c: 1392: if(flag & 0x03)
 17515  00216C  0E03               	movlw	3
 17516  00216E  145F               	andwf	i2printf@flag,w,c
 17517  002170  6E45               	movwf	??i2_printf& (0+255),c
 17518  002172  0E00               	movlw	0
 17519  002174  1460               	andwf	i2printf@flag+1,w,c
 17520  002176  6E46               	movwf	(??i2_printf+1)& (0+255),c
 17521  002178  5045               	movf	??i2_printf,w,c
 17522  00217A  1046               	iorwf	??i2_printf+1,w,c
 17523  00217C  B4D8               	btfsc	status,2,c
 17524  00217E  D003               	goto	i2l6386
 17525                           
 17526                           ;doprnt.c: 1393: (putch('-') );
 17527  002180  0E2D               	movlw	45
 17528  002182  EC88  F02F         	call	i2_putch
 17529  002186                     i2l6386:
 17530                           
 17531                           ;doprnt.c: 1415: if(width)
 17532  002186  5057               	movf	i2printf@width,w,c
 17533  002188  1058               	iorwf	i2printf@width+1,w,c
 17534  00218A  B4D8               	btfsc	status,2,c
 17535  00218C  D022               	goto	i2l6402
 17536                           
 17537                           ;doprnt.c: 1417: (putch('0') );
 17538                           
 17539                           ;doprnt.c: 1416: do
 17540  00218E  0E30               	movlw	48
 17541  002190  EC88  F02F         	call	i2_putch
 17542                           
 17543                           ;doprnt.c: 1418: while(--width);
 17544  002194  0657               	decf	i2printf@width,f,c
 17545  002196  A0D8               	btfss	status,0,c
 17546  002198  0658               	decf	i2printf@width+1,f,c
 17547  00219A  D7F5               	goto	i2l6386
 17548  00219C                     i2l6392:
 17549                           
 17550                           ;doprnt.c: 1422: {
 17551                           ;doprnt.c: 1424: if(width
 17552                           ;doprnt.c: 1428: )
 17553  00219C  5057               	movf	i2printf@width,w,c
 17554  00219E  1058               	iorwf	i2printf@width+1,w,c
 17555  0021A0  B4D8               	btfsc	status,2,c
 17556  0021A2  D00A               	goto	i2l6398
 17557  0021A4                     i2l6394:
 17558                           
 17559                           ;doprnt.c: 1430: (putch(' ') );
 17560  0021A4  0E20               	movlw	32
 17561  0021A6  EC88  F02F         	call	i2_putch
 17562                           
 17563                           ;doprnt.c: 1431: while(--width);
 17564  0021AA  0657               	decf	i2printf@width,f,c
 17565  0021AC  A0D8               	btfss	status,0,c
 17566  0021AE  0658               	decf	i2printf@width+1,f,c
 17567  0021B0  5057               	movf	i2printf@width,w,c
 17568  0021B2  1058               	iorwf	i2printf@width+1,w,c
 17569  0021B4  A4D8               	btfss	status,2,c
 17570  0021B6  D7F6               	goto	i2l6394
 17571  0021B8                     i2l6398:
 17572                           
 17573                           ;doprnt.c: 1438: if(flag & 0x03)
 17574  0021B8  0E03               	movlw	3
 17575  0021BA  145F               	andwf	i2printf@flag,w,c
 17576  0021BC  6E45               	movwf	??i2_printf& (0+255),c
 17577  0021BE  0E00               	movlw	0
 17578  0021C0  1460               	andwf	i2printf@flag+1,w,c
 17579  0021C2  6E46               	movwf	(??i2_printf+1)& (0+255),c
 17580  0021C4  5045               	movf	??i2_printf,w,c
 17581  0021C6  1046               	iorwf	??i2_printf+1,w,c
 17582  0021C8  B4D8               	btfsc	status,2,c
 17583  0021CA  D003               	goto	i2l6402
 17584                           
 17585                           ;doprnt.c: 1439: (putch('-') );
 17586  0021CC  0E2D               	movlw	45
 17587  0021CE  EC88  F02F         	call	i2_putch
 17588  0021D2                     i2l6402:
 17589                           
 17590                           ;doprnt.c: 1469: }
 17591                           ;doprnt.c: 1472: prec = c;
 17592  0021D2  5064               	movf	i2printf@c,w,c
 17593  0021D4  6E51               	movwf	i2printf@prec,c
 17594  0021D6  6A52               	clrf	i2printf@prec+1,c
 17595  0021D8  BE51               	btfsc	i2printf@prec,7,c
 17596  0021DA  0652               	decf	i2printf@prec+1,f,c
 17597                           
 17598                           ;doprnt.c: 1474: while(prec--) {
 17599  0021DC  D07C               	goto	i2l6416
 17600  0021DE                     i2l6404:
 17601                           
 17602                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 17603  0021DE  C051  F045         	movff	i2printf@prec,??i2_printf
 17604  0021E2  C052  F046         	movff	i2printf@prec+1,??i2_printf+1
 17605  0021E6  90D8               	bcf	status,0,c
 17606  0021E8  3645               	rlcf	??i2_printf,f,c
 17607  0021EA  3646               	rlcf	??i2_printf+1,f,c
 17608  0021EC  90D8               	bcf	status,0,c
 17609  0021EE  3645               	rlcf	??i2_printf,f,c
 17610  0021F0  3646               	rlcf	??i2_printf+1,f,c
 17611  0021F2  0E91               	movlw	low _dpowers
 17612  0021F4  2445               	addwf	??i2_printf,w,c
 17613  0021F6  6EF6               	movwf	tblptrl,c
 17614  0021F8  0EFB               	movlw	high _dpowers
 17615  0021FA  2046               	addwfc	??i2_printf+1,w,c
 17616  0021FC  6EF7               	movwf	tblptrh,c
 17617  0021FE                     	if	0	;There are less than 3 active tblptr bytes
 17618  0021FE                     	endif
 17619  0021FE  0009               	tblrd		*+
 17620  002200  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 17621  002204  0009               	tblrd		*+
 17622  002206  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 17623  00220A  0009               	tblrd		*+
 17624  00220C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 17625  002210  000A               	tblrd		*-
 17626  002212  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 17627  002216  C05B  F001         	movff	i2printf@val,i2___lldiv@dividend
 17628  00221A  C05C  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 17629  00221E  C05D  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 17630  002222  C05E  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 17631  002226  ECA3  F02A         	call	i2___lldiv	;wreg free
 17632  00222A  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 17633  00222E  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 17634  002232  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 17635  002236  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 17636  00223A  0E0A               	movlw	10
 17637  00223C  6E12               	movwf	i2___llmod@divisor,c
 17638  00223E  0E00               	movlw	0
 17639  002240  6E13               	movwf	i2___llmod@divisor+1,c
 17640  002242  0E00               	movlw	0
 17641  002244  6E14               	movwf	i2___llmod@divisor+2,c
 17642  002246  0E00               	movlw	0
 17643  002248  6E15               	movwf	i2___llmod@divisor+3,c
 17644  00224A  EC6C  F02C         	call	i2___llmod	;wreg free
 17645  00224E  500E               	movf	?i2___llmod,w,c
 17646  002250  0F30               	addlw	48
 17647  002252  6E64               	movwf	i2printf@c,c
 17648                           
 17649                           ;doprnt.c: 1491: break;
 17650  002254  D03D               	goto	i2l6414
 17651  002256                     i2l6406:
 17652                           
 17653                           ;doprnt.c: 1499: {
 17654                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 17655  002256  C05B  F001         	movff	i2printf@val,i2___lldiv@dividend
 17656  00225A  C05C  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 17657  00225E  C05D  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 17658  002262  C05E  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 17659  002266  C051  F045         	movff	i2printf@prec,??i2_printf
 17660  00226A  C052  F046         	movff	i2printf@prec+1,??i2_printf+1
 17661  00226E  90D8               	bcf	status,0,c
 17662  002270  3645               	rlcf	??i2_printf,f,c
 17663  002272  3646               	rlcf	??i2_printf+1,f,c
 17664  002274  90D8               	bcf	status,0,c
 17665  002276  3645               	rlcf	??i2_printf,f,c
 17666  002278  3646               	rlcf	??i2_printf+1,f,c
 17667  00227A  0E07               	movlw	low _hexpowers
 17668  00227C  2445               	addwf	??i2_printf,w,c
 17669  00227E  6EF6               	movwf	tblptrl,c
 17670  002280  0EFC               	movlw	high _hexpowers
 17671  002282  2046               	addwfc	??i2_printf+1,w,c
 17672  002284  6EF7               	movwf	tblptrh,c
 17673  002286                     	if	0	;There are less than 3 active tblptr bytes
 17674  002286                     	endif
 17675  002286  0009               	tblrd		*+
 17676  002288  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 17677  00228C  0009               	tblrd		*+
 17678  00228E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 17679  002292  0009               	tblrd		*+
 17680  002294  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 17681  002298  000A               	tblrd		*-
 17682  00229A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 17683  00229E  ECA3  F02A         	call	i2___lldiv	;wreg free
 17684  0022A2  5001               	movf	?i2___lldiv,w,c
 17685  0022A4  0B0F               	andlw	15
 17686  0022A6  6E4E               	movwf	i2printf@idx,c
 17687                           
 17688                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 17689  0022A8  504E               	movf	i2printf@idx,w,c
 17690  0022AA  0D01               	mullw	1
 17691  0022AC  0E3F               	movlw	low STR_28
 17692  0022AE  24F3               	addwf	prodl,w,c
 17693  0022B0  6EF6               	movwf	tblptrl,c
 17694  0022B2  0EFC               	movlw	high STR_28
 17695  0022B4  20F4               	addwfc	prodh,w,c
 17696  0022B6  6EF7               	movwf	tblptrh,c
 17697  0022B8                     	if	0	;There are less than 3 active tblptr bytes
 17698  0022B8                     	endif
 17699  0022B8  0008               	tblrd		*
 17700  0022BA  CFF5 F064          	movff	tablat,i2printf@c
 17701                           
 17702                           ;doprnt.c: 1523: }
 17703                           
 17704                           ;doprnt.c: 1508: }
 17705                           ;doprnt.c: 1510: break;
 17706  0022BE  D008               	goto	i2l6414
 17707  0022C0                     i2l6412:
 17708  0022C0  505F               	movf	i2printf@flag,w,c
 17709  0022C2  0B80               	andlw	128
 17710                           
 17711                           ; Switch size 1, requested type "space"
 17712                           ; Number of cases is 2, Range of values is 0 to 128
 17713                           ; switch strategies available:
 17714                           ; Name         Instructions Cycles
 17715                           ; simple_byte            7     4 (average)
 17716                           ;	Chosen strategy is simple_byte
 17717  0022C4  0A00               	xorlw	0	; case 0
 17718  0022C6  B4D8               	btfsc	status,2,c
 17719  0022C8  D78A               	goto	i2l6404
 17720  0022CA  0A80               	xorlw	128	; case 128
 17721  0022CC  B4D8               	btfsc	status,2,c
 17722  0022CE  D7C3               	goto	i2l6406
 17723  0022D0                     i2l6414:
 17724                           
 17725                           ;doprnt.c: 1524: (putch(c) );
 17726  0022D0  5064               	movf	i2printf@c,w,c
 17727  0022D2  EC88  F02F         	call	i2_putch
 17728  0022D6                     i2l6416:
 17729  0022D6  0651               	decf	i2printf@prec,f,c
 17730  0022D8  A0D8               	btfss	status,0,c
 17731  0022DA  0652               	decf	i2printf@prec+1,f,c
 17732  0022DC  2851               	incf	i2printf@prec,w,c
 17733  0022DE  E1F0               	bnz	i2l6412
 17734  0022E0  2852               	incf	i2printf@prec+1,w,c
 17735  0022E2  A4D8               	btfss	status,2,c
 17736  0022E4  D7ED               	goto	i2l6412
 17737  0022E6                     i2l6418:
 17738  0022E6  C040  FFF6         	movff	i2printf@f,tblptrl
 17739  0022EA  C041  FFF7         	movff	i2printf@f+1,tblptrh
 17740  0022EE  4A40               	infsnz	i2printf@f,f,c
 17741  0022F0  2A41               	incf	i2printf@f+1,f,c
 17742  0022F2                     	if	0	;tblptru may be non-zero
 17743  0022F2                     	endif
 17744  0022F2                     	if	0	;tblptru may be non-zero
 17745  0022F2                     	endif
 17746  0022F2  0008               	tblrd		*
 17747  0022F4  CFF5 F064          	movff	tablat,i2printf@c
 17748  0022F8  5064               	movf	i2printf@c,w,c
 17749  0022FA  B4D8               	btfsc	status,2,c
 17750  0022FC  0012               	return	
 17751  0022FE  EFAC  F00C         	goto	i2l6132
 17752  002302                     __end_ofi2_printf:
 17753                           	opt stack 0
 17754                           pclatu	equ	0xFFB
 17755                           pclath	equ	0xFFA
 17756                           tblptru	equ	0xFF8
 17757                           tblptrh	equ	0xFF7
 17758                           tblptrl	equ	0xFF6
 17759                           tablat	equ	0xFF5
 17760                           prodh	equ	0xFF4
 17761                           prodl	equ	0xFF3
 17762                           intcon	equ	0xFF2
 17763                           intcon2	equ	0xFF1
 17764                           postinc0	equ	0xFEE
 17765                           fsr0h	equ	0xFEA
 17766                           fsr0l	equ	0xFE9
 17767                           wreg	equ	0xFE8
 17768                           fsr1h	equ	0xFE2
 17769                           fsr1l	equ	0xFE1
 17770                           indf2	equ	0xFDF
 17771                           postinc2	equ	0xFDE
 17772                           postdec2	equ	0xFDD
 17773                           fsr2h	equ	0xFDA
 17774                           fsr2l	equ	0xFD9
 17775                           status	equ	0xFD8
 17776                           
 17777 ;; *************** function i2_scale *****************
 17778 ;; Defined at:
 17779 ;;		line 425 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
 17780 ;; Parameters:    Size  Location     Type
 17781 ;;  scl             1    wreg     char 
 17782 ;; Auto vars:     Size  Location     Type
 17783 ;;  scl             1   41[COMRAM] char 
 17784 ;; Return value:  Size  Location     Type
 17785 ;;                  3   35[COMRAM] char 
 17786 ;; Registers used:
 17787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17788 ;; Tracked objects:
 17789 ;;		On entry : 0/0
 17790 ;;		On exit  : 0/0
 17791 ;;		Unchanged: 0/0
 17792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17793 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17794 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17796 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17797 ;;Total ram usage:        7 bytes
 17798 ;; Hardware stack levels used:    1
 17799 ;; Hardware stack levels required when called:    2
 17800 ;; This function calls:
 17801 ;;		i2___awdiv
 17802 ;;		i2___awmod
 17803 ;;		i2___ftmul
 17804 ;;		i2___wmul
 17805 ;; This function is called by:
 17806 ;;		i2_printf
 17807 ;; This function uses a non-reentrant model
 17808 ;;
 17809                           
 17810                           	psect	text51
 17811  0032B2                     __ptext51:
 17812                           	opt stack 0
 17813  0032B2                     i2_scale:
 17814                           	opt stack 21
 17815                           
 17816                           ;incstack = 0
 17817                           ;i2scale@scl stored from wreg
 17818  0032B2  6E2A               	movwf	i2scale@scl,c
 17819                           
 17820                           ;doprnt.c: 428: if(scl < 0) {
 17821  0032B4  AE2A               	btfss	i2scale@scl,7,c
 17822  0032B6  D0FB               	goto	i2l5374
 17823                           
 17824                           ;doprnt.c: 429: scl = -scl;
 17825  0032B8  6C2A               	negf	i2scale@scl,c
 17826                           
 17827                           ;doprnt.c: 430: if(scl>=110)
 17828  0032BA  502A               	movf	i2scale@scl,w,c
 17829  0032BC  0A80               	xorlw	128
 17830  0032BE  0F12               	addlw	-238
 17831  0032C0  A0D8               	btfss	status,0,c
 17832  0032C2  D091               	goto	i2l5364
 17833                           
 17834                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17835  0032C4  0E00               	movlw	0
 17836  0032C6  6E12               	movwf	i2___wmul@multiplicand+1,c
 17837  0032C8  0E03               	movlw	3
 17838  0032CA  6E11               	movwf	i2___wmul@multiplicand,c
 17839  0032CC  0E00               	movlw	0
 17840  0032CE  6E0A               	movwf	i2___awdiv@divisor+1,c
 17841  0032D0  0E0A               	movlw	10
 17842  0032D2  6E09               	movwf	i2___awdiv@divisor,c
 17843  0032D4  0E00               	movlw	0
 17844  0032D6  6E04               	movwf	i2___awmod@divisor+1,c
 17845  0032D8  0E64               	movlw	100
 17846  0032DA  6E03               	movwf	i2___awmod@divisor,c
 17847  0032DC  502A               	movf	i2scale@scl,w,c
 17848  0032DE  6E01               	movwf	i2___awmod@dividend,c
 17849  0032E0  6A02               	clrf	i2___awmod@dividend+1,c
 17850  0032E2  BE01               	btfsc	i2___awmod@dividend,7,c
 17851  0032E4  0602               	decf	i2___awmod@dividend+1,f,c
 17852  0032E6  EC98  F02B         	call	i2___awmod	;wreg free
 17853  0032EA  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 17854  0032EE  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 17855  0032F2  EC61  F02A         	call	i2___awdiv	;wreg free
 17856  0032F6  0E09               	movlw	9
 17857  0032F8  2407               	addwf	?i2___awdiv,w,c
 17858  0032FA  6E0F               	movwf	i2___wmul@multiplier,c
 17859  0032FC  0E00               	movlw	0
 17860  0032FE  2008               	addwfc	?i2___awdiv+1,w,c
 17861  003300  6E10               	movwf	i2___wmul@multiplier+1,c
 17862  003302  EC28  F02F         	call	i2___wmul	;wreg free
 17863  003306  0EE0               	movlw	low __npowers_
 17864  003308  240F               	addwf	?i2___wmul,w,c
 17865  00330A  6EF6               	movwf	tblptrl,c
 17866  00330C  0EFB               	movlw	high __npowers_
 17867  00330E  2010               	addwfc	?i2___wmul+1,w,c
 17868  003310  6EF7               	movwf	tblptrh,c
 17869  003312                     	if	0	;There are less than 3 active tblptr bytes
 17870  003312                     	endif
 17871  003312  0009               	tblrd		*+
 17872  003314  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17873  003318  0009               	tblrd		*+
 17874  00331A  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17875  00331E  000A               	tblrd		*-
 17876  003320  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17877  003324  0E00               	movlw	0
 17878  003326  6E0A               	movwf	i2___awdiv@divisor+1,c
 17879  003328  0E64               	movlw	100
 17880  00332A  6E09               	movwf	i2___awdiv@divisor,c
 17881  00332C  502A               	movf	i2scale@scl,w,c
 17882  00332E  6E07               	movwf	i2___awdiv@dividend,c
 17883  003330  6A08               	clrf	i2___awdiv@dividend+1,c
 17884  003332  BE07               	btfsc	i2___awdiv@dividend,7,c
 17885  003334  0608               	decf	i2___awdiv@dividend+1,f,c
 17886  003336  EC61  F02A         	call	i2___awdiv	;wreg free
 17887  00333A  0E12               	movlw	18
 17888  00333C  2407               	addwf	?i2___awdiv,w,c
 17889  00333E  6E0F               	movwf	i2___wmul@multiplier,c
 17890  003340  0E00               	movlw	0
 17891  003342  2008               	addwfc	?i2___awdiv+1,w,c
 17892  003344  6E10               	movwf	i2___wmul@multiplier+1,c
 17893  003346  0E00               	movlw	0
 17894  003348  6E12               	movwf	i2___wmul@multiplicand+1,c
 17895  00334A  0E03               	movlw	3
 17896  00334C  6E11               	movwf	i2___wmul@multiplicand,c
 17897  00334E  EC28  F02F         	call	i2___wmul	;wreg free
 17898  003352  0EE0               	movlw	low __npowers_
 17899  003354  240F               	addwf	?i2___wmul,w,c
 17900  003356  6EF6               	movwf	tblptrl,c
 17901  003358  0EFB               	movlw	high __npowers_
 17902  00335A  2010               	addwfc	?i2___wmul+1,w,c
 17903  00335C  6EF7               	movwf	tblptrh,c
 17904  00335E                     	if	0	;There are less than 3 active tblptr bytes
 17905  00335E                     	endif
 17906  00335E  0009               	tblrd		*+
 17907  003360  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17908  003364  0009               	tblrd		*+
 17909  003366  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17910  00336A  000A               	tblrd		*-
 17911  00336C  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17912  003370  EC53  F026         	call	i2___ftmul	;wreg free
 17913  003374  C015  F027         	movff	?i2___ftmul,i2_scale$1785
 17914  003378  C016  F028         	movff	?i2___ftmul+1,i2_scale$1785+1
 17915  00337C  C017  F029         	movff	?i2___ftmul+2,i2_scale$1785+2
 17916                           
 17917                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17918  003380  C027  F015         	movff	i2_scale$1785,i2___ftmul@f1
 17919  003384  C028  F016         	movff	i2_scale$1785+1,i2___ftmul@f1+1
 17920  003388  C029  F017         	movff	i2_scale$1785+2,i2___ftmul@f1+2
 17921  00338C  0E00               	movlw	0
 17922  00338E  6E12               	movwf	i2___wmul@multiplicand+1,c
 17923  003390  0E03               	movlw	3
 17924  003392  6E11               	movwf	i2___wmul@multiplicand,c
 17925  003394  0E00               	movlw	0
 17926  003396  6E04               	movwf	i2___awmod@divisor+1,c
 17927  003398  0E0A               	movlw	10
 17928  00339A  6E03               	movwf	i2___awmod@divisor,c
 17929  00339C  502A               	movf	i2scale@scl,w,c
 17930  00339E  6E01               	movwf	i2___awmod@dividend,c
 17931  0033A0  6A02               	clrf	i2___awmod@dividend+1,c
 17932  0033A2  BE01               	btfsc	i2___awmod@dividend,7,c
 17933  0033A4  0602               	decf	i2___awmod@dividend+1,f,c
 17934  0033A6  EC98  F02B         	call	i2___awmod	;wreg free
 17935  0033AA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17936  0033AE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17937  0033B2  EC28  F02F         	call	i2___wmul	;wreg free
 17938  0033B6  0EE0               	movlw	low __npowers_
 17939  0033B8  240F               	addwf	?i2___wmul,w,c
 17940  0033BA  6EF6               	movwf	tblptrl,c
 17941  0033BC  0EFB               	movlw	high __npowers_
 17942  0033BE  2010               	addwfc	?i2___wmul+1,w,c
 17943  0033C0  6EF7               	movwf	tblptrh,c
 17944  0033C2                     	if	0	;There are less than 3 active tblptr bytes
 17945  0033C2                     	endif
 17946  0033C2  0009               	tblrd		*+
 17947  0033C4  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17948  0033C8  0009               	tblrd		*+
 17949  0033CA  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17950  0033CE  000A               	tblrd		*-
 17951  0033D0  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17952  0033D4  EC53  F026         	call	i2___ftmul	;wreg free
 17953  0033D8  C015  F024         	movff	?i2___ftmul,?i2_scale
 17954  0033DC  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 17955  0033E0  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 17956  0033E4  0012               	return	
 17957  0033E6                     i2l5364:
 17958                           
 17959                           ;doprnt.c: 432: else if(scl > 10)
 17960  0033E6  502A               	movf	i2scale@scl,w,c
 17961  0033E8  0A80               	xorlw	128
 17962  0033EA  0F75               	addlw	-139
 17963  0033EC  A0D8               	btfss	status,0,c
 17964  0033EE  D04D               	goto	i2l5370
 17965                           
 17966                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 17967  0033F0  0E00               	movlw	0
 17968  0033F2  6E0A               	movwf	i2___awdiv@divisor+1,c
 17969  0033F4  0E0A               	movlw	10
 17970  0033F6  6E09               	movwf	i2___awdiv@divisor,c
 17971  0033F8  502A               	movf	i2scale@scl,w,c
 17972  0033FA  6E07               	movwf	i2___awdiv@dividend,c
 17973  0033FC  6A08               	clrf	i2___awdiv@dividend+1,c
 17974  0033FE  BE07               	btfsc	i2___awdiv@dividend,7,c
 17975  003400  0608               	decf	i2___awdiv@dividend+1,f,c
 17976  003402  EC61  F02A         	call	i2___awdiv	;wreg free
 17977  003406  0E09               	movlw	9
 17978  003408  2407               	addwf	?i2___awdiv,w,c
 17979  00340A  6E0F               	movwf	i2___wmul@multiplier,c
 17980  00340C  0E00               	movlw	0
 17981  00340E  2008               	addwfc	?i2___awdiv+1,w,c
 17982  003410  6E10               	movwf	i2___wmul@multiplier+1,c
 17983  003412  0E00               	movlw	0
 17984  003414  6E12               	movwf	i2___wmul@multiplicand+1,c
 17985  003416  0E03               	movlw	3
 17986  003418  6E11               	movwf	i2___wmul@multiplicand,c
 17987  00341A  EC28  F02F         	call	i2___wmul	;wreg free
 17988  00341E  0EE0               	movlw	low __npowers_
 17989  003420  240F               	addwf	?i2___wmul,w,c
 17990  003422  6EF6               	movwf	tblptrl,c
 17991  003424  0EFB               	movlw	high __npowers_
 17992  003426  2010               	addwfc	?i2___wmul+1,w,c
 17993  003428  6EF7               	movwf	tblptrh,c
 17994  00342A                     	if	0	;There are less than 3 active tblptr bytes
 17995  00342A                     	endif
 17996  00342A  0009               	tblrd		*+
 17997  00342C  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17998  003430  0009               	tblrd		*+
 17999  003432  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 18000  003436  000A               	tblrd		*-
 18001  003438  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 18002  00343C  0E00               	movlw	0
 18003  00343E  6E12               	movwf	i2___wmul@multiplicand+1,c
 18004  003440  0E03               	movlw	3
 18005  003442  6E11               	movwf	i2___wmul@multiplicand,c
 18006  003444  0E00               	movlw	0
 18007  003446  6E04               	movwf	i2___awmod@divisor+1,c
 18008  003448  0E0A               	movlw	10
 18009  00344A  6E03               	movwf	i2___awmod@divisor,c
 18010  00344C  502A               	movf	i2scale@scl,w,c
 18011  00344E  6E01               	movwf	i2___awmod@dividend,c
 18012  003450  6A02               	clrf	i2___awmod@dividend+1,c
 18013  003452  BE01               	btfsc	i2___awmod@dividend,7,c
 18014  003454  0602               	decf	i2___awmod@dividend+1,f,c
 18015  003456  EC98  F02B         	call	i2___awmod	;wreg free
 18016  00345A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 18017  00345E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 18018  003462  EC28  F02F         	call	i2___wmul	;wreg free
 18019  003466  0EE0               	movlw	low __npowers_
 18020  003468  240F               	addwf	?i2___wmul,w,c
 18021  00346A  6EF6               	movwf	tblptrl,c
 18022  00346C  0EFB               	movlw	high __npowers_
 18023  00346E  2010               	addwfc	?i2___wmul+1,w,c
 18024  003470  6EF7               	movwf	tblptrh,c
 18025  003472                     	if	0	;There are less than 3 active tblptr bytes
 18026  003472                     	endif
 18027  003472  0009               	tblrd		*+
 18028  003474  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18029  003478  0009               	tblrd		*+
 18030  00347A  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18031  00347E  000A               	tblrd		*-
 18032  003480  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18033  003484  EC53  F026         	call	i2___ftmul	;wreg free
 18034  003488  D7A7               	goto	L7
 18035  00348A                     i2l5370:
 18036                           
 18037                           ;doprnt.c: 434: return _npowers_[scl];
 18038  00348A  502A               	movf	i2scale@scl,w,c
 18039  00348C  0D03               	mullw	3
 18040  00348E  0EE0               	movlw	low __npowers_
 18041  003490  24F3               	addwf	prodl,w,c
 18042  003492  6EF6               	movwf	tblptrl,c
 18043  003494  0EFB               	movlw	high __npowers_
 18044  003496  20F4               	addwfc	prodh,w,c
 18045  003498  6EF7               	movwf	tblptrh,c
 18046  00349A                     	if	0	;There are less than 3 active tblptr bytes
 18047  00349A                     	endif
 18048  00349A  0009               	tblrd		*+
 18049  00349C  CFF5 F024          	movff	tablat,?i2_scale
 18050  0034A0  0009               	tblrd		*+
 18051  0034A2  CFF5 F025          	movff	tablat,?i2_scale+1
 18052  0034A6  000A               	tblrd		*-
 18053  0034A8  CFF5 F026          	movff	tablat,?i2_scale+2
 18054  0034AC  0012               	return	
 18055  0034AE                     i2l5374:
 18056                           
 18057                           ;doprnt.c: 435: }
 18058                           ;doprnt.c: 436: if(scl>=110)
 18059  0034AE  502A               	movf	i2scale@scl,w,c
 18060  0034B0  0A80               	xorlw	128
 18061  0034B2  0F12               	addlw	-238
 18062  0034B4  A0D8               	btfss	status,0,c
 18063  0034B6  D091               	goto	i2l5382
 18064                           
 18065                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18066  0034B8  0E00               	movlw	0
 18067  0034BA  6E12               	movwf	i2___wmul@multiplicand+1,c
 18068  0034BC  0E03               	movlw	3
 18069  0034BE  6E11               	movwf	i2___wmul@multiplicand,c
 18070  0034C0  0E00               	movlw	0
 18071  0034C2  6E0A               	movwf	i2___awdiv@divisor+1,c
 18072  0034C4  0E0A               	movlw	10
 18073  0034C6  6E09               	movwf	i2___awdiv@divisor,c
 18074  0034C8  0E00               	movlw	0
 18075  0034CA  6E04               	movwf	i2___awmod@divisor+1,c
 18076  0034CC  0E64               	movlw	100
 18077  0034CE  6E03               	movwf	i2___awmod@divisor,c
 18078  0034D0  502A               	movf	i2scale@scl,w,c
 18079  0034D2  6E01               	movwf	i2___awmod@dividend,c
 18080  0034D4  6A02               	clrf	i2___awmod@dividend+1,c
 18081  0034D6  BE01               	btfsc	i2___awmod@dividend,7,c
 18082  0034D8  0602               	decf	i2___awmod@dividend+1,f,c
 18083  0034DA  EC98  F02B         	call	i2___awmod	;wreg free
 18084  0034DE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 18085  0034E2  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 18086  0034E6  EC61  F02A         	call	i2___awdiv	;wreg free
 18087  0034EA  0E09               	movlw	9
 18088  0034EC  2407               	addwf	?i2___awdiv,w,c
 18089  0034EE  6E0F               	movwf	i2___wmul@multiplier,c
 18090  0034F0  0E00               	movlw	0
 18091  0034F2  2008               	addwfc	?i2___awdiv+1,w,c
 18092  0034F4  6E10               	movwf	i2___wmul@multiplier+1,c
 18093  0034F6  EC28  F02F         	call	i2___wmul	;wreg free
 18094  0034FA  0EB9               	movlw	low __powers_
 18095  0034FC  240F               	addwf	?i2___wmul,w,c
 18096  0034FE  6EF6               	movwf	tblptrl,c
 18097  003500  0EFB               	movlw	high __powers_
 18098  003502  2010               	addwfc	?i2___wmul+1,w,c
 18099  003504  6EF7               	movwf	tblptrh,c
 18100  003506                     	if	0	;There are less than 3 active tblptr bytes
 18101  003506                     	endif
 18102  003506  0009               	tblrd		*+
 18103  003508  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18104  00350C  0009               	tblrd		*+
 18105  00350E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18106  003512  000A               	tblrd		*-
 18107  003514  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18108  003518  0E00               	movlw	0
 18109  00351A  6E0A               	movwf	i2___awdiv@divisor+1,c
 18110  00351C  0E64               	movlw	100
 18111  00351E  6E09               	movwf	i2___awdiv@divisor,c
 18112  003520  502A               	movf	i2scale@scl,w,c
 18113  003522  6E07               	movwf	i2___awdiv@dividend,c
 18114  003524  6A08               	clrf	i2___awdiv@dividend+1,c
 18115  003526  BE07               	btfsc	i2___awdiv@dividend,7,c
 18116  003528  0608               	decf	i2___awdiv@dividend+1,f,c
 18117  00352A  EC61  F02A         	call	i2___awdiv	;wreg free
 18118  00352E  0E12               	movlw	18
 18119  003530  2407               	addwf	?i2___awdiv,w,c
 18120  003532  6E0F               	movwf	i2___wmul@multiplier,c
 18121  003534  0E00               	movlw	0
 18122  003536  2008               	addwfc	?i2___awdiv+1,w,c
 18123  003538  6E10               	movwf	i2___wmul@multiplier+1,c
 18124  00353A  0E00               	movlw	0
 18125  00353C  6E12               	movwf	i2___wmul@multiplicand+1,c
 18126  00353E  0E03               	movlw	3
 18127  003540  6E11               	movwf	i2___wmul@multiplicand,c
 18128  003542  EC28  F02F         	call	i2___wmul	;wreg free
 18129  003546  0EB9               	movlw	low __powers_
 18130  003548  240F               	addwf	?i2___wmul,w,c
 18131  00354A  6EF6               	movwf	tblptrl,c
 18132  00354C  0EFB               	movlw	high __powers_
 18133  00354E  2010               	addwfc	?i2___wmul+1,w,c
 18134  003550  6EF7               	movwf	tblptrh,c
 18135  003552                     	if	0	;There are less than 3 active tblptr bytes
 18136  003552                     	endif
 18137  003552  0009               	tblrd		*+
 18138  003554  CFF5 F015          	movff	tablat,i2___ftmul@f1
 18139  003558  0009               	tblrd		*+
 18140  00355A  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 18141  00355E  000A               	tblrd		*-
 18142  003560  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 18143  003564  EC53  F026         	call	i2___ftmul	;wreg free
 18144  003568  C015  F027         	movff	?i2___ftmul,i2_scale$1785
 18145  00356C  C016  F028         	movff	?i2___ftmul+1,i2_scale$1785+1
 18146  003570  C017  F029         	movff	?i2___ftmul+2,i2_scale$1785+2
 18147                           
 18148                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18149  003574  C027  F015         	movff	i2_scale$1785,i2___ftmul@f1
 18150  003578  C028  F016         	movff	i2_scale$1785+1,i2___ftmul@f1+1
 18151  00357C  C029  F017         	movff	i2_scale$1785+2,i2___ftmul@f1+2
 18152  003580  0E00               	movlw	0
 18153  003582  6E12               	movwf	i2___wmul@multiplicand+1,c
 18154  003584  0E03               	movlw	3
 18155  003586  6E11               	movwf	i2___wmul@multiplicand,c
 18156  003588  0E00               	movlw	0
 18157  00358A  6E04               	movwf	i2___awmod@divisor+1,c
 18158  00358C  0E0A               	movlw	10
 18159  00358E  6E03               	movwf	i2___awmod@divisor,c
 18160  003590  502A               	movf	i2scale@scl,w,c
 18161  003592  6E01               	movwf	i2___awmod@dividend,c
 18162  003594  6A02               	clrf	i2___awmod@dividend+1,c
 18163  003596  BE01               	btfsc	i2___awmod@dividend,7,c
 18164  003598  0602               	decf	i2___awmod@dividend+1,f,c
 18165  00359A  EC98  F02B         	call	i2___awmod	;wreg free
 18166  00359E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 18167  0035A2  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 18168  0035A6  EC28  F02F         	call	i2___wmul	;wreg free
 18169  0035AA  0EB9               	movlw	low __powers_
 18170  0035AC  240F               	addwf	?i2___wmul,w,c
 18171  0035AE  6EF6               	movwf	tblptrl,c
 18172  0035B0  0EFB               	movlw	high __powers_
 18173  0035B2  2010               	addwfc	?i2___wmul+1,w,c
 18174  0035B4  6EF7               	movwf	tblptrh,c
 18175  0035B6                     	if	0	;There are less than 3 active tblptr bytes
 18176  0035B6                     	endif
 18177  0035B6  0009               	tblrd		*+
 18178  0035B8  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18179  0035BC  0009               	tblrd		*+
 18180  0035BE  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18181  0035C2  000A               	tblrd		*-
 18182  0035C4  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18183  0035C8  EC53  F026         	call	i2___ftmul	;wreg free
 18184  0035CC  C015  F024         	movff	?i2___ftmul,?i2_scale
 18185  0035D0  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 18186  0035D4  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 18187  0035D8  0012               	return	
 18188  0035DA                     i2l5382:
 18189                           
 18190                           ;doprnt.c: 438: else if(scl > 10)
 18191  0035DA  502A               	movf	i2scale@scl,w,c
 18192  0035DC  0A80               	xorlw	128
 18193  0035DE  0F75               	addlw	-139
 18194  0035E0  A0D8               	btfss	status,0,c
 18195  0035E2  D04D               	goto	i2l5388
 18196                           
 18197                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 18198  0035E4  0E00               	movlw	0
 18199  0035E6  6E0A               	movwf	i2___awdiv@divisor+1,c
 18200  0035E8  0E0A               	movlw	10
 18201  0035EA  6E09               	movwf	i2___awdiv@divisor,c
 18202  0035EC  502A               	movf	i2scale@scl,w,c
 18203  0035EE  6E07               	movwf	i2___awdiv@dividend,c
 18204  0035F0  6A08               	clrf	i2___awdiv@dividend+1,c
 18205  0035F2  BE07               	btfsc	i2___awdiv@dividend,7,c
 18206  0035F4  0608               	decf	i2___awdiv@dividend+1,f,c
 18207  0035F6  EC61  F02A         	call	i2___awdiv	;wreg free
 18208  0035FA  0E09               	movlw	9
 18209  0035FC  2407               	addwf	?i2___awdiv,w,c
 18210  0035FE  6E0F               	movwf	i2___wmul@multiplier,c
 18211  003600  0E00               	movlw	0
 18212  003602  2008               	addwfc	?i2___awdiv+1,w,c
 18213  003604  6E10               	movwf	i2___wmul@multiplier+1,c
 18214  003606  0E00               	movlw	0
 18215  003608  6E12               	movwf	i2___wmul@multiplicand+1,c
 18216  00360A  0E03               	movlw	3
 18217  00360C  6E11               	movwf	i2___wmul@multiplicand,c
 18218  00360E  EC28  F02F         	call	i2___wmul	;wreg free
 18219  003612  0EB9               	movlw	low __powers_
 18220  003614  240F               	addwf	?i2___wmul,w,c
 18221  003616  6EF6               	movwf	tblptrl,c
 18222  003618  0EFB               	movlw	high __powers_
 18223  00361A  2010               	addwfc	?i2___wmul+1,w,c
 18224  00361C  6EF7               	movwf	tblptrh,c
 18225  00361E                     	if	0	;There are less than 3 active tblptr bytes
 18226  00361E                     	endif
 18227  00361E  0009               	tblrd		*+
 18228  003620  CFF5 F015          	movff	tablat,i2___ftmul@f1
 18229  003624  0009               	tblrd		*+
 18230  003626  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 18231  00362A  000A               	tblrd		*-
 18232  00362C  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 18233  003630  0E00               	movlw	0
 18234  003632  6E12               	movwf	i2___wmul@multiplicand+1,c
 18235  003634  0E03               	movlw	3
 18236  003636  6E11               	movwf	i2___wmul@multiplicand,c
 18237  003638  0E00               	movlw	0
 18238  00363A  6E04               	movwf	i2___awmod@divisor+1,c
 18239  00363C  0E0A               	movlw	10
 18240  00363E  6E03               	movwf	i2___awmod@divisor,c
 18241  003640  502A               	movf	i2scale@scl,w,c
 18242  003642  6E01               	movwf	i2___awmod@dividend,c
 18243  003644  6A02               	clrf	i2___awmod@dividend+1,c
 18244  003646  BE01               	btfsc	i2___awmod@dividend,7,c
 18245  003648  0602               	decf	i2___awmod@dividend+1,f,c
 18246  00364A  EC98  F02B         	call	i2___awmod	;wreg free
 18247  00364E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 18248  003652  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 18249  003656  EC28  F02F         	call	i2___wmul	;wreg free
 18250  00365A  0EB9               	movlw	low __powers_
 18251  00365C  240F               	addwf	?i2___wmul,w,c
 18252  00365E  6EF6               	movwf	tblptrl,c
 18253  003660  0EFB               	movlw	high __powers_
 18254  003662  2010               	addwfc	?i2___wmul+1,w,c
 18255  003664  6EF7               	movwf	tblptrh,c
 18256  003666                     	if	0	;There are less than 3 active tblptr bytes
 18257  003666                     	endif
 18258  003666  0009               	tblrd		*+
 18259  003668  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18260  00366C  0009               	tblrd		*+
 18261  00366E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18262  003672  000A               	tblrd		*-
 18263  003674  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18264  003678  EC53  F026         	call	i2___ftmul	;wreg free
 18265  00367C  D7A7               	goto	L8
 18266  00367E                     i2l5388:
 18267                           
 18268                           ;doprnt.c: 440: return _powers_[scl];
 18269  00367E  502A               	movf	i2scale@scl,w,c
 18270  003680  0D03               	mullw	3
 18271  003682  0EB9               	movlw	low __powers_
 18272  003684  24F3               	addwf	prodl,w,c
 18273  003686  6EF6               	movwf	tblptrl,c
 18274  003688  0EFB               	movlw	high __powers_
 18275  00368A  20F4               	addwfc	prodh,w,c
 18276  00368C  6EF7               	movwf	tblptrh,c
 18277  00368E                     	if	0	;There are less than 3 active tblptr bytes
 18278  00368E                     	endif
 18279  00368E  0009               	tblrd		*+
 18280  003690  CFF5 F024          	movff	tablat,?i2_scale
 18281  003694  0009               	tblrd		*+
 18282  003696  CFF5 F025          	movff	tablat,?i2_scale+1
 18283  00369A  000A               	tblrd		*-
 18284  00369C  CFF5 F026          	movff	tablat,?i2_scale+2
 18285  0036A0  0012               	return	
 18286  0036A2                     __end_ofi2_scale:
 18287                           	opt stack 0
 18288                           pclatu	equ	0xFFB
 18289                           pclath	equ	0xFFA
 18290                           tblptru	equ	0xFF8
 18291                           tblptrh	equ	0xFF7
 18292                           tblptrl	equ	0xFF6
 18293                           tablat	equ	0xFF5
 18294                           prodh	equ	0xFF4
 18295                           prodl	equ	0xFF3
 18296                           intcon	equ	0xFF2
 18297                           intcon2	equ	0xFF1
 18298                           postinc0	equ	0xFEE
 18299                           fsr0h	equ	0xFEA
 18300                           fsr0l	equ	0xFE9
 18301                           wreg	equ	0xFE8
 18302                           fsr1h	equ	0xFE2
 18303                           fsr1l	equ	0xFE1
 18304                           indf2	equ	0xFDF
 18305                           postinc2	equ	0xFDE
 18306                           postdec2	equ	0xFDD
 18307                           fsr2h	equ	0xFDA
 18308                           fsr2l	equ	0xFD9
 18309                           status	equ	0xFD8
 18310                           
 18311 ;; *************** function i2_putch *****************
 18312 ;; Defined at:
 18313 ;;		line 30 in file "lcd.c"
 18314 ;; Parameters:    Size  Location     Type
 18315 ;;  data            1    wreg     unsigned char 
 18316 ;; Auto vars:     Size  Location     Type
 18317 ;;  data            1    2[COMRAM] unsigned char 
 18318 ;; Return value:  Size  Location     Type
 18319 ;;                  1    wreg      void 
 18320 ;; Registers used:
 18321 ;;		wreg, status,2, status,0, cstack
 18322 ;; Tracked objects:
 18323 ;;		On entry : 0/0
 18324 ;;		On exit  : 0/0
 18325 ;;		Unchanged: 0/0
 18326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18331 ;;Total ram usage:        1 bytes
 18332 ;; Hardware stack levels used:    1
 18333 ;; Hardware stack levels required when called:    1
 18334 ;; This function calls:
 18335 ;;		i2_lcdNibble
 18336 ;; This function is called by:
 18337 ;;		i2_printf
 18338 ;; This function uses a non-reentrant model
 18339 ;;
 18340                           
 18341                           	psect	text52
 18342  005F10                     __ptext52:
 18343                           	opt stack 0
 18344  005F10                     i2_putch:
 18345                           	opt stack 22
 18346                           
 18347                           ;incstack = 0
 18348                           ;i2putch@data stored from wreg
 18349  005F10  6E03               	movwf	i2putch@data,c
 18350                           
 18351                           ;lcd.c: 31: LATDbits.LATD2 = 1;
 18352  005F12  848C               	bsf	3980,2,c	;volatile
 18353                           
 18354                           ;lcd.c: 32: lcdNibble(data);
 18355  005F14  5003               	movf	i2putch@data,w,c
 18356  005F16  EC81  F02D         	call	i2_lcdNibble
 18357  005F1A  0012               	return		;funcret
 18358  005F1C                     __end_ofi2_putch:
 18359                           	opt stack 0
 18360                           pclatu	equ	0xFFB
 18361                           pclath	equ	0xFFA
 18362                           tblptru	equ	0xFF8
 18363                           tblptrh	equ	0xFF7
 18364                           tblptrl	equ	0xFF6
 18365                           tablat	equ	0xFF5
 18366                           prodh	equ	0xFF4
 18367                           prodl	equ	0xFF3
 18368                           intcon	equ	0xFF2
 18369                           intcon2	equ	0xFF1
 18370                           postinc0	equ	0xFEE
 18371                           fsr0h	equ	0xFEA
 18372                           fsr0l	equ	0xFE9
 18373                           wreg	equ	0xFE8
 18374                           fsr1h	equ	0xFE2
 18375                           fsr1l	equ	0xFE1
 18376                           indf2	equ	0xFDF
 18377                           postinc2	equ	0xFDE
 18378                           postdec2	equ	0xFDD
 18379                           fsr2h	equ	0xFDA
 18380                           fsr2l	equ	0xFD9
 18381                           status	equ	0xFD8
 18382                           
 18383 ;; *************** function i2_isdigit *****************
 18384 ;; Defined at:
 18385 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/isdigit.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  c               1    wreg     unsigned char 
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;  c               1    2[COMRAM] unsigned char 
 18390 ;; Return value:  Size  Location     Type
 18391 ;;		None               void
 18392 ;; Registers used:
 18393 ;;		wreg, status,2, status,0
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;Total ram usage:        3 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; This function calls:
 18406 ;;		Nothing
 18407 ;; This function is called by:
 18408 ;;		i2_printf
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text53
 18413  005EBE                     __ptext53:
 18414                           	opt stack 0
 18415  005EBE                     i2_isdigit:
 18416                           	opt stack 23
 18417                           
 18418                           ;incstack = 0
 18419                           ;i2isdigit@c stored from wreg
 18420  005EBE  6E03               	movwf	i2isdigit@c,c
 18421  005EC0  0E00               	movlw	0
 18422  005EC2  6E02               	movwf	i2_isdigit$1222,c
 18423  005EC4  0E3A               	movlw	58
 18424  005EC6  6003               	cpfslt	i2isdigit@c,c
 18425  005EC8  D005               	goto	i2l5620
 18426  005ECA  0E2F               	movlw	47
 18427  005ECC  6403               	cpfsgt	i2isdigit@c,c
 18428  005ECE  D002               	goto	i2l5620
 18429  005ED0  0E01               	movlw	1
 18430  005ED2  6E02               	movwf	i2_isdigit$1222,c
 18431  005ED4                     i2l5620:
 18432  005ED4  C002  F001         	movff	i2_isdigit$1222,??i2_isdigit
 18433  005ED8  3001               	rrcf	??i2_isdigit,w,c
 18434  005EDA  0012               	return	
 18435  005EDC                     __end_ofi2_isdigit:
 18436                           	opt stack 0
 18437                           pclatu	equ	0xFFB
 18438                           pclath	equ	0xFFA
 18439                           tblptru	equ	0xFF8
 18440                           tblptrh	equ	0xFF7
 18441                           tblptrl	equ	0xFF6
 18442                           tablat	equ	0xFF5
 18443                           prodh	equ	0xFF4
 18444                           prodl	equ	0xFF3
 18445                           intcon	equ	0xFF2
 18446                           intcon2	equ	0xFF1
 18447                           postinc0	equ	0xFEE
 18448                           fsr0h	equ	0xFEA
 18449                           fsr0l	equ	0xFE9
 18450                           wreg	equ	0xFE8
 18451                           fsr1h	equ	0xFE2
 18452                           fsr1l	equ	0xFE1
 18453                           indf2	equ	0xFDF
 18454                           postinc2	equ	0xFDE
 18455                           postdec2	equ	0xFDD
 18456                           fsr2h	equ	0xFDA
 18457                           fsr2l	equ	0xFD9
 18458                           status	equ	0xFD8
 18459                           
 18460 ;; *************** function i2_fround *****************
 18461 ;; Defined at:
 18462 ;;		line 409 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
 18463 ;; Parameters:    Size  Location     Type
 18464 ;;  prec            1    wreg     unsigned char 
 18465 ;; Auto vars:     Size  Location     Type
 18466 ;;  prec            1   44[COMRAM] unsigned char 
 18467 ;; Return value:  Size  Location     Type
 18468 ;;                  3   35[COMRAM] unsigned char 
 18469 ;; Registers used:
 18470 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18471 ;; Tracked objects:
 18472 ;;		On entry : 0/0
 18473 ;;		On exit  : 0/0
 18474 ;;		Unchanged: 0/0
 18475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18477 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18479 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18480 ;;Total ram usage:       10 bytes
 18481 ;; Hardware stack levels used:    1
 18482 ;; Hardware stack levels required when called:    2
 18483 ;; This function calls:
 18484 ;;		i2___awdiv
 18485 ;;		i2___awmod
 18486 ;;		i2___ftmul
 18487 ;;		i2___wmul
 18488 ;; This function is called by:
 18489 ;;		i2_printf
 18490 ;; This function uses a non-reentrant model
 18491 ;;
 18492                           
 18493                           	psect	text54
 18494  003BB6                     __ptext54:
 18495                           	opt stack 0
 18496  003BB6                     i2_fround:
 18497                           	opt stack 21
 18498                           
 18499                           ;incstack = 0
 18500                           ;i2fround@prec stored from wreg
 18501  003BB6  6E2D               	movwf	i2fround@prec,c
 18502                           
 18503                           ;doprnt.c: 413: if(prec>=110)
 18504  003BB8  0E6D               	movlw	109
 18505  003BBA  642D               	cpfsgt	i2fround@prec,c
 18506  003BBC  D09F               	goto	i2l5342
 18507                           
 18508                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18509  003BBE  0E00               	movlw	0
 18510  003BC0  6E12               	movwf	i2___wmul@multiplicand+1,c
 18511  003BC2  0E03               	movlw	3
 18512  003BC4  6E11               	movwf	i2___wmul@multiplicand,c
 18513  003BC6  0E00               	movlw	0
 18514  003BC8  6E0A               	movwf	i2___awdiv@divisor+1,c
 18515  003BCA  0E0A               	movlw	10
 18516  003BCC  6E09               	movwf	i2___awdiv@divisor,c
 18517  003BCE  0E00               	movlw	0
 18518  003BD0  6E04               	movwf	i2___awmod@divisor+1,c
 18519  003BD2  0E64               	movlw	100
 18520  003BD4  6E03               	movwf	i2___awmod@divisor,c
 18521  003BD6  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 18522  003BDA  6A02               	clrf	i2___awmod@dividend+1,c
 18523  003BDC  EC98  F02B         	call	i2___awmod	;wreg free
 18524  003BE0  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 18525  003BE4  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 18526  003BE8  EC61  F02A         	call	i2___awdiv	;wreg free
 18527  003BEC  0E09               	movlw	9
 18528  003BEE  2407               	addwf	?i2___awdiv,w,c
 18529  003BF0  6E0F               	movwf	i2___wmul@multiplier,c
 18530  003BF2  0E00               	movlw	0
 18531  003BF4  2008               	addwfc	?i2___awdiv+1,w,c
 18532  003BF6  6E10               	movwf	i2___wmul@multiplier+1,c
 18533  003BF8  EC28  F02F         	call	i2___wmul	;wreg free
 18534  003BFC  0EE0               	movlw	low __npowers_
 18535  003BFE  240F               	addwf	?i2___wmul,w,c
 18536  003C00  6EF6               	movwf	tblptrl,c
 18537  003C02  0EFB               	movlw	high __npowers_
 18538  003C04  2010               	addwfc	?i2___wmul+1,w,c
 18539  003C06  6EF7               	movwf	tblptrh,c
 18540  003C08                     	if	0	;There are less than 3 active tblptr bytes
 18541  003C08                     	endif
 18542  003C08  0009               	tblrd		*+
 18543  003C0A  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18544  003C0E  0009               	tblrd		*+
 18545  003C10  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18546  003C14  000A               	tblrd		*-
 18547  003C16  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18548  003C1A  0E00               	movlw	0
 18549  003C1C  6E0A               	movwf	i2___awdiv@divisor+1,c
 18550  003C1E  0E64               	movlw	100
 18551  003C20  6E09               	movwf	i2___awdiv@divisor,c
 18552  003C22  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 18553  003C26  6A08               	clrf	i2___awdiv@dividend+1,c
 18554  003C28  EC61  F02A         	call	i2___awdiv	;wreg free
 18555  003C2C  0E12               	movlw	18
 18556  003C2E  2407               	addwf	?i2___awdiv,w,c
 18557  003C30  6E0F               	movwf	i2___wmul@multiplier,c
 18558  003C32  0E00               	movlw	0
 18559  003C34  2008               	addwfc	?i2___awdiv+1,w,c
 18560  003C36  6E10               	movwf	i2___wmul@multiplier+1,c
 18561  003C38  0E00               	movlw	0
 18562  003C3A  6E12               	movwf	i2___wmul@multiplicand+1,c
 18563  003C3C  0E03               	movlw	3
 18564  003C3E  6E11               	movwf	i2___wmul@multiplicand,c
 18565  003C40  EC28  F02F         	call	i2___wmul	;wreg free
 18566  003C44  0EE0               	movlw	low __npowers_
 18567  003C46  240F               	addwf	?i2___wmul,w,c
 18568  003C48  6EF6               	movwf	tblptrl,c
 18569  003C4A  0EFB               	movlw	high __npowers_
 18570  003C4C  2010               	addwfc	?i2___wmul+1,w,c
 18571  003C4E  6EF7               	movwf	tblptrh,c
 18572  003C50                     	if	0	;There are less than 3 active tblptr bytes
 18573  003C50                     	endif
 18574  003C50  0009               	tblrd		*+
 18575  003C52  CFF5 F015          	movff	tablat,i2___ftmul@f1
 18576  003C56  0009               	tblrd		*+
 18577  003C58  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 18578  003C5C  000A               	tblrd		*-
 18579  003C5E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 18580  003C62  EC53  F026         	call	i2___ftmul	;wreg free
 18581  003C66  C015  F02A         	movff	?i2___ftmul,i2_fround$1783
 18582  003C6A  C016  F02B         	movff	?i2___ftmul+1,i2_fround$1783+1
 18583  003C6E  C017  F02C         	movff	?i2___ftmul+2,i2_fround$1783+2
 18584                           
 18585                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18586  003C72  0E00               	movlw	0
 18587  003C74  6E12               	movwf	i2___wmul@multiplicand+1,c
 18588  003C76  0E03               	movlw	3
 18589  003C78  6E11               	movwf	i2___wmul@multiplicand,c
 18590  003C7A  0E00               	movlw	0
 18591  003C7C  6E04               	movwf	i2___awmod@divisor+1,c
 18592  003C7E  0E0A               	movlw	10
 18593  003C80  6E03               	movwf	i2___awmod@divisor,c
 18594  003C82  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 18595  003C86  6A02               	clrf	i2___awmod@dividend+1,c
 18596  003C88  EC98  F02B         	call	i2___awmod	;wreg free
 18597  003C8C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 18598  003C90  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 18599  003C94  EC28  F02F         	call	i2___wmul	;wreg free
 18600  003C98  0EE0               	movlw	low __npowers_
 18601  003C9A  240F               	addwf	?i2___wmul,w,c
 18602  003C9C  6EF6               	movwf	tblptrl,c
 18603  003C9E  0EFB               	movlw	high __npowers_
 18604  003CA0  2010               	addwfc	?i2___wmul+1,w,c
 18605  003CA2  6EF7               	movwf	tblptrh,c
 18606  003CA4                     	if	0	;There are less than 3 active tblptr bytes
 18607  003CA4                     	endif
 18608  003CA4  0009               	tblrd		*+
 18609  003CA6  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18610  003CAA  0009               	tblrd		*+
 18611  003CAC  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18612  003CB0  000A               	tblrd		*-
 18613  003CB2  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18614  003CB6  C02A  F015         	movff	i2_fround$1783,i2___ftmul@f1
 18615  003CBA  C02B  F016         	movff	i2_fround$1783+1,i2___ftmul@f1+1
 18616  003CBE  C02C  F017         	movff	i2_fround$1783+2,i2___ftmul@f1+2
 18617  003CC2  EC53  F026         	call	i2___ftmul	;wreg free
 18618  003CC6  C015  F027         	movff	?i2___ftmul,i2_fround$1784
 18619  003CCA  C016  F028         	movff	?i2___ftmul+1,i2_fround$1784+1
 18620  003CCE  C017  F029         	movff	?i2___ftmul+2,i2_fround$1784+2
 18621                           
 18622                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18623  003CD2  C027  F015         	movff	i2_fround$1784,i2___ftmul@f1
 18624  003CD6  C028  F016         	movff	i2_fround$1784+1,i2___ftmul@f1+1
 18625  003CDA  C029  F017         	movff	i2_fround$1784+2,i2___ftmul@f1+2
 18626  003CDE  0E00               	movlw	0
 18627  003CE0  6E18               	movwf	i2___ftmul@f2,c
 18628  003CE2  0E00               	movlw	0
 18629  003CE4  6E19               	movwf	i2___ftmul@f2+1,c
 18630  003CE6  0E3F               	movlw	63
 18631  003CE8  6E1A               	movwf	i2___ftmul@f2+2,c
 18632  003CEA  EC53  F026         	call	i2___ftmul	;wreg free
 18633  003CEE  C015  F024         	movff	?i2___ftmul,?i2_fround
 18634  003CF2  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 18635  003CF6  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 18636  003CFA  0012               	return	
 18637  003CFC                     i2l5342:
 18638                           
 18639                           ;doprnt.c: 415: else if(prec > 10)
 18640  003CFC  0E0A               	movlw	10
 18641  003CFE  642D               	cpfsgt	i2fround@prec,c
 18642  003D00  D05D               	goto	i2l5350
 18643                           
 18644                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18645  003D02  0E00               	movlw	0
 18646  003D04  6E12               	movwf	i2___wmul@multiplicand+1,c
 18647  003D06  0E03               	movlw	3
 18648  003D08  6E11               	movwf	i2___wmul@multiplicand,c
 18649  003D0A  0E00               	movlw	0
 18650  003D0C  6E04               	movwf	i2___awmod@divisor+1,c
 18651  003D0E  0E0A               	movlw	10
 18652  003D10  6E03               	movwf	i2___awmod@divisor,c
 18653  003D12  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 18654  003D16  6A02               	clrf	i2___awmod@dividend+1,c
 18655  003D18  EC98  F02B         	call	i2___awmod	;wreg free
 18656  003D1C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 18657  003D20  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 18658  003D24  EC28  F02F         	call	i2___wmul	;wreg free
 18659  003D28  0EE0               	movlw	low __npowers_
 18660  003D2A  240F               	addwf	?i2___wmul,w,c
 18661  003D2C  6EF6               	movwf	tblptrl,c
 18662  003D2E  0EFB               	movlw	high __npowers_
 18663  003D30  2010               	addwfc	?i2___wmul+1,w,c
 18664  003D32  6EF7               	movwf	tblptrh,c
 18665  003D34                     	if	0	;There are less than 3 active tblptr bytes
 18666  003D34                     	endif
 18667  003D34  0009               	tblrd		*+
 18668  003D36  CFF5 F018          	movff	tablat,i2___ftmul@f2
 18669  003D3A  0009               	tblrd		*+
 18670  003D3C  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 18671  003D40  000A               	tblrd		*-
 18672  003D42  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 18673  003D46  0E00               	movlw	0
 18674  003D48  6E0A               	movwf	i2___awdiv@divisor+1,c
 18675  003D4A  0E0A               	movlw	10
 18676  003D4C  6E09               	movwf	i2___awdiv@divisor,c
 18677  003D4E  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 18678  003D52  6A08               	clrf	i2___awdiv@dividend+1,c
 18679  003D54  EC61  F02A         	call	i2___awdiv	;wreg free
 18680  003D58  0E09               	movlw	9
 18681  003D5A  2407               	addwf	?i2___awdiv,w,c
 18682  003D5C  6E0F               	movwf	i2___wmul@multiplier,c
 18683  003D5E  0E00               	movlw	0
 18684  003D60  2008               	addwfc	?i2___awdiv+1,w,c
 18685  003D62  6E10               	movwf	i2___wmul@multiplier+1,c
 18686  003D64  0E00               	movlw	0
 18687  003D66  6E12               	movwf	i2___wmul@multiplicand+1,c
 18688  003D68  0E03               	movlw	3
 18689  003D6A  6E11               	movwf	i2___wmul@multiplicand,c
 18690  003D6C  EC28  F02F         	call	i2___wmul	;wreg free
 18691  003D70  0EE0               	movlw	low __npowers_
 18692  003D72  240F               	addwf	?i2___wmul,w,c
 18693  003D74  6EF6               	movwf	tblptrl,c
 18694  003D76  0EFB               	movlw	high __npowers_
 18695  003D78  2010               	addwfc	?i2___wmul+1,w,c
 18696  003D7A  6EF7               	movwf	tblptrh,c
 18697  003D7C                     	if	0	;There are less than 3 active tblptr bytes
 18698  003D7C                     	endif
 18699  003D7C  0009               	tblrd		*+
 18700  003D7E  CFF5 F015          	movff	tablat,i2___ftmul@f1
 18701  003D82  0009               	tblrd		*+
 18702  003D84  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 18703  003D88  000A               	tblrd		*-
 18704  003D8A  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 18705  003D8E  EC53  F026         	call	i2___ftmul	;wreg free
 18706  003D92  C015  F02A         	movff	?i2___ftmul,i2_fround$1783
 18707  003D96  C016  F02B         	movff	?i2___ftmul+1,i2_fround$1783+1
 18708  003D9A  C017  F02C         	movff	?i2___ftmul+2,i2_fround$1783+2
 18709                           
 18710                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18711  003D9E  C02A  F015         	movff	i2_fround$1783,i2___ftmul@f1
 18712  003DA2  C02B  F016         	movff	i2_fround$1783+1,i2___ftmul@f1+1
 18713  003DA6  C02C  F017         	movff	i2_fround$1783+2,i2___ftmul@f1+2
 18714  003DAA  0E00               	movlw	0
 18715  003DAC  6E18               	movwf	i2___ftmul@f2,c
 18716  003DAE  0E00               	movlw	0
 18717  003DB0  6E19               	movwf	i2___ftmul@f2+1,c
 18718  003DB2  0E3F               	movlw	63
 18719  003DB4  6E1A               	movwf	i2___ftmul@f2+2,c
 18720  003DB6  EC53  F026         	call	i2___ftmul	;wreg free
 18721  003DBA  D799               	goto	L9
 18722  003DBC                     i2l5350:
 18723                           
 18724                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 18725  003DBC  502D               	movf	i2fround@prec,w,c
 18726  003DBE  0D03               	mullw	3
 18727  003DC0  0EE0               	movlw	low __npowers_
 18728  003DC2  24F3               	addwf	prodl,w,c
 18729  003DC4  6EF6               	movwf	tblptrl,c
 18730  003DC6  0EFB               	movlw	high __npowers_
 18731  003DC8  20F4               	addwfc	prodh,w,c
 18732  003DCA  6EF7               	movwf	tblptrh,c
 18733  003DCC                     	if	0	;There are less than 3 active tblptr bytes
 18734  003DCC                     	endif
 18735  003DCC  0009               	tblrd		*+
 18736  003DCE  CFF5 F015          	movff	tablat,i2___ftmul@f1
 18737  003DD2  0009               	tblrd		*+
 18738  003DD4  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 18739  003DD8  000A               	tblrd		*-
 18740  003DDA  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 18741  003DDE  0E00               	movlw	0
 18742  003DE0  6E18               	movwf	i2___ftmul@f2,c
 18743  003DE2  0E00               	movlw	0
 18744  003DE4  6E19               	movwf	i2___ftmul@f2+1,c
 18745  003DE6  0E3F               	movlw	63
 18746  003DE8  6E1A               	movwf	i2___ftmul@f2+2,c
 18747  003DEA  EC53  F026         	call	i2___ftmul	;wreg free
 18748  003DEE  C015  F024         	movff	?i2___ftmul,?i2_fround
 18749  003DF2  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 18750  003DF6  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 18751  003DFA  0012               	return	
 18752  003DFC                     __end_ofi2_fround:
 18753                           	opt stack 0
 18754                           pclatu	equ	0xFFB
 18755                           pclath	equ	0xFFA
 18756                           tblptru	equ	0xFF8
 18757                           tblptrh	equ	0xFF7
 18758                           tblptrl	equ	0xFF6
 18759                           tablat	equ	0xFF5
 18760                           prodh	equ	0xFF4
 18761                           prodl	equ	0xFF3
 18762                           intcon	equ	0xFF2
 18763                           intcon2	equ	0xFF1
 18764                           postinc0	equ	0xFEE
 18765                           fsr0h	equ	0xFEA
 18766                           fsr0l	equ	0xFE9
 18767                           wreg	equ	0xFE8
 18768                           fsr1h	equ	0xFE2
 18769                           fsr1l	equ	0xFE1
 18770                           indf2	equ	0xFDF
 18771                           postinc2	equ	0xFDE
 18772                           postdec2	equ	0xFDD
 18773                           fsr2h	equ	0xFDA
 18774                           fsr2l	equ	0xFD9
 18775                           status	equ	0xFD8
 18776                           
 18777 ;; *************** function i2___wmul *****************
 18778 ;; Defined at:
 18779 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/Umul16.c"
 18780 ;; Parameters:    Size  Location     Type
 18781 ;;  multiplier      2   14[COMRAM] unsigned int 
 18782 ;;  multiplicand    2   16[COMRAM] unsigned int 
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;  __wmul          2   18[COMRAM] unsigned int 
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  2   14[COMRAM] unsigned int 
 18787 ;; Registers used:
 18788 ;;		wreg, status,2, status,0, prodl, prodh
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18797 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18798 ;;Total ram usage:        6 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; This function calls:
 18801 ;;		Nothing
 18802 ;; This function is called by:
 18803 ;;		i2_fround
 18804 ;;		i2_scale
 18805 ;;		i2_printf
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text55
 18810  005E50                     __ptext55:
 18811                           	opt stack 0
 18812  005E50                     i2___wmul:
 18813                           	opt stack 22
 18814                           
 18815                           ;incstack = 0
 18816  005E50  500F               	movf	i2___wmul@multiplier,w,c
 18817  005E52  0211               	mulwf	i2___wmul@multiplicand,c
 18818  005E54  CFF3 F013          	movff	prodl,i2___wmul@product
 18819  005E58  CFF4 F014          	movff	prodh,i2___wmul@product+1
 18820  005E5C  500F               	movf	i2___wmul@multiplier,w,c
 18821  005E5E  0212               	mulwf	i2___wmul@multiplicand+1,c
 18822  005E60  50F3               	movf	prodl,w,c
 18823  005E62  2614               	addwf	i2___wmul@product+1,f,c
 18824  005E64  5010               	movf	i2___wmul@multiplier+1,w,c
 18825  005E66  0211               	mulwf	i2___wmul@multiplicand,c
 18826  005E68  50F3               	movf	prodl,w,c
 18827  005E6A  2614               	addwf	i2___wmul@product+1,f,c
 18828  005E6C  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 18829  005E70  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 18830  005E74  0012               	return	
 18831  005E76                     __end_ofi2___wmul:
 18832                           	opt stack 0
 18833                           pclatu	equ	0xFFB
 18834                           pclath	equ	0xFFA
 18835                           tblptru	equ	0xFF8
 18836                           tblptrh	equ	0xFF7
 18837                           tblptrl	equ	0xFF6
 18838                           tablat	equ	0xFF5
 18839                           prodh	equ	0xFF4
 18840                           prodl	equ	0xFF3
 18841                           intcon	equ	0xFF2
 18842                           intcon2	equ	0xFF1
 18843                           postinc0	equ	0xFEE
 18844                           fsr0h	equ	0xFEA
 18845                           fsr0l	equ	0xFE9
 18846                           wreg	equ	0xFE8
 18847                           fsr1h	equ	0xFE2
 18848                           fsr1l	equ	0xFE1
 18849                           indf2	equ	0xFDF
 18850                           postinc2	equ	0xFDE
 18851                           postdec2	equ	0xFDD
 18852                           fsr2h	equ	0xFDA
 18853                           fsr2l	equ	0xFD9
 18854                           status	equ	0xFD8
 18855                           
 18856 ;; *************** function i2___ftmul *****************
 18857 ;; Defined at:
 18858 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
 18859 ;; Parameters:    Size  Location     Type
 18860 ;;  f1              3   20[COMRAM] float 
 18861 ;;  f2              3   23[COMRAM] float 
 18862 ;; Auto vars:     Size  Location     Type
 18863 ;;  __ftmul         3   30[COMRAM] unsigned um
 18864 ;;  __ftmul         1   34[COMRAM] unsigned char 
 18865 ;;  __ftmul         1   33[COMRAM] unsigned char 
 18866 ;;  __ftmul         1   29[COMRAM] unsigned char 
 18867 ;; Return value:  Size  Location     Type
 18868 ;;                  3   20[COMRAM] float 
 18869 ;; Registers used:
 18870 ;;		wreg, status,2, status,0, cstack
 18871 ;; Tracked objects:
 18872 ;;		On entry : 0/0
 18873 ;;		On exit  : 0/0
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18876 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18879 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18880 ;;Total ram usage:       15 bytes
 18881 ;; Hardware stack levels used:    1
 18882 ;; Hardware stack levels required when called:    1
 18883 ;; This function calls:
 18884 ;;		i2___ftpack
 18885 ;; This function is called by:
 18886 ;;		_servo_ISR_1
 18887 ;;		i2_abs
 18888 ;;		i2_readADC
 18889 ;;		i2_fround
 18890 ;;		i2_scale
 18891 ;;		i2_printf
 18892 ;; This function uses a non-reentrant model
 18893 ;;
 18894                           
 18895                           	psect	text56
 18896  004CA6                     __ptext56:
 18897                           	opt stack 0
 18898  004CA6                     i2___ftmul:
 18899                           	opt stack 21
 18900                           
 18901                           ;incstack = 0
 18902  004CA6  C017  F01B         	movff	i2___ftmul@f1+2,??i2___ftmul
 18903  004CAA  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 18904  004CAC  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 18905  004CAE  3416               	rlcf	i2___ftmul@f1+1,w,c
 18906  004CB0  361B               	rlcf	??i2___ftmul& (0+255),f,c
 18907  004CB2  E301               	bnc	u519_41
 18908  004CB4  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18909  004CB6                     u519_41:
 18910  004CB6  501B               	movf	??i2___ftmul,w,c
 18911  004CB8  6E1E               	movwf	i2___ftmul@exp,c
 18912  004CBA  501E               	movf	i2___ftmul@exp,w,c
 18913  004CBC  A4D8               	btfss	status,2,c
 18914  004CBE  D007               	goto	i2l5024
 18915  004CC0  0E00               	movlw	0
 18916  004CC2  6E15               	movwf	?i2___ftmul,c
 18917  004CC4  0E00               	movlw	0
 18918  004CC6  6E16               	movwf	?i2___ftmul+1,c
 18919  004CC8  0E00               	movlw	0
 18920  004CCA  6E17               	movwf	?i2___ftmul+2,c
 18921  004CCC  0012               	return	
 18922  004CCE                     i2l5024:
 18923  004CCE  C01A  F01B         	movff	i2___ftmul@f2+2,??i2___ftmul
 18924  004CD2  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 18925  004CD4  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 18926  004CD6  3419               	rlcf	i2___ftmul@f2+1,w,c
 18927  004CD8  361B               	rlcf	??i2___ftmul& (0+255),f,c
 18928  004CDA  E301               	bnc	u521_41
 18929  004CDC  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18930  004CDE                     u521_41:
 18931  004CDE  501B               	movf	??i2___ftmul,w,c
 18932  004CE0  6E23               	movwf	i2___ftmul@sign,c
 18933  004CE2  5023               	movf	i2___ftmul@sign,w,c
 18934  004CE4  A4D8               	btfss	status,2,c
 18935  004CE6  D007               	goto	i2l5030
 18936  004CE8  0E00               	movlw	0
 18937  004CEA  6E15               	movwf	?i2___ftmul,c
 18938  004CEC  0E00               	movlw	0
 18939  004CEE  6E16               	movwf	?i2___ftmul+1,c
 18940  004CF0  0E00               	movlw	0
 18941  004CF2  6E17               	movwf	?i2___ftmul+2,c
 18942  004CF4  0012               	return	
 18943  004CF6                     i2l5030:
 18944  004CF6  5023               	movf	i2___ftmul@sign,w,c
 18945  004CF8  0F7B               	addlw	123
 18946  004CFA  261E               	addwf	i2___ftmul@exp,f,c
 18947  004CFC  C017  F023         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 18948  004D00  501A               	movf	i2___ftmul@f2+2,w,c
 18949  004D02  1A23               	xorwf	i2___ftmul@sign,f,c
 18950  004D04  0E80               	movlw	128
 18951  004D06  1623               	andwf	i2___ftmul@sign,f,c
 18952  004D08  8E16               	bsf	i2___ftmul@f1+1,7,c
 18953  004D0A  8E19               	bsf	i2___ftmul@f2+1,7,c
 18954  004D0C  0EFF               	movlw	255
 18955  004D0E  1618               	andwf	i2___ftmul@f2,f,c
 18956  004D10  0EFF               	movlw	255
 18957  004D12  1619               	andwf	i2___ftmul@f2+1,f,c
 18958  004D14  0E00               	movlw	0
 18959  004D16  161A               	andwf	i2___ftmul@f2+2,f,c
 18960  004D18  0E00               	movlw	0
 18961  004D1A  6E1F               	movwf	i2___ftmul@f3_as_product,c
 18962  004D1C  0E00               	movlw	0
 18963  004D1E  6E20               	movwf	i2___ftmul@f3_as_product+1,c
 18964  004D20  0E00               	movlw	0
 18965  004D22  6E21               	movwf	i2___ftmul@f3_as_product+2,c
 18966  004D24  0E07               	movlw	7
 18967  004D26  6E22               	movwf	i2___ftmul@cntr,c
 18968  004D28                     i2l5044:
 18969  004D28  A015               	btfss	i2___ftmul@f1,0,c
 18970  004D2A  D006               	goto	i2l5048
 18971  004D2C  5018               	movf	i2___ftmul@f2,w,c
 18972  004D2E  261F               	addwf	i2___ftmul@f3_as_product,f,c
 18973  004D30  5019               	movf	i2___ftmul@f2+1,w,c
 18974  004D32  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18975  004D34  501A               	movf	i2___ftmul@f2+2,w,c
 18976  004D36  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18977  004D38                     i2l5048:
 18978  004D38  90D8               	bcf	status,0,c
 18979  004D3A  3217               	rrcf	i2___ftmul@f1+2,f,c
 18980  004D3C  3216               	rrcf	i2___ftmul@f1+1,f,c
 18981  004D3E  3215               	rrcf	i2___ftmul@f1,f,c
 18982  004D40  90D8               	bcf	status,0,c
 18983  004D42  3618               	rlcf	i2___ftmul@f2,f,c
 18984  004D44  3619               	rlcf	i2___ftmul@f2+1,f,c
 18985  004D46  361A               	rlcf	i2___ftmul@f2+2,f,c
 18986  004D48  2E22               	decfsz	i2___ftmul@cntr,f,c
 18987  004D4A  D7EE               	goto	i2l5044
 18988  004D4C  0E09               	movlw	9
 18989  004D4E  6E22               	movwf	i2___ftmul@cntr,c
 18990  004D50                     i2l5054:
 18991  004D50  A015               	btfss	i2___ftmul@f1,0,c
 18992  004D52  D006               	goto	i2l5058
 18993  004D54  5018               	movf	i2___ftmul@f2,w,c
 18994  004D56  261F               	addwf	i2___ftmul@f3_as_product,f,c
 18995  004D58  5019               	movf	i2___ftmul@f2+1,w,c
 18996  004D5A  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18997  004D5C  501A               	movf	i2___ftmul@f2+2,w,c
 18998  004D5E  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18999  004D60                     i2l5058:
 19000  004D60  90D8               	bcf	status,0,c
 19001  004D62  3217               	rrcf	i2___ftmul@f1+2,f,c
 19002  004D64  3216               	rrcf	i2___ftmul@f1+1,f,c
 19003  004D66  3215               	rrcf	i2___ftmul@f1,f,c
 19004  004D68  90D8               	bcf	status,0,c
 19005  004D6A  3221               	rrcf	i2___ftmul@f3_as_product+2,f,c
 19006  004D6C  3220               	rrcf	i2___ftmul@f3_as_product+1,f,c
 19007  004D6E  321F               	rrcf	i2___ftmul@f3_as_product,f,c
 19008  004D70  2E22               	decfsz	i2___ftmul@cntr,f,c
 19009  004D72  D7EE               	goto	i2l5054
 19010  004D74  C01F  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 19011  004D78  C020  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 19012  004D7C  C021  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 19013  004D80  C01E  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 19014  004D84  C023  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 19015  004D88  ECDB  F028         	call	i2___ftpack	;wreg free
 19016  004D8C  C001  F015         	movff	?i2___ftpack,?i2___ftmul
 19017  004D90  C002  F016         	movff	?i2___ftpack+1,?i2___ftmul+1
 19018  004D94  C003  F017         	movff	?i2___ftpack+2,?i2___ftmul+2
 19019  004D98  0012               	return	
 19020  004D9A                     __end_ofi2___ftmul:
 19021                           	opt stack 0
 19022                           pclatu	equ	0xFFB
 19023                           pclath	equ	0xFFA
 19024                           tblptru	equ	0xFF8
 19025                           tblptrh	equ	0xFF7
 19026                           tblptrl	equ	0xFF6
 19027                           tablat	equ	0xFF5
 19028                           prodh	equ	0xFF4
 19029                           prodl	equ	0xFF3
 19030                           intcon	equ	0xFF2
 19031                           intcon2	equ	0xFF1
 19032                           postinc0	equ	0xFEE
 19033                           fsr0h	equ	0xFEA
 19034                           fsr0l	equ	0xFE9
 19035                           wreg	equ	0xFE8
 19036                           fsr1h	equ	0xFE2
 19037                           fsr1l	equ	0xFE1
 19038                           indf2	equ	0xFDF
 19039                           postinc2	equ	0xFDE
 19040                           postdec2	equ	0xFDD
 19041                           fsr2h	equ	0xFDA
 19042                           fsr2l	equ	0xFD9
 19043                           status	equ	0xFD8
 19044                           
 19045 ;; *************** function i2___awmod *****************
 19046 ;; Defined at:
 19047 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awmod.c"
 19048 ;; Parameters:    Size  Location     Type
 19049 ;;  dividend        2    0[COMRAM] int 
 19050 ;;  divisor         2    2[COMRAM] int 
 19051 ;; Auto vars:     Size  Location     Type
 19052 ;;  __awmod         1    5[COMRAM] unsigned char 
 19053 ;;  __awmod         1    4[COMRAM] unsigned char 
 19054 ;; Return value:  Size  Location     Type
 19055 ;;                  2    0[COMRAM] int 
 19056 ;; Registers used:
 19057 ;;		wreg, status,2, status,0
 19058 ;; Tracked objects:
 19059 ;;		On entry : 0/0
 19060 ;;		On exit  : 0/0
 19061 ;;		Unchanged: 0/0
 19062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19066 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19067 ;;Total ram usage:        6 bytes
 19068 ;; Hardware stack levels used:    1
 19069 ;; This function calls:
 19070 ;;		Nothing
 19071 ;; This function is called by:
 19072 ;;		i2_fround
 19073 ;;		i2_scale
 19074 ;; This function uses a non-reentrant model
 19075 ;;
 19076                           
 19077                           	psect	text57
 19078  005730                     __ptext57:
 19079                           	opt stack 0
 19080  005730                     i2___awmod:
 19081                           	opt stack 22
 19082                           
 19083                           ;incstack = 0
 19084  005730  0E00               	movlw	0
 19085  005732  6E06               	movwf	i2___awmod@sign,c
 19086  005734  AE02               	btfss	i2___awmod@dividend+1,7,c
 19087  005736  D006               	goto	i2l4902
 19088  005738  6C01               	negf	i2___awmod@dividend,c
 19089  00573A  1E02               	comf	i2___awmod@dividend+1,f,c
 19090  00573C  B0D8               	btfsc	status,0,c
 19091  00573E  2A02               	incf	i2___awmod@dividend+1,f,c
 19092  005740  0E01               	movlw	1
 19093  005742  6E06               	movwf	i2___awmod@sign,c
 19094  005744                     i2l4902:
 19095  005744  AE04               	btfss	i2___awmod@divisor+1,7,c
 19096  005746  D004               	goto	i2l4906
 19097  005748  6C03               	negf	i2___awmod@divisor,c
 19098  00574A  1E04               	comf	i2___awmod@divisor+1,f,c
 19099  00574C  B0D8               	btfsc	status,0,c
 19100  00574E  2A04               	incf	i2___awmod@divisor+1,f,c
 19101  005750                     i2l4906:
 19102  005750  5003               	movf	i2___awmod@divisor,w,c
 19103  005752  1004               	iorwf	i2___awmod@divisor+1,w,c
 19104  005754  B4D8               	btfsc	status,2,c
 19105  005756  D018               	goto	i2l4922
 19106  005758  0E01               	movlw	1
 19107  00575A  6E05               	movwf	i2___awmod@counter,c
 19108  00575C  D004               	goto	i2l4912
 19109  00575E                     i2l4910:
 19110  00575E  90D8               	bcf	status,0,c
 19111  005760  3603               	rlcf	i2___awmod@divisor,f,c
 19112  005762  3604               	rlcf	i2___awmod@divisor+1,f,c
 19113  005764  2A05               	incf	i2___awmod@counter,f,c
 19114  005766                     i2l4912:
 19115  005766  AE04               	btfss	i2___awmod@divisor+1,7,c
 19116  005768  D7FA               	goto	i2l4910
 19117  00576A                     i2l4914:
 19118  00576A  5003               	movf	i2___awmod@divisor,w,c
 19119  00576C  5C01               	subwf	i2___awmod@dividend,w,c
 19120  00576E  5004               	movf	i2___awmod@divisor+1,w,c
 19121  005770  5802               	subwfb	i2___awmod@dividend+1,w,c
 19122  005772  A0D8               	btfss	status,0,c
 19123  005774  D004               	goto	i2l4918
 19124  005776  5003               	movf	i2___awmod@divisor,w,c
 19125  005778  5E01               	subwf	i2___awmod@dividend,f,c
 19126  00577A  5004               	movf	i2___awmod@divisor+1,w,c
 19127  00577C  5A02               	subwfb	i2___awmod@dividend+1,f,c
 19128  00577E                     i2l4918:
 19129  00577E  90D8               	bcf	status,0,c
 19130  005780  3204               	rrcf	i2___awmod@divisor+1,f,c
 19131  005782  3203               	rrcf	i2___awmod@divisor,f,c
 19132  005784  2E05               	decfsz	i2___awmod@counter,f,c
 19133  005786  D7F1               	goto	i2l4914
 19134  005788                     i2l4922:
 19135  005788  5006               	movf	i2___awmod@sign,w,c
 19136  00578A  B4D8               	btfsc	status,2,c
 19137  00578C  D004               	goto	i2l4926
 19138  00578E  6C01               	negf	i2___awmod@dividend,c
 19139  005790  1E02               	comf	i2___awmod@dividend+1,f,c
 19140  005792  B0D8               	btfsc	status,0,c
 19141  005794  2A02               	incf	i2___awmod@dividend+1,f,c
 19142  005796                     i2l4926:
 19143  005796  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 19144  00579A  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 19145  00579E  0012               	return	
 19146  0057A0                     __end_ofi2___awmod:
 19147                           	opt stack 0
 19148                           pclatu	equ	0xFFB
 19149                           pclath	equ	0xFFA
 19150                           tblptru	equ	0xFF8
 19151                           tblptrh	equ	0xFF7
 19152                           tblptrl	equ	0xFF6
 19153                           tablat	equ	0xFF5
 19154                           prodh	equ	0xFF4
 19155                           prodl	equ	0xFF3
 19156                           intcon	equ	0xFF2
 19157                           intcon2	equ	0xFF1
 19158                           postinc0	equ	0xFEE
 19159                           fsr0h	equ	0xFEA
 19160                           fsr0l	equ	0xFE9
 19161                           wreg	equ	0xFE8
 19162                           fsr1h	equ	0xFE2
 19163                           fsr1l	equ	0xFE1
 19164                           indf2	equ	0xFDF
 19165                           postinc2	equ	0xFDE
 19166                           postdec2	equ	0xFDD
 19167                           fsr2h	equ	0xFDA
 19168                           fsr2l	equ	0xFD9
 19169                           status	equ	0xFD8
 19170                           
 19171 ;; *************** function i2___awdiv *****************
 19172 ;; Defined at:
 19173 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awdiv.c"
 19174 ;; Parameters:    Size  Location     Type
 19175 ;;  dividend        2    6[COMRAM] int 
 19176 ;;  divisor         2    8[COMRAM] int 
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;  __awdiv         2   12[COMRAM] int 
 19179 ;;  __awdiv         1   11[COMRAM] unsigned char 
 19180 ;;  __awdiv         1   10[COMRAM] unsigned char 
 19181 ;; Return value:  Size  Location     Type
 19182 ;;                  2    6[COMRAM] int 
 19183 ;; Registers used:
 19184 ;;		wreg, status,2, status,0
 19185 ;; Tracked objects:
 19186 ;;		On entry : 0/0
 19187 ;;		On exit  : 0/0
 19188 ;;		Unchanged: 0/0
 19189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19194 ;;Total ram usage:        8 bytes
 19195 ;; Hardware stack levels used:    1
 19196 ;; This function calls:
 19197 ;;		Nothing
 19198 ;; This function is called by:
 19199 ;;		i2_set_external_interrupt1
 19200 ;;		i2_set_external_interrupt3
 19201 ;;		i2_fround
 19202 ;;		i2_scale
 19203 ;;		i2_printf
 19204 ;; This function uses a non-reentrant model
 19205 ;;
 19206                           
 19207                           	psect	text58
 19208  0054C2                     __ptext58:
 19209                           	opt stack 0
 19210  0054C2                     i2___awdiv:
 19211                           	opt stack 23
 19212                           
 19213                           ;incstack = 0
 19214  0054C2  0E00               	movlw	0
 19215  0054C4  6E0C               	movwf	i2___awdiv@sign,c
 19216  0054C6  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 19217  0054C8  D006               	goto	i2l4858
 19218  0054CA  6C09               	negf	i2___awdiv@divisor,c
 19219  0054CC  1E0A               	comf	i2___awdiv@divisor+1,f,c
 19220  0054CE  B0D8               	btfsc	status,0,c
 19221  0054D0  2A0A               	incf	i2___awdiv@divisor+1,f,c
 19222  0054D2  0E01               	movlw	1
 19223  0054D4  6E0C               	movwf	i2___awdiv@sign,c
 19224  0054D6                     i2l4858:
 19225  0054D6  AE08               	btfss	i2___awdiv@dividend+1,7,c
 19226  0054D8  D006               	goto	i2l4864
 19227  0054DA  6C07               	negf	i2___awdiv@dividend,c
 19228  0054DC  1E08               	comf	i2___awdiv@dividend+1,f,c
 19229  0054DE  B0D8               	btfsc	status,0,c
 19230  0054E0  2A08               	incf	i2___awdiv@dividend+1,f,c
 19231  0054E2  0E01               	movlw	1
 19232  0054E4  1A0C               	xorwf	i2___awdiv@sign,f,c
 19233  0054E6                     i2l4864:
 19234  0054E6  0E00               	movlw	0
 19235  0054E8  6E0E               	movwf	i2___awdiv@quotient+1,c
 19236  0054EA  0E00               	movlw	0
 19237  0054EC  6E0D               	movwf	i2___awdiv@quotient,c
 19238  0054EE  5009               	movf	i2___awdiv@divisor,w,c
 19239  0054F0  100A               	iorwf	i2___awdiv@divisor+1,w,c
 19240  0054F2  B4D8               	btfsc	status,2,c
 19241  0054F4  D01C               	goto	i2l4886
 19242  0054F6  0E01               	movlw	1
 19243  0054F8  6E0B               	movwf	i2___awdiv@counter,c
 19244  0054FA  D004               	goto	i2l4872
 19245  0054FC                     i2l4870:
 19246  0054FC  90D8               	bcf	status,0,c
 19247  0054FE  3609               	rlcf	i2___awdiv@divisor,f,c
 19248  005500  360A               	rlcf	i2___awdiv@divisor+1,f,c
 19249  005502  2A0B               	incf	i2___awdiv@counter,f,c
 19250  005504                     i2l4872:
 19251  005504  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 19252  005506  D7FA               	goto	i2l4870
 19253  005508                     i2l4874:
 19254  005508  90D8               	bcf	status,0,c
 19255  00550A  360D               	rlcf	i2___awdiv@quotient,f,c
 19256  00550C  360E               	rlcf	i2___awdiv@quotient+1,f,c
 19257  00550E  5009               	movf	i2___awdiv@divisor,w,c
 19258  005510  5C07               	subwf	i2___awdiv@dividend,w,c
 19259  005512  500A               	movf	i2___awdiv@divisor+1,w,c
 19260  005514  5808               	subwfb	i2___awdiv@dividend+1,w,c
 19261  005516  A0D8               	btfss	status,0,c
 19262  005518  D005               	goto	i2l4882
 19263  00551A  5009               	movf	i2___awdiv@divisor,w,c
 19264  00551C  5E07               	subwf	i2___awdiv@dividend,f,c
 19265  00551E  500A               	movf	i2___awdiv@divisor+1,w,c
 19266  005520  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 19267  005522  800D               	bsf	i2___awdiv@quotient,0,c
 19268  005524                     i2l4882:
 19269  005524  90D8               	bcf	status,0,c
 19270  005526  320A               	rrcf	i2___awdiv@divisor+1,f,c
 19271  005528  3209               	rrcf	i2___awdiv@divisor,f,c
 19272  00552A  2E0B               	decfsz	i2___awdiv@counter,f,c
 19273  00552C  D7ED               	goto	i2l4874
 19274  00552E                     i2l4886:
 19275  00552E  500C               	movf	i2___awdiv@sign,w,c
 19276  005530  B4D8               	btfsc	status,2,c
 19277  005532  D004               	goto	i2l4890
 19278  005534  6C0D               	negf	i2___awdiv@quotient,c
 19279  005536  1E0E               	comf	i2___awdiv@quotient+1,f,c
 19280  005538  B0D8               	btfsc	status,0,c
 19281  00553A  2A0E               	incf	i2___awdiv@quotient+1,f,c
 19282  00553C                     i2l4890:
 19283  00553C  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 19284  005540  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 19285  005544  0012               	return	
 19286  005546                     __end_ofi2___awdiv:
 19287                           	opt stack 0
 19288                           pclatu	equ	0xFFB
 19289                           pclath	equ	0xFFA
 19290                           tblptru	equ	0xFF8
 19291                           tblptrh	equ	0xFF7
 19292                           tblptrl	equ	0xFF6
 19293                           tablat	equ	0xFF5
 19294                           prodh	equ	0xFF4
 19295                           prodl	equ	0xFF3
 19296                           intcon	equ	0xFF2
 19297                           intcon2	equ	0xFF1
 19298                           postinc0	equ	0xFEE
 19299                           fsr0h	equ	0xFEA
 19300                           fsr0l	equ	0xFE9
 19301                           wreg	equ	0xFE8
 19302                           fsr1h	equ	0xFE2
 19303                           fsr1l	equ	0xFE1
 19304                           indf2	equ	0xFDF
 19305                           postinc2	equ	0xFDE
 19306                           postdec2	equ	0xFDD
 19307                           fsr2h	equ	0xFDA
 19308                           fsr2l	equ	0xFD9
 19309                           status	equ	0xFD8
 19310                           
 19311 ;; *************** function i2__tdiv_to_l_ *****************
 19312 ;; Defined at:
 19313 ;;		line 60 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdivl.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;  f1              3    0[COMRAM] float 
 19316 ;;  f2              3    3[COMRAM] float 
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 19319 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 19320 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 19321 ;; Return value:  Size  Location     Type
 19322 ;;                  4    0[COMRAM] unsigned long 
 19323 ;; Registers used:
 19324 ;;		wreg, status,2, status,0
 19325 ;; Tracked objects:
 19326 ;;		On entry : 0/0
 19327 ;;		On exit  : 0/0
 19328 ;;		Unchanged: 0/0
 19329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19330 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19331 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19332 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19333 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19334 ;;Total ram usage:       15 bytes
 19335 ;; Hardware stack levels used:    1
 19336 ;; This function calls:
 19337 ;;		Nothing
 19338 ;; This function is called by:
 19339 ;;		i2_printf
 19340 ;; This function uses a non-reentrant model
 19341 ;;
 19342                           
 19343                           	psect	text59
 19344  004816                     __ptext59:
 19345                           	opt stack 0
 19346  004816                     i2__tdiv_to_l_:
 19347                           	opt stack 23
 19348                           
 19349                           ;incstack = 0
 19350  004816  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 19351  00481A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 19352  00481C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 19353  00481E  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 19354  004820  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 19355  004822  E301               	bnc	u588_41
 19356  004824  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 19357  004826                     u588_41:
 19358  004826  5007               	movf	??i2__tdiv_to_l_,w,c
 19359  004828  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 19360  00482A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 19361  00482C  A4D8               	btfss	status,2,c
 19362  00482E  D009               	goto	i2l5504
 19363  004830  0E00               	movlw	0
 19364  004832  6E01               	movwf	?i2__tdiv_to_l_,c
 19365  004834  0E00               	movlw	0
 19366  004836  6E02               	movwf	?i2__tdiv_to_l_+1,c
 19367  004838  0E00               	movlw	0
 19368  00483A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 19369  00483C  0E00               	movlw	0
 19370  00483E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 19371  004840  0012               	return	
 19372  004842                     i2l5504:
 19373  004842  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 19374  004846  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 19375  004848  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 19376  00484A  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 19377  00484C  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 19378  00484E  E301               	bnc	u590_41
 19379  004850  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 19380  004852                     u590_41:
 19381  004852  5007               	movf	??i2__tdiv_to_l_,w,c
 19382  004854  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 19383  004856  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 19384  004858  A4D8               	btfss	status,2,c
 19385  00485A  D009               	goto	i2l5510
 19386  00485C  0E00               	movlw	0
 19387  00485E  6E01               	movwf	?i2__tdiv_to_l_,c
 19388  004860  0E00               	movlw	0
 19389  004862  6E02               	movwf	?i2__tdiv_to_l_+1,c
 19390  004864  0E00               	movlw	0
 19391  004866  6E03               	movwf	?i2__tdiv_to_l_+2,c
 19392  004868  0E00               	movlw	0
 19393  00486A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 19394  00486C  0012               	return	
 19395  00486E                     i2l5510:
 19396  00486E  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 19397  004870  0EFF               	movlw	255
 19398  004872  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 19399  004874  0EFF               	movlw	255
 19400  004876  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 19401  004878  0E00               	movlw	0
 19402  00487A  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 19403  00487C  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 19404  00487E  0EFF               	movlw	255
 19405  004880  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 19406  004882  0EFF               	movlw	255
 19407  004884  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 19408  004886  0E00               	movlw	0
 19409  004888  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 19410  00488A  0E00               	movlw	0
 19411  00488C  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 19412  00488E  0E00               	movlw	0
 19413  004890  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 19414  004892  0E00               	movlw	0
 19415  004894  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 19416  004896  0E00               	movlw	0
 19417  004898  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 19418  00489A  0E7F               	movlw	127
 19419  00489C  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 19420  00489E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 19421  0048A0  0F98               	addlw	152
 19422  0048A2  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 19423  0048A4  0E18               	movlw	24
 19424  0048A6  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 19425  0048A8                     i2l1192:
 19426  0048A8  90D8               	bcf	status,0,c
 19427  0048AA  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 19428  0048AC  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 19429  0048AE  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 19430  0048B0  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 19431  0048B2  5004               	movf	i2__tdiv_to_l_@f2,w,c
 19432  0048B4  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 19433  0048B6  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 19434  0048B8  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 19435  0048BA  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 19436  0048BC  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 19437  0048BE  A0D8               	btfss	status,0,c
 19438  0048C0  D007               	goto	i2l1193
 19439  0048C2  5004               	movf	i2__tdiv_to_l_@f2,w,c
 19440  0048C4  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 19441  0048C6  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 19442  0048C8  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 19443  0048CA  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 19444  0048CC  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 19445  0048CE  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 19446  0048D0                     i2l1193:
 19447  0048D0  90D8               	bcf	status,0,c
 19448  0048D2  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 19449  0048D4  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 19450  0048D6  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 19451  0048D8  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 19452  0048DA  D7E6               	goto	i2l1192
 19453  0048DC  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 19454  0048DE  D016               	goto	i2l5544
 19455  0048E0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 19456  0048E2  0A80               	xorlw	128
 19457  0048E4  0F97               	addlw	151
 19458  0048E6  B0D8               	btfsc	status,0,c
 19459  0048E8  D009               	goto	i2l5540
 19460  0048EA  0E00               	movlw	0
 19461  0048EC  6E01               	movwf	?i2__tdiv_to_l_,c
 19462  0048EE  0E00               	movlw	0
 19463  0048F0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 19464  0048F2  0E00               	movlw	0
 19465  0048F4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 19466  0048F6  0E00               	movlw	0
 19467  0048F8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 19468  0048FA  0012               	return	
 19469  0048FC                     i2l5540:
 19470  0048FC  90D8               	bcf	status,0,c
 19471  0048FE  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 19472  004900  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 19473  004902  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 19474  004904  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 19475  004906  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 19476  004908  D7F9               	goto	i2l5540
 19477  00490A  D015               	goto	i2l1199
 19478  00490C                     i2l5544:
 19479  00490C  0E17               	movlw	23
 19480  00490E  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 19481  004910  D00F               	goto	i2l5552
 19482  004912  0E00               	movlw	0
 19483  004914  6E01               	movwf	?i2__tdiv_to_l_,c
 19484  004916  0E00               	movlw	0
 19485  004918  6E02               	movwf	?i2__tdiv_to_l_+1,c
 19486  00491A  0E00               	movlw	0
 19487  00491C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 19488  00491E  0E00               	movlw	0
 19489  004920  6E04               	movwf	?i2__tdiv_to_l_+3,c
 19490  004922  0012               	return	
 19491  004924                     i2l5550:
 19492  004924  90D8               	bcf	status,0,c
 19493  004926  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 19494  004928  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 19495  00492A  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 19496  00492C  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 19497  00492E  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 19498  004930                     i2l5552:
 19499  004930  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 19500  004932  A4D8               	btfss	status,2,c
 19501  004934  D7F7               	goto	i2l5550
 19502  004936                     i2l1199:
 19503  004936  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 19504  00493A  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 19505  00493E  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 19506  004942  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 19507  004946  0012               	return		;funcret
 19508  004948                     __end_ofi2__tdiv_to_l_:
 19509                           	opt stack 0
 19510                           pclatu	equ	0xFFB
 19511                           pclath	equ	0xFFA
 19512                           tblptru	equ	0xFF8
 19513                           tblptrh	equ	0xFF7
 19514                           tblptrl	equ	0xFF6
 19515                           tablat	equ	0xFF5
 19516                           prodh	equ	0xFF4
 19517                           prodl	equ	0xFF3
 19518                           intcon	equ	0xFF2
 19519                           intcon2	equ	0xFF1
 19520                           postinc0	equ	0xFEE
 19521                           fsr0h	equ	0xFEA
 19522                           fsr0l	equ	0xFE9
 19523                           wreg	equ	0xFE8
 19524                           fsr1h	equ	0xFE2
 19525                           fsr1l	equ	0xFE1
 19526                           indf2	equ	0xFDF
 19527                           postinc2	equ	0xFDE
 19528                           postdec2	equ	0xFDD
 19529                           fsr2h	equ	0xFDA
 19530                           fsr2l	equ	0xFD9
 19531                           status	equ	0xFD8
 19532                           
 19533 ;; *************** function i2__div_to_l_ *****************
 19534 ;; Defined at:
 19535 ;;		line 60 in file "/Applications/microchip/xc8/v1.41/sources/common/fldivl.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  f1              3    0[COMRAM] unsigned long 
 19538 ;;  f2              3    3[COMRAM] unsigned long 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 19541 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 19542 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 19543 ;; Return value:  Size  Location     Type
 19544 ;;                  4    0[COMRAM] unsigned long 
 19545 ;; Registers used:
 19546 ;;		wreg, status,2, status,0
 19547 ;; Tracked objects:
 19548 ;;		On entry : 0/0
 19549 ;;		On exit  : 0/0
 19550 ;;		Unchanged: 0/0
 19551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19553 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19555 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19556 ;;Total ram usage:       12 bytes
 19557 ;; Hardware stack levels used:    1
 19558 ;; This function calls:
 19559 ;;		Nothing
 19560 ;; This function is called by:
 19561 ;;		i2_printf
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text60
 19566  004A72                     __ptext60:
 19567                           	opt stack 0
 19568  004A72                     i2__div_to_l_:
 19569                           	opt stack 23
 19570                           
 19571                           ;incstack = 0
 19572  004A72  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 19573  004A74  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 19574  004A76  6E0C               	movwf	i2__div_to_l_@exp1,c
 19575  004A78  500C               	movf	i2__div_to_l_@exp1,w,c
 19576  004A7A  A4D8               	btfss	status,2,c
 19577  004A7C  D009               	goto	i2l5398
 19578  004A7E  0E00               	movlw	0
 19579  004A80  6E01               	movwf	?i2__div_to_l_,c
 19580  004A82  0E00               	movlw	0
 19581  004A84  6E02               	movwf	?i2__div_to_l_+1,c
 19582  004A86  0E00               	movlw	0
 19583  004A88  6E03               	movwf	?i2__div_to_l_+2,c
 19584  004A8A  0E00               	movlw	0
 19585  004A8C  6E04               	movwf	?i2__div_to_l_+3,c
 19586  004A8E  0012               	return	
 19587  004A90                     i2l5398:
 19588  004A90  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 19589  004A92  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 19590  004A94  6E0B               	movwf	i2__div_to_l_@cntr,c
 19591  004A96  500B               	movf	i2__div_to_l_@cntr,w,c
 19592  004A98  A4D8               	btfss	status,2,c
 19593  004A9A  D009               	goto	i2l5404
 19594  004A9C  0E00               	movlw	0
 19595  004A9E  6E01               	movwf	?i2__div_to_l_,c
 19596  004AA0  0E00               	movlw	0
 19597  004AA2  6E02               	movwf	?i2__div_to_l_+1,c
 19598  004AA4  0E00               	movlw	0
 19599  004AA6  6E03               	movwf	?i2__div_to_l_+2,c
 19600  004AA8  0E00               	movlw	0
 19601  004AAA  6E04               	movwf	?i2__div_to_l_+3,c
 19602  004AAC  0012               	return	
 19603  004AAE                     i2l5404:
 19604  004AAE  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 19605  004AB0  0EFF               	movlw	255
 19606  004AB2  1601               	andwf	i2__div_to_l_@f1,f,c
 19607  004AB4  0EFF               	movlw	255
 19608  004AB6  1602               	andwf	i2__div_to_l_@f1+1,f,c
 19609  004AB8  0EFF               	movlw	255
 19610  004ABA  1603               	andwf	i2__div_to_l_@f1+2,f,c
 19611  004ABC  0E00               	movlw	0
 19612  004ABE  1604               	andwf	i2__div_to_l_@f1+3,f,c
 19613  004AC0  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 19614  004AC2  0EFF               	movlw	255
 19615  004AC4  1604               	andwf	i2__div_to_l_@f2,f,c
 19616  004AC6  0EFF               	movlw	255
 19617  004AC8  1605               	andwf	i2__div_to_l_@f2+1,f,c
 19618  004ACA  0EFF               	movlw	255
 19619  004ACC  1606               	andwf	i2__div_to_l_@f2+2,f,c
 19620  004ACE  0E00               	movlw	0
 19621  004AD0  1607               	andwf	i2__div_to_l_@f2+3,f,c
 19622  004AD2  0E00               	movlw	0
 19623  004AD4  6E07               	movwf	i2__div_to_l_@quot,c
 19624  004AD6  0E00               	movlw	0
 19625  004AD8  6E08               	movwf	i2__div_to_l_@quot+1,c
 19626  004ADA  0E00               	movlw	0
 19627  004ADC  6E09               	movwf	i2__div_to_l_@quot+2,c
 19628  004ADE  0E00               	movlw	0
 19629  004AE0  6E0A               	movwf	i2__div_to_l_@quot+3,c
 19630  004AE2  0E7F               	movlw	127
 19631  004AE4  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 19632  004AE6  500B               	movf	i2__div_to_l_@cntr,w,c
 19633  004AE8  0FA0               	addlw	160
 19634  004AEA  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 19635  004AEC  0E20               	movlw	32
 19636  004AEE  6E0B               	movwf	i2__div_to_l_@cntr,c
 19637  004AF0                     i2l5418:
 19638  004AF0  90D8               	bcf	status,0,c
 19639  004AF2  3607               	rlcf	i2__div_to_l_@quot,f,c
 19640  004AF4  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 19641  004AF6  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 19642  004AF8  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 19643  004AFA  5004               	movf	i2__div_to_l_@f2,w,c
 19644  004AFC  5C01               	subwf	i2__div_to_l_@f1,w,c
 19645  004AFE  5005               	movf	i2__div_to_l_@f2+1,w,c
 19646  004B00  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 19647  004B02  5006               	movf	i2__div_to_l_@f2+2,w,c
 19648  004B04  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 19649  004B06  5007               	movf	i2__div_to_l_@f2+3,w,c
 19650  004B08  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 19651  004B0A  A0D8               	btfss	status,0,c
 19652  004B0C  D009               	goto	i2l5426
 19653  004B0E  5004               	movf	i2__div_to_l_@f2,w,c
 19654  004B10  5E01               	subwf	i2__div_to_l_@f1,f,c
 19655  004B12  5005               	movf	i2__div_to_l_@f2+1,w,c
 19656  004B14  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 19657  004B16  5006               	movf	i2__div_to_l_@f2+2,w,c
 19658  004B18  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 19659  004B1A  5007               	movf	i2__div_to_l_@f2+3,w,c
 19660  004B1C  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 19661  004B1E  8007               	bsf	i2__div_to_l_@quot,0,c
 19662  004B20                     i2l5426:
 19663  004B20  90D8               	bcf	status,0,c
 19664  004B22  3601               	rlcf	i2__div_to_l_@f1,f,c
 19665  004B24  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 19666  004B26  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 19667  004B28  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 19668  004B2A  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 19669  004B2C  D7E1               	goto	i2l5418
 19670  004B2E  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 19671  004B30  D016               	goto	i2l5442
 19672  004B32  500C               	movf	i2__div_to_l_@exp1,w,c
 19673  004B34  0A80               	xorlw	128
 19674  004B36  0F9F               	addlw	159
 19675  004B38  B0D8               	btfsc	status,0,c
 19676  004B3A  D009               	goto	i2l5438
 19677  004B3C  0E00               	movlw	0
 19678  004B3E  6E01               	movwf	?i2__div_to_l_,c
 19679  004B40  0E00               	movlw	0
 19680  004B42  6E02               	movwf	?i2__div_to_l_+1,c
 19681  004B44  0E00               	movlw	0
 19682  004B46  6E03               	movwf	?i2__div_to_l_+2,c
 19683  004B48  0E00               	movlw	0
 19684  004B4A  6E04               	movwf	?i2__div_to_l_+3,c
 19685  004B4C  0012               	return	
 19686  004B4E                     i2l5438:
 19687  004B4E  90D8               	bcf	status,0,c
 19688  004B50  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 19689  004B52  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 19690  004B54  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 19691  004B56  3207               	rrcf	i2__div_to_l_@quot,f,c
 19692  004B58  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 19693  004B5A  D7F9               	goto	i2l5438
 19694  004B5C  D015               	goto	i2l1095
 19695  004B5E                     i2l5442:
 19696  004B5E  0E1F               	movlw	31
 19697  004B60  640C               	cpfsgt	i2__div_to_l_@exp1,c
 19698  004B62  D00F               	goto	i2l5450
 19699  004B64  0E00               	movlw	0
 19700  004B66  6E01               	movwf	?i2__div_to_l_,c
 19701  004B68  0E00               	movlw	0
 19702  004B6A  6E02               	movwf	?i2__div_to_l_+1,c
 19703  004B6C  0E00               	movlw	0
 19704  004B6E  6E03               	movwf	?i2__div_to_l_+2,c
 19705  004B70  0E00               	movlw	0
 19706  004B72  6E04               	movwf	?i2__div_to_l_+3,c
 19707  004B74  0012               	return	
 19708  004B76                     i2l5448:
 19709  004B76  90D8               	bcf	status,0,c
 19710  004B78  3607               	rlcf	i2__div_to_l_@quot,f,c
 19711  004B7A  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 19712  004B7C  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 19713  004B7E  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 19714  004B80  060C               	decf	i2__div_to_l_@exp1,f,c
 19715  004B82                     i2l5450:
 19716  004B82  500C               	movf	i2__div_to_l_@exp1,w,c
 19717  004B84  A4D8               	btfss	status,2,c
 19718  004B86  D7F7               	goto	i2l5448
 19719  004B88                     i2l1095:
 19720  004B88  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 19721  004B8C  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 19722  004B90  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 19723  004B94  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 19724  004B98  0012               	return		;funcret
 19725  004B9A                     __end_ofi2__div_to_l_:
 19726                           	opt stack 0
 19727                           pclatu	equ	0xFFB
 19728                           pclath	equ	0xFFA
 19729                           tblptru	equ	0xFF8
 19730                           tblptrh	equ	0xFF7
 19731                           tblptrl	equ	0xFF6
 19732                           tablat	equ	0xFF5
 19733                           prodh	equ	0xFF4
 19734                           prodl	equ	0xFF3
 19735                           intcon	equ	0xFF2
 19736                           intcon2	equ	0xFF1
 19737                           postinc0	equ	0xFEE
 19738                           fsr0h	equ	0xFEA
 19739                           fsr0l	equ	0xFE9
 19740                           wreg	equ	0xFE8
 19741                           fsr1h	equ	0xFE2
 19742                           fsr1l	equ	0xFE1
 19743                           indf2	equ	0xFDF
 19744                           postinc2	equ	0xFDE
 19745                           postdec2	equ	0xFDD
 19746                           fsr2h	equ	0xFDA
 19747                           fsr2l	equ	0xFD9
 19748                           status	equ	0xFD8
 19749                           
 19750 ;; *************** function i2___lltoft *****************
 19751 ;; Defined at:
 19752 ;;		line 35 in file "/Applications/microchip/xc8/v1.41/sources/common/lltoft.c"
 19753 ;; Parameters:    Size  Location     Type
 19754 ;;  c               4    8[COMRAM] unsigned long 
 19755 ;; Auto vars:     Size  Location     Type
 19756 ;;  __lltoft        1   16[COMRAM] unsigned char 
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  3    8[COMRAM] float 
 19759 ;; Registers used:
 19760 ;;		wreg, status,2, status,0, cstack
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19770 ;;Total ram usage:        9 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:    1
 19773 ;; This function calls:
 19774 ;;		i2___ftpack
 19775 ;; This function is called by:
 19776 ;;		i2_printf
 19777 ;; This function uses a non-reentrant model
 19778 ;;
 19779                           
 19780                           	psect	text61
 19781  00599E                     __ptext61:
 19782                           	opt stack 0
 19783  00599E                     i2___lltoft:
 19784                           	opt stack 22
 19785                           
 19786                           ;incstack = 0
 19787  00599E  0E8E               	movlw	142
 19788  0059A0  6E11               	movwf	i2___lltoft@exp,c
 19789  0059A2  D006               	goto	i2l5666
 19790  0059A4                     i2l5664:
 19791  0059A4  90D8               	bcf	status,0,c
 19792  0059A6  320C               	rrcf	i2___lltoft@c+3,f,c
 19793  0059A8  320B               	rrcf	i2___lltoft@c+2,f,c
 19794  0059AA  320A               	rrcf	i2___lltoft@c+1,f,c
 19795  0059AC  3209               	rrcf	i2___lltoft@c,f,c
 19796  0059AE  2A11               	incf	i2___lltoft@exp,f,c
 19797  0059B0                     i2l5666:
 19798  0059B0  0E00               	movlw	0
 19799  0059B2  1409               	andwf	i2___lltoft@c,w,c
 19800  0059B4  6E0D               	movwf	??i2___lltoft& (0+255),c
 19801  0059B6  0E00               	movlw	0
 19802  0059B8  140A               	andwf	i2___lltoft@c+1,w,c
 19803  0059BA  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 19804  0059BC  0E00               	movlw	0
 19805  0059BE  140B               	andwf	i2___lltoft@c+2,w,c
 19806  0059C0  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 19807  0059C2  0EFF               	movlw	255
 19808  0059C4  140C               	andwf	i2___lltoft@c+3,w,c
 19809  0059C6  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 19810  0059C8  500D               	movf	??i2___lltoft,w,c
 19811  0059CA  100E               	iorwf	??i2___lltoft+1,w,c
 19812  0059CC  100F               	iorwf	??i2___lltoft+2,w,c
 19813  0059CE  1010               	iorwf	??i2___lltoft+3,w,c
 19814  0059D0  A4D8               	btfss	status,2,c
 19815  0059D2  D7E8               	goto	i2l5664
 19816  0059D4  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 19817  0059D8  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 19818  0059DC  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 19819  0059E0  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 19820  0059E4  0E00               	movlw	0
 19821  0059E6  6E05               	movwf	i2___ftpack@sign,c
 19822  0059E8  ECDB  F028         	call	i2___ftpack	;wreg free
 19823  0059EC  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 19824  0059F0  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 19825  0059F4  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 19826  0059F8  0012               	return	
 19827  0059FA                     __end_ofi2___lltoft:
 19828                           	opt stack 0
 19829                           pclatu	equ	0xFFB
 19830                           pclath	equ	0xFFA
 19831                           tblptru	equ	0xFF8
 19832                           tblptrh	equ	0xFF7
 19833                           tblptrl	equ	0xFF6
 19834                           tablat	equ	0xFF5
 19835                           prodh	equ	0xFF4
 19836                           prodl	equ	0xFF3
 19837                           intcon	equ	0xFF2
 19838                           intcon2	equ	0xFF1
 19839                           postinc0	equ	0xFEE
 19840                           fsr0h	equ	0xFEA
 19841                           fsr0l	equ	0xFE9
 19842                           wreg	equ	0xFE8
 19843                           fsr1h	equ	0xFE2
 19844                           fsr1l	equ	0xFE1
 19845                           indf2	equ	0xFDF
 19846                           postinc2	equ	0xFDE
 19847                           postdec2	equ	0xFDD
 19848                           fsr2h	equ	0xFDA
 19849                           fsr2l	equ	0xFD9
 19850                           status	equ	0xFD8
 19851                           
 19852 ;; *************** function i2___llmod *****************
 19853 ;; Defined at:
 19854 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/llmod.c"
 19855 ;; Parameters:    Size  Location     Type
 19856 ;;  dividend        4   13[COMRAM] unsigned long 
 19857 ;;  divisor         4   17[COMRAM] unsigned long 
 19858 ;; Auto vars:     Size  Location     Type
 19859 ;;  __llmod         1   21[COMRAM] unsigned char 
 19860 ;; Return value:  Size  Location     Type
 19861 ;;                  4   13[COMRAM] unsigned long 
 19862 ;; Registers used:
 19863 ;;		wreg, status,2, status,0
 19864 ;; Tracked objects:
 19865 ;;		On entry : 0/0
 19866 ;;		On exit  : 0/0
 19867 ;;		Unchanged: 0/0
 19868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19869 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19872 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19873 ;;Total ram usage:        9 bytes
 19874 ;; Hardware stack levels used:    1
 19875 ;; This function calls:
 19876 ;;		Nothing
 19877 ;; This function is called by:
 19878 ;;		i2_printf
 19879 ;; This function uses a non-reentrant model
 19880 ;;
 19881                           
 19882                           	psect	text62
 19883  0058D8                     __ptext62:
 19884                           	opt stack 0
 19885  0058D8                     i2___llmod:
 19886                           	opt stack 23
 19887                           
 19888                           ;incstack = 0
 19889  0058D8  5012               	movf	i2___llmod@divisor,w,c
 19890  0058DA  1013               	iorwf	i2___llmod@divisor+1,w,c
 19891  0058DC  1014               	iorwf	i2___llmod@divisor+2,w,c
 19892  0058DE  1015               	iorwf	i2___llmod@divisor+3,w,c
 19893  0058E0  B4D8               	btfsc	status,2,c
 19894  0058E2  D024               	goto	i2l1284
 19895  0058E4  0E01               	movlw	1
 19896  0058E6  6E16               	movwf	i2___llmod@counter,c
 19897  0058E8  D006               	goto	i2l5652
 19898  0058EA                     i2l5650:
 19899  0058EA  90D8               	bcf	status,0,c
 19900  0058EC  3612               	rlcf	i2___llmod@divisor,f,c
 19901  0058EE  3613               	rlcf	i2___llmod@divisor+1,f,c
 19902  0058F0  3614               	rlcf	i2___llmod@divisor+2,f,c
 19903  0058F2  3615               	rlcf	i2___llmod@divisor+3,f,c
 19904  0058F4  2A16               	incf	i2___llmod@counter,f,c
 19905  0058F6                     i2l5652:
 19906  0058F6  AE15               	btfss	i2___llmod@divisor+3,7,c
 19907  0058F8  D7F8               	goto	i2l5650
 19908  0058FA                     i2l5654:
 19909  0058FA  5012               	movf	i2___llmod@divisor,w,c
 19910  0058FC  5C0E               	subwf	i2___llmod@dividend,w,c
 19911  0058FE  5013               	movf	i2___llmod@divisor+1,w,c
 19912  005900  580F               	subwfb	i2___llmod@dividend+1,w,c
 19913  005902  5014               	movf	i2___llmod@divisor+2,w,c
 19914  005904  5810               	subwfb	i2___llmod@dividend+2,w,c
 19915  005906  5015               	movf	i2___llmod@divisor+3,w,c
 19916  005908  5811               	subwfb	i2___llmod@dividend+3,w,c
 19917  00590A  A0D8               	btfss	status,0,c
 19918  00590C  D008               	goto	i2l5658
 19919  00590E  5012               	movf	i2___llmod@divisor,w,c
 19920  005910  5E0E               	subwf	i2___llmod@dividend,f,c
 19921  005912  5013               	movf	i2___llmod@divisor+1,w,c
 19922  005914  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 19923  005916  5014               	movf	i2___llmod@divisor+2,w,c
 19924  005918  5A10               	subwfb	i2___llmod@dividend+2,f,c
 19925  00591A  5015               	movf	i2___llmod@divisor+3,w,c
 19926  00591C  5A11               	subwfb	i2___llmod@dividend+3,f,c
 19927  00591E                     i2l5658:
 19928  00591E  90D8               	bcf	status,0,c
 19929  005920  3215               	rrcf	i2___llmod@divisor+3,f,c
 19930  005922  3214               	rrcf	i2___llmod@divisor+2,f,c
 19931  005924  3213               	rrcf	i2___llmod@divisor+1,f,c
 19932  005926  3212               	rrcf	i2___llmod@divisor,f,c
 19933  005928  2E16               	decfsz	i2___llmod@counter,f,c
 19934  00592A  D7E7               	goto	i2l5654
 19935  00592C                     i2l1284:
 19936  00592C  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 19937  005930  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 19938  005934  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 19939  005938  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 19940  00593C  0012               	return		;funcret
 19941  00593E                     __end_ofi2___llmod:
 19942                           	opt stack 0
 19943                           pclatu	equ	0xFFB
 19944                           pclath	equ	0xFFA
 19945                           tblptru	equ	0xFF8
 19946                           tblptrh	equ	0xFF7
 19947                           tblptrl	equ	0xFF6
 19948                           tablat	equ	0xFF5
 19949                           prodh	equ	0xFF4
 19950                           prodl	equ	0xFF3
 19951                           intcon	equ	0xFF2
 19952                           intcon2	equ	0xFF1
 19953                           postinc0	equ	0xFEE
 19954                           fsr0h	equ	0xFEA
 19955                           fsr0l	equ	0xFE9
 19956                           wreg	equ	0xFE8
 19957                           fsr1h	equ	0xFE2
 19958                           fsr1l	equ	0xFE1
 19959                           indf2	equ	0xFDF
 19960                           postinc2	equ	0xFDE
 19961                           postdec2	equ	0xFDD
 19962                           fsr2h	equ	0xFDA
 19963                           fsr2l	equ	0xFD9
 19964                           status	equ	0xFD8
 19965                           
 19966 ;; *************** function i2___lldiv *****************
 19967 ;; Defined at:
 19968 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lldiv.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;  dividend        4    0[COMRAM] unsigned long 
 19971 ;;  divisor         4    4[COMRAM] unsigned long 
 19972 ;; Auto vars:     Size  Location     Type
 19973 ;;  __lldiv         4    8[COMRAM] unsigned long 
 19974 ;;  __lldiv         1   12[COMRAM] unsigned char 
 19975 ;; Return value:  Size  Location     Type
 19976 ;;                  4    0[COMRAM] unsigned long 
 19977 ;; Registers used:
 19978 ;;		wreg, status,2, status,0
 19979 ;; Tracked objects:
 19980 ;;		On entry : 0/0
 19981 ;;		On exit  : 0/0
 19982 ;;		Unchanged: 0/0
 19983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19985 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19987 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19988 ;;Total ram usage:       13 bytes
 19989 ;; Hardware stack levels used:    1
 19990 ;; This function calls:
 19991 ;;		Nothing
 19992 ;; This function is called by:
 19993 ;;		i2_printf
 19994 ;; This function uses a non-reentrant model
 19995 ;;
 19996                           
 19997                           	psect	text63
 19998  005546                     __ptext63:
 19999                           	opt stack 0
 20000  005546                     i2___lldiv:
 20001                           	opt stack 23
 20002                           
 20003                           ;incstack = 0
 20004  005546  0E00               	movlw	0
 20005  005548  6E09               	movwf	i2___lldiv@quotient,c
 20006  00554A  0E00               	movlw	0
 20007  00554C  6E0A               	movwf	i2___lldiv@quotient+1,c
 20008  00554E  0E00               	movlw	0
 20009  005550  6E0B               	movwf	i2___lldiv@quotient+2,c
 20010  005552  0E00               	movlw	0
 20011  005554  6E0C               	movwf	i2___lldiv@quotient+3,c
 20012  005556  5005               	movf	i2___lldiv@divisor,w,c
 20013  005558  1006               	iorwf	i2___lldiv@divisor+1,w,c
 20014  00555A  1007               	iorwf	i2___lldiv@divisor+2,w,c
 20015  00555C  1008               	iorwf	i2___lldiv@divisor+3,w,c
 20016  00555E  B4D8               	btfsc	status,2,c
 20017  005560  D02A               	goto	i2l1274
 20018  005562  0E01               	movlw	1
 20019  005564  6E0D               	movwf	i2___lldiv@counter,c
 20020  005566  D006               	goto	i2l5632
 20021  005568                     i2l5630:
 20022  005568  90D8               	bcf	status,0,c
 20023  00556A  3605               	rlcf	i2___lldiv@divisor,f,c
 20024  00556C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 20025  00556E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 20026  005570  3608               	rlcf	i2___lldiv@divisor+3,f,c
 20027  005572  2A0D               	incf	i2___lldiv@counter,f,c
 20028  005574                     i2l5632:
 20029  005574  AE08               	btfss	i2___lldiv@divisor+3,7,c
 20030  005576  D7F8               	goto	i2l5630
 20031  005578                     i2l5634:
 20032  005578  90D8               	bcf	status,0,c
 20033  00557A  3609               	rlcf	i2___lldiv@quotient,f,c
 20034  00557C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 20035  00557E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 20036  005580  360C               	rlcf	i2___lldiv@quotient+3,f,c
 20037  005582  5005               	movf	i2___lldiv@divisor,w,c
 20038  005584  5C01               	subwf	i2___lldiv@dividend,w,c
 20039  005586  5006               	movf	i2___lldiv@divisor+1,w,c
 20040  005588  5802               	subwfb	i2___lldiv@dividend+1,w,c
 20041  00558A  5007               	movf	i2___lldiv@divisor+2,w,c
 20042  00558C  5803               	subwfb	i2___lldiv@dividend+2,w,c
 20043  00558E  5008               	movf	i2___lldiv@divisor+3,w,c
 20044  005590  5804               	subwfb	i2___lldiv@dividend+3,w,c
 20045  005592  A0D8               	btfss	status,0,c
 20046  005594  D009               	goto	i2l5642
 20047  005596  5005               	movf	i2___lldiv@divisor,w,c
 20048  005598  5E01               	subwf	i2___lldiv@dividend,f,c
 20049  00559A  5006               	movf	i2___lldiv@divisor+1,w,c
 20050  00559C  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 20051  00559E  5007               	movf	i2___lldiv@divisor+2,w,c
 20052  0055A0  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 20053  0055A2  5008               	movf	i2___lldiv@divisor+3,w,c
 20054  0055A4  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 20055  0055A6  8009               	bsf	i2___lldiv@quotient,0,c
 20056  0055A8                     i2l5642:
 20057  0055A8  90D8               	bcf	status,0,c
 20058  0055AA  3208               	rrcf	i2___lldiv@divisor+3,f,c
 20059  0055AC  3207               	rrcf	i2___lldiv@divisor+2,f,c
 20060  0055AE  3206               	rrcf	i2___lldiv@divisor+1,f,c
 20061  0055B0  3205               	rrcf	i2___lldiv@divisor,f,c
 20062  0055B2  2E0D               	decfsz	i2___lldiv@counter,f,c
 20063  0055B4  D7E1               	goto	i2l5634
 20064  0055B6                     i2l1274:
 20065  0055B6  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 20066  0055BA  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 20067  0055BE  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 20068  0055C2  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 20069  0055C6  0012               	return		;funcret
 20070  0055C8                     __end_ofi2___lldiv:
 20071                           	opt stack 0
 20072                           pclatu	equ	0xFFB
 20073                           pclath	equ	0xFFA
 20074                           tblptru	equ	0xFF8
 20075                           tblptrh	equ	0xFF7
 20076                           tblptrl	equ	0xFF6
 20077                           tablat	equ	0xFF5
 20078                           prodh	equ	0xFF4
 20079                           prodl	equ	0xFF3
 20080                           intcon	equ	0xFF2
 20081                           intcon2	equ	0xFF1
 20082                           postinc0	equ	0xFEE
 20083                           fsr0h	equ	0xFEA
 20084                           fsr0l	equ	0xFE9
 20085                           wreg	equ	0xFE8
 20086                           fsr1h	equ	0xFE2
 20087                           fsr1l	equ	0xFE1
 20088                           indf2	equ	0xFDF
 20089                           postinc2	equ	0xFDE
 20090                           postdec2	equ	0xFDD
 20091                           fsr2h	equ	0xFDA
 20092                           fsr2l	equ	0xFD9
 20093                           status	equ	0xFD8
 20094                           
 20095 ;; *************** function i2___fttol *****************
 20096 ;; Defined at:
 20097 ;;		line 44 in file "/Applications/microchip/xc8/v1.41/sources/common/fttol.c"
 20098 ;; Parameters:    Size  Location     Type
 20099 ;;  f1              3   42[COMRAM] float 
 20100 ;; Auto vars:     Size  Location     Type
 20101 ;;  __fttol         4   52[COMRAM] unsigned long 
 20102 ;;  __fttol         1   56[COMRAM] unsigned char 
 20103 ;;  __fttol         1   51[COMRAM] unsigned char 
 20104 ;; Return value:  Size  Location     Type
 20105 ;;                  4   42[COMRAM] long 
 20106 ;; Registers used:
 20107 ;;		wreg, status,2, status,0
 20108 ;; Tracked objects:
 20109 ;;		On entry : 0/0
 20110 ;;		On exit  : 0/0
 20111 ;;		Unchanged: 0/0
 20112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20114 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20115 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20116 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20117 ;;Total ram usage:       15 bytes
 20118 ;; Hardware stack levels used:    1
 20119 ;; This function calls:
 20120 ;;		Nothing
 20121 ;; This function is called by:
 20122 ;;		i2_printf
 20123 ;; This function uses a non-reentrant model
 20124 ;;
 20125                           
 20126                           	psect	text64
 20127  004D9A                     __ptext64:
 20128                           	opt stack 0
 20129  004D9A                     i2___fttol:
 20130                           	opt stack 23
 20131                           
 20132                           ;incstack = 0
 20133  004D9A  C02D  F02F         	movff	i2___fttol@f1+2,??i2___fttol
 20134  004D9E  6A30               	clrf	(??i2___fttol+1)& (0+255),c
 20135  004DA0  6A31               	clrf	(??i2___fttol+2)& (0+255),c
 20136  004DA2  342C               	rlcf	i2___fttol@f1+1,w,c
 20137  004DA4  362F               	rlcf	??i2___fttol& (0+255),f,c
 20138  004DA6  E301               	bnc	u599_41
 20139  004DA8  8030               	bsf	(??i2___fttol+1)& (0+255),0,c
 20140  004DAA                     u599_41:
 20141  004DAA  502F               	movf	??i2___fttol,w,c
 20142  004DAC  6E39               	movwf	i2___fttol@exp1,c
 20143  004DAE  5039               	movf	i2___fttol@exp1,w,c
 20144  004DB0  A4D8               	btfss	status,2,c
 20145  004DB2  D009               	goto	i2l5572
 20146  004DB4  0E00               	movlw	0
 20147  004DB6  6E2B               	movwf	?i2___fttol,c
 20148  004DB8  0E00               	movlw	0
 20149  004DBA  6E2C               	movwf	?i2___fttol+1,c
 20150  004DBC  0E00               	movlw	0
 20151  004DBE  6E2D               	movwf	?i2___fttol+2,c
 20152  004DC0  0E00               	movlw	0
 20153  004DC2  6E2E               	movwf	?i2___fttol+3,c
 20154  004DC4  0012               	return	
 20155  004DC6                     i2l5572:
 20156  004DC6  0E17               	movlw	23
 20157  004DC8  6E2F               	movwf	??i2___fttol& (0+255),c
 20158  004DCA  C02B  F030         	movff	i2___fttol@f1,??i2___fttol+1
 20159  004DCE  C02C  F031         	movff	i2___fttol@f1+1,??i2___fttol+2
 20160  004DD2  C02D  F032         	movff	i2___fttol@f1+2,??i2___fttol+3
 20161  004DD6  282F               	incf	??i2___fttol,w,c
 20162  004DD8  6E33               	movwf	(??i2___fttol+4)& (0+255),c
 20163  004DDA  D004               	goto	i2u601_40
 20164  004DDC                     i2u601_45:
 20165  004DDC  90D8               	bcf	status,0,c
 20166  004DDE  3232               	rrcf	??i2___fttol+3,f,c
 20167  004DE0  3231               	rrcf	??i2___fttol+2,f,c
 20168  004DE2  3230               	rrcf	??i2___fttol+1,f,c
 20169  004DE4                     i2u601_40:
 20170  004DE4  2E33               	decfsz	(??i2___fttol+4)& (0+255),f,c
 20171  004DE6  D7FA               	goto	i2u601_45
 20172  004DE8  5030               	movf	??i2___fttol+1,w,c
 20173  004DEA  6E34               	movwf	i2___fttol@sign1,c
 20174  004DEC  8E2C               	bsf	i2___fttol@f1+1,7,c
 20175  004DEE  0EFF               	movlw	255
 20176  004DF0  162B               	andwf	i2___fttol@f1,f,c
 20177  004DF2  0EFF               	movlw	255
 20178  004DF4  162C               	andwf	i2___fttol@f1+1,f,c
 20179  004DF6  0E00               	movlw	0
 20180  004DF8  162D               	andwf	i2___fttol@f1+2,f,c
 20181  004DFA  502B               	movf	i2___fttol@f1,w,c
 20182  004DFC  6E35               	movwf	i2___fttol@lval,c
 20183  004DFE  502C               	movf	i2___fttol@f1+1,w,c
 20184  004E00  6E36               	movwf	i2___fttol@lval+1,c
 20185  004E02  502D               	movf	i2___fttol@f1+2,w,c
 20186  004E04  6E37               	movwf	i2___fttol@lval+2,c
 20187  004E06  6A38               	clrf	i2___fttol@lval+3,c
 20188  004E08  0E8E               	movlw	142
 20189  004E0A  5E39               	subwf	i2___fttol@exp1,f,c
 20190  004E0C  AE39               	btfss	i2___fttol@exp1,7,c
 20191  004E0E  D016               	goto	i2l5594
 20192  004E10  5039               	movf	i2___fttol@exp1,w,c
 20193  004E12  0A80               	xorlw	128
 20194  004E14  0F8F               	addlw	143
 20195  004E16  B0D8               	btfsc	status,0,c
 20196  004E18  D009               	goto	i2l5590
 20197  004E1A  0E00               	movlw	0
 20198  004E1C  6E2B               	movwf	?i2___fttol,c
 20199  004E1E  0E00               	movlw	0
 20200  004E20  6E2C               	movwf	?i2___fttol+1,c
 20201  004E22  0E00               	movlw	0
 20202  004E24  6E2D               	movwf	?i2___fttol+2,c
 20203  004E26  0E00               	movlw	0
 20204  004E28  6E2E               	movwf	?i2___fttol+3,c
 20205  004E2A  0012               	return	
 20206  004E2C                     i2l5590:
 20207  004E2C  90D8               	bcf	status,0,c
 20208  004E2E  3238               	rrcf	i2___fttol@lval+3,f,c
 20209  004E30  3237               	rrcf	i2___fttol@lval+2,f,c
 20210  004E32  3236               	rrcf	i2___fttol@lval+1,f,c
 20211  004E34  3235               	rrcf	i2___fttol@lval,f,c
 20212  004E36  3E39               	incfsz	i2___fttol@exp1,f,c
 20213  004E38  D7F9               	goto	i2l5590
 20214  004E3A  D015               	goto	i2l5604
 20215  004E3C                     i2l5594:
 20216  004E3C  0E17               	movlw	23
 20217  004E3E  6439               	cpfsgt	i2___fttol@exp1,c
 20218  004E40  D00F               	goto	i2l5602
 20219  004E42  0E00               	movlw	0
 20220  004E44  6E2B               	movwf	?i2___fttol,c
 20221  004E46  0E00               	movlw	0
 20222  004E48  6E2C               	movwf	?i2___fttol+1,c
 20223  004E4A  0E00               	movlw	0
 20224  004E4C  6E2D               	movwf	?i2___fttol+2,c
 20225  004E4E  0E00               	movlw	0
 20226  004E50  6E2E               	movwf	?i2___fttol+3,c
 20227  004E52  0012               	return	
 20228  004E54                     i2l5600:
 20229  004E54  90D8               	bcf	status,0,c
 20230  004E56  3635               	rlcf	i2___fttol@lval,f,c
 20231  004E58  3636               	rlcf	i2___fttol@lval+1,f,c
 20232  004E5A  3637               	rlcf	i2___fttol@lval+2,f,c
 20233  004E5C  3638               	rlcf	i2___fttol@lval+3,f,c
 20234  004E5E  0639               	decf	i2___fttol@exp1,f,c
 20235  004E60                     i2l5602:
 20236  004E60  5039               	movf	i2___fttol@exp1,w,c
 20237  004E62  A4D8               	btfss	status,2,c
 20238  004E64  D7F7               	goto	i2l5600
 20239  004E66                     i2l5604:
 20240  004E66  5034               	movf	i2___fttol@sign1,w,c
 20241  004E68  B4D8               	btfsc	status,2,c
 20242  004E6A  D008               	goto	i2l5608
 20243  004E6C  1E38               	comf	i2___fttol@lval+3,f,c
 20244  004E6E  1E37               	comf	i2___fttol@lval+2,f,c
 20245  004E70  1E36               	comf	i2___fttol@lval+1,f,c
 20246  004E72  6C35               	negf	i2___fttol@lval,c
 20247  004E74  0E00               	movlw	0
 20248  004E76  2236               	addwfc	i2___fttol@lval+1,f,c
 20249  004E78  2237               	addwfc	i2___fttol@lval+2,f,c
 20250  004E7A  2238               	addwfc	i2___fttol@lval+3,f,c
 20251  004E7C                     i2l5608:
 20252  004E7C  C035  F02B         	movff	i2___fttol@lval,?i2___fttol
 20253  004E80  C036  F02C         	movff	i2___fttol@lval+1,?i2___fttol+1
 20254  004E84  C037  F02D         	movff	i2___fttol@lval+2,?i2___fttol+2
 20255  004E88  C038  F02E         	movff	i2___fttol@lval+3,?i2___fttol+3
 20256  004E8C  0012               	return	
 20257  004E8E                     __end_ofi2___fttol:
 20258                           	opt stack 0
 20259                           pclatu	equ	0xFFB
 20260                           pclath	equ	0xFFA
 20261                           tblptru	equ	0xFF8
 20262                           tblptrh	equ	0xFF7
 20263                           tblptrl	equ	0xFF6
 20264                           tablat	equ	0xFF5
 20265                           prodh	equ	0xFF4
 20266                           prodl	equ	0xFF3
 20267                           intcon	equ	0xFF2
 20268                           intcon2	equ	0xFF1
 20269                           postinc0	equ	0xFEE
 20270                           fsr0h	equ	0xFEA
 20271                           fsr0l	equ	0xFE9
 20272                           wreg	equ	0xFE8
 20273                           fsr1h	equ	0xFE2
 20274                           fsr1l	equ	0xFE1
 20275                           indf2	equ	0xFDF
 20276                           postinc2	equ	0xFDE
 20277                           postdec2	equ	0xFDD
 20278                           fsr2h	equ	0xFDA
 20279                           fsr2l	equ	0xFD9
 20280                           status	equ	0xFD8
 20281                           
 20282 ;; *************** function i2___ftsub *****************
 20283 ;; Defined at:
 20284 ;;		line 20 in file "/Applications/microchip/xc8/v1.41/sources/common/ftsub.c"
 20285 ;; Parameters:    Size  Location     Type
 20286 ;;  f1              3   57[COMRAM] float 
 20287 ;;  f2              3   60[COMRAM] float 
 20288 ;; Auto vars:     Size  Location     Type
 20289 ;;		None
 20290 ;; Return value:  Size  Location     Type
 20291 ;;                  3   57[COMRAM] float 
 20292 ;; Registers used:
 20293 ;;		wreg, status,2, status,0, cstack
 20294 ;; Tracked objects:
 20295 ;;		On entry : 0/0
 20296 ;;		On exit  : 0/0
 20297 ;;		Unchanged: 0/0
 20298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20299 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;Total ram usage:        6 bytes
 20304 ;; Hardware stack levels used:    1
 20305 ;; Hardware stack levels required when called:    2
 20306 ;; This function calls:
 20307 ;;		i2___ftadd
 20308 ;; This function is called by:
 20309 ;;		i2_printf
 20310 ;; This function uses a non-reentrant model
 20311 ;;
 20312                           
 20313                           	psect	text65
 20314  005C72                     __ptext65:
 20315                           	opt stack 0
 20316  005C72                     i2___ftsub:
 20317                           	opt stack 21
 20318                           
 20319                           ;incstack = 0
 20320  005C72  503D               	movf	i2___ftsub@f2,w,c
 20321  005C74  103E               	iorwf	i2___ftsub@f2+1,w,c
 20322  005C76  103F               	iorwf	i2___ftsub@f2+2,w,c
 20323  005C78  B4D8               	btfsc	status,2,c
 20324  005C7A  D006               	goto	i2l5562
 20325  005C7C  0E00               	movlw	0
 20326  005C7E  1A3D               	xorwf	i2___ftsub@f2,f,c
 20327  005C80  0E00               	movlw	0
 20328  005C82  1A3E               	xorwf	i2___ftsub@f2+1,f,c
 20329  005C84  0E80               	movlw	128
 20330  005C86  1A3F               	xorwf	i2___ftsub@f2+2,f,c
 20331  005C88                     i2l5562:
 20332  005C88  C03A  F02E         	movff	i2___ftsub@f1,i2___ftadd@f1
 20333  005C8C  C03B  F02F         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 20334  005C90  C03C  F030         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 20335  005C94  C03D  F031         	movff	i2___ftsub@f2,i2___ftadd@f2
 20336  005C98  C03E  F032         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 20337  005C9C  C03F  F033         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 20338  005CA0  ECFE  F01E         	call	i2___ftadd	;wreg free
 20339  005CA4  C02E  F03A         	movff	?i2___ftadd,?i2___ftsub
 20340  005CA8  C02F  F03B         	movff	?i2___ftadd+1,?i2___ftsub+1
 20341  005CAC  C030  F03C         	movff	?i2___ftadd+2,?i2___ftsub+2
 20342  005CB0  0012               	return	
 20343  005CB2                     __end_ofi2___ftsub:
 20344                           	opt stack 0
 20345                           pclatu	equ	0xFFB
 20346                           pclath	equ	0xFFA
 20347                           tblptru	equ	0xFF8
 20348                           tblptrh	equ	0xFF7
 20349                           tblptrl	equ	0xFF6
 20350                           tablat	equ	0xFF5
 20351                           prodh	equ	0xFF4
 20352                           prodl	equ	0xFF3
 20353                           intcon	equ	0xFF2
 20354                           intcon2	equ	0xFF1
 20355                           postinc0	equ	0xFEE
 20356                           fsr0h	equ	0xFEA
 20357                           fsr0l	equ	0xFE9
 20358                           wreg	equ	0xFE8
 20359                           fsr1h	equ	0xFE2
 20360                           fsr1l	equ	0xFE1
 20361                           indf2	equ	0xFDF
 20362                           postinc2	equ	0xFDE
 20363                           postdec2	equ	0xFDD
 20364                           fsr2h	equ	0xFDA
 20365                           fsr2l	equ	0xFD9
 20366                           status	equ	0xFD8
 20367                           
 20368 ;; *************** function i2___ftadd *****************
 20369 ;; Defined at:
 20370 ;;		line 86 in file "/Applications/microchip/xc8/v1.41/sources/common/ftadd.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;  f1              3   45[COMRAM] float 
 20373 ;;  f2              3   48[COMRAM] float 
 20374 ;; Auto vars:     Size  Location     Type
 20375 ;;  __ftadd         1   56[COMRAM] unsigned char 
 20376 ;;  __ftadd         1   55[COMRAM] unsigned char 
 20377 ;;  __ftadd         1   54[COMRAM] unsigned char 
 20378 ;; Return value:  Size  Location     Type
 20379 ;;                  3   45[COMRAM] float 
 20380 ;; Registers used:
 20381 ;;		wreg, status,2, status,0, cstack
 20382 ;; Tracked objects:
 20383 ;;		On entry : 0/0
 20384 ;;		On exit  : 0/0
 20385 ;;		Unchanged: 0/0
 20386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20387 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20388 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20390 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20391 ;;Total ram usage:       12 bytes
 20392 ;; Hardware stack levels used:    1
 20393 ;; Hardware stack levels required when called:    1
 20394 ;; This function calls:
 20395 ;;		i2___ftpack
 20396 ;; This function is called by:
 20397 ;;		i2_readADC
 20398 ;;		i2_printf
 20399 ;;		i2___ftsub
 20400 ;; This function uses a non-reentrant model
 20401 ;;
 20402                           
 20403                           	psect	text66
 20404  003DFC                     __ptext66:
 20405                           	opt stack 0
 20406  003DFC                     i2___ftadd:
 20407                           	opt stack 22
 20408                           
 20409                           ;incstack = 0
 20410  003DFC  C030  F034         	movff	i2___ftadd@f1+2,??i2___ftadd
 20411  003E00  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 20412  003E02  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 20413  003E04  342F               	rlcf	i2___ftadd@f1+1,w,c
 20414  003E06  3634               	rlcf	??i2___ftadd& (0+255),f,c
 20415  003E08  E301               	bnc	u495_41
 20416  003E0A  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 20417  003E0C                     u495_41:
 20418  003E0C  5034               	movf	??i2___ftadd,w,c
 20419  003E0E  6E39               	movwf	i2___ftadd@exp1,c
 20420  003E10  C033  F034         	movff	i2___ftadd@f2+2,??i2___ftadd
 20421  003E14  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 20422  003E16  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 20423  003E18  3432               	rlcf	i2___ftadd@f2+1,w,c
 20424  003E1A  3634               	rlcf	??i2___ftadd& (0+255),f,c
 20425  003E1C  E301               	bnc	u496_41
 20426  003E1E  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 20427  003E20                     u496_41:
 20428  003E20  5034               	movf	??i2___ftadd,w,c
 20429  003E22  6E38               	movwf	i2___ftadd@exp2,c
 20430  003E24  5039               	movf	i2___ftadd@exp1,w,c
 20431  003E26  B4D8               	btfsc	status,2,c
 20432  003E28  D00B               	goto	i2l1150
 20433  003E2A  5038               	movf	i2___ftadd@exp2,w,c
 20434  003E2C  5C39               	subwf	i2___ftadd@exp1,w,c
 20435  003E2E  B0D8               	btfsc	status,0,c
 20436  003E30  D00E               	goto	i2l4938
 20437  003E32  5039               	movf	i2___ftadd@exp1,w,c
 20438  003E34  0800               	sublw	0
 20439  003E36  2438               	addwf	i2___ftadd@exp2,w,c
 20440  003E38  6E34               	movwf	??i2___ftadd& (0+255),c
 20441  003E3A  0E18               	movlw	24
 20442  003E3C  6434               	cpfsgt	??i2___ftadd,c
 20443  003E3E  D007               	goto	i2l4938
 20444  003E40                     i2l1150:
 20445  003E40  C031  F02E         	movff	i2___ftadd@f2,?i2___ftadd
 20446  003E44  C032  F02F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 20447  003E48  C033  F030         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 20448  003E4C  0012               	return	
 20449  003E4E                     i2l4938:
 20450  003E4E  5038               	movf	i2___ftadd@exp2,w,c
 20451  003E50  B4D8               	btfsc	status,2,c
 20452  003E52  D00B               	goto	i2l1154
 20453  003E54  5039               	movf	i2___ftadd@exp1,w,c
 20454  003E56  5C38               	subwf	i2___ftadd@exp2,w,c
 20455  003E58  B0D8               	btfsc	status,0,c
 20456  003E5A  D00E               	goto	i2l4944
 20457  003E5C  5038               	movf	i2___ftadd@exp2,w,c
 20458  003E5E  0800               	sublw	0
 20459  003E60  2439               	addwf	i2___ftadd@exp1,w,c
 20460  003E62  6E34               	movwf	??i2___ftadd& (0+255),c
 20461  003E64  0E18               	movlw	24
 20462  003E66  6434               	cpfsgt	??i2___ftadd,c
 20463  003E68  D007               	goto	i2l4944
 20464  003E6A                     i2l1154:
 20465  003E6A  C02E  F02E         	movff	i2___ftadd@f1,?i2___ftadd
 20466  003E6E  C02F  F02F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 20467  003E72  C030  F030         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 20468  003E76  0012               	return	
 20469  003E78                     i2l4944:
 20470  003E78  0E06               	movlw	6
 20471  003E7A  6E37               	movwf	i2___ftadd@sign,c
 20472  003E7C  BE30               	btfsc	i2___ftadd@f1+2,7,c
 20473  003E7E  8E37               	bsf	i2___ftadd@sign,7,c
 20474  003E80  BE33               	btfsc	i2___ftadd@f2+2,7,c
 20475  003E82  8C37               	bsf	i2___ftadd@sign,6,c
 20476  003E84  8E2F               	bsf	i2___ftadd@f1+1,7,c
 20477  003E86  0EFF               	movlw	255
 20478  003E88  162E               	andwf	i2___ftadd@f1,f,c
 20479  003E8A  0EFF               	movlw	255
 20480  003E8C  162F               	andwf	i2___ftadd@f1+1,f,c
 20481  003E8E  0E00               	movlw	0
 20482  003E90  1630               	andwf	i2___ftadd@f1+2,f,c
 20483  003E92  8E32               	bsf	i2___ftadd@f2+1,7,c
 20484  003E94  0EFF               	movlw	255
 20485  003E96  1631               	andwf	i2___ftadd@f2,f,c
 20486  003E98  0EFF               	movlw	255
 20487  003E9A  1632               	andwf	i2___ftadd@f2+1,f,c
 20488  003E9C  0E00               	movlw	0
 20489  003E9E  1633               	andwf	i2___ftadd@f2+2,f,c
 20490  003EA0  5038               	movf	i2___ftadd@exp2,w,c
 20491  003EA2  5C39               	subwf	i2___ftadd@exp1,w,c
 20492  003EA4  B0D8               	btfsc	status,0,c
 20493  003EA6  D01B               	goto	i2l4970
 20494  003EA8                     i2l4960:
 20495  003EA8  90D8               	bcf	status,0,c
 20496  003EAA  3631               	rlcf	i2___ftadd@f2,f,c
 20497  003EAC  3632               	rlcf	i2___ftadd@f2+1,f,c
 20498  003EAE  3633               	rlcf	i2___ftadd@f2+2,f,c
 20499  003EB0  0638               	decf	i2___ftadd@exp2,f,c
 20500  003EB2  5039               	movf	i2___ftadd@exp1,w,c
 20501  003EB4  1838               	xorwf	i2___ftadd@exp2,w,c
 20502  003EB6  B4D8               	btfsc	status,2,c
 20503  003EB8  D00D               	goto	i2l4968
 20504  003EBA  0637               	decf	i2___ftadd@sign,f,c
 20505  003EBC  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 20506  003EC0  0E07               	movlw	7
 20507  003EC2  1634               	andwf	??i2___ftadd,f,c
 20508  003EC4  B4D8               	btfsc	status,2,c
 20509  003EC6  D006               	goto	i2l4968
 20510  003EC8  D7EF               	goto	i2l4960
 20511  003ECA                     i2l4966:
 20512  003ECA  90D8               	bcf	status,0,c
 20513  003ECC  3230               	rrcf	i2___ftadd@f1+2,f,c
 20514  003ECE  322F               	rrcf	i2___ftadd@f1+1,f,c
 20515  003ED0  322E               	rrcf	i2___ftadd@f1,f,c
 20516  003ED2  2A39               	incf	i2___ftadd@exp1,f,c
 20517  003ED4                     i2l4968:
 20518  003ED4  5038               	movf	i2___ftadd@exp2,w,c
 20519  003ED6  1839               	xorwf	i2___ftadd@exp1,w,c
 20520  003ED8  B4D8               	btfsc	status,2,c
 20521  003EDA  D01F               	goto	i2l1165
 20522  003EDC  D7F6               	goto	i2l4966
 20523  003EDE                     i2l4970:
 20524  003EDE  5039               	movf	i2___ftadd@exp1,w,c
 20525  003EE0  5C38               	subwf	i2___ftadd@exp2,w,c
 20526  003EE2  B0D8               	btfsc	status,0,c
 20527  003EE4  D01A               	goto	i2l1165
 20528  003EE6                     i2l4972:
 20529  003EE6  90D8               	bcf	status,0,c
 20530  003EE8  362E               	rlcf	i2___ftadd@f1,f,c
 20531  003EEA  362F               	rlcf	i2___ftadd@f1+1,f,c
 20532  003EEC  3630               	rlcf	i2___ftadd@f1+2,f,c
 20533  003EEE  0639               	decf	i2___ftadd@exp1,f,c
 20534  003EF0  5039               	movf	i2___ftadd@exp1,w,c
 20535  003EF2  1838               	xorwf	i2___ftadd@exp2,w,c
 20536  003EF4  B4D8               	btfsc	status,2,c
 20537  003EF6  D00D               	goto	i2l4980
 20538  003EF8  0637               	decf	i2___ftadd@sign,f,c
 20539  003EFA  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 20540  003EFE  0E07               	movlw	7
 20541  003F00  1634               	andwf	??i2___ftadd,f,c
 20542  003F02  B4D8               	btfsc	status,2,c
 20543  003F04  D006               	goto	i2l4980
 20544  003F06  D7EF               	goto	i2l4972
 20545  003F08                     i2l4978:
 20546  003F08  90D8               	bcf	status,0,c
 20547  003F0A  3233               	rrcf	i2___ftadd@f2+2,f,c
 20548  003F0C  3232               	rrcf	i2___ftadd@f2+1,f,c
 20549  003F0E  3231               	rrcf	i2___ftadd@f2,f,c
 20550  003F10  2A38               	incf	i2___ftadd@exp2,f,c
 20551  003F12                     i2l4980:
 20552  003F12  5038               	movf	i2___ftadd@exp2,w,c
 20553  003F14  1839               	xorwf	i2___ftadd@exp1,w,c
 20554  003F16  A4D8               	btfss	status,2,c
 20555  003F18  D7F7               	goto	i2l4978
 20556  003F1A                     i2l1165:
 20557  003F1A  AE37               	btfss	i2___ftadd@sign,7,c
 20558  003F1C  D00C               	goto	i2l1174
 20559  003F1E  0EFF               	movlw	255
 20560  003F20  1A2E               	xorwf	i2___ftadd@f1,f,c
 20561  003F22  0EFF               	movlw	255
 20562  003F24  1A2F               	xorwf	i2___ftadd@f1+1,f,c
 20563  003F26  0EFF               	movlw	255
 20564  003F28  1A30               	xorwf	i2___ftadd@f1+2,f,c
 20565  003F2A  0E01               	movlw	1
 20566  003F2C  262E               	addwf	i2___ftadd@f1,f,c
 20567  003F2E  0E00               	movlw	0
 20568  003F30  222F               	addwfc	i2___ftadd@f1+1,f,c
 20569  003F32  0E00               	movlw	0
 20570  003F34  2230               	addwfc	i2___ftadd@f1+2,f,c
 20571  003F36                     i2l1174:
 20572  003F36  AC37               	btfss	i2___ftadd@sign,6,c
 20573  003F38  D00C               	goto	i2l4986
 20574  003F3A  0EFF               	movlw	255
 20575  003F3C  1A31               	xorwf	i2___ftadd@f2,f,c
 20576  003F3E  0EFF               	movlw	255
 20577  003F40  1A32               	xorwf	i2___ftadd@f2+1,f,c
 20578  003F42  0EFF               	movlw	255
 20579  003F44  1A33               	xorwf	i2___ftadd@f2+2,f,c
 20580  003F46  0E01               	movlw	1
 20581  003F48  2631               	addwf	i2___ftadd@f2,f,c
 20582  003F4A  0E00               	movlw	0
 20583  003F4C  2232               	addwfc	i2___ftadd@f2+1,f,c
 20584  003F4E  0E00               	movlw	0
 20585  003F50  2233               	addwfc	i2___ftadd@f2+2,f,c
 20586  003F52                     i2l4986:
 20587  003F52  0E00               	movlw	0
 20588  003F54  6E37               	movwf	i2___ftadd@sign,c
 20589  003F56  502E               	movf	i2___ftadd@f1,w,c
 20590  003F58  2631               	addwf	i2___ftadd@f2,f,c
 20591  003F5A  502F               	movf	i2___ftadd@f1+1,w,c
 20592  003F5C  2232               	addwfc	i2___ftadd@f2+1,f,c
 20593  003F5E  5030               	movf	i2___ftadd@f1+2,w,c
 20594  003F60  2233               	addwfc	i2___ftadd@f2+2,f,c
 20595  003F62  AE33               	btfss	i2___ftadd@f2+2,7,c
 20596  003F64  D00E               	goto	i2l4996
 20597  003F66  0EFF               	movlw	255
 20598  003F68  1A31               	xorwf	i2___ftadd@f2,f,c
 20599  003F6A  0EFF               	movlw	255
 20600  003F6C  1A32               	xorwf	i2___ftadd@f2+1,f,c
 20601  003F6E  0EFF               	movlw	255
 20602  003F70  1A33               	xorwf	i2___ftadd@f2+2,f,c
 20603  003F72  0E01               	movlw	1
 20604  003F74  2631               	addwf	i2___ftadd@f2,f,c
 20605  003F76  0E00               	movlw	0
 20606  003F78  2232               	addwfc	i2___ftadd@f2+1,f,c
 20607  003F7A  0E00               	movlw	0
 20608  003F7C  2233               	addwfc	i2___ftadd@f2+2,f,c
 20609  003F7E  0E01               	movlw	1
 20610  003F80  6E37               	movwf	i2___ftadd@sign,c
 20611  003F82                     i2l4996:
 20612  003F82  C031  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 20613  003F86  C032  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 20614  003F8A  C033  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 20615  003F8E  C039  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 20616  003F92  C037  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 20617  003F96  ECDB  F028         	call	i2___ftpack	;wreg free
 20618  003F9A  C001  F02E         	movff	?i2___ftpack,?i2___ftadd
 20619  003F9E  C002  F02F         	movff	?i2___ftpack+1,?i2___ftadd+1
 20620  003FA2  C003  F030         	movff	?i2___ftpack+2,?i2___ftadd+2
 20621  003FA6  0012               	return	
 20622  003FA8                     __end_ofi2___ftadd:
 20623                           	opt stack 0
 20624                           pclatu	equ	0xFFB
 20625                           pclath	equ	0xFFA
 20626                           tblptru	equ	0xFF8
 20627                           tblptrh	equ	0xFF7
 20628                           tblptrl	equ	0xFF6
 20629                           tablat	equ	0xFF5
 20630                           prodh	equ	0xFF4
 20631                           prodl	equ	0xFF3
 20632                           intcon	equ	0xFF2
 20633                           intcon2	equ	0xFF1
 20634                           postinc0	equ	0xFEE
 20635                           fsr0h	equ	0xFEA
 20636                           fsr0l	equ	0xFE9
 20637                           wreg	equ	0xFE8
 20638                           fsr1h	equ	0xFE2
 20639                           fsr1l	equ	0xFE1
 20640                           indf2	equ	0xFDF
 20641                           postinc2	equ	0xFDE
 20642                           postdec2	equ	0xFDD
 20643                           fsr2h	equ	0xFDA
 20644                           fsr2l	equ	0xFD9
 20645                           status	equ	0xFD8
 20646                           
 20647 ;; *************** function i2___ftpack *****************
 20648 ;; Defined at:
 20649 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
 20650 ;; Parameters:    Size  Location     Type
 20651 ;;  arg             3    0[COMRAM] unsigned um
 20652 ;;  exp             1    3[COMRAM] unsigned char 
 20653 ;;  sign            1    4[COMRAM] unsigned char 
 20654 ;; Auto vars:     Size  Location     Type
 20655 ;;		None
 20656 ;; Return value:  Size  Location     Type
 20657 ;;                  3    0[COMRAM] float 
 20658 ;; Registers used:
 20659 ;;		wreg, status,2, status,0
 20660 ;; Tracked objects:
 20661 ;;		On entry : 0/0
 20662 ;;		On exit  : 0/0
 20663 ;;		Unchanged: 0/0
 20664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20665 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20668 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20669 ;;Total ram usage:        8 bytes
 20670 ;; Hardware stack levels used:    1
 20671 ;; This function calls:
 20672 ;;		Nothing
 20673 ;; This function is called by:
 20674 ;;		i2___ftadd
 20675 ;;		i2___ftdiv
 20676 ;;		i2___ftmul
 20677 ;;		i2___lltoft
 20678 ;;		i2___lwtoft
 20679 ;; This function uses a non-reentrant model
 20680 ;;
 20681                           
 20682                           	psect	text67
 20683  0051B6                     __ptext67:
 20684                           	opt stack 0
 20685  0051B6                     i2___ftpack:
 20686                           	opt stack 21
 20687                           
 20688                           ;incstack = 0
 20689  0051B6  5004               	movf	i2___ftpack@exp,w,c
 20690  0051B8  B4D8               	btfsc	status,2,c
 20691  0051BA  D005               	goto	i2l4758
 20692  0051BC  5001               	movf	i2___ftpack@arg,w,c
 20693  0051BE  1002               	iorwf	i2___ftpack@arg+1,w,c
 20694  0051C0  1003               	iorwf	i2___ftpack@arg+2,w,c
 20695  0051C2  A4D8               	btfss	status,2,c
 20696  0051C4  D00C               	goto	i2l4764
 20697  0051C6                     i2l4758:
 20698  0051C6  0E00               	movlw	0
 20699  0051C8  6E01               	movwf	?i2___ftpack,c
 20700  0051CA  0E00               	movlw	0
 20701  0051CC  6E02               	movwf	?i2___ftpack+1,c
 20702  0051CE  0E00               	movlw	0
 20703  0051D0  6E03               	movwf	?i2___ftpack+2,c
 20704  0051D2  0012               	return	
 20705  0051D4                     i2l4762:
 20706  0051D4  2A04               	incf	i2___ftpack@exp,f,c
 20707  0051D6  90D8               	bcf	status,0,c
 20708  0051D8  3203               	rrcf	i2___ftpack@arg+2,f,c
 20709  0051DA  3202               	rrcf	i2___ftpack@arg+1,f,c
 20710  0051DC  3201               	rrcf	i2___ftpack@arg,f,c
 20711  0051DE                     i2l4764:
 20712  0051DE  0E00               	movlw	0
 20713  0051E0  1401               	andwf	i2___ftpack@arg,w,c
 20714  0051E2  6E06               	movwf	??i2___ftpack& (0+255),c
 20715  0051E4  0E00               	movlw	0
 20716  0051E6  1402               	andwf	i2___ftpack@arg+1,w,c
 20717  0051E8  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 20718  0051EA  0EFE               	movlw	254
 20719  0051EC  1403               	andwf	i2___ftpack@arg+2,w,c
 20720  0051EE  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 20721  0051F0  5006               	movf	??i2___ftpack,w,c
 20722  0051F2  1007               	iorwf	??i2___ftpack+1,w,c
 20723  0051F4  1008               	iorwf	??i2___ftpack+2,w,c
 20724  0051F6  B4D8               	btfsc	status,2,c
 20725  0051F8  D00C               	goto	i2l4770
 20726  0051FA  D7EC               	goto	i2l4762
 20727  0051FC                     i2l4766:
 20728  0051FC  2A04               	incf	i2___ftpack@exp,f,c
 20729  0051FE  0E01               	movlw	1
 20730  005200  2601               	addwf	i2___ftpack@arg,f,c
 20731  005202  0E00               	movlw	0
 20732  005204  2202               	addwfc	i2___ftpack@arg+1,f,c
 20733  005206  0E00               	movlw	0
 20734  005208  2203               	addwfc	i2___ftpack@arg+2,f,c
 20735  00520A  90D8               	bcf	status,0,c
 20736  00520C  3203               	rrcf	i2___ftpack@arg+2,f,c
 20737  00520E  3202               	rrcf	i2___ftpack@arg+1,f,c
 20738  005210  3201               	rrcf	i2___ftpack@arg,f,c
 20739  005212                     i2l4770:
 20740  005212  0E00               	movlw	0
 20741  005214  1401               	andwf	i2___ftpack@arg,w,c
 20742  005216  6E06               	movwf	??i2___ftpack& (0+255),c
 20743  005218  0E00               	movlw	0
 20744  00521A  1402               	andwf	i2___ftpack@arg+1,w,c
 20745  00521C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 20746  00521E  0EFF               	movlw	255
 20747  005220  1403               	andwf	i2___ftpack@arg+2,w,c
 20748  005222  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 20749  005224  5006               	movf	??i2___ftpack,w,c
 20750  005226  1007               	iorwf	??i2___ftpack+1,w,c
 20751  005228  1008               	iorwf	??i2___ftpack+2,w,c
 20752  00522A  B4D8               	btfsc	status,2,c
 20753  00522C  D006               	goto	i2l4774
 20754  00522E  D7E6               	goto	i2l4766
 20755  005230                     i2l4772:
 20756  005230  0604               	decf	i2___ftpack@exp,f,c
 20757  005232  90D8               	bcf	status,0,c
 20758  005234  3601               	rlcf	i2___ftpack@arg,f,c
 20759  005236  3602               	rlcf	i2___ftpack@arg+1,f,c
 20760  005238  3603               	rlcf	i2___ftpack@arg+2,f,c
 20761  00523A                     i2l4774:
 20762  00523A  BE02               	btfsc	i2___ftpack@arg+1,7,c
 20763  00523C  D003               	goto	i2l1127
 20764  00523E  0E02               	movlw	2
 20765  005240  6004               	cpfslt	i2___ftpack@exp,c
 20766  005242  D7F6               	goto	i2l4772
 20767  005244                     i2l1127:
 20768  005244  A004               	btfss	i2___ftpack@exp,0,c
 20769  005246  9E02               	bcf	i2___ftpack@arg+1,7,c
 20770  005248  90D8               	bcf	status,0,c
 20771  00524A  3204               	rrcf	i2___ftpack@exp,f,c
 20772  00524C  5004               	movf	i2___ftpack@exp,w,c
 20773  00524E  1203               	iorwf	i2___ftpack@arg+2,f,c
 20774  005250  5005               	movf	i2___ftpack@sign,w,c
 20775  005252  A4D8               	btfss	status,2,c
 20776  005254  8E03               	bsf	i2___ftpack@arg+2,7,c
 20777  005256  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 20778  00525A  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 20779  00525E  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 20780  005262  0012               	return	
 20781  005264                     __end_ofi2___ftpack:
 20782                           	opt stack 0
 20783                           pclatu	equ	0xFFB
 20784                           pclath	equ	0xFFA
 20785                           tblptru	equ	0xFF8
 20786                           tblptrh	equ	0xFF7
 20787                           tblptrl	equ	0xFF6
 20788                           tablat	equ	0xFF5
 20789                           prodh	equ	0xFF4
 20790                           prodl	equ	0xFF3
 20791                           intcon	equ	0xFF2
 20792                           intcon2	equ	0xFF1
 20793                           postinc0	equ	0xFEE
 20794                           fsr0h	equ	0xFEA
 20795                           fsr0l	equ	0xFE9
 20796                           wreg	equ	0xFE8
 20797                           fsr1h	equ	0xFE2
 20798                           fsr1l	equ	0xFE1
 20799                           indf2	equ	0xFDF
 20800                           postinc2	equ	0xFDE
 20801                           postdec2	equ	0xFDD
 20802                           fsr2h	equ	0xFDA
 20803                           fsr2l	equ	0xFD9
 20804                           status	equ	0xFD8
 20805                           
 20806 ;; *************** function i2___ftneg *****************
 20807 ;; Defined at:
 20808 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/ftneg.c"
 20809 ;; Parameters:    Size  Location     Type
 20810 ;;  f1              3    0[COMRAM] float 
 20811 ;; Auto vars:     Size  Location     Type
 20812 ;;		None
 20813 ;; Return value:  Size  Location     Type
 20814 ;;                  3    0[COMRAM] float 
 20815 ;; Registers used:
 20816 ;;		wreg, status,2, status,0
 20817 ;; Tracked objects:
 20818 ;;		On entry : 0/0
 20819 ;;		On exit  : 0/0
 20820 ;;		Unchanged: 0/0
 20821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20826 ;;Total ram usage:        3 bytes
 20827 ;; Hardware stack levels used:    1
 20828 ;; This function calls:
 20829 ;;		Nothing
 20830 ;; This function is called by:
 20831 ;;		i2_printf
 20832 ;; This function uses a non-reentrant model
 20833 ;;
 20834                           
 20835                           	psect	text68
 20836  005E9A                     __ptext68:
 20837                           	opt stack 0
 20838  005E9A                     i2___ftneg:
 20839                           	opt stack 23
 20840                           
 20841                           ;incstack = 0
 20842  005E9A  5001               	movf	i2___ftneg@f1,w,c
 20843  005E9C  1002               	iorwf	i2___ftneg@f1+1,w,c
 20844  005E9E  1003               	iorwf	i2___ftneg@f1+2,w,c
 20845  005EA0  B4D8               	btfsc	status,2,c
 20846  005EA2  D006               	goto	i2l1224
 20847  005EA4  0E00               	movlw	0
 20848  005EA6  1A01               	xorwf	i2___ftneg@f1,f,c
 20849  005EA8  0E00               	movlw	0
 20850  005EAA  1A02               	xorwf	i2___ftneg@f1+1,f,c
 20851  005EAC  0E80               	movlw	128
 20852  005EAE  1A03               	xorwf	i2___ftneg@f1+2,f,c
 20853  005EB0                     i2l1224:
 20854  005EB0  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 20855  005EB4  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 20856  005EB8  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 20857  005EBC  0012               	return		;funcret
 20858  005EBE                     __end_ofi2___ftneg:
 20859                           	opt stack 0
 20860                           pclatu	equ	0xFFB
 20861                           pclath	equ	0xFFA
 20862                           tblptru	equ	0xFF8
 20863                           tblptrh	equ	0xFF7
 20864                           tblptrl	equ	0xFF6
 20865                           tablat	equ	0xFF5
 20866                           prodh	equ	0xFF4
 20867                           prodl	equ	0xFF3
 20868                           intcon	equ	0xFF2
 20869                           intcon2	equ	0xFF1
 20870                           postinc0	equ	0xFEE
 20871                           fsr0h	equ	0xFEA
 20872                           fsr0l	equ	0xFE9
 20873                           wreg	equ	0xFE8
 20874                           fsr1h	equ	0xFE2
 20875                           fsr1l	equ	0xFE1
 20876                           indf2	equ	0xFDF
 20877                           postinc2	equ	0xFDE
 20878                           postdec2	equ	0xFDD
 20879                           fsr2h	equ	0xFDA
 20880                           fsr2l	equ	0xFD9
 20881                           status	equ	0xFD8
 20882                           
 20883 ;; *************** function i2___ftge *****************
 20884 ;; Defined at:
 20885 ;;		line 4 in file "/Applications/microchip/xc8/v1.41/sources/common/ftge.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  ff1             3    0[COMRAM] float 
 20888 ;;  ff2             3    3[COMRAM] float 
 20889 ;; Auto vars:     Size  Location     Type
 20890 ;;		None
 20891 ;; Return value:  Size  Location     Type
 20892 ;;		None               void
 20893 ;; Registers used:
 20894 ;;		wreg, status,2, status,0
 20895 ;; Tracked objects:
 20896 ;;		On entry : 0/0
 20897 ;;		On exit  : 0/0
 20898 ;;		Unchanged: 0/0
 20899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20900 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20902 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20903 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20904 ;;Total ram usage:        9 bytes
 20905 ;; Hardware stack levels used:    1
 20906 ;; This function calls:
 20907 ;;		Nothing
 20908 ;; This function is called by:
 20909 ;;		_servo_ISR_1
 20910 ;;		_servo_ISR_3
 20911 ;;		i2_abs
 20912 ;;		i2_printf
 20913 ;; This function uses a non-reentrant model
 20914 ;;
 20915                           
 20916                           	psect	text69
 20917  005432                     __ptext69:
 20918                           	opt stack 0
 20919  005432                     i2___ftge:
 20920                           	opt stack 22
 20921                           
 20922                           ;incstack = 0
 20923  005432  AE03               	btfss	i2___ftge@ff1+2,7,c
 20924  005434  D016               	goto	i2l5004
 20925  005436  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 20926  00543A  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 20927  00543E  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 20928  005442  1E07               	comf	??i2___ftge,f,c
 20929  005444  1E08               	comf	??i2___ftge+1,f,c
 20930  005446  1E09               	comf	??i2___ftge+2,f,c
 20931  005448  2A07               	incf	??i2___ftge,f,c
 20932  00544A  0E00               	movlw	0
 20933  00544C  2208               	addwfc	??i2___ftge+1,f,c
 20934  00544E  2209               	addwfc	??i2___ftge+2,f,c
 20935  005450  0E00               	movlw	0
 20936  005452  2407               	addwf	??i2___ftge,w,c
 20937  005454  6E01               	movwf	i2___ftge@ff1,c
 20938  005456  0E00               	movlw	0
 20939  005458  2008               	addwfc	??i2___ftge+1,w,c
 20940  00545A  6E02               	movwf	i2___ftge@ff1+1,c
 20941  00545C  0E80               	movlw	128
 20942  00545E  2009               	addwfc	??i2___ftge+2,w,c
 20943  005460  6E03               	movwf	i2___ftge@ff1+2,c
 20944  005462                     i2l5004:
 20945  005462  AE06               	btfss	i2___ftge@ff2+2,7,c
 20946  005464  D016               	goto	i2l5008
 20947  005466  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 20948  00546A  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 20949  00546E  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 20950  005472  1E07               	comf	??i2___ftge,f,c
 20951  005474  1E08               	comf	??i2___ftge+1,f,c
 20952  005476  1E09               	comf	??i2___ftge+2,f,c
 20953  005478  2A07               	incf	??i2___ftge,f,c
 20954  00547A  0E00               	movlw	0
 20955  00547C  2208               	addwfc	??i2___ftge+1,f,c
 20956  00547E  2209               	addwfc	??i2___ftge+2,f,c
 20957  005480  0E00               	movlw	0
 20958  005482  2407               	addwf	??i2___ftge,w,c
 20959  005484  6E04               	movwf	i2___ftge@ff2,c
 20960  005486  0E00               	movlw	0
 20961  005488  2008               	addwfc	??i2___ftge+1,w,c
 20962  00548A  6E05               	movwf	i2___ftge@ff2+1,c
 20963  00548C  0E80               	movlw	128
 20964  00548E  2009               	addwfc	??i2___ftge+2,w,c
 20965  005490  6E06               	movwf	i2___ftge@ff2+2,c
 20966  005492                     i2l5008:
 20967  005492  0E00               	movlw	0
 20968  005494  1A01               	xorwf	i2___ftge@ff1,f,c
 20969  005496  0E00               	movlw	0
 20970  005498  1A02               	xorwf	i2___ftge@ff1+1,f,c
 20971  00549A  0E80               	movlw	128
 20972  00549C  1A03               	xorwf	i2___ftge@ff1+2,f,c
 20973  00549E  0E00               	movlw	0
 20974  0054A0  1A04               	xorwf	i2___ftge@ff2,f,c
 20975  0054A2  0E00               	movlw	0
 20976  0054A4  1A05               	xorwf	i2___ftge@ff2+1,f,c
 20977  0054A6  0E80               	movlw	128
 20978  0054A8  1A06               	xorwf	i2___ftge@ff2+2,f,c
 20979  0054AA  5004               	movf	i2___ftge@ff2,w,c
 20980  0054AC  5C01               	subwf	i2___ftge@ff1,w,c
 20981  0054AE  5005               	movf	i2___ftge@ff2+1,w,c
 20982  0054B0  5802               	subwfb	i2___ftge@ff1+1,w,c
 20983  0054B2  5006               	movf	i2___ftge@ff2+2,w,c
 20984  0054B4  5803               	subwfb	i2___ftge@ff1+2,w,c
 20985  0054B6  B0D8               	btfsc	status,0,c
 20986  0054B8  D002               	goto	i2l5014
 20987  0054BA  90D8               	bcf	status,0,c
 20988  0054BC  0012               	return	
 20989  0054BE                     i2l5014:
 20990  0054BE  80D8               	bsf	status,0,c
 20991  0054C0  0012               	return	
 20992  0054C2                     __end_ofi2___ftge:
 20993                           	opt stack 0
 20994                           pclatu	equ	0xFFB
 20995                           pclath	equ	0xFFA
 20996                           tblptru	equ	0xFF8
 20997                           tblptrh	equ	0xFF7
 20998                           tblptrl	equ	0xFF6
 20999                           tablat	equ	0xFF5
 21000                           prodh	equ	0xFF4
 21001                           prodl	equ	0xFF3
 21002                           intcon	equ	0xFF2
 21003                           intcon2	equ	0xFF1
 21004                           postinc0	equ	0xFEE
 21005                           fsr0h	equ	0xFEA
 21006                           fsr0l	equ	0xFE9
 21007                           wreg	equ	0xFE8
 21008                           fsr1h	equ	0xFE2
 21009                           fsr1l	equ	0xFE1
 21010                           indf2	equ	0xFDF
 21011                           postinc2	equ	0xFDE
 21012                           postdec2	equ	0xFDD
 21013                           fsr2h	equ	0xFDA
 21014                           fsr2l	equ	0xFD9
 21015                           status	equ	0xFD8
 21016                           
 21017 ;; *************** function i2_initLCD *****************
 21018 ;; Defined at:
 21019 ;;		line 14 in file "lcd.c"
 21020 ;; Parameters:    Size  Location     Type
 21021 ;;		None
 21022 ;; Auto vars:     Size  Location     Type
 21023 ;;		None
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1    wreg      void 
 21026 ;; Registers used:
 21027 ;;		wreg, status,2, status,0, cstack
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/0
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21037 ;;Total ram usage:        1 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; Hardware stack levels required when called:    2
 21040 ;; This function calls:
 21041 ;;		i2_lcdInst
 21042 ;; This function is called by:
 21043 ;;		_servo_ISR_1
 21044 ;;		_servo_ISR_3
 21045 ;; This function uses a non-reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text70
 21049  005BEA                     __ptext70:
 21050                           	opt stack 0
 21051  005BEA                     i2_initLCD:
 21052                           	opt stack 22
 21053                           
 21054                           ;lcd.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
 21055                           
 21056                           ;incstack = 0
 21057  005BEA  0E27               	movlw	39
 21058  005BEC  6E04               	movwf	??i2_initLCD& (0+255),c
 21059  005BEE  0EF5               	movlw	245
 21060  005BF0                     i2u956_47:
 21061  005BF0  2EE8               	decfsz	wreg,f,c
 21062  005BF2  D7FE               	bra	i2u956_47
 21063  005BF4  2E04               	decfsz	??i2_initLCD& (0+255),f,c
 21064  005BF6  D7FC               	bra	i2u956_47
 21065  005BF8  F000               	nop	
 21066                           
 21067                           ;lcd.c: 16: lcdInst(0b00110011);
 21068  005BFA  0E33               	movlw	51
 21069  005BFC  EC8E  F02F         	call	i2_lcdInst
 21070                           
 21071                           ;lcd.c: 17: lcdInst(0b00110010);
 21072  005C00  0E32               	movlw	50
 21073  005C02  EC8E  F02F         	call	i2_lcdInst
 21074                           
 21075                           ;lcd.c: 18: lcdInst(0b00101000);
 21076  005C06  0E28               	movlw	40
 21077  005C08  EC8E  F02F         	call	i2_lcdInst
 21078                           
 21079                           ;lcd.c: 19: lcdInst(0b00001111);
 21080  005C0C  0E0F               	movlw	15
 21081  005C0E  EC8E  F02F         	call	i2_lcdInst
 21082                           
 21083                           ;lcd.c: 20: lcdInst(0b00000110);
 21084  005C12  0E06               	movlw	6
 21085  005C14  EC8E  F02F         	call	i2_lcdInst
 21086                           
 21087                           ;lcd.c: 21: lcdInst(0b00000001);
 21088  005C18  0E01               	movlw	1
 21089  005C1A  EC8E  F02F         	call	i2_lcdInst
 21090                           
 21091                           ;lcd.c: 22: _delay((unsigned long)((15)*(8000000/4000.0)));
 21092  005C1E  0E27               	movlw	39
 21093  005C20  6E04               	movwf	??i2_initLCD& (0+255),c
 21094  005C22  0EF5               	movlw	245
 21095  005C24                     i2u957_47:
 21096  005C24  2EE8               	decfsz	wreg,f,c
 21097  005C26  D7FE               	bra	i2u957_47
 21098  005C28  2E04               	decfsz	??i2_initLCD& (0+255),f,c
 21099  005C2A  D7FC               	bra	i2u957_47
 21100  005C2C  F000               	nop	
 21101  005C2E  0012               	return		;funcret
 21102  005C30                     __end_ofi2_initLCD:
 21103                           	opt stack 0
 21104                           pclatu	equ	0xFFB
 21105                           pclath	equ	0xFFA
 21106                           tblptru	equ	0xFF8
 21107                           tblptrh	equ	0xFF7
 21108                           tblptrl	equ	0xFF6
 21109                           tablat	equ	0xFF5
 21110                           prodh	equ	0xFF4
 21111                           prodl	equ	0xFF3
 21112                           intcon	equ	0xFF2
 21113                           intcon2	equ	0xFF1
 21114                           postinc0	equ	0xFEE
 21115                           fsr0h	equ	0xFEA
 21116                           fsr0l	equ	0xFE9
 21117                           wreg	equ	0xFE8
 21118                           fsr1h	equ	0xFE2
 21119                           fsr1l	equ	0xFE1
 21120                           indf2	equ	0xFDF
 21121                           postinc2	equ	0xFDE
 21122                           postdec2	equ	0xFDD
 21123                           fsr2h	equ	0xFDA
 21124                           fsr2l	equ	0xFD9
 21125                           status	equ	0xFD8
 21126                           
 21127 ;; *************** function i2_lcdInst *****************
 21128 ;; Defined at:
 21129 ;;		line 25 in file "lcd.c"
 21130 ;; Parameters:    Size  Location     Type
 21131 ;;  data            1    wreg     unsigned char 
 21132 ;; Auto vars:     Size  Location     Type
 21133 ;;  data            1    2[COMRAM] unsigned char 
 21134 ;; Return value:  Size  Location     Type
 21135 ;;                  1    wreg      void 
 21136 ;; Registers used:
 21137 ;;		wreg, status,2, status,0, cstack
 21138 ;; Tracked objects:
 21139 ;;		On entry : 0/0
 21140 ;;		On exit  : 0/0
 21141 ;;		Unchanged: 0/0
 21142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21147 ;;Total ram usage:        1 bytes
 21148 ;; Hardware stack levels used:    1
 21149 ;; Hardware stack levels required when called:    1
 21150 ;; This function calls:
 21151 ;;		i2_lcdNibble
 21152 ;; This function is called by:
 21153 ;;		i2_initLCD
 21154 ;; This function uses a non-reentrant model
 21155 ;;
 21156                           
 21157                           	psect	text71
 21158  005F1C                     __ptext71:
 21159                           	opt stack 0
 21160  005F1C                     i2_lcdInst:
 21161                           	opt stack 22
 21162                           
 21163                           ;incstack = 0
 21164                           ;i2lcdInst@data stored from wreg
 21165  005F1C  6E03               	movwf	i2lcdInst@data,c
 21166                           
 21167                           ;lcd.c: 26: LATDbits.LATD2 = 0;
 21168  005F1E  948C               	bcf	3980,2,c	;volatile
 21169                           
 21170                           ;lcd.c: 27: lcdNibble(data);
 21171  005F20  5003               	movf	i2lcdInst@data,w,c
 21172  005F22  EC81  F02D         	call	i2_lcdNibble
 21173  005F26  0012               	return		;funcret
 21174  005F28                     __end_ofi2_lcdInst:
 21175                           	opt stack 0
 21176                           pclatu	equ	0xFFB
 21177                           pclath	equ	0xFFA
 21178                           tblptru	equ	0xFF8
 21179                           tblptrh	equ	0xFF7
 21180                           tblptrl	equ	0xFF6
 21181                           tablat	equ	0xFF5
 21182                           prodh	equ	0xFF4
 21183                           prodl	equ	0xFF3
 21184                           intcon	equ	0xFF2
 21185                           intcon2	equ	0xFF1
 21186                           postinc0	equ	0xFEE
 21187                           fsr0h	equ	0xFEA
 21188                           fsr0l	equ	0xFE9
 21189                           wreg	equ	0xFE8
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           postdec2	equ	0xFDD
 21195                           fsr2h	equ	0xFDA
 21196                           fsr2l	equ	0xFD9
 21197                           status	equ	0xFD8
 21198                           
 21199 ;; *************** function i2_lcdNibble *****************
 21200 ;; Defined at:
 21201 ;;		line 35 in file "lcd.c"
 21202 ;; Parameters:    Size  Location     Type
 21203 ;;  data            1    wreg     unsigned char 
 21204 ;; Auto vars:     Size  Location     Type
 21205 ;;  data            1    1[COMRAM] unsigned char 
 21206 ;;  lcdNibble       1    0[COMRAM] unsigned char 
 21207 ;; Return value:  Size  Location     Type
 21208 ;;                  1    wreg      void 
 21209 ;; Registers used:
 21210 ;;		wreg, status,2, status,0
 21211 ;; Tracked objects:
 21212 ;;		On entry : 0/0
 21213 ;;		On exit  : 0/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21220 ;;Total ram usage:        2 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; This function calls:
 21223 ;;		Nothing
 21224 ;; This function is called by:
 21225 ;;		i2_lcdInst
 21226 ;;		i2_putch
 21227 ;; This function uses a non-reentrant model
 21228 ;;
 21229                           
 21230                           	psect	text72
 21231  005B02                     __ptext72:
 21232                           	opt stack 0
 21233  005B02                     i2_lcdNibble:
 21234                           	opt stack 22
 21235                           
 21236                           ;incstack = 0
 21237                           ;i2lcdNibble@data stored from wreg
 21238  005B02  6E02               	movwf	i2lcdNibble@data,c
 21239                           
 21240                           ;lcd.c: 37: char temp = data & 0xF0;
 21241  005B04  5002               	movf	i2lcdNibble@data,w,c
 21242  005B06  0BF0               	andlw	240
 21243  005B08  6E01               	movwf	i2lcdNibble@temp,c
 21244                           
 21245                           ;lcd.c: 38: LATD = LATD & 0x0F;
 21246  005B0A  508C               	movf	3980,w,c	;volatile
 21247  005B0C  0B0F               	andlw	15
 21248  005B0E  6E8C               	movwf	3980,c	;volatile
 21249                           
 21250                           ;lcd.c: 39: LATD = temp | LATD;
 21251  005B10  5001               	movf	i2lcdNibble@temp,w,c
 21252  005B12  108C               	iorwf	3980,w,c	;volatile
 21253  005B14  6E8C               	movwf	3980,c	;volatile
 21254                           
 21255                           ;lcd.c: 41: LATDbits.LATD3 = 0;
 21256  005B16  968C               	bcf	3980,3,c	;volatile
 21257                           
 21258                           ;lcd.c: 42: _delay((unsigned long)((25)*(8000000/4000000.0)));
 21259  005B18  0E10               	movlw	16
 21260  005B1A                     i2u958_47:
 21261  005B1A  2EE8               	decfsz	wreg,f,c
 21262  005B1C  D7FE               	bra	i2u958_47
 21263  005B1E  D000               	nop2	
 21264                           
 21265                           ;lcd.c: 43: LATDbits.LATD3 = 1;
 21266  005B20  868C               	bsf	3980,3,c	;volatile
 21267                           
 21268                           ;lcd.c: 44: _delay((unsigned long)((25)*(8000000/4000000.0)));
 21269  005B22  0E10               	movlw	16
 21270  005B24                     i2u959_47:
 21271  005B24  2EE8               	decfsz	wreg,f,c
 21272  005B26  D7FE               	bra	i2u959_47
 21273  005B28  D000               	nop2	
 21274                           
 21275                           ;lcd.c: 46: data = data << 4;
 21276  005B2A  3802               	swapf	i2lcdNibble@data,w,c
 21277  005B2C  0BF0               	andlw	240
 21278  005B2E  6E02               	movwf	i2lcdNibble@data,c
 21279                           
 21280                           ;lcd.c: 48: temp = data & 0xF0;
 21281  005B30  5002               	movf	i2lcdNibble@data,w,c
 21282  005B32  0BF0               	andlw	240
 21283  005B34  6E01               	movwf	i2lcdNibble@temp,c
 21284                           
 21285                           ;lcd.c: 49: LATD = LATD & 0x0F;
 21286  005B36  508C               	movf	3980,w,c	;volatile
 21287  005B38  0B0F               	andlw	15
 21288  005B3A  6E8C               	movwf	3980,c	;volatile
 21289                           
 21290                           ;lcd.c: 50: LATD = temp | LATD;
 21291  005B3C  5001               	movf	i2lcdNibble@temp,w,c
 21292  005B3E  108C               	iorwf	3980,w,c	;volatile
 21293  005B40  6E8C               	movwf	3980,c	;volatile
 21294                           
 21295                           ;lcd.c: 52: LATDbits.LATD3 = 0;
 21296  005B42  968C               	bcf	3980,3,c	;volatile
 21297                           
 21298                           ;lcd.c: 53: _delay((unsigned long)((25)*(8000000/4000000.0)));
 21299  005B44  0E10               	movlw	16
 21300  005B46                     i2u960_47:
 21301  005B46  2EE8               	decfsz	wreg,f,c
 21302  005B48  D7FE               	bra	i2u960_47
 21303  005B4A  D000               	nop2	
 21304                           
 21305                           ;lcd.c: 54: LATDbits.LATD3 = 1;
 21306  005B4C  868C               	bsf	3980,3,c	;volatile
 21307                           
 21308                           ;lcd.c: 55: _delay((unsigned long)((25)*(8000000/4000000.0)));
 21309  005B4E  0E10               	movlw	16
 21310  005B50                     i2u961_47:
 21311  005B50  2EE8               	decfsz	wreg,f,c
 21312  005B52  D7FE               	bra	i2u961_47
 21313  005B54  D000               	nop2	
 21314  005B56  0012               	return		;funcret
 21315  005B58                     __end_ofi2_lcdNibble:
 21316                           	opt stack 0
 21317                           pclatu	equ	0xFFB
 21318                           pclath	equ	0xFFA
 21319                           tblptru	equ	0xFF8
 21320                           tblptrh	equ	0xFF7
 21321                           tblptrl	equ	0xFF6
 21322                           tablat	equ	0xFF5
 21323                           prodh	equ	0xFF4
 21324                           prodl	equ	0xFF3
 21325                           intcon	equ	0xFF2
 21326                           intcon2	equ	0xFF1
 21327                           postinc0	equ	0xFEE
 21328                           fsr0h	equ	0xFEA
 21329                           fsr0l	equ	0xFE9
 21330                           wreg	equ	0xFE8
 21331                           fsr1h	equ	0xFE2
 21332                           fsr1l	equ	0xFE1
 21333                           indf2	equ	0xFDF
 21334                           postinc2	equ	0xFDE
 21335                           postdec2	equ	0xFDD
 21336                           fsr2h	equ	0xFDA
 21337                           fsr2l	equ	0xFD9
 21338                           status	equ	0xFD8
 21339                           pclatu	equ	0xFFB
 21340                           pclath	equ	0xFFA
 21341                           tblptru	equ	0xFF8
 21342                           tblptrh	equ	0xFF7
 21343                           tblptrl	equ	0xFF6
 21344                           tablat	equ	0xFF5
 21345                           prodh	equ	0xFF4
 21346                           prodl	equ	0xFF3
 21347                           intcon	equ	0xFF2
 21348                           intcon2	equ	0xFF1
 21349                           postinc0	equ	0xFEE
 21350                           fsr0h	equ	0xFEA
 21351                           fsr0l	equ	0xFE9
 21352                           wreg	equ	0xFE8
 21353                           fsr1h	equ	0xFE2
 21354                           fsr1l	equ	0xFE1
 21355                           indf2	equ	0xFDF
 21356                           postinc2	equ	0xFDE
 21357                           postdec2	equ	0xFDD
 21358                           fsr2h	equ	0xFDA
 21359                           fsr2l	equ	0xFD9
 21360                           status	equ	0xFD8
 21361                           
 21362                           	psect	rparam
 21363  0000                     pclatu	equ	0xFFB
 21364                           pclath	equ	0xFFA
 21365                           tblptru	equ	0xFF8
 21366                           tblptrh	equ	0xFF7
 21367                           tblptrl	equ	0xFF6
 21368                           tablat	equ	0xFF5
 21369                           prodh	equ	0xFF4
 21370                           prodl	equ	0xFF3
 21371                           intcon	equ	0xFF2
 21372                           intcon2	equ	0xFF1
 21373                           postinc0	equ	0xFEE
 21374                           fsr0h	equ	0xFEA
 21375                           fsr0l	equ	0xFE9
 21376                           wreg	equ	0xFE8
 21377                           fsr1h	equ	0xFE2
 21378                           fsr1l	equ	0xFE1
 21379                           indf2	equ	0xFDF
 21380                           postinc2	equ	0xFDE
 21381                           postdec2	equ	0xFDD
 21382                           fsr2h	equ	0xFDA
 21383                           fsr2l	equ	0xFD9
 21384                           status	equ	0xFD8
 21385                           
 21386                           	psect	temp
 21387  00007F                     btemp:
 21388                           	opt stack 0
 21389  00007F                     	ds	1
 21390  0000                     int$flags	set	btemp
 21391                           pclatu	equ	0xFFB
 21392                           pclath	equ	0xFFA
 21393                           tblptru	equ	0xFF8
 21394                           tblptrh	equ	0xFF7
 21395                           tblptrl	equ	0xFF6
 21396                           tablat	equ	0xFF5
 21397                           prodh	equ	0xFF4
 21398                           prodl	equ	0xFF3
 21399                           intcon	equ	0xFF2
 21400                           intcon2	equ	0xFF1
 21401                           postinc0	equ	0xFEE
 21402                           fsr0h	equ	0xFEA
 21403                           fsr0l	equ	0xFE9
 21404                           wreg	equ	0xFE8
 21405                           fsr1h	equ	0xFE2
 21406                           fsr1l	equ	0xFE1
 21407                           indf2	equ	0xFDF
 21408                           postinc2	equ	0xFDE
 21409                           postdec2	equ	0xFDD
 21410                           fsr2h	equ	0xFDA
 21411                           fsr2l	equ	0xFD9
 21412                           status	equ	0xFD8


Data Sizes:
    Strings     191
    Constant    174
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     126
    BANK0           128    105     114
    BANK1           256     51      94
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_27(CODE[6]), STR_26(CODE[7]), STR_25(CODE[7]), STR_24(CODE[8]), 
		 -> STR_23(CODE[11]), STR_22(CODE[9]), STR_21(CODE[10]), STR_20(CODE[12]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[7]), STR_16(CODE[5]), 
		 -> STR_15(CODE[12]), STR_14(CODE[8]), STR_13(CODE[11]), STR_12(CODE[9]), 
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[5]), STR_8(CODE[9]), 
		 -> STR_7(CODE[5]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[7]), 
		 -> STR_3(CODE[16]), STR_2(CODE[8]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _IRQ in COMRAM

    _IRQ->_servo_ISR_1
    _IRQ->_servo_ISR_3
    _servo_ISR_3->i2_printf
    i2_set_external_interrupt3->i2___awdiv
    _servo_ISR_1->i2_printf
    i2_set_external_interrupt1->i2___awdiv
    i2_readADC->i2_abs
    i2_abs->i2___ftadd
    i2___lwtoft->i2___ftpack
    i2___ftdiv->i2___ftmul
    i2_printf->i2___ftsub
    i2_scale->i2___ftmul
    i2_putch->i2_lcdNibble
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___wmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    _main->_printf
    _set_external_interrupt3->___awdiv
    _set_external_interrupt1->___awdiv
    _readADC->_abs
    _abs->___ftadd
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    _printf->___ftsub
    _scale->___ftmul
    _putch->_lcdNibble
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _IRQ in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRQ in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRQ in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRQ in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IRQ in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IRQ in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IRQ in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IRQ in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IRQ in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IRQ in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IRQ in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IRQ in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IRQ in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IRQ in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IRQ in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IRQ in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   82252
                                            103 BANK0      2     2      0
                                              0 BANK1     51    51      0
                    _Eeprom_ReadByte
                   _Eeprom_WriteByte
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___ftge
                 _delay_1s_interrupt
                            _initLCD
                            _lcdInst
                             _printf
                            _readADC
            _set_external_interrupt1
            _set_external_interrupt3
 ---------------------------------------------------------------------------------
 (1) _set_external_interrupt3                              4     2      2    2760
                                             14 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _set_external_interrupt1                              4     2      2    3026
                                             14 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _readADC                                             11     8      3   19838
                                             60 BANK0     11     8      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                                _abs
                               _read
 ---------------------------------------------------------------------------------
 (2) _read                                                 2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  3     0      3    6303
                                             57 BANK0      3     0      3
                            ___ftadd (ARG)
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2195
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2747
                                             35 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _printf                                              46    38      8   48882
                                             63 BANK0     40    32      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10847
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   10649
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2337
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4737
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1836
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     591
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2242
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     444
                                             42 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3860
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3563
                                             45 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1436
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                              3 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay_1s_interrupt                                   7     5      2      46
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     790
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     888
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     802
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Eeprom_WriteByte                                     4     3      1     962
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Eeprom_ReadByte                                      3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _IRQ                                                 14    14      0   70083
                                            102 COMRAM    14    14      0
                        _servo_ISR_1
                        _servo_ISR_3
 ---------------------------------------------------------------------------------
 (6) _servo_ISR_3                                          2     2      0   34009
                                            100 COMRAM     2     2      0
                           i2___ftge
                          i2_initLCD
                           i2_printf
                          i2_readADC
          i2_set_external_interrupt3
 ---------------------------------------------------------------------------------
 (7) i2_set_external_interrupt3                            4     2      2    1504
                                             14 COMRAM     4     2      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (6) _servo_ISR_1                                          2     2      0   36074
                                            100 COMRAM     2     2      0
                           i2___ftge
                          i2___ftmul
                          i2_initLCD
                           i2_printf
                          i2_readADC
          i2_set_external_interrupt1
 ---------------------------------------------------------------------------------
 (7) i2_set_external_interrupt1                            4     2      2    1686
                                             14 COMRAM     4     2      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (7) i2_readADC                                           11     8      3    8202
                                             60 COMRAM    11     8      3
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                         i2___lwtoft
                              i2_abs
                             i2_read
 ---------------------------------------------------------------------------------
 (8) i2_read                                               2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_abs                                                3     0      3    2683
                                             57 COMRAM     3     0      3
                          i2___ftadd (ARG)
                           i2___ftge
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (8) i2___lwtoft                                           3     0      3     669
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6    1005
                                             35 COMRAM    15     9      6
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2_printf                                            43    38      5   23460
                                             63 COMRAM    37    32      5
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (8) i2_scale                                             13    10      3    5101
                                             35 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2_fround                                            16    13      3    4903
                                             35 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4    1041
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___ftmul                                           15     9      6    1883
                                             20 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     924
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2__tdiv_to_l_                                       15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (8) i2__div_to_l_                                        12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (8) i2___lltoft                                           9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2___llmod                                            9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___lldiv                                           13     5      8     370
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) i2___fttol                                           15    11      4     330
                                             42 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftsub                                            6     0      6    1788
                                             57 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    1669
                                             45 COMRAM    12     6      6
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) i2___ftneg                                            3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (9) i2___ftge                                             9     3      6     708
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (8) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (9) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eeprom_ReadByte
   _Eeprom_WriteByte
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___ftge
   _delay_1s_interrupt
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _putch
       _lcdNibble
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _readADC
     ___ftadd
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _abs
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _read
   _set_external_interrupt1
     ___awdiv
       ___awmod (ARG)
   _set_external_interrupt3
     ___awdiv
       ___awmod (ARG)

 _IRQ (ROOT)
   _servo_ISR_1
     i2___ftge
     i2___ftmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2_initLCD
       i2_lcdInst
         i2_lcdNibble
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
       i2___ftsub
         i2___ftadd
           i2___ftpack
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_lcdNibble
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2_readADC
       i2___ftadd
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___lwtoft
         i2___ftpack
       i2_abs
         i2___ftadd (ARG)
           i2___ftpack
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftge (ARG)
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2_read
     i2_set_external_interrupt1
       i2___awdiv
         i2___awmod (ARG)
   _servo_ISR_3
     i2___ftge
     i2_initLCD
       i2_lcdInst
         i2_lcdNibble
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
       i2___ftsub
         i2___ftadd
           i2___ftpack
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_lcdNibble
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2_readADC
       i2___ftadd
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___lwtoft
         i2___ftpack
       i2_abs
         i2___ftadd (ARG)
           i2___ftpack
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftge (ARG)
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2_read
     i2_set_external_interrupt3
       i2___awdiv
         i2___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     33      5E       8       36.7%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     69      72       5       89.1%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14E       6        0.0%
DATA                 0      0     14E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Apr 10 05:24:24 2017

          __end_of_Eeprom_WriteByte 5C72                        ___awdiv@sign 008B  
               ___wmul@multiplicand 0090                         __CFG_BORV$3 000000  
           main@count_seconds_final 0128                          i2___ftpack 51B6  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_OSC$HS 000000                        ___ftadd@exp1 00B8  
                      ___ftadd@exp2 00B7                          i2___lltoft 599E  
                      ___ftadd@sign 00B6                                 l200 05C0  
                               l230 0C68                                 l223 0BA8  
                               l233 0C6C                                 l226 0BB6  
                               l172 02EA                                 l190 043C  
                               l178 02F8                                 l187 05CA  
                               l712 5EDC                                 l803 15C8  
                               l740 57AC                                 l673 5C68  
                               l842 1448                                 l667 5D44  
                        i2___lwtoft 5E76                        __CFG_CPB$OFF 000000  
                               _PEN 007E2A                                 _IRQ 0008  
                      __CFG_CPD$OFF 000000                                 _SEN 007E28  
                               _abs 5872                        ___awmod@sign 0085  
                               prod 000FF3                 delay_1s_interrupt@i 0086  
               delay_1s_interrupt@n 0085                                 wreg 000FE8  
                      __CFG_LVP$OFF 000000                                ?_IRQ 0001  
                      ___ftdiv@cntr 00AC                        ___ftdiv@sign 00B1  
                      __CFG_WDT$OFF 000000                                ?_abs 00B9  
                              l1150 39B6                                l1127 4C72  
                              l1224 5D6E                                l1154 39F0  
                              l1156 3A18                                l1165 3AEE  
                              l1174 3B18                                l1095 42BC  
                              l1192 4070                                l1193 40B4  
                              l1185 469C                                l1274 51A4  
                              l1284 538E                                l1199 4134  
                              l5110 3A0E                                l5120 3A50  
                              l5104 39FE                                l5200 43EC  
                              l5130 3A9A                                l6004 5128  
                              l5140 3AE2                                l5132 3AA6  
                              l6006 5138                                l5302 5038  
                              l5126 3A7E                                l5230 5098  
                              l5222 506E                                l6016 5192  
                              l6008 513E                                l5128 3A8C  
                              l6032 537C                                l6024 5322  
                              l6040 55E0                                l5240 50CE  
                              l5232 509E                                l5216 5058  
                              l5146 3B42                                l5138 3AD4  
                              l6026 5332                                l5156 3B90  
                              l6028 5338                                l5228 508C  
                              l5244 50DC                                l5260 5280  
                              l5172 4342                                l6038 55D0  
                              l5270 52B0                                l5190 43AE  
                              l5166 4308                                l4800 4BD6  
                              l5248 50F0                                l5272 52B6  
                              l5280 52E8                                l5264 5290  
                              l4810 4C64                                l4802 4C06  
                              l5098 39C4                                l5186 4390  
                              l5292 4FB4                                l5284 52FC  
                              l5276 52DA                                l5268 52A4  
                              l5196 43CE                                l6500 0E90  
                              l4822 4C98                                l4806 4C26  
                              l6502 0ECA                                l5296 4FF4  
                              l4816 4C7C                                l4808 4C56  
                              l6602 12FE                                l5820 40EA  
                              l5724 3906                                l5716 3822  
                              l6612 1330                                l6540 1046  
                              l6532 0FD6                                l6516 0F24  
                              l5900 45C0                                l6462 5DA2  
                              l5830 411A                                l6630 1416  
                              l6614 1344                                l6606 130C  
                              l6550 10D0                                l6470 0DA6  
                              l5840 416C                                l5832 412A  
                              l5824 40FE                                l5744 2BF0  
                              l6712 171C                                l6704 16D6  
                              l6632 142A                                l6608 1322  
                              l6624 13FA                                l6560 1148  
                              l6544 1074                                l6480 0DDC  
                              _ADFM 007E07                                l4794 4BB4  
                              l5762 2E40                                l5738 2B2A  
                              l6730 17A6                                l6706 16E8  
                              l6642 1470                                l6626 1408  
                              l6618 136C                                l6570 11A6  
                              l6546 108A                                l6474 0DBC  
                              l5906 45FA                                l5860 41E6  
                              l5756 2D7A                                l5748 2C16  
                              l6732 17B2                                l6740 17F2  
                              l6724 178A                                l6716 1754  
                              l6652 159E                                l6636 144C  
                              l6556 111A                                l6548 10BA  
                              l6476 0DD2                                l5684 58A8  
                              l6812 4448                                l7540 007C  
                              l4798 4BC8                                l5846 4192  
                              l5790 401C                                l5774 5E20  
                              l6742 1802                                l6750 18FC  
                              l6718 175E                                l6670 1614  
                              l6654 15AC                                l6646 14C2  
                              l6574 120C                                l6494 0E84  
                              l6486 0E0C                                l5926 465A  
                              l5694 5DBE                                l6806 56AE  
                              l7614 0416                                l7550 022A  
                              l7542 01E4                                l5944 5B7A  
                              l5880 4272                                l5784 3FE2  
                              l6744 1886                                l6752 190E  
                              l6736 17CC                                l6592 12A8  
                              l6576 1212                                l6496 0E8A  
                              l5696 5DD0                                l6824 4496  
                              l6816 4452                                l7800 096A  
                              l7704 0632                                l7640 04B2  
                              l7632 0490                                l5890 42A2  
                              l6754 1916                                l6690 1690  
                              l6674 163E                                l6658 15BA  
                              l6834 453A                                l7810 0992  
                              l7714 065C                                l7650 04DA  
                              l7642 04B8                                l7546 0220  
                              l6764 57BC                                l5980 47B2  
                              l5892 42B2                                l5884 4286  
                              l5868 423A                                l6676 1644  
                              l6596 12D0                                l6588 1258  
                              l6756 192C                                l6836 4578  
                              l7804 0974                                l7732 06D2  
                              l7708 063C                                l7636 049A  
                              l7580 0368                                l7572 02EE  
                              l7556 024A                                l5990 47E8  
                              l5958 470C                                l7814 099C  
                              l7734 06D8                                l7646 04C2  
                              l7590 0392                                l6768 57D2  
                              l5976 479E                                l6688 168A  
                              l7832 0A30                                l7824 0A0E  
                              l7808 098C                                l7672 0596  
                              l7664 0558                                l7584 0372  
                              l5994 4804                                l5986 47CE  
                              l7834 0A36                                l7818 09B4  
                              l7770 08B0                                l7738 06E2  
                              l7674 059C                                l7842 0A5A  
                              l5988 47DE                                l6788 5724  
                              l7828 0A18                                l7780 08D8  
                              _ADON 007E10                                l7846 0AD0  
                              l7838 0A42                                l7774 08BA  
                              l7758 07E4                                l7678 05AC  
                              l7872 0C70                                l7784 08E2  
                              l7778 08D2                                l7884 0D66  
                              l7788 08FA                                l7878 0CEA  
             __size_ofi2__div_to_l_ 0128                                STR_1 FC50  
                              STR_2 FCCF                                STR_3 FC60  
                              STR_4 FCEC                                STR_5 FC70  
                              STR_6 FC97                                STR_7 FCB0  
                              STR_8 FCBE                                STR_9 FCB0  
                              _LATA 000F89                                _LATB 000F8A  
                              _LATC 000F8B                                _LATD 000F8C  
                              _LATE 000F8D                        printf@tmpval 00D5  
                              u5251 3964                                _PEIE 007F96  
                              u5261 3982                                u6311 3FF8  
                              u7300 5DA0                                _RCEN 007E2B  
                              u5461 42E4                                u6521 46E8  
                              u5481 431E                                u6291 3FBE  
                              u6451 459C                                u6540 4732  
                              u6471 45D6                                u7600 1440  
                              u6545 4728                                u7380 0F6A  
                              u7295 596E                                u7385 0F5E  
                              u9407 097C                                u9327 044E  
                              u9417 09A4                                u9337 0464  
                              u9507 586A                                u9427 0A20  
                              u9347 047C                                u9517 57C4  
                              u9437 0A4A                                u9357 04A2  
                              u9447 5DC6                                u9367 04CA  
                              u9457 5BAC                                u9377 04E8  
                              u9467 5BE0                                u9387 08C2  
                              u7965 5D28                                u9477 582A  
                              u9397 08EA                                u9487 5834  
                              u7985 5C3E                                u9497 5860  
                              _RSEN 007E29                         main@past_AA 010C  
                       main@past_9V 010D                                _isr1 00F1  
                              _isr3 00F0                                _main 0012  
                      ___ftpack@arg 0080                                _read 5DAA  
                              _keys FC27                        ___ftpack@exp 0083  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 007F  
                      i2___ftadd@f1 002E                        i2___ftadd@f2 0031  
                      i2___ftge@ff1 0001                        i2___ftge@ff2 0004  
                              prodh 000FF4                                prodl 000FF3  
                              start 000E                       __CFG_IESO$OFF 000000  
                      i2___ftdiv@f1 0024                        i2___ftdiv@f2 0027  
                      i2___ftdiv@f3 002E                         _volt_check1 0152  
                       _volt_check3 0151                     __end_ofi2_scale 36A2  
                main@flag_interrupt 0110                        i2___ftneg@f1 0001  
                   __end_ofi2_putch 5F1C                       __CFG_MCLRE$ON 000000  
                      ___ftmul@cntr 00A1                        i2___ftmul@f1 0015  
                      i2___ftmul@f2 0018                        ___param_bank 000000  
                      ___ftmul@sign 00A2         __size_of_delay_1s_interrupt 006A  
                      i2___ftsub@f1 003A                        i2___ftsub@f2 003D  
                      i2___fttol@f1 002B                         i2_lcdNibble 5B02  
                             ??_IRQ 0067                        ___fttol@exp1 00B8  
                             ??_abs 00BC                        i2___lltoft@c 0009  
                      ___fttol@lval 00B4                    ?_I2C_Master_Init 008D  
                  ?_I2C_Master_Read 0001                    ?_I2C_Master_Wait 0001  
                      main@eeprom_C 0106                    ?_I2C_Master_Stop 0001  
                             ?_main 0001                               _ACKEN 007E2C  
                             _ACKDT 007E2D                               ?_read 0001  
                   __end_of___awdiv 50FA                               _ADRES 000FC3  
                             _EEADR 000FA9                     __end_of___ftadd 3BB6  
                             STR_10 FCB5                               STR_11 FCA2  
                             STR_20 FC80                               STR_12 FCAC  
                             STR_21 FCA2                               STR_13 FC8C  
                             STR_22 FCAC                               STR_14 FCC7  
                             STR_23 FC8C                               STR_15 FC80  
                             STR_16 FCB0                               STR_24 FCC7  
                             STR_17 FCE5                               STR_25 FCD7  
                             STR_18 FCB0                               STR_26 FCDE  
                             STR_19 FCF9                               STR_27 FCF3  
                             STR_28 FC3F                     __end_of___awmod 5306  
                   __end_of___ftdiv 46D2                     __end_of___ftneg 5D7C  
                        i2readADC@a 0044                        i2___lwtoft@c 0009  
                        i2readADC@i 0043                     __end_of___lldiv 51B6  
                   __end_of___ftmul 442C                     ___awdiv@divisor 0088  
                             _T1CON 000FCD                     __end_of___llmod 53A0  
                   __end_of___ftsub 5BA4                     __end_of___fttol 4816  
                             _T3CON 000FB1                               i2l251 53EC  
                             i2l252 53F6                               i2l430 2E8C  
                             i2l426 2E6E                               i2l363 230A  
                             i2l367 232A                               i2l803 202C  
                             i2l842 1ECC                     ___awdiv@counter 008A  
                             _TMR1H 000FCF                               _TMR1L 000FCE  
                             _TMR3H 000FB3                               _TMR3L 000FB2  
                             _PORTB 000F81                        i2__div_to_l_ 4A72  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TRISE 000F96                               i2_abs 5AAA  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                        ___lltoft@exp 0090  
                   __end_of_lcdInst 5F10                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                        main@keypress 012B  
                    __CFG_EBTR3$OFF 000000                               _nRBPU 007F8F  
                      main@past_min 0109                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                   __end_of_readADC 4586                     __end_of_initLCD 5BEA  
                    __CFG_EBTRB$OFF 000000                          i2isdigit@c 0003  
                       readADC@volt 00BF                     __end_of_dpowers FBB9  
                             _init1 0155                               _init3 0154  
                  ?_Eeprom_ReadByte 0001                          i2scale@scl 002A  
                             _scale 29B8    __size_of_set_external_interrupt1 0076  
  __size_of_set_external_interrupt3 0076                     __end_of_isdigit 5E2A  
                     ___ftpack@sign 0084                   main@address_total 0131  
                             _putch 5EF0                               main@i 0119  
                             main@j 0122                               main@k 0123  
                             pclath 000FFA                               tablat 000FF5  
                  __end_ofi2___ftge 54C2                    __end_ofi2___wmul 5E76  
                             status 000FD8                    __end_ofi2_fround 3DFC  
                     i2___ftdiv@exp 0031                  __size_ofi2___awdiv 0084  
                __size_ofi2___ftadd 01AC                  __size_ofi2___awmod 0070  
                    __CFG_PBADEN$ON 000000                       i2printf@width 0057  
                __size_ofi2___ftdiv 00E6                  __size_ofi2___ftneg 0024  
                __size_ofi2___lldiv 0082                  __size_ofi2___ftmul 00F4  
                __size_ofi2___llmod 0066                  __size_ofi2___ftsub 0040  
                __size_ofi2___fttol 00F4                    __end_ofi2_printf 2302  
                     main@address_C 012F                     __initialization 5CE8  
                 i2___lldiv@divisor 0005                  __size_ofi2_lcdInst 000C  
                      __end_of_main 0D96                        __end_of_read 5DD6  
                 i2___lldiv@counter 000D                        __end_of_keys FC38  
                     i2___ftmul@exp 001E                          i2printf@ap 004F  
                __size_ofi2_readADC 012A                  __size_ofi2_initLCD 0046  
                __size_ofi2_isdigit 001E                       _count_drained 0145  
                       ?i2___ftpack 0001                         ?i2___lltoft 0009  
                            ??_main 00E7                       ___fttol@sign1 00B3  
                            ??_read 0080                         ?i2___lwtoft 0009  
                     __activetblptr 000002                __size_of__tdiv_to_l_ 019E  
                            ?i2_abs 003A                       main@eeprom_AA 0104  
                     main@eeprom_9V 0105                   ?_I2C_Master_Start 0001  
                 ?_I2C_Master_Write 0081                  ??_I2C_Master_Start 0081  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                ??_I2C_Master_Write 0083                    ___llmod@dividend 008D  
                            ?_scale 00A3                              _EEADRH 000FAA  
                            _EEDATA 000FA8                              _EECON2 000FA7  
                  ___awdiv@dividend 0086                     i2lcdNibble@data 0002  
                            ?_putch 0001                    __end_of___ftpack 4CA6  
                   i2lcdNibble@temp 0001                    __end_of___lltoft 5644  
                            _CVRCON 000FB5                              i2l1150 3E40  
                            i2l1127 5244                              i2l1224 5EB0  
                            i2l1154 3E6A                              i2l1165 3F1A  
                            i2l1174 3F36                              i2l1095 4B88  
                            i2l1192 48A8                              i2l1193 48D0  
                            i2l1185 4F42                              i2l1274 55B6  
                            i2l1284 592C                              i2l1199 4936  
                            i2l5004 5462                              i2l5014 54BE  
                            i2l5030 4CF6                              i2l5008 5492  
                            i2l5024 4CCE                       main@count_min 0129  
                            i2l5044 4D28                              i2l6100 49A2  
                            i2l5054 4D50                              i2l5310 5AD8  
                            i2l6110 4A2C                              i2l5048 4D38  
                            i2l5320 5E3A                              i2l6112 4A64  
                            i2l7000 2572                              i2l5058 4D60  
                            i2l6210 1BF2                              i2l6202 1B90  
                            i2l5322 5E4A                              i2l5404 4AAE  
                            i2l6212 1C02                              i2l6132 1958  
                            i2l7012 25CC                              i2l5510 486E  
                            i2l5350 3DBC                              i2l5342 3CFC  
                            i2l6222 1C5A                              i2l6206 1BB4  
                            i2l6142 1982                              i2l5600 4E54  
                            i2l5504 4842                              i2l6320 2022  
                            i2l6304 1EE8                              i2l6232 1CAE  
                            i2l6208 1BC4                              i2l6136 196A  
                            i2l6064 5A9E                              i2l7104 2754  
                            i2l5602 4E60                              i2l5450 4B82  
                            i2l5442 4B5E                              i2l5426 4B20  
                            i2l5418 4AF0                              i2l5370 348A  
                            i2l6402 21D2                              i2l6314 200C  
                            i2l6250 1D4E                              i2l6218 1C36  
                            i2l6162 1A16                              i2l6138 197C  
                            i2l7122 27A6                              i2l7114 2786  
                            i2l7106 2764                              i2l7034 2646  
                            i2l7026 2626                              i2l7018 2604  
                            i2l6082 5A46                              i2l5604 4E66  
                            i2l5540 48FC                              i2l5620 5ED4  
                            i2l5364 33E6                              i2l6404 21DE  
                            i2l6412 22C0                              i2l6332 206C  
                            i2l6316 2016                              i2l6308 1F38  
                            i2l6236 1D12                              i2l6164 1A4C  
                            i2l6156 1A0E                              i2l6148 19B0  
                            i2l6092 4962                              i2l7204 28EC  
                            i2l7212 2900                              i2l7220 2922  
                            i2l7052 2678                              i2l7140 27D8  
                            i2l5630 5568                              i2l5438 4B4E  
                            i2l5550 4924                              i2l4910 575E  
                            i2l4902 5744                              i2l5382 35DA  
                            i2l5374 34AE                              i2l6406 2256  
                            i2l6414 22D0                              i2l6350 20CE  
                            i2l6270 1DD4                              i2l6254 1D7E  
                            i2l6238 1D16                              i2l6158 1A12  
                            i2l7126 27AC                              i2l7070 26CC  
                            i2l7062 26AA                              i2l7054 2688  
                            i2l7038 264C                              i2l7302 2F10  
                            i2l5608 4E7C                              i2l5632 5574  
                            i2l5448 4B76                              i2l5552 4930  
                            i2l5544 490C                              i2l4912 5766  
                            i2l6416 22D6                              i2l6352 20D2  
                            i2l6336 2092                              i2l6280 1E0A  
                            i2l6264 1DB8                              i2l5464 4EDE  
                            i2l6088 495A                              i2l7240 297E  
                            i2l7232 295C                              i2l7224 293A  
                            i2l7208 28FA                              i2l7160 2834  
                            i2l7152 2812                              i2l7144 27F0  
                            i2l7320 2F6C                              i2l7312 2F4A  
                            i2l7304 2F26                              i2l4770 5212  
                            i2l4762 51D4                              i2l5562 5C88  
                            i2l5642 55A8                              i2l5634 5578  
                            i2l5650 58EA                              i2l4914 576A  
                            i2l4922 5788                              i2l4906 5750  
                            i2l6338 2096                              i2l6274 1DE0  
                            i2l6258 1D98                              i2l6194 1B2C  
                            i2l6178 1A9C                              i2l6418 22E6  
                            i2l5458 4EB6                              i2l7074 26DA  
                            i2l7090 270C                              i2l7410 30F6  
                            i2l4772 5230                              i2l4764 51DE  
                            i2l5572 4DC6                              i2l5652 58F6  
                            i2l5388 367E                              i2l6380 2168  
                            i2l6292 1EA8                              i2l6276 1DEE  
                            i2l6268 1DC4                              i2l5484 4F1C  
                            i2l7244 298C                              i2l7164 2842  
                            i2l7324 2F74                              i2l4774 523A  
                            i2l4766 51FC                              i2l4758 51C6  
                            i2l5590 4E2C                              i2l5654 58FA  
                            i2l5398 4A90                              i2l4870 54FC  
                            i2l4926 5796                              i2l4918 577E  
                            i2l6374 213C                              i2l6366 210A  
                            i2l6294 1EB6                              i2l6286 1E92  
                            i2l7182 2888                              i2l7078 26E0  
                            i2l7502 328A                              i2l7430 3144  
                            i2l7406 30D8                              i2l7270 2E86  
                            i2l4960 3EA8                              i2l4944 3E78  
                            i2l5664 59A4                              i2l4872 5504  
                            i2l4864 54E6                              i2l6392 219C  
                            i2l6368 211A                              i2l6288 1E9C  
                            i2l7248 2992                              i2l7168 2848  
                            i2l7440 3178                              i2l7336 2F9C  
                            i2l4970 3EDE                              i2l4938 3E4E  
                            i2l5594 4E3C                              i2l5658 591E  
                            i2l5666 59B0                              i2l4890 553C  
                            i2l4882 5524                              i2l4874 5508  
                            i2l4858 54D6                              i2l6394 21A4  
                            i2l6386 2186                              i2l6378 2160  
                            i2l6298 1ED0                              i2l7178 287A  
                            i2l7450 31AC                              i2l7426 313C  
                            i2l7418 311A                              i2l7370 3046  
                            i2l7282 2EA4                              i2l4980 3F12  
                            i2l4972 3EE6                              i2l7196 28CA  
                            i2l7188 28A8                              i2l7444 3186  
                            i2l7380 3080                              i2l7372 305C  
                            i2l4966 3ECA                              i2l4886 552E  
                            i2l6398 21B8                              i2l7470 31FA  
                            i2l7358 3008                              i2l4968 3ED4  
                            i2l6912 23A2                              i2l7392 30AA  
                            i2l4986 3F52                              i2l4978 3F08  
                            i2l7490 3260                              i2l7482 323C  
                            i2l7466 31F2                              i2l7458 31D0  
                            i2l7298 2F02                              i2l4996 3F82  
                            i2l6916 23B0                              i2l7388 30A2  
                            i2l6934 2404                              i2l6926 23E2  
                            i2l6918 23C0                              i2l6942 2418  
                            i2l7478 321E                              i2l7912 53F4  
                            i2l6938 2412                              i2l6954 243E  
                            i2l7498 3282                              i2l6884 2324  
                            i2l6990 250A                              i2l6896 2344  
                         ??i2_scale 0027                              u521_41 4CDE  
                  __end_of___lwtoft 5E00                              u519_41 4CB6  
                            _OSCCON 000FD3                              u590_41 4852  
                            u495_41 3E0C                              u583_41 4E9E  
                            u496_41 3E20                              u585_41 4EC6  
                            u588_41 4826                           ??i2_putch 0003  
                            _TMR1IE 007CE8                              _TMR1IF 007CF0  
                            _TMR3IE 007D01                              _TMR3IF 007D09  
                            u599_41 4DAA                              _TMR1ON 007E68  
                            _TMR3ON 007D88                              _SSPADD 000FC8  
                            _TRISC3 007CA3                              _TRISC4 007CA4  
                            _SSPBUF 000FC9                              i2_read 5E2A  
            __size_ofi2__tdiv_to_l_ 0132         set_external_interrupt1@time 008E  
       set_external_interrupt3@time 008E                      __CFG_XINST$OFF 000000  
             main@count_min_initial 0125                        i2_scale$1785 0027  
                  __end_of__powers_ FBE0                              ___ftge 4F74  
                            ___wmul 5CB2                           ??___awdiv 008A  
                         ??___ftadd 00B3                      __CFG_STVREN$ON 000000  
                         ??___awmod 0084                           ??___ftdiv 00A9  
                         ??___ftneg 0083                              abs@num 00B9  
                         ??___lldiv 0088                           ??___ftmul 009A  
                         ??___llmod 0095                           ??___ftsub 00BF  
                         ??___fttol 00AE                              _count1 0075  
                            _count3 014D                              _fround 36A2  
                            clear_0 5CEE                              clear_1 5CFA  
                            clear_2 5D06                    ___awdiv@quotient 008C  
                   ___awmod@divisor 0082                              _stage1 007C  
                            _stage3 007B                     ___awmod@counter 0084  
                         ??_lcdInst 0082                              _printf 0D96  
                    i2___awdiv@sign 000C               ___ftmul@f3_as_product 009E  
                         ??_readADC 00BF                           ??_initLCD 0083  
                      ?_servo_ISR_1 0001                        ?_servo_ISR_3 0001  
                         ??_isdigit 0080                   __end_ofi2___awdiv 5546  
                 __end_ofi2___ftadd 3FA8                   __end_ofi2___awmod 57A0  
                 __end_ofi2___ftdiv 4F74                      i2___ftadd@exp1 0039  
                    i2___ftadd@exp2 0038                   __end_ofi2___ftneg 5EBE  
                 __end_ofi2___lldiv 55C8                   __end_ofi2___ftmul 4D9A  
                 __end_ofi2___llmod 593E                   __end_ofi2___ftsub 5CB2  
                 __end_ofi2___fttol 4E8E                      i2___ftadd@sign 0037  
                      __mediumconst FB90                              tblptrh 000FF7  
           Eeprom_WriteByte@address 0083                              tblptrl 000FF6  
                            tblptru 000FF8                      i2___awmod@sign 0006  
                 __end_ofi2_lcdInst 5F28                   __end_ofi2_readADC 4A72  
                 __end_ofi2_initLCD 5C30                   __end_ofi2_isdigit 5EDC  
                    i2___ftdiv@cntr 002D                          __accesstop 0080  
           __end_of__initialization 5D0C                  main@eeprom_drained 0107  
                    i2___ftdiv@sign 0032                          ___ftadd@f1 00AD  
                        ___ftadd@f2 00B0                 __size_ofi2___ftpack 00AE  
                    i2printf@tmpval 0053                          ___ftge@ff1 0080  
                        ___ftge@ff2 0083                 __size_ofi2___lltoft 005C  
                     ___rparam_used 000001                          ___ftdiv@f1 00A3  
                        ___ftdiv@f2 00A6                          ___ftdiv@f3 00AD  
               __size_ofi2___lwtoft 0024                      main@address_AA 012D  
                    main@address_9V 012E                          ___ftneg@f1 0080  
                main@eeprom_seconds 0103                      i2___ftpack@arg 0001  
                i2__tdiv_to_l_@exp1 000F                   i2___llmod@divisor 0012  
                    i2___ftpack@exp 0004                  i2__tdiv_to_l_@cntr 000E  
                     __end_ofi2_abs 5B02                   i2___llmod@counter 0016  
                i2__tdiv_to_l_@quot 000A                          ___ftmul@f1 0094  
                        ___ftmul@f2 0097                          ___ftsub@f1 00B9  
                        ___ftsub@f2 00BC                          ___fttol@f1 00AA  
              __end_of_happynewyear FC3F                      __pcstackCOMRAM 0001  
                i2___lldiv@dividend 0001                          ___lltoft@c 0088  
                    i2___ftmul@cntr 0022                       __end_of_scale 2E66  
                    i2___ftmul@sign 0023                       __end_of_putch 5F00  
                 ?_Eeprom_WriteByte 0080                         i2printf@idx 004E  
                       i2printf@exp 0059                         i2printf@val 005B  
                    i2___fttol@exp1 0039                          ___lwtoft@c 0088  
                    i2___fttol@lval 0035                           ?i2___ftge 0001  
                ??_Eeprom_WriteByte 0081                           ?i2___wmul 000F  
                     i2__tdiv_to_l_ 4816                  __size_of_lcdNibble 0068  
                        __div_to_l_ 4146                         i2putch@data 0003  
                           ??i2_abs 003D                           ?i2_fround 0024  
                         ?i2_printf 0040          ?i2_set_external_interrupt1 000F  
           _set_external_interrupt1 56BA          ?i2_set_external_interrupt3 000F  
           _set_external_interrupt3 5644                     __div_to_l_@exp1 008B  
                   __div_to_l_@cntr 008A                             ??_scale 00A6  
                    i2___lltoft@exp 0011                     __div_to_l_@quot 0086  
                           ??_putch 0082                  i2___lldiv@quotient 0009  
                        __pbssBANK0 00E9                          __pbssBANK1 0133  
                  i2__tdiv_to_l_@f1 0001                    i2__tdiv_to_l_@f2 0004  
                  main@eeprom_total 0108                             ?i2_read 0001  
                      read@channel2 0081                       __div_to_l_@f1 0080  
                     __div_to_l_@f2 0083                      main@eeprom_min 0102  
                           ?___ftge 0080                        ?i2_lcdNibble 0001  
                           ?___wmul 008E                             ?_fround 00A3  
                         ?___ftpack 0080                             ?_printf 00BF  
                         ?___lltoft 0088                      ?i2__tdiv_to_l_ 0001  
                        ??i2___ftge 0007                           ?___lwtoft 0088  
                        ??i2___wmul 0013                          ??i2_fround 0027  
                        ??i2_printf 0045   __end_ofi2_set_external_interrupt1 5AAA  
 __end_ofi2_set_external_interrupt3 5A52                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
                           i2_scale 32B2                             i2_putch 5F10  
                 __end_of_lcdNibble 5872                     __size_ofi2_read 0026  
        __end_of_delay_1s_interrupt 580A                   __end_of__npowers_ FC07  
                           __Hparam 0000                          _scale$1561 00A6  
                           __Lparam 0000                Eeprom_WriteByte@data 0080  
                   __size_of___ftge 00C8                             ___awdiv 503C  
                           ___ftadd 394E                             ___awmod 5264  
                           ___ftdiv 4586                             ___ftneg 5D4C  
                           ___lldiv 50FA                     __size_of___wmul 0036  
                           ___ftmul 42CE                             ___llmod 5306  
                           ___ftsub 5B58                             ___fttol 46D2  
                    main@past_total 010B                        _gate_status1 0157  
                      _gate_status3 0156                           _CMCONbits 000FB4  
                           __pcinit 5CE8                        ??i2___ftpack 0006  
                        ??___ftpack 0085                     __size_of_fround 02AC  
           i2___ftmul@f3_as_product 001F                             __ramtop 1000  
                    main@loop_count 0100                        ??i2___lltoft 000D  
                           _lcdInst 5F00                          ??___lltoft 008C  
               main@address_drained 0130                             __ptext0 0012  
                           __ptext1 5644                             __ptext2 56BA  
                           __ptext3 442C                             __ptext4 5DAA  
                           __ptext5 5872                             __ptext6 5DD6  
                           __ptext7 4586                             __ptext8 0D96  
                           __ptext9 29B8                     __size_of_printf 0BB6  
                      ??i2___lwtoft 000C                          ??___lwtoft 008B  
                     i2_fround$1783 002A                       i2_fround$1784 0027  
                           _readADC 442C                        __size_of_IRQ 542A  
                           _initLCD 5BA4                             _count_C 0147  
                 __end_of_hexpowers FC27                         ?__div_to_l_ 0080  
         ??_set_external_interrupt1 0090           ??_set_external_interrupt3 0090  
                           _dpowers FB91                        __size_of_abs 0066  
                      i2fround@prec 002D                             _isdigit 5E00  
                  ___awmod@dividend 0080                 main@address_seconds 012C  
          __size_of_I2C_Master_Init 0060            __size_of_I2C_Master_Read 002E  
          __size_of_I2C_Master_Wait 0014                __size_of_servo_ISR_1 06B6  
              __size_of_servo_ISR_3 044C            __size_of_I2C_Master_Stop 0008  
                    __pintcode_body 53A0                end_of_initialization 5D0C  
                     __Lmediumconst FB90                             int_func 53A0  
               i2___wmul@multiplier 000F                  __end_ofi2___ftpack 5264  
          __size_of_Eeprom_ReadByte 0032           __size_of_I2C_Master_Start 0008  
                __end_ofi2___lltoft 59FA           __size_of_I2C_Master_Write 000A  
                   ___lldiv@divisor 0084                  __end_ofi2___lwtoft 5E9A  
                   ___lldiv@counter 008C                             printf@c 00E6  
                           printf@f 00BF                    I2C_Master_Init@c 008D  
                  I2C_Master_Read@a 0081                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
                    __tdiv_to_l_@f1 0080                      __tdiv_to_l_@f2 0083  
                   ??i2__tdiv_to_l_ 0007                       ??__tdiv_to_l_ 0086  
                         _PORTBbits 000F81                          _up_period1 0079  
                        _up_period3 00EE                        _happynewyear FC38  
                         i2___awdiv 54C2                           i2___ftadd 3DFC  
                         i2___awmod 5730                           i2___ftdiv 4E8E  
                         i2___ftneg 5E9A                           i2___lldiv 5546  
                         i2___ftmul 4CA6                           i2___llmod 58D8  
                         i2___ftsub 5C72                           i2___fttol 4D9A  
                         i2_lcdInst 5F1C                         ___ftdiv@exp 00B0  
                       printf@width 00D9     __end_of_set_external_interrupt1 5730  
   __end_of_set_external_interrupt3 56BA                  i2___llmod@dividend 000E  
                         i2_readADC 4948                           i2_initLCD 5BEA  
                        main@past_C 010E                  i2___awdiv@dividend 0007  
                   main@address_min 0132                     i2___ftpack@sign 0005  
                         i2_isdigit 5EBE                 __size_of__div_to_l_ 0188  
                        _voltage_AA 0139                          _voltage_9V 0136  
                    __end_ofi2_read 5E50                         ___ftmul@exp 009D  
                    i2read@channel2 0002                      __end_of___ftge 503C  
                    __end_of___wmul 5CE8                 main@count_min_final 0127  
              __size_ofi2_lcdNibble 0056                       i2lcdInst@data 0003  
                    __end_of_fround 394E                    i2___wmul@product 0013  
                    __end_of_printf 194C                       i2_printf$1786 004B  
                      i2printf@flag 005F                        i2printf@fval 0061  
                      i2printf@prec 0051                 start_initialization 5CE8  
                 __size_ofi2___ftge 0090                  i2___awdiv@quotient 000D  
                       __end_of_IRQ 5432                   __size_ofi2___wmul 0026  
               __end_of__tdiv_to_l_ 4146                         __end_of_abs 58D8  
                         i2printf@c 0064                           i2printf@f 0040  
       ??i2_set_external_interrupt1 0011         ??i2_set_external_interrupt3 0011  
                   i2___fttol@sign1 0034                   __size_ofi2_fround 0246  
                        ?i2___awdiv 0007                          ?i2___ftadd 002E  
                        ?i2___awmod 0001                          ?i2___ftdiv 0024  
                        ?i2___ftneg 0001                          ?i2___lldiv 0001  
                        ?i2___ftmul 0015                          ?i2___llmod 000E  
                        ?i2___ftsub 003A                          ?i2___fttol 002B  
         __size_of_Eeprom_WriteByte 0042                   __size_ofi2_printf 09B6  
                 ??_I2C_Master_Init 0091                   ??_I2C_Master_Read 0081  
                 ??_I2C_Master_Wait 0080                          ?i2_lcdInst 0001  
                 ??_I2C_Master_Stop 0081                     ___llmod@divisor 0091  
                        ?i2_readADC 003D                          ?i2_initLCD 0001  
                   ___llmod@counter 0095                            ??i2_read 0001  
                        ?i2_isdigit 0001                        _down_period1 0077  
                      _down_period3 00EC                            ??___ftge 0086  
                          ??___wmul 0092                   ??_Eeprom_ReadByte 0080  
                  __CFG_LPT1OSC$OFF 000000                            ??_fround 00A6  
                  main@past_drained 010F                            ??_printf 00C7  
                        fround@prec 00AC                       ?i2__div_to_l_ 0001  
                 __size_of___ftpack 010C                    main@past_seconds 010A  
                 __size_of___lltoft 007C                         __pbssCOMRAM 0075  
                 __size_of___lwtoft 002A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0100                      _current_state1 007E  
                    _current_state3 007D                        _isdigit$1222 0081  
     i2set_external_interrupt1@time 000F       i2set_external_interrupt3@time 000F  
                          ?i2_scale 0024                            ?i2_putch 0001  
                  i2readADC@channel 0047                    _I2C_Master_Start 5F3A  
                  _I2C_Master_Write 5F28           main@count_seconds_initial 0126  
                 __CFG_CCP2MX$PORTC 000000           i2_set_external_interrupt1 5A52  
         i2_set_external_interrupt3 59FA                           __pintcode 0008  
                     __pmediumconst FB90                           _lcdNibble 580A  
                          ?___awdiv 0086                            ?___ftadd 00AD  
                          ?___awmod 0080                            ?___ftdiv 00A3  
                          ?___ftneg 0080                            ?___lldiv 0080  
                          ?___ftmul 0094                            ?___llmod 008D  
                          ?___ftsub 00B9                           __npowers_ FBE0  
                          ?___fttol 00AA                            ?_lcdInst 0001  
                       __tdiv_to_l_ 3FA8                  _delay_1s_interrupt 57A0  
                    ??i2__div_to_l_ 0007                        ??__div_to_l_ 0086  
                          ?_readADC 00BC                            ?_initLCD 0001  
                          ?_isdigit 0001                      __size_ofi2_abs 0058  
               ?_delay_1s_interrupt 0080                           _hexpowers FC07  
                       ??i2___awdiv 000B                         ??i2___ftadd 0034  
                       ??i2___awmod 0005                         ??i2___ftdiv 002A  
                       ??i2___ftneg 0004                         ??i2___lldiv 0009  
                       ??i2___ftmul 001B                      __size_of_scale 04AE  
                       ??i2___llmod 0016                         ??i2___ftsub 0040  
                       ??i2___fttol 002F                       i2readADC@volt 0040  
                    __size_of_putch 0010                            _AA_or_9V 0153  
                       ??i2_lcdInst 0003                      ___wmul@product 0092  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                       ??i2_readADC 0040                         ??i2_initLCD 0004  
                       ??i2_isdigit 0001                            i2u601_40 4DE4  
                          i2u601_45 4DDC                  __end_of__div_to_l_ 42CE  
                          _PIR2bits 000FA1                            i2u705_40 1EC6  
              ??_delay_1s_interrupt 0082                            i2u683_40 1AD4  
                          i2u683_45 1ACA                            i2u960_47 5B46  
                          i2u952_47 2FB8                            i2u961_47 5B50  
                          i2u953_47 245A                            i2u954_47 24A4  
                          i2u955_47 5E40                            i2u956_47 5BF0  
                          i2u957_47 5C24                            i2u958_47 5B1A  
                          i2u959_47 5B24                    __CFG_WDTPS$32768 000000  
                        ?_lcdNibble 0001                     i2__div_to_l_@f1 0001  
                   i2__div_to_l_@f2 0004                          _ADCON0bits 000FC2  
                         main@i_431 011A                           main@i_433 011B  
                         main@i_444 011E                           main@i_445 011F  
                         main@i_438 011C                           main@i_447 0120  
                         main@i_439 011D                           main@i_448 0121  
                 ___wmul@multiplier 008E                           main@k_432 0124  
                          i2___ftge 5432                       ??_servo_ISR_1 0065  
                     ??_servo_ISR_3 0065                            i2___wmul 5E50  
                     lcdNibble@data 0081                            i2abs@num 003A  
                        printf@flag 00E1                       lcdNibble@temp 0080  
                        printf@fval 00E3                          printf@prec 00D3  
                 i2___awdiv@divisor 0009                            i2_fround 3BB6  
                         _voltage_0 0142                           _voltage_1 015B  
                         _voltage_2 0158                           _voltage_3 013F  
                         _voltage_4 013C                           _voltage_6 00E9  
                         _voltage_C 0133                   i2___awdiv@counter 000B  
                          i2_printf 194C                 I2C_Master_Read@temp 0082  
                  _Eeprom_WriteByte 5C30                  i2___awmod@dividend 0001  
                  __size_ofi2_scale 03F0                    __size_ofi2_putch 000C  
                        _EECON1bits 000FA6                            __Hrparam 0000  
                          __Lrparam 0000                  __CFG_BOREN$SBORDIS 000000  
                  __size_of___awdiv 00BE                    __size_of___ftadd 0268  
                  __size_of___awmod 00A2                    __size_of___ftdiv 014C  
                  __size_of___ftneg 0030            ?_set_external_interrupt1 008E  
             i2___wmul@multiplicand 0011            ?_set_external_interrupt3 008E  
                  __size_of___lldiv 00BC                    __size_of___ftmul 015E  
                  __size_of___llmod 009A                    __size_of___ftsub 004C  
                  __size_of___fttol 0144                      readADC@channel 00C6  
                          ___ftpack 4B9A   i2set_external_interrupt1@set_time 0011  
   set_external_interrupt1@set_time 0090                         _fround$1560 00A6  
                       _fround$1559 00A9                            ___lltoft 55C8  
             __end_ofi2__tdiv_to_l_ 4948              Eeprom_ReadByte@address 0082  
                          ___lwtoft 5DD6                    __size_of_lcdInst 0010  
                   _I2C_Master_Init 593E                    __size_of_readADC 015A  
                   _I2C_Master_Read 5D7C                    __size_of_initLCD 0046  
                   _I2C_Master_Wait 5EDC                     _I2C_Master_Stop 5F32  
                  __size_of_isdigit 002A   i2set_external_interrupt3@set_time 0011  
   set_external_interrupt3@set_time 0090                            __ptext10 5EF0  
                          __ptext11 5E00                            __ptext20 5306  
                          __ptext12 36A2                            __ptext21 46D2  
                          __ptext13 5CB2                            __ptext30 57A0  
                          __ptext22 5B58                            __ptext14 42CE  
                          __ptext31 5F28                            __ptext23 394E  
                          __ptext15 5264                            __ptext32 5F32  
                          __ptext24 4B9A                            __ptext16 503C  
                          __ptext41 2E66                            __ptext33 5F3A  
                          __ptext25 5D4C                            __ptext17 3FA8  
                          __ptext50 194C                            __ptext42 59FA  
                          __ptext34 5D7C                            __ptext26 4F74  
                          __ptext18 4146                            __ptext51 32B2  
                          __ptext43 2302                            __ptext35 5EDC  
                          __ptext27 5BA4                            __ptext19 55C8  
                          __ptext60 4A72                            __ptext52 5F10  
                          __ptext44 5A52                            __ptext36 593E  
                          __ptext28 5F00                            __ptext61 599E  
                          __ptext53 5EBE                            __ptext45 4948  
                          __ptext37 50FA                            __ptext29 580A  
                          __ptext70 5BEA                            __ptext62 58D8  
                          __ptext54 3BB6                            __ptext46 5E2A  
                          __ptext38 5C30                            __ptext71 5F1C  
                          __ptext63 5546                            __ptext55 5E50  
                          __ptext47 5AAA                            __ptext39 5D1A  
                          __ptext72 5B02                            __ptext64 4D9A  
                          __ptext56 4CA6                            __ptext48 5E76  
                          __ptext65 5C72                            __ptext57 5730  
                          __ptext49 4E8E                            __ptext66 3DFC  
                          __ptext58 54C2                            __ptext67 51B6  
                          __ptext59 4816                            __ptext68 5E9A  
                          __ptext69 5432                            __powers_ FBB9  
               __end_of_servo_ISR_1 29B8                 __end_of_servo_ISR_3 32B2  
                          _count_AA 014B                            _count_9V 0149  
                    i2_isdigit$1222 0002                       __size_of_main 0D84  
                   _Eeprom_ReadByte 5D1A                       __size_of_read 002C  
              __end_ofi2__div_to_l_ 4B9A                       ??i2_lcdNibble 0001  
                       ??_lcdNibble 0080                            _process1 0150  
                          _process3 014F                            int$flags 007F  
                         printf@idx 00D0                           printf@exp 00DB  
                         printf@val 00DD                            main@done 0111  
                          main@time 0112                            readADC@a 00C3  
                          readADC@i 00C2  __size_ofi2_set_external_interrupt1 0058  
__size_ofi2_set_external_interrupt3 0058                   i2___awmod@divisor 0003  
                 main@count_seconds 012A                           putch@data 0082  
                 i2___awmod@counter 0005            __end_of_I2C_Master_Start 5F42  
          __end_of_I2C_Master_Write 5F32                          _INTCONbits 000FF2  
                          isdigit@c 0082                            scale@scl 00A9  
                          intlevel2 0000                    __tdiv_to_l_@exp1 008E  
                  __tdiv_to_l_@cntr 008D                    __tdiv_to_l_@quot 0089  
                  ___lldiv@dividend 0080                            printf@ap 00D1  
           __end_of_I2C_Master_Init 599E             __end_of_I2C_Master_Read 5DAA  
           __end_of_I2C_Master_Wait 5EF0             __end_of_I2C_Master_Stop 5F3A  
                       lcdInst@data 0082                        ?__tdiv_to_l_ 0080  
                       _printf$1562 00CD                 __end_ofi2_lcdNibble 5B58  
                       _servo_ISR_1 2302                         _servo_ISR_3 2E66  
                  ___lldiv@quotient 0088                   I2C_Master_Write@d 0081  
           __end_of_Eeprom_ReadByte 5D4C                   i2__div_to_l_@exp1 000C  
                 i2__div_to_l_@cntr 000B                   i2__div_to_l_@quot 0007  
