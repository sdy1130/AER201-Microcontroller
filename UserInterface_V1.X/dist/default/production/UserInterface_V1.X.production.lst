

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Feb 25 00:38:44 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 1.40
    38                           ; Generated 01/12/2016 GMT
    39                           ; 
    40                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4620 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	mediumconst
    73  00FED6                     __pmediumconst:
    74                           	opt stack 0
    75  00FED6  00                 	db	0
    76  00FED7                     _keys:
    77                           	opt stack 0
    78  00FED7  31                 	db	49
    79  00FED8  32                 	db	50
    80  00FED9  33                 	db	51
    81  00FEDA  41                 	db	65
    82  00FEDB  34                 	db	52
    83  00FEDC  35                 	db	53
    84  00FEDD  36                 	db	54
    85  00FEDE  42                 	db	66
    86  00FEDF  37                 	db	55
    87  00FEE0  38                 	db	56
    88  00FEE1  39                 	db	57
    89  00FEE2  43                 	db	67
    90  00FEE3  2A                 	db	42
    91  00FEE4  30                 	db	48
    92  00FEE5  23                 	db	35
    93  00FEE6  44                 	db	68
    94  00FEE7  00                 	db	0
    95  00FEE8                     __end_of_keys:
    96                           	opt stack 0
    97  00FEE8                     _dpowers:
    98                           	opt stack 0
    99  00FEE8  0001               	dw	1
   100  00FEEA  000A               	dw	10
   101  00FEEC  0064               	dw	100
   102  00FEEE  03E8               	dw	1000
   103  00FEF0  2710               	dw	10000
   104  00FEF2                     __end_of_dpowers:
   105                           	opt stack 0
   106  00FEF2                     _hexpowers:
   107                           	opt stack 0
   108  00FEF2  0001               	dw	1
   109  00FEF4  0010               	dw	16
   110  00FEF6  0100               	dw	256
   111  00FEF8  1000               	dw	4096
   112  00FEFA                     __end_of_hexpowers:
   113                           	opt stack 0
   114  00FEFA                     _happynewyear:
   115                           	opt stack 0
   116  00FEFA  00                 	db	0
   117  00FEFB  11                 	db	17
   118  00FEFC  13                 	db	19
   119  00FEFD  01                 	db	1
   120  00FEFE  06                 	db	6
   121  00FEFF  02                 	db	2
   122  00FF00  17                 	db	23
   123  00FF01                     __end_of_happynewyear:
   124                           	opt stack 0
   125  0000                     _ADRES	set	4035
   126  0000                     _ADCON0	set	4034
   127  0000                     _ADCON0bits	set	4034
   128  0000                     _ADCON1	set	4033
   129  0000                     _EEADR	set	4009
   130  0000                     _EEADRH	set	4010
   131  0000                     _EECON1bits	set	4006
   132  0000                     _EECON2	set	4007
   133  0000                     _EEDATA	set	4008
   134  0000                     _LATA	set	3977
   135  0000                     _LATB	set	3978
   136  0000                     _LATC	set	3979
   137  0000                     _LATD	set	3980
   138  0000                     _LATDbits	set	3980
   139  0000                     _LATE	set	3981
   140  0000                     _OSCCON	set	4051
   141  0000                     _PIR2bits	set	4001
   142  0000                     _PORTAbits	set	3968
   143  0000                     _PORTB	set	3969
   144  0000                     _PORTBbits	set	3969
   145  0000                     _SSPADD	set	4040
   146  0000                     _SSPBUF	set	4041
   147  0000                     _SSPCON1	set	4038
   148  0000                     _SSPCON2	set	4037
   149  0000                     _SSPSTAT	set	4039
   150  0000                     _T1CON	set	4045
   151  0000                     _TRISA	set	3986
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISC	set	3988
   154  0000                     _TRISD	set	3989
   155  0000                     _TRISE	set	3990
   156  0000                     _ACKDT	set	32301
   157  0000                     _ACKEN	set	32300
   158  0000                     _ADON	set	32272
   159  0000                     _PEN	set	32298
   160  0000                     _RCEN	set	32299
   161  0000                     _RSEN	set	32297
   162  0000                     _SEN	set	32296
   163  0000                     _T1CKPS0	set	32364
   164  0000                     _T1CKPS1	set	32365
   165  0000                     _T1OSCEN	set	32363
   166  0000                     _T1SYNC	set	32362
   167  0000                     _TMR1CS	set	32361
   168  0000                     _TMR1IE	set	31976
   169  0000                     _TMR1IF	set	31984
   170  0000                     _TMR1ON	set	32360
   171  0000                     _TRISC3	set	31907
   172  0000                     _TRISC4	set	31908
   173  0000                     _nRBPU	set	32655
   174  00FF01                     STR_31:
   175  00FF01  30                 	db	48	;'0'
   176  00FF02  31                 	db	49	;'1'
   177  00FF03  32                 	db	50	;'2'
   178  00FF04  33                 	db	51	;'3'
   179  00FF05  34                 	db	52	;'4'
   180  00FF06  35                 	db	53	;'5'
   181  00FF07  36                 	db	54	;'6'
   182  00FF08  37                 	db	55	;'7'
   183  00FF09  38                 	db	56	;'8'
   184  00FF0A  39                 	db	57	;'9'
   185  00FF0B  61                 	db	97	;'a'
   186  00FF0C  62                 	db	98	;'b'
   187  00FF0D  63                 	db	99	;'c'
   188  00FF0E  64                 	db	100	;'d'
   189  00FF0F  65                 	db	101	;'e'
   190  00FF10  66                 	db	102	;'f'
   191  00FF11  00                 	db	0
   192  00FF12                     STR_28:
   193  00FF12  44                 	db	68	;'D'
   194  00FF13  6F                 	db	111	;'o'
   195  00FF14  77                 	db	119	;'w'
   196  00FF15  6E                 	db	110	;'n'
   197  00FF16  6C                 	db	108	;'l'
   198  00FF17  6F                 	db	111	;'o'
   199  00FF18  61                 	db	97	;'a'
   200  00FF19  64                 	db	100	;'d'
   201  00FF1A  69                 	db	105	;'i'
   202  00FF1B  6E                 	db	110	;'n'
   203  00FF1C  67                 	db	103	;'g'
   204  00FF1D  2E                 	db	46
   205  00FF1E  2E                 	db	46
   206  00FF1F  2E                 	db	46
   207  00FF20  00                 	db	0
   208  00FF21                     STR_11:
   209  00FF21  54                 	db	84	;'T'
   210  00FF22  65                 	db	101	;'e'
   211  00FF23  72                 	db	114	;'r'
   212  00FF24  6D                 	db	109	;'m'
   213  00FF25  69                 	db	105	;'i'
   214  00FF26  6E                 	db	110	;'n'
   215  00FF27  61                 	db	97	;'a'
   216  00FF28  74                 	db	116	;'t'
   217  00FF29  69                 	db	105	;'i'
   218  00FF2A  6E                 	db	110	;'n'
   219  00FF2B  67                 	db	103	;'g'
   220  00FF2C  2E                 	db	46
   221  00FF2D  2E                 	db	46
   222  00FF2E  2E                 	db	46
   223  00FF2F  00                 	db	0
   224  00FF30                     STR_5:
   225  00FF30  33                 	db	51	;'3'
   226  00FF31  3A                 	db	58	;':'
   227  00FF32  20                 	db	32
   228  00FF33  50                 	db	80	;'P'
   229  00FF34  43                 	db	67	;'C'
   230  00FF35  20                 	db	32
   231  00FF36  44                 	db	68	;'D'
   232  00FF37  6F                 	db	111	;'o'
   233  00FF38  77                 	db	119	;'w'
   234  00FF39  6E                 	db	110	;'n'
   235  00FF3A  6C                 	db	108	;'l'
   236  00FF3B  6F                 	db	111	;'o'
   237  00FF3C  61                 	db	97	;'a'
   238  00FF3D  64                 	db	100	;'d'
   239  00FF3E  00                 	db	0
   240  00FF3F                     STR_1:
   241  00FF3F  25                 	db	37
   242  00FF40  30                 	db	48	;'0'
   243  00FF41  32                 	db	50	;'2'
   244  00FF42  78                 	db	120	;'x'
   245  00FF43  2F                 	db	47
   246  00FF44  25                 	db	37
   247  00FF45  30                 	db	48	;'0'
   248  00FF46  32                 	db	50	;'2'
   249  00FF47  78                 	db	120	;'x'
   250  00FF48  2F                 	db	47
   251  00FF49  25                 	db	37
   252  00FF4A  30                 	db	48	;'0'
   253  00FF4B  32                 	db	50	;'2'
   254  00FF4C  78                 	db	120	;'x'
   255  00FF4D  00                 	db	0
   256  00FF4E                     STR_2:
   257  00FF4E  25                 	db	37
   258  00FF4F  30                 	db	48	;'0'
   259  00FF50  32                 	db	50	;'2'
   260  00FF51  78                 	db	120	;'x'
   261  00FF52  3A                 	db	58	;':'
   262  00FF53  25                 	db	37
   263  00FF54  30                 	db	48	;'0'
   264  00FF55  32                 	db	50	;'2'
   265  00FF56  78                 	db	120	;'x'
   266  00FF57  3A                 	db	58	;':'
   267  00FF58  25                 	db	37
   268  00FF59  30                 	db	48	;'0'
   269  00FF5A  32                 	db	50	;'2'
   270  00FF5B  78                 	db	120	;'x'
   271  00FF5C  00                 	db	0
   272  00FF5D                     STR_9:
   273  00FF5D  50                 	db	80	;'P'
   274  00FF5E  72                 	db	114	;'r'
   275  00FF5F  65                 	db	101	;'e'
   276  00FF60  73                 	db	115	;'s'
   277  00FF61  73                 	db	115	;'s'
   278  00FF62  20                 	db	32
   279  00FF63  41                 	db	65	;'A'
   280  00FF64  6E                 	db	110	;'n'
   281  00FF65  79                 	db	121	;'y'
   282  00FF66  20                 	db	32
   283  00FF67  4B                 	db	75	;'K'
   284  00FF68  65                 	db	101	;'e'
   285  00FF69  79                 	db	121	;'y'
   286  00FF6A  00                 	db	0
   287  00FF6B                     STR_6:
   288  00FF6B  4F                 	db	79	;'O'
   289  00FF6C  70                 	db	112	;'p'
   290  00FF6D  65                 	db	101	;'e'
   291  00FF6E  72                 	db	114	;'r'
   292  00FF6F  61                 	db	97	;'a'
   293  00FF70  74                 	db	116	;'t'
   294  00FF71  69                 	db	105	;'i'
   295  00FF72  6E                 	db	110	;'n'
   296  00FF73  67                 	db	103	;'g'
   297  00FF74  2E                 	db	46
   298  00FF75  2E                 	db	46
   299  00FF76  2E                 	db	46
   300  00FF77  00                 	db	0
   301  00FF78                     STR_14:
   302  00FF78  66                 	db	102	;'f'
   303  00FF79  3A                 	db	58	;':'
   304  00FF7A  25                 	db	37
   305  00FF7B  30                 	db	48	;'0'
   306  00FF7C  32                 	db	50	;'2'
   307  00FF7D  78                 	db	120	;'x'
   308  00FF7E  20                 	db	32
   309  00FF7F  6D                 	db	109	;'m'
   310  00FF80  69                 	db	105	;'i'
   311  00FF81  6E                 	db	110	;'n'
   312  00FF82  20                 	db	32
   313  00FF83  00                 	db	0
   314  00FF84                     STR_12:
   315  00FF84  73                 	db	115	;'s'
   316  00FF85  3A                 	db	58	;':'
   317  00FF86  25                 	db	37
   318  00FF87  30                 	db	48	;'0'
   319  00FF88  32                 	db	50	;'2'
   320  00FF89  78                 	db	120	;'x'
   321  00FF8A  20                 	db	32
   322  00FF8B  6D                 	db	109	;'m'
   323  00FF8C  69                 	db	105	;'i'
   324  00FF8D  6E                 	db	110	;'n'
   325  00FF8E  20                 	db	32
   326  00FF8F  00                 	db	0
   327  00FF90                     STR_29:
   328  00FF90  44                 	db	68	;'D'
   329  00FF91  6F                 	db	111	;'o'
   330  00FF92  77                 	db	119	;'w'
   331  00FF93  6E                 	db	110	;'n'
   332  00FF94  6C                 	db	108	;'l'
   333  00FF95  6F                 	db	111	;'o'
   334  00FF96  61                 	db	97	;'a'
   335  00FF97  64                 	db	100	;'d'
   336  00FF98  20                 	db	32
   337  00FF99  00                 	db	0
   338  00FF9A                     STR_7:
   339  00FF9A  45                 	db	69	;'E'
   340  00FF9B  4D                 	db	77	;'M'
   341  00FF9C  45                 	db	69	;'E'
   342  00FF9D  52                 	db	82	;'R'
   343  00FF9E  47                 	db	71	;'G'
   344  00FF9F  45                 	db	69	;'E'
   345  00FFA0  4E                 	db	78	;'N'
   346  00FFA1  43                 	db	67	;'C'
   347  00FFA2  59                 	db	89	;'Y'
   348  00FFA3  00                 	db	0
   349  00FFA4                     STR_13:
   350  00FFA4  25                 	db	37
   351  00FFA5  30                 	db	48	;'0'
   352  00FFA6  32                 	db	50	;'2'
   353  00FFA7  78                 	db	120	;'x'
   354  00FFA8  20                 	db	32
   355  00FFA9  73                 	db	115	;'s'
   356  00FFAA  65                 	db	101	;'e'
   357  00FFAB  63                 	db	99	;'c'
   358  00FFAC  00                 	db	0
   359  00FFAD                     STR_30:
   360  00FFAD  43                 	db	67	;'C'
   361  00FFAE  6F                 	db	111	;'o'
   362  00FFAF  6D                 	db	109	;'m'
   363  00FFB0  70                 	db	112	;'p'
   364  00FFB1  6C                 	db	108	;'l'
   365  00FFB2  65                 	db	101	;'e'
   366  00FFB3  74                 	db	116	;'t'
   367  00FFB4  65                 	db	101	;'e'
   368  00FFB5  00                 	db	0
   369  00FFB6                     STR_19:
   370  00FFB6  20                 	db	32
   371  00FFB7  73                 	db	115	;'s'
   372  00FFB8  65                 	db	101	;'e'
   373  00FFB9  63                 	db	99	;'c'
   374  00FFBA  6F                 	db	111	;'o'
   375  00FFBB  6E                 	db	110	;'n'
   376  00FFBC  64                 	db	100	;'d'
   377  00FFBD  73                 	db	115	;'s'
   378  00FFBE  00                 	db	0
   379  00FFBF                     STR_17:
   380  00FFBF  20                 	db	32
   381  00FFC0  6D                 	db	109	;'m'
   382  00FFC1  69                 	db	105	;'i'
   383  00FFC2  6E                 	db	110	;'n'
   384  00FFC3  75                 	db	117	;'u'
   385  00FFC4  74                 	db	116	;'t'
   386  00FFC5  65                 	db	101	;'e'
   387  00FFC6  73                 	db	115	;'s'
   388  00FFC7  00                 	db	0
   389  00FFC8                     STR_10:
   390  00FFC8  54                 	db	84	;'T'
   391  00FFC9  6F                 	db	111	;'o'
   392  00FFCA  20                 	db	32
   393  00FFCB  52                 	db	82	;'R'
   394  00FFCC  65                 	db	101	;'e'
   395  00FFCD  73                 	db	115	;'s'
   396  00FFCE  65                 	db	101	;'e'
   397  00FFCF  74                 	db	116	;'t'
   398  00FFD0  00                 	db	0
   399  00FFD1                     STR_3:
   400  00FFD1  31                 	db	49	;'1'
   401  00FFD2  3A                 	db	58	;':'
   402  00FFD3  20                 	db	32
   403  00FFD4  53                 	db	83	;'S'
   404  00FFD5  74                 	db	116	;'t'
   405  00FFD6  61                 	db	97	;'a'
   406  00FFD7  72                 	db	114	;'r'
   407  00FFD8  74                 	db	116	;'t'
   408  00FFD9  00                 	db	0
   409  00FFDA                     STR_4:
   410  00FFDA  32                 	db	50	;'2'
   411  00FFDB  3A                 	db	58	;':'
   412  00FFDC  20                 	db	32
   413  00FFDD  4C                 	db	76	;'L'
   414  00FFDE  6F                 	db	111	;'o'
   415  00FFDF  67                 	db	103	;'g'
   416  00FFE0  73                 	db	115	;'s'
   417  00FFE1  00                 	db	0
   418  00FFE2                     STR_23:
   419  00FFE2  54                 	db	84	;'T'
   420  00FFE3  6F                 	db	111	;'o'
   421  00FFE4  74                 	db	116	;'t'
   422  00FFE5  61                 	db	97	;'a'
   423  00FFE6  6C                 	db	108	;'l'
   424  00FFE7  3A                 	db	58	;':'
   425  00FFE8  00                 	db	0
   426  00FFE9                     STR_8:
   427  00FFE9  53                 	db	83	;'S'
   428  00FFEA  54                 	db	84	;'T'
   429  00FFEB  4F                 	db	79	;'O'
   430  00FFEC  50                 	db	80	;'P'
   431  00FFED  00                 	db	0
   432  00FFEE                     STR_16:
   433  00FFEE  25                 	db	37
   434  00FFEF  30                 	db	48	;'0'
   435  00FFF0  32                 	db	50	;'2'
   436  00FFF1  64                 	db	100	;'d'
   437  00FFF2  00                 	db	0
   438  00FFF3                     STR_20:
   439  00FFF3  41                 	db	65	;'A'
   440  00FFF4  41                 	db	65	;'A'
   441  00FFF5  3A                 	db	58	;':'
   442  00FFF6  00                 	db	0
   443  00FFF7                     STR_21:
   444  00FFF7  39                 	db	57	;'9'
   445  00FFF8  56                 	db	86	;'V'
   446  00FFF9  3A                 	db	58	;':'
   447  00FFFA  00                 	db	0
   448  00FFFB                     STR_22:
   449  00FFFB  43                 	db	67	;'C'
   450  00FFFC  3A                 	db	58	;':'
   451  00FFFD  00                 	db	0
   452  0000                     
   453                           ; #config settings
   454  00FFFE  00                 	db	0	; dummy byte at the end
   455  0000                     
   456                           	psect	cinit
   457  00EA7C                     __pcinit:
   458                           	opt stack 0
   459  00EA7C                     start_initialization:
   460                           	opt stack 0
   461  00EA7C                     __initialization:
   462                           	opt stack 0
   463  00EA7C                     end_of_initialization:
   464                           	opt stack 0
   465  00EA7C                     __end_of__initialization:
   466                           	opt stack 0
   467  00EA7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   468  00EA7E  6EF8               	movwf	tblptru,c
   469  00EA80  0100               	movlb	0
   470  00EA82  EFFA  F079         	goto	_main	;jump to C main() function
   471                           tblptru	equ	0xFF8
   472                           
   473                           	psect	cstackCOMRAM
   474  000001                     __pcstackCOMRAM:
   475                           	opt stack 0
   476  000001                     ??_isdigit:
   477  000001                     ??_I2C_Master_Wait:
   478  000001                     ??_delay_10ms:
   479  000001                     ??_Eeprom_ReadByte:
   480  000001                     ?_delay_1s_interrupt:
   481                           	opt stack 0
   482  000001                     ?___wmul:
   483                           	opt stack 0
   484  000001                     ?___lwdiv:
   485                           	opt stack 0
   486  000001                     ?___ftpack:
   487                           	opt stack 0
   488  000001                     ?___ftneg:
   489                           	opt stack 0
   490  000001                     ?___lldiv:
   491                           	opt stack 0
   492  000001                     lcdNibble@temp:
   493                           	opt stack 0
   494  000001                     Eeprom_WriteByte@data:
   495                           	opt stack 0
   496  000001                     ___wmul@multiplier:
   497                           	opt stack 0
   498  000001                     ___lwdiv@dividend:
   499                           	opt stack 0
   500  000001                     ___ftpack@arg:
   501                           	opt stack 0
   502  000001                     ___ftneg@f1:
   503                           	opt stack 0
   504  000001                     ___lldiv@dividend:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x0
   508  000001                     	ds	1
   509  000002                     ??_Eeprom_WriteByte:
   510  000002                     lcdNibble@data:
   511                           	opt stack 0
   512  000002                     I2C_Master_Read@a:
   513                           	opt stack 0
   514  000002                     delay_10ms@n:
   515                           	opt stack 0
   516  000002                     _isdigit$886:
   517                           	opt stack 0
   518  000002                     I2C_Master_Write@d:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x1
   522  000002                     	ds	1
   523  000003                     ??_delay_1s_interrupt:
   524  000003                     lcdInst@data:
   525                           	opt stack 0
   526  000003                     putch@data:
   527                           	opt stack 0
   528  000003                     I2C_Master_Read@temp:
   529                           	opt stack 0
   530  000003                     key_pressed_check@check:
   531                           	opt stack 0
   532  000003                     Eeprom_ReadByte@address:
   533                           	opt stack 0
   534  000003                     isdigit@c:
   535                           	opt stack 0
   536  000003                     ___wmul@multiplicand:
   537                           	opt stack 0
   538  000003                     ___lwdiv@divisor:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x2
   542  000003                     	ds	1
   543  000004                     ??_initLCD:
   544  000004                     Eeprom_WriteByte@address:
   545                           	opt stack 0
   546  000004                     set_time@i:
   547                           	opt stack 0
   548  000004                     ___ftpack@exp:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x3
   552  000004                     	ds	1
   553  000005                     ___ftpack@sign:
   554                           	opt stack 0
   555  000005                     ___wmul@product:
   556                           	opt stack 0
   557  000005                     ___lwdiv@quotient:
   558                           	opt stack 0
   559  000005                     ___lldiv@divisor:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x4
   563  000005                     	ds	1
   564  000006                     ??___ftpack:
   565  000006                     delay_1s_interrupt@n:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x5
   569  000006                     	ds	1
   570  000007                     delay_1s_interrupt@i:
   571                           	opt stack 0
   572  000007                     ___lwdiv@counter:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x6
   576  000007                     	ds	1
   577  000008                     ?___lwmod:
   578                           	opt stack 0
   579  000008                     ___lwmod@dividend:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x7
   583  000008                     	ds	1
   584  000009                     ?___ftadd:
   585                           	opt stack 0
   586  000009                     ___ftadd@f1:
   587                           	opt stack 0
   588  000009                     ___lldiv@quotient:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0x8
   592  000009                     	ds	1
   593  00000A                     ___lwmod@divisor:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x9
   597  00000A                     	ds	2
   598  00000C                     ___lwmod@counter:
   599                           	opt stack 0
   600  00000C                     ___ftadd@f2:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0xB
   604  00000C                     	ds	1
   605  00000D                     ?_printf:
   606                           	opt stack 0
   607  00000D                     ___lldiv@counter:
   608                           	opt stack 0
   609  00000D                     printf@f:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0xC
   613  00000D                     	ds	1
   614  00000E                     I2C_Master_Init@c:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0xD
   618  00000E                     	ds	1
   619  00000F                     ??___ftadd:
   620                           
   621                           ; 1 bytes @ 0xE
   622  00000F                     	ds	3
   623  000012                     ??_I2C_Master_Init:
   624  000012                     ___ftadd@sign:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x11
   628  000012                     	ds	1
   629  000013                     ___ftadd@exp2:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x12
   633  000013                     	ds	1
   634  000014                     ___ftadd@exp1:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x13
   638  000014                     	ds	1
   639  000015                     ??_printf:
   640                           
   641                           ; 1 bytes @ 0x14
   642  000015                     	ds	4
   643  000019                     printf@idx:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x18
   647  000019                     	ds	1
   648  00001A                     printf@ap:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x19
   652  00001A                     	ds	2
   653  00001C                     printf@prec:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x1B
   657  00001C                     	ds	1
   658  00001D                     printf@val:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x1C
   662  00001D                     	ds	2
   663  00001F                     printf@flag:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x1E
   667  00001F                     	ds	1
   668  000020                     printf@width:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x1F
   672  000020                     	ds	2
   673  000022                     printf@c:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x21
   677  000022                     	ds	1
   678  000023                     ??_main:
   679                           
   680                           ; 1 bytes @ 0x22
   681  000023                     	ds	1
   682  000024                     main@page:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x23
   686  000024                     	ds	1
   687  000025                     main@down_period:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x24
   691  000025                     	ds	3
   692  000028                     main@current_state:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x27
   696  000028                     	ds	1
   697  000029                     main@past_min:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x28
   701  000029                     	ds	1
   702  00002A                     main@past_seconds:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x29
   706  00002A                     	ds	1
   707  00002B                     main@check:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x2A
   711  00002B                     	ds	1
   712  00002C                     main@z:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x2B
   716  00002C                     	ds	2
   717  00002E                     main@time:
   718                           	opt stack 0
   719                           
   720                           ; 7 bytes @ 0x2D
   721  00002E                     	ds	7
   722  000035                     main@i:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x34
   726  000035                     	ds	1
   727  000036                     main@i_572:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x35
   731  000036                     	ds	1
   732  000037                     main@i_573:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x36
   736  000037                     	ds	1
   737  000038                     main@i_574:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x37
   741  000038                     	ds	1
   742  000039                     main@i_582:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x38
   746  000039                     	ds	1
   747  00003A                     main@i_583:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x39
   751  00003A                     	ds	1
   752  00003B                     main@i_584:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x3A
   756  00003B                     	ds	1
   757  00003C                     main@i_595:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x3B
   761  00003C                     	ds	1
   762  00003D                     main@i_596:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x3C
   766  00003D                     	ds	1
   767  00003E                     main@i_597:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x3D
   771  00003E                     	ds	1
   772  00003F                     main@i_599:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x3E
   776  00003F                     	ds	1
   777  000040                     main@i_600:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x3F
   781  000040                     	ds	1
   782  000041                     main@i_601:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x40
   786  000041                     	ds	1
   787  000042                     main@i_603:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x41
   791  000042                     	ds	1
   792  000043                     main@i_604:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x42
   796  000043                     	ds	1
   797  000044                     main@i_605:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x43
   801  000044                     	ds	1
   802  000045                     main@i_607:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x44
   806  000045                     	ds	1
   807  000046                     main@i_608:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x45
   811  000046                     	ds	1
   812  000047                     main@i_609:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x46
   816  000047                     	ds	1
   817  000048                     main@i_611:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x47
   821  000048                     	ds	1
   822  000049                     main@i_612:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x48
   826  000049                     	ds	1
   827  00004A                     main@i_613:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x49
   831  00004A                     	ds	1
   832  00004B                     main@e:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x4A
   836  00004B                     	ds	1
   837  00004C                     main@i_623:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x4B
   841  00004C                     	ds	1
   842  00004D                     main@i_624:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x4C
   846  00004D                     	ds	1
   847  00004E                     main@i_625:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x4D
   851  00004E                     	ds	1
   852  00004F                     main@i_627:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x4E
   856  00004F                     	ds	1
   857  000050                     main@i_628:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x4F
   861  000050                     	ds	1
   862  000051                     main@i_629:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x50
   866  000051                     	ds	1
   867  000052                     main@i_632:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x51
   871  000052                     	ds	1
   872  000053                     main@i_633:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x52
   876  000053                     	ds	1
   877  000054                     main@i_634:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x53
   881  000054                     	ds	1
   882  000055                     main@j:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x54
   886  000055                     	ds	1
   887  000056                     main@k:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x55
   891  000056                     	ds	1
   892  000057                     main@k_575:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x56
   896  000057                     	ds	1
   897  000058                     main@count_min:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x57
   901  000058                     	ds	1
   902  000059                     main@address_min:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x58
   906  000059                     	ds	1
   907  00005A                     main@address_seconds:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x59
   911  00005A                     	ds	1
   912  00005B                     main@eeprom_min:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x5A
   916  00005B                     	ds	1
   917  00005C                     main@eeprom_seconds:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x5B
   921  00005C                     	ds	1
   922  00005D                     main@keypress:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x5C
   926  00005D                     	ds	1
   927  00005E                     main@count_min_initial:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x5D
   931  00005E                     	ds	1
   932  00005F                     main@count_seconds_initial:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x5E
   936  00005F                     	ds	1
   937  000060                     main@count_min_final:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x5F
   941  000060                     	ds	1
   942  000061                     main@count_seconds_final:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x60
   946  000061                     	ds	1
   947  000062                     main@count_seconds:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x61
   951  000062                     	ds	1
   952  000063                     main@up_period:
   953                           	opt stack 0
   954                           
   955                           ; 3 bytes @ 0x62
   956  000063                     	ds	3
   957  000066                     main@flag_interrupt:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x65
   961  000066                     	ds	2
   962                           tblptru	equ	0xFF8
   963                           
   964 ;;
   965 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   966 ;;
   967 ;; *************** function _main *****************
   968 ;; Defined at:
   969 ;;		line 88 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  i               1   77[COMRAM] unsigned char 
   974 ;;  i               1   76[COMRAM] unsigned char 
   975 ;;  i               1   75[COMRAM] unsigned char 
   976 ;;  j               1   84[COMRAM] unsigned char 
   977 ;;  i               1   55[COMRAM] unsigned char 
   978 ;;  i               1   54[COMRAM] unsigned char 
   979 ;;  i               1   53[COMRAM] unsigned char 
   980 ;;  i               1   83[COMRAM] unsigned char 
   981 ;;  i               1   82[COMRAM] unsigned char 
   982 ;;  i               1   81[COMRAM] unsigned char 
   983 ;;  i               1   80[COMRAM] unsigned char 
   984 ;;  i               1   79[COMRAM] unsigned char 
   985 ;;  i               1   78[COMRAM] unsigned char 
   986 ;;  e               1   74[COMRAM] unsigned char 
   987 ;;  i               1   73[COMRAM] unsigned char 
   988 ;;  i               1   72[COMRAM] unsigned char 
   989 ;;  i               1   71[COMRAM] unsigned char 
   990 ;;  i               1   70[COMRAM] unsigned char 
   991 ;;  i               1   69[COMRAM] unsigned char 
   992 ;;  i               1   68[COMRAM] unsigned char 
   993 ;;  i               1   67[COMRAM] unsigned char 
   994 ;;  i               1   66[COMRAM] unsigned char 
   995 ;;  i               1   65[COMRAM] unsigned char 
   996 ;;  i               1   64[COMRAM] unsigned char 
   997 ;;  i               1   63[COMRAM] unsigned char 
   998 ;;  i               1   62[COMRAM] unsigned char 
   999 ;;  i               1   61[COMRAM] unsigned char 
  1000 ;;  i               1   60[COMRAM] unsigned char 
  1001 ;;  i               1   59[COMRAM] unsigned char 
  1002 ;;  i               1   58[COMRAM] unsigned char 
  1003 ;;  i               1   57[COMRAM] unsigned char 
  1004 ;;  i               1   56[COMRAM] unsigned char 
  1005 ;;  k               1   86[COMRAM] unsigned char 
  1006 ;;  z               2   43[COMRAM] unsigned int 
  1007 ;;  k               1   85[COMRAM] unsigned char 
  1008 ;;  i               1   52[COMRAM] unsigned char 
  1009 ;;  address_seco    1   89[COMRAM] unsigned char 
  1010 ;;  address_min     1   88[COMRAM] unsigned char 
  1011 ;;  past_seconds    1   41[COMRAM] char 
  1012 ;;  past_min        1   40[COMRAM] char 
  1013 ;;  count_second    1   97[COMRAM] char 
  1014 ;;  count_second    1   96[COMRAM] unsigned char 
  1015 ;;  count_min_fi    1   95[COMRAM] unsigned char 
  1016 ;;  count_second    1   94[COMRAM] unsigned char 
  1017 ;;  count_min_in    1   93[COMRAM] unsigned char 
  1018 ;;  eeprom_secon    1   91[COMRAM] char 
  1019 ;;  eeprom_min      1   90[COMRAM] char 
  1020 ;;  count_min       1   87[COMRAM] char 
  1021 ;;  check           1   42[COMRAM] unsigned char 
  1022 ;;  keypress        1   92[COMRAM] unsigned char 
  1023 ;;  time            7   45[COMRAM] unsigned char [7]
  1024 ;;  up_period       3   98[COMRAM] volatile float 
  1025 ;;  down_period     3   36[COMRAM] volatile float 
  1026 ;;  flag_interru    2  101[COMRAM] int 
  1027 ;;  page            1   35[COMRAM] unsigned char 
  1028 ;;  current_stat    1   39[COMRAM] volatile unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Locals:        68       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Totals:        69       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;Total ram usage:       69 bytes
  1043 ;; Hardware stack levels required when called:    3
  1044 ;; This function calls:
  1045 ;;		_Eeprom_ReadByte
  1046 ;;		_Eeprom_WriteByte
  1047 ;;		_I2C_Master_Init
  1048 ;;		_I2C_Master_Read
  1049 ;;		_I2C_Master_Start
  1050 ;;		_I2C_Master_Stop
  1051 ;;		_I2C_Master_Write
  1052 ;;		___ftadd
  1053 ;;		___ftneg
  1054 ;;		_delay_1s_interrupt
  1055 ;;		_initLCD
  1056 ;;		_key_pressed_check
  1057 ;;		_lcdInst
  1058 ;;		_printf
  1059 ;;		_set_time
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text0
  1066  00F3F4                     __ptext0:
  1067                           	opt stack 0
  1068  00F3F4                     _main:
  1069                           	opt stack 28
  1070                           
  1071                           ;main.c: 89: OSCCON = 0xF0;
  1072                           
  1073                           ;incstack = 0
  1074  00F3F4  0EF0               	movlw	240
  1075  00F3F6  6ED3               	movwf	4051,c	;volatile
  1076                           
  1077                           ;main.c: 93: TRISA = 0x11101111;
  1078  00F3F8  0E11               	movlw	17
  1079  00F3FA  6E92               	movwf	3986,c	;volatile
  1080                           
  1081                           ;main.c: 94: TRISB = 0xFF;
  1082  00F3FC  6893               	setf	3987,c	;volatile
  1083                           
  1084                           ;main.c: 95: TRISC = 0x00;
  1085  00F3FE  0E00               	movlw	0
  1086  00F400  6E94               	movwf	3988,c	;volatile
  1087                           
  1088                           ;main.c: 96: TRISD = 0x00;
  1089  00F402  0E00               	movlw	0
  1090  00F404  6E95               	movwf	3989,c	;volatile
  1091                           
  1092                           ;main.c: 97: TRISE = 0x00;
  1093  00F406  0E00               	movlw	0
  1094  00F408  6E96               	movwf	3990,c	;volatile
  1095                           
  1096                           ;main.c: 99: LATA = 0x00;
  1097  00F40A  0E00               	movlw	0
  1098  00F40C  6E89               	movwf	3977,c	;volatile
  1099                           
  1100                           ;main.c: 100: LATB = 0x00;
  1101  00F40E  0E00               	movlw	0
  1102  00F410  6E8A               	movwf	3978,c	;volatile
  1103                           
  1104                           ;main.c: 101: LATC = 0x00;
  1105  00F412  0E00               	movlw	0
  1106  00F414  6E8B               	movwf	3979,c	;volatile
  1107                           
  1108                           ;main.c: 102: LATD = 0x00;
  1109  00F416  0E00               	movlw	0
  1110  00F418  6E8C               	movwf	3980,c	;volatile
  1111                           
  1112                           ;main.c: 103: LATE = 0x00;
  1113  00F41A  0E00               	movlw	0
  1114  00F41C  6E8D               	movwf	3981,c	;volatile
  1115                           
  1116                           ;main.c: 105: ADCON0 = 0x00;
  1117  00F41E  0E00               	movlw	0
  1118  00F420  6EC2               	movwf	4034,c	;volatile
  1119                           
  1120                           ;main.c: 106: ADCON1 = 0x0B;
  1121  00F422  0E0B               	movlw	11
  1122  00F424  6EC1               	movwf	4033,c	;volatile
  1123                           
  1124                           ;main.c: 108: nRBPU = 0;
  1125  00F426  9EF1               	bcf	intcon2,7,c	;volatile
  1126                           
  1127                           ;main.c: 111: T1CON = 0b10000000;
  1128  00F428  0E80               	movlw	128
  1129  00F42A  6ECD               	movwf	4045,c	;volatile
  1130                           
  1131                           ;main.c: 114: T1CKPS1 = 1;
  1132  00F42C  8ACD               	bsf	4045,5,c	;volatile
  1133                           
  1134                           ;main.c: 115: T1CKPS0 = 1;
  1135  00F42E  88CD               	bsf	4045,4,c	;volatile
  1136                           
  1137                           ;main.c: 117: T1OSCEN = 0;
  1138  00F430  96CD               	bcf	4045,3,c	;volatile
  1139                           
  1140                           ;main.c: 118: T1SYNC = 1;
  1141  00F432  84CD               	bsf	4045,2,c	;volatile
  1142                           
  1143                           ;main.c: 119: TMR1CS = 0;
  1144  00F434  92CD               	bcf	4045,1,c	;volatile
  1145                           
  1146                           ;main.c: 120: TMR1ON = 0;
  1147  00F436  90CD               	bcf	4045,0,c	;volatile
  1148                           
  1149                           ;main.c: 121: TMR1IE = 0;
  1150  00F438  909D               	bcf	3997,0,c	;volatile
  1151                           
  1152                           ;main.c: 122: TMR1IF = 0;
  1153  00F43A  909E               	bcf	3998,0,c	;volatile
  1154                           
  1155                           ;main.c: 124: volatile unsigned char current_state = 0;
  1156  00F43C  0E00               	movlw	0
  1157  00F43E  6E28               	movwf	main@current_state,c	;volatile
  1158                           
  1159                           ;main.c: 125: volatile float up_period = 1.5;
  1160  00F440  0E00               	movlw	0
  1161  00F442  6E63               	movwf	main@up_period,c	;volatile
  1162  00F444  0EC0               	movlw	192
  1163  00F446  6E64               	movwf	main@up_period+1,c	;volatile
  1164  00F448  0E3F               	movlw	63
  1165  00F44A  6E65               	movwf	main@up_period+2,c	;volatile
  1166                           
  1167                           ;main.c: 126: volatile float down_period = 20 - up_period;
  1168  00F44C  C063  F001         	movff	main@up_period,___ftneg@f1	;volatile
  1169  00F450  C064  F002         	movff	main@up_period+1,___ftneg@f1+1	;volatile
  1170  00F454  C065  F003         	movff	main@up_period+2,___ftneg@f1+2	;volatile
  1171  00F458  EC75  F075         	call	___ftneg	;wreg free
  1172  00F45C  C001  F009         	movff	?___ftneg,___ftadd@f1
  1173  00F460  C002  F00A         	movff	?___ftneg+1,___ftadd@f1+1
  1174  00F464  C003  F00B         	movff	?___ftneg+2,___ftadd@f1+2
  1175  00F468  0E00               	movlw	0
  1176  00F46A  6E0C               	movwf	___ftadd@f2,c
  1177  00F46C  0EA0               	movlw	160
  1178  00F46E  6E0D               	movwf	___ftadd@f2+1,c
  1179  00F470  0E41               	movlw	65
  1180  00F472  6E0E               	movwf	___ftadd@f2+2,c
  1181  00F474  EC9E  F077         	call	___ftadd	;wreg free
  1182  00F478  C009  F025         	movff	?___ftadd,main@down_period	;volatile
  1183  00F47C  C00A  F026         	movff	?___ftadd+1,main@down_period+1	;volatile
  1184  00F480  C00B  F027         	movff	?___ftadd+2,main@down_period+2	;volatile
  1185                           
  1186                           ;main.c: 130: initLCD();
  1187  00F484  EC13  F076         	call	_initLCD	;wreg free
  1188                           
  1189                           ;main.c: 132: unsigned char time[7];
  1190                           ;main.c: 133: int flag_interrupt = 0;
  1191  00F488  0E00               	movlw	0
  1192  00F48A  6E67               	movwf	main@flag_interrupt+1,c
  1193  00F48C  0E00               	movlw	0
  1194  00F48E  6E66               	movwf	main@flag_interrupt,c
  1195                           
  1196                           ;main.c: 134: I2C_Master_Init(10000);
  1197  00F490  0E10               	movlw	16
  1198  00F492  6E0E               	movwf	I2C_Master_Init@c,c
  1199  00F494  0E27               	movlw	39
  1200  00F496  6E0F               	movwf	I2C_Master_Init@c+1,c
  1201  00F498  0E00               	movlw	0
  1202  00F49A  6E10               	movwf	I2C_Master_Init@c+2,c
  1203  00F49C  0E00               	movlw	0
  1204  00F49E  6E11               	movwf	I2C_Master_Init@c+3,c
  1205  00F4A0  ECD9  F076         	call	_I2C_Master_Init	;wreg free
  1206                           
  1207                           ;main.c: 135: set_time();
  1208  00F4A4  EC36  F076         	call	_set_time	;wreg free
  1209                           
  1210                           ;main.c: 137: unsigned char page = 0;
  1211  00F4A8  0E00               	movlw	0
  1212  00F4AA  6E24               	movwf	main@page,c
  1213                           
  1214                           ;main.c: 140: while(PORTBbits.RB1 == 0){
  1215                           
  1216                           ;main.c: 139: while(1){
  1217  00F4AC  D0B0               	goto	l224
  1218  00F4AE                     l2574:
  1219                           
  1220                           ;main.c: 144: flag_interrupt = 0;
  1221  00F4AE  0E00               	movlw	0
  1222  00F4B0  6E67               	movwf	main@flag_interrupt+1,c
  1223  00F4B2  0E00               	movlw	0
  1224  00F4B4  6E66               	movwf	main@flag_interrupt,c
  1225                           
  1226                           ;main.c: 146: initLCD();
  1227  00F4B6  EC13  F076         	call	_initLCD	;wreg free
  1228                           
  1229                           ;main.c: 147: for(unsigned char i=0;i<0x06;i++){
  1230  00F4BA  0E00               	movlw	0
  1231  00F4BC  6E35               	movwf	main@i,c
  1232  00F4BE                     l2580:
  1233  00F4BE  0E05               	movlw	5
  1234  00F4C0  6435               	cpfsgt	main@i,c
  1235  00F4C2  D001               	goto	l2584
  1236  00F4C4  D067               	goto	l2624
  1237  00F4C6                     l2584:
  1238                           
  1239                           ;main.c: 148: flag_interrupt = 0;
  1240  00F4C6  0E00               	movlw	0
  1241  00F4C8  6E67               	movwf	main@flag_interrupt+1,c
  1242  00F4CA  0E00               	movlw	0
  1243  00F4CC  6E66               	movwf	main@flag_interrupt,c
  1244                           
  1245                           ;main.c: 149: I2C_Master_Start();
  1246  00F4CE  EC31  F075         	call	_I2C_Master_Start	;wreg free
  1247                           
  1248                           ;main.c: 150: I2C_Master_Write(0b11010000);
  1249  00F4D2  0E00               	movlw	0
  1250  00F4D4  6E03               	movwf	I2C_Master_Write@d+1,c
  1251  00F4D6  0ED0               	movlw	208
  1252  00F4D8  6E02               	movwf	I2C_Master_Write@d,c
  1253  00F4DA  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1254                           
  1255                           ;main.c: 151: I2C_Master_Write(0x00);
  1256  00F4DE  0E00               	movlw	0
  1257  00F4E0  6E03               	movwf	I2C_Master_Write@d+1,c
  1258  00F4E2  0E00               	movlw	0
  1259  00F4E4  6E02               	movwf	I2C_Master_Write@d,c
  1260  00F4E6  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1261                           
  1262                           ;main.c: 152: I2C_Master_Stop();
  1263  00F4EA  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  1264                           
  1265                           ;main.c: 155: I2C_Master_Start();
  1266  00F4EE  EC31  F075         	call	_I2C_Master_Start	;wreg free
  1267                           
  1268                           ;main.c: 156: I2C_Master_Write(0b11010001);
  1269  00F4F2  0E00               	movlw	0
  1270  00F4F4  6E03               	movwf	I2C_Master_Write@d+1,c
  1271  00F4F6  0ED1               	movlw	209
  1272  00F4F8  6E02               	movwf	I2C_Master_Write@d,c
  1273  00F4FA  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1274                           
  1275                           ;main.c: 157: for(unsigned char j=0;j<0x06;j++){
  1276  00F4FE  0E00               	movlw	0
  1277  00F500  6E55               	movwf	main@j,c
  1278  00F502                     l2598:
  1279  00F502  0E05               	movlw	5
  1280  00F504  6455               	cpfsgt	main@j,c
  1281  00F506  D001               	goto	l2602
  1282  00F508  D00E               	goto	l2608
  1283  00F50A                     l2602:
  1284                           
  1285                           ;main.c: 158: time[j] = I2C_Master_Read(1);
  1286  00F50A  5055               	movf	main@j,w,c
  1287  00F50C  0D01               	mullw	1
  1288  00F50E  0E2E               	movlw	low main@time
  1289  00F510  24F3               	addwf	prodl,w,c
  1290  00F512  6ED9               	movwf	fsr2l,c
  1291  00F514  0E00               	movlw	high main@time
  1292  00F516  20F4               	addwfc	prodh,w,c
  1293  00F518  6EDA               	movwf	fsr2h,c
  1294  00F51A  0E01               	movlw	1
  1295  00F51C  EC87  F075         	call	_I2C_Master_Read
  1296  00F520  6EDF               	movwf	indf2,c
  1297  00F522  2A55               	incf	main@j,f,c
  1298  00F524  D7EE               	goto	l2598
  1299  00F526                     l2608:
  1300                           
  1301                           ;main.c: 159: }
  1302                           ;main.c: 160: time[6] = I2C_Master_Read(0);
  1303  00F526  0E00               	movlw	0
  1304  00F528  EC87  F075         	call	_I2C_Master_Read
  1305  00F52C  6E34               	movwf	main@time+6,c
  1306                           
  1307                           ;main.c: 161: I2C_Master_Stop();
  1308  00F52E  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  1309                           
  1310                           ;main.c: 162: lcdInst(0b10000000);;
  1311  00F532  0E80               	movlw	128
  1312  00F534  EC43  F075         	call	_lcdInst
  1313                           
  1314                           ;main.c: 163: printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1315  00F538  0E3F               	movlw	low STR_1
  1316  00F53A  6E0D               	movwf	printf@f,c
  1317  00F53C  0EFF               	movlw	high STR_1
  1318  00F53E  6E0E               	movwf	printf@f+1,c
  1319  00F540  C034  F00F         	movff	main@time+6,?_printf+2
  1320  00F544  6A10               	clrf	?_printf+3,c
  1321  00F546  C033  F011         	movff	main@time+5,?_printf+4
  1322  00F54A  6A12               	clrf	?_printf+5,c
  1323  00F54C  C032  F013         	movff	main@time+4,?_printf+6
  1324  00F550  6A14               	clrf	?_printf+7,c
  1325  00F552  EC74  F078         	call	_printf	;wreg free
  1326                           
  1327                           ;main.c: 164: lcdInst(0b11000000);;
  1328  00F556  0EC0               	movlw	192
  1329  00F558  EC43  F075         	call	_lcdInst
  1330                           
  1331                           ;main.c: 165: printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1332  00F55C  0E4E               	movlw	low STR_2
  1333  00F55E  6E0D               	movwf	printf@f,c
  1334  00F560  0EFF               	movlw	high STR_2
  1335  00F562  6E0E               	movwf	printf@f+1,c
  1336  00F564  C030  F00F         	movff	main@time+2,?_printf+2
  1337  00F568  6A10               	clrf	?_printf+3,c
  1338  00F56A  C02F  F011         	movff	main@time+1,?_printf+4
  1339  00F56E  6A12               	clrf	?_printf+5,c
  1340  00F570  C02E  F013         	movff	main@time,?_printf+6
  1341  00F574  6A14               	clrf	?_printf+7,c
  1342  00F576  EC74  F078         	call	_printf	;wreg free
  1343                           
  1344                           ;main.c: 167: flag_interrupt = delay_1s_interrupt(1);
  1345  00F57A  0E01               	movlw	1
  1346  00F57C  EC5D  F076         	call	_delay_1s_interrupt
  1347  00F580  C001  F066         	movff	?_delay_1s_interrupt,main@flag_interrupt
  1348  00F584  C002  F067         	movff	?_delay_1s_interrupt+1,main@flag_interrupt+1
  1349                           
  1350                           ;main.c: 168: if(flag_interrupt == 1){
  1351  00F588  0466               	decf	main@flag_interrupt,w,c
  1352  00F58A  1067               	iorwf	main@flag_interrupt+1,w,c
  1353  00F58C  B4D8               	btfsc	status,2,c
  1354  00F58E  D002               	goto	l2624
  1355                           
  1356                           ;main.c: 169: break;
  1357  00F590  2A35               	incf	main@i,f,c
  1358  00F592  D795               	goto	l2580
  1359  00F594                     l2624:
  1360                           
  1361                           ;main.c: 170: }
  1362                           ;main.c: 171: }
  1363                           ;main.c: 172: if(flag_interrupt == 1){
  1364  00F594  0466               	decf	main@flag_interrupt,w,c
  1365  00F596  1067               	iorwf	main@flag_interrupt+1,w,c
  1366  00F598  B4D8               	btfsc	status,2,c
  1367  00F59A  D03B               	goto	l2658
  1368                           
  1369                           ;main.c: 174: }
  1370                           ;main.c: 175: initLCD();
  1371                           
  1372                           ;main.c: 173: break;
  1373  00F59C  EC13  F076         	call	_initLCD	;wreg free
  1374                           
  1375                           ;main.c: 176: printf("1: Start");
  1376  00F5A0  0ED1               	movlw	low STR_3
  1377  00F5A2  6E0D               	movwf	printf@f,c
  1378  00F5A4  0EFF               	movlw	high STR_3
  1379  00F5A6  6E0E               	movwf	printf@f+1,c
  1380  00F5A8  EC74  F078         	call	_printf	;wreg free
  1381                           
  1382                           ;main.c: 177: flag_interrupt = delay_1s_interrupt(2);
  1383  00F5AC  0E02               	movlw	2
  1384  00F5AE  EC5D  F076         	call	_delay_1s_interrupt
  1385  00F5B2  C001  F066         	movff	?_delay_1s_interrupt,main@flag_interrupt
  1386  00F5B6  C002  F067         	movff	?_delay_1s_interrupt+1,main@flag_interrupt+1
  1387                           
  1388                           ;main.c: 178: if(flag_interrupt == 1){
  1389  00F5BA  0466               	decf	main@flag_interrupt,w,c
  1390  00F5BC  1067               	iorwf	main@flag_interrupt+1,w,c
  1391  00F5BE  B4D8               	btfsc	status,2,c
  1392  00F5C0  D028               	goto	l2658
  1393                           
  1394                           ;main.c: 180: }
  1395                           ;main.c: 182: initLCD();
  1396                           
  1397                           ;main.c: 179: break;
  1398  00F5C2  EC13  F076         	call	_initLCD	;wreg free
  1399                           
  1400                           ;main.c: 183: printf("2: Logs");
  1401  00F5C6  0EDA               	movlw	low STR_4
  1402  00F5C8  6E0D               	movwf	printf@f,c
  1403  00F5CA  0EFF               	movlw	high STR_4
  1404  00F5CC  6E0E               	movwf	printf@f+1,c
  1405  00F5CE  EC74  F078         	call	_printf	;wreg free
  1406                           
  1407                           ;main.c: 184: flag_interrupt = delay_1s_interrupt(2);
  1408  00F5D2  0E02               	movlw	2
  1409  00F5D4  EC5D  F076         	call	_delay_1s_interrupt
  1410  00F5D8  C001  F066         	movff	?_delay_1s_interrupt,main@flag_interrupt
  1411  00F5DC  C002  F067         	movff	?_delay_1s_interrupt+1,main@flag_interrupt+1
  1412                           
  1413                           ;main.c: 185: if(flag_interrupt == 1){
  1414  00F5E0  0466               	decf	main@flag_interrupt,w,c
  1415  00F5E2  1067               	iorwf	main@flag_interrupt+1,w,c
  1416  00F5E4  B4D8               	btfsc	status,2,c
  1417  00F5E6  D015               	goto	l2658
  1418                           
  1419                           ;main.c: 187: }
  1420                           ;main.c: 189: initLCD();
  1421                           
  1422                           ;main.c: 186: break;
  1423  00F5E8  EC13  F076         	call	_initLCD	;wreg free
  1424                           
  1425                           ;main.c: 190: printf("3: PC Download");
  1426  00F5EC  0E30               	movlw	low STR_5
  1427  00F5EE  6E0D               	movwf	printf@f,c
  1428  00F5F0  0EFF               	movlw	high STR_5
  1429  00F5F2  6E0E               	movwf	printf@f+1,c
  1430  00F5F4  EC74  F078         	call	_printf	;wreg free
  1431                           
  1432                           ;main.c: 191: flag_interrupt = delay_1s_interrupt(2);
  1433  00F5F8  0E02               	movlw	2
  1434  00F5FA  EC5D  F076         	call	_delay_1s_interrupt
  1435  00F5FE  C001  F066         	movff	?_delay_1s_interrupt,main@flag_interrupt
  1436  00F602  C002  F067         	movff	?_delay_1s_interrupt+1,main@flag_interrupt+1
  1437                           
  1438                           ;main.c: 192: if(flag_interrupt == 1){
  1439  00F606  0466               	decf	main@flag_interrupt,w,c
  1440  00F608  1067               	iorwf	main@flag_interrupt+1,w,c
  1441  00F60A  B4D8               	btfsc	status,2,c
  1442  00F60C  D002               	goto	l2658
  1443  00F60E                     l224:
  1444  00F60E  A281               	btfss	3969,1,c	;volatile
  1445  00F610  D74E               	goto	l2574
  1446  00F612                     l2658:
  1447                           
  1448                           ;main.c: 194: }
  1449                           ;main.c: 195: }
  1450                           ;main.c: 196: unsigned char keypress = (PORTB & 0xF0)>>4;
  1451  00F612  3881               	swapf	3969,w,c	;volatile
  1452  00F614  0B0F               	andlw	15
  1453  00F616  0B0F               	andlw	15
  1454  00F618  6E5D               	movwf	main@keypress,c
  1455  00F61A                     l236:
  1456  00F61A  B281               	btfsc	3969,1,c	;volatile
  1457  00F61C  D7FE               	goto	l236
  1458                           
  1459                           ;main.c: 201: }
  1460                           ;main.c: 203: __nop();
  1461  00F61E  F000               	nop	
  1462                           
  1463                           ;main.c: 204: __nop();
  1464  00F620  F000               	nop	
  1465                           
  1466                           ;main.c: 206: if (keys[keypress] == keys[0]){
  1467  00F622  505D               	movf	main@keypress,w,c
  1468  00F624  0D01               	mullw	1
  1469  00F626  0ED7               	movlw	low _keys
  1470  00F628  24F3               	addwf	prodl,w,c
  1471  00F62A  6EF6               	movwf	tblptrl,c
  1472  00F62C  0EFE               	movlw	high _keys
  1473  00F62E  20F4               	addwfc	prodh,w,c
  1474  00F630  6EF7               	movwf	tblptrh,c
  1475  00F632                     	if	0	;There are less than 3 active tblptr bytes
  1476  00F632                     	endif
  1477  00F632  0008               	tblrd		*
  1478  00F634  CFF5 F023          	movff	tablat,??_main
  1479  00F638  0ED7               	movlw	low _keys
  1480  00F63A  6EF6               	movwf	tblptrl,c
  1481  00F63C                     	if	1	;There is more than 1 active tblptr byte
  1482  00F63C  0EFE               	movlw	high _keys
  1483  00F63E  6EF7               	movwf	tblptrh,c
  1484  00F640                     	endif
  1485  00F640                     	if	0	;There are less than 3 active tblptr bytes
  1486  00F640                     	endif
  1487  00F640  0008               	tblrd		*
  1488  00F642  50F5               	movf	tablat,w,c
  1489  00F644  1823               	xorwf	??_main,w,c
  1490  00F646  A4D8               	btfss	status,2,c
  1491  00F648  D32B               	goto	l3044
  1492                           
  1493                           ;main.c: 208: I2C_Master_Start();
  1494  00F64A  EC31  F075         	call	_I2C_Master_Start	;wreg free
  1495                           
  1496                           ;main.c: 209: I2C_Master_Write(0b11010000);
  1497  00F64E  0E00               	movlw	0
  1498  00F650  6E03               	movwf	I2C_Master_Write@d+1,c
  1499  00F652  0ED0               	movlw	208
  1500  00F654  6E02               	movwf	I2C_Master_Write@d,c
  1501  00F656  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1502                           
  1503                           ;main.c: 210: I2C_Master_Write(0x00);
  1504  00F65A  0E00               	movlw	0
  1505  00F65C  6E03               	movwf	I2C_Master_Write@d+1,c
  1506  00F65E  0E00               	movlw	0
  1507  00F660  6E02               	movwf	I2C_Master_Write@d,c
  1508  00F662  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1509                           
  1510                           ;main.c: 211: I2C_Master_Stop();
  1511  00F666  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  1512                           
  1513                           ;main.c: 213: I2C_Master_Start();
  1514  00F66A  EC31  F075         	call	_I2C_Master_Start	;wreg free
  1515                           
  1516                           ;main.c: 214: I2C_Master_Write(0b11010001);
  1517  00F66E  0E00               	movlw	0
  1518  00F670  6E03               	movwf	I2C_Master_Write@d+1,c
  1519  00F672  0ED1               	movlw	209
  1520  00F674  6E02               	movwf	I2C_Master_Write@d,c
  1521  00F676  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1522                           
  1523                           ;main.c: 215: for(unsigned char k=0;k<0x06;k++){
  1524  00F67A  0E00               	movlw	0
  1525  00F67C  6E56               	movwf	main@k,c
  1526  00F67E                     l2666:
  1527  00F67E  0E05               	movlw	5
  1528  00F680  6456               	cpfsgt	main@k,c
  1529  00F682  D001               	goto	l2670
  1530  00F684  D00E               	goto	l2676
  1531  00F686                     l2670:
  1532                           
  1533                           ;main.c: 216: time[k] = I2C_Master_Read(1);
  1534  00F686  5056               	movf	main@k,w,c
  1535  00F688  0D01               	mullw	1
  1536  00F68A  0E2E               	movlw	low main@time
  1537  00F68C  24F3               	addwf	prodl,w,c
  1538  00F68E  6ED9               	movwf	fsr2l,c
  1539  00F690  0E00               	movlw	high main@time
  1540  00F692  20F4               	addwfc	prodh,w,c
  1541  00F694  6EDA               	movwf	fsr2h,c
  1542  00F696  0E01               	movlw	1
  1543  00F698  EC87  F075         	call	_I2C_Master_Read
  1544  00F69C  6EDF               	movwf	indf2,c
  1545  00F69E  2A56               	incf	main@k,f,c
  1546  00F6A0  D7EE               	goto	l2666
  1547  00F6A2                     l2676:
  1548                           
  1549                           ;main.c: 217: }
  1550                           ;main.c: 218: time[6] = I2C_Master_Read(0);
  1551  00F6A2  0E00               	movlw	0
  1552  00F6A4  EC87  F075         	call	_I2C_Master_Read
  1553  00F6A8  6E34               	movwf	main@time+6,c
  1554                           
  1555                           ;main.c: 219: I2C_Master_Stop();
  1556  00F6AA  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  1557                           
  1558                           ;main.c: 221: unsigned char count_min_initial = time[1];
  1559  00F6AE  C02F  F05E         	movff	main@time+1,main@count_min_initial
  1560                           
  1561                           ;main.c: 222: unsigned char count_seconds_initial = time[0];
  1562  00F6B2  C02E  F05F         	movff	main@time,main@count_seconds_initial
  1563                           
  1564                           ;main.c: 223: unsigned char check = 0;
  1565  00F6B6  0E00               	movlw	0
  1566  00F6B8  6E2B               	movwf	main@check,c
  1567                           
  1568                           ;main.c: 225: initLCD();
  1569  00F6BA  EC13  F076         	call	_initLCD	;wreg free
  1570                           
  1571                           ;main.c: 226: printf("Operating...");
  1572  00F6BE  0E6B               	movlw	low STR_6
  1573  00F6C0  6E0D               	movwf	printf@f,c
  1574  00F6C2  0EFF               	movlw	high STR_6
  1575  00F6C4  6E0E               	movwf	printf@f+1,c
  1576  00F6C6  EC74  F078         	call	_printf	;wreg free
  1577                           
  1578                           ;main.c: 228: for(unsigned int z=0;z<50;z++){
  1579  00F6CA  0E00               	movlw	0
  1580  00F6CC  6E2D               	movwf	main@z+1,c
  1581  00F6CE  0E00               	movlw	0
  1582  00F6D0  6E2C               	movwf	main@z,c
  1583  00F6D2                     l2690:
  1584  00F6D2  502D               	movf	main@z+1,w,c
  1585  00F6D4  E11B               	bnz	l2702
  1586  00F6D6  0E32               	movlw	50
  1587  00F6D8  5C2C               	subwf	main@z,w,c
  1588  00F6DA  B0D8               	btfsc	status,0,c
  1589  00F6DC  D017               	goto	l2702
  1590                           
  1591                           ;main.c: 229: PORTAbits.RA4 = 1;
  1592  00F6DE  8880               	bsf	3968,4,c	;volatile
  1593                           
  1594                           ;main.c: 230: _delay((unsigned long)((2)*(8000000/4000.0)));
  1595  00F6E0  0E06               	movlw	6
  1596  00F6E2  6E23               	movwf	??_main& (0+255),c
  1597  00F6E4  0E30               	movlw	48
  1598  00F6E6                     u3347:
  1599  00F6E6  2EE8               	decfsz	wreg,f,c
  1600  00F6E8  D7FE               	bra	u3347
  1601  00F6EA  2E23               	decfsz	??_main& (0+255),f,c
  1602  00F6EC  D7FC               	bra	u3347
  1603  00F6EE  D000               	nop2	
  1604                           
  1605                           ;main.c: 231: PORTAbits.RA4 = 0;
  1606  00F6F0  9880               	bcf	3968,4,c	;volatile
  1607                           
  1608                           ;main.c: 232: _delay((unsigned long)((18)*(8000000/4000.0)));
  1609  00F6F2  0E2F               	movlw	47
  1610  00F6F4  6E23               	movwf	??_main& (0+255),c
  1611  00F6F6  0EC0               	movlw	192
  1612  00F6F8                     u3357:
  1613  00F6F8  2EE8               	decfsz	wreg,f,c
  1614  00F6FA  D7FE               	bra	u3357
  1615  00F6FC  2E23               	decfsz	??_main& (0+255),f,c
  1616  00F6FE  D7FC               	bra	u3357
  1617  00F700  4A2C               	infsnz	main@z,f,c
  1618  00F702  2A2D               	incf	main@z+1,f,c
  1619  00F704  D7E6               	goto	l2690
  1620  00F706                     l2700:
  1621                           
  1622                           ;main.c: 236: check = key_pressed_check();
  1623  00F706  ECC1  F075         	call	_key_pressed_check	;wreg free
  1624  00F70A  6E2B               	movwf	main@check,c
  1625  00F70C                     l2702:
  1626  00F70C  502B               	movf	main@check,w,c
  1627  00F70E  B4D8               	btfsc	status,2,c
  1628  00F710  D7FA               	goto	l2700
  1629                           
  1630                           ;main.c: 245: }
  1631                           ;main.c: 246: check = 0;
  1632  00F712  0E00               	movlw	0
  1633  00F714  6E2B               	movwf	main@check,c
  1634                           
  1635                           ;main.c: 247: keypress = (PORTB & 0xF0)>>4;
  1636  00F716  3881               	swapf	3969,w,c	;volatile
  1637  00F718  0B0F               	andlw	15
  1638  00F71A  0B0F               	andlw	15
  1639  00F71C  6E5D               	movwf	main@keypress,c
  1640  00F71E                     l247:
  1641  00F71E  B281               	btfsc	3969,1,c	;volatile
  1642  00F720  D7FE               	goto	l247
  1643                           
  1644                           ;main.c: 251: }
  1645                           ;main.c: 253: __nop();
  1646  00F722  F000               	nop	
  1647                           
  1648                           ;main.c: 254: __nop();
  1649  00F724  F000               	nop	
  1650                           
  1651                           ;main.c: 256: if(keys[keypress] == keys[0]){
  1652  00F726  505D               	movf	main@keypress,w,c
  1653  00F728  0D01               	mullw	1
  1654  00F72A  0ED7               	movlw	low _keys
  1655  00F72C  24F3               	addwf	prodl,w,c
  1656  00F72E  6EF6               	movwf	tblptrl,c
  1657  00F730  0EFE               	movlw	high _keys
  1658  00F732  20F4               	addwfc	prodh,w,c
  1659  00F734  6EF7               	movwf	tblptrh,c
  1660  00F736                     	if	0	;There are less than 3 active tblptr bytes
  1661  00F736                     	endif
  1662  00F736  0008               	tblrd		*
  1663  00F738  CFF5 F023          	movff	tablat,??_main
  1664  00F73C  0ED7               	movlw	low _keys
  1665  00F73E  6EF6               	movwf	tblptrl,c
  1666  00F740                     	if	1	;There is more than 1 active tblptr byte
  1667  00F740  0EFE               	movlw	high _keys
  1668  00F742  6EF7               	movwf	tblptrh,c
  1669  00F744                     	endif
  1670  00F744                     	if	0	;There are less than 3 active tblptr bytes
  1671  00F744                     	endif
  1672  00F744  0008               	tblrd		*
  1673  00F746  50F5               	movf	tablat,w,c
  1674  00F748  1823               	xorwf	??_main,w,c
  1675  00F74A  B4D8               	btfsc	status,2,c
  1676  00F74C  D039               	goto	l251
  1677  00F74E  D073               	goto	l2770
  1678  00F750                     l2712:
  1679                           
  1680                           ;main.c: 258: initLCD();
  1681  00F750  EC13  F076         	call	_initLCD	;wreg free
  1682                           
  1683                           ;main.c: 259: printf("EMERGENCY");
  1684  00F754  0E9A               	movlw	low STR_7
  1685  00F756  6E0D               	movwf	printf@f,c
  1686  00F758  0EFF               	movlw	high STR_7
  1687  00F75A  6E0E               	movwf	printf@f+1,c
  1688  00F75C  EC74  F078         	call	_printf	;wreg free
  1689                           
  1690                           ;main.c: 260: lcdInst(0b11000000);;
  1691  00F760  0EC0               	movlw	192
  1692  00F762  EC43  F075         	call	_lcdInst
  1693                           
  1694                           ;main.c: 261: printf("STOP");
  1695  00F766  0EE9               	movlw	low STR_8
  1696  00F768  6E0D               	movwf	printf@f,c
  1697  00F76A  0EFF               	movlw	high STR_8
  1698  00F76C  6E0E               	movwf	printf@f+1,c
  1699  00F76E  EC74  F078         	call	_printf	;wreg free
  1700                           
  1701                           ;main.c: 262: flag_interrupt = delay_1s_interrupt(2);
  1702  00F772  0E02               	movlw	2
  1703  00F774  EC5D  F076         	call	_delay_1s_interrupt
  1704  00F778  C001  F066         	movff	?_delay_1s_interrupt,main@flag_interrupt
  1705  00F77C  C002  F067         	movff	?_delay_1s_interrupt+1,main@flag_interrupt+1
  1706                           
  1707                           ;main.c: 263: if(flag_interrupt == 1){
  1708  00F780  0466               	decf	main@flag_interrupt,w,c
  1709  00F782  1067               	iorwf	main@flag_interrupt+1,w,c
  1710  00F784  B4D8               	btfsc	status,2,c
  1711  00F786  D01E               	goto	l2736
  1712                           
  1713                           ;main.c: 265: }
  1714                           ;main.c: 266: initLCD();
  1715                           
  1716                           ;main.c: 264: break;
  1717  00F788  EC13  F076         	call	_initLCD	;wreg free
  1718                           
  1719                           ;main.c: 267: printf("Press Any Key");
  1720  00F78C  0E5D               	movlw	low STR_9
  1721  00F78E  6E0D               	movwf	printf@f,c
  1722  00F790  0EFF               	movlw	high STR_9
  1723  00F792  6E0E               	movwf	printf@f+1,c
  1724  00F794  EC74  F078         	call	_printf	;wreg free
  1725                           
  1726                           ;main.c: 268: lcdInst(0b11000000);;
  1727  00F798  0EC0               	movlw	192
  1728  00F79A  EC43  F075         	call	_lcdInst
  1729                           
  1730                           ;main.c: 269: printf("To Reset");
  1731  00F79E  0EC8               	movlw	low STR_10
  1732  00F7A0  6E0D               	movwf	printf@f,c
  1733  00F7A2  0EFF               	movlw	high STR_10
  1734  00F7A4  6E0E               	movwf	printf@f+1,c
  1735  00F7A6  EC74  F078         	call	_printf	;wreg free
  1736                           
  1737                           ;main.c: 270: flag_interrupt = delay_1s_interrupt(2);
  1738  00F7AA  0E02               	movlw	2
  1739  00F7AC  EC5D  F076         	call	_delay_1s_interrupt
  1740  00F7B0  C001  F066         	movff	?_delay_1s_interrupt,main@flag_interrupt
  1741  00F7B4  C002  F067         	movff	?_delay_1s_interrupt+1,main@flag_interrupt+1
  1742                           
  1743                           ;main.c: 271: if(flag_interrupt == 1){
  1744  00F7B8  0466               	decf	main@flag_interrupt,w,c
  1745  00F7BA  1067               	iorwf	main@flag_interrupt+1,w,c
  1746  00F7BC  B4D8               	btfsc	status,2,c
  1747  00F7BE  D002               	goto	l2736
  1748  00F7C0                     l251:
  1749  00F7C0  A281               	btfss	3969,1,c	;volatile
  1750  00F7C2  D7C6               	goto	l2712
  1751  00F7C4                     l2736:
  1752                           
  1753                           ;main.c: 273: }
  1754                           ;main.c: 274: }
  1755                           ;main.c: 275: initLCD();
  1756  00F7C4  EC13  F076         	call	_initLCD	;wreg free
  1757                           
  1758                           ;main.c: 276: printf("Terminating...");
  1759  00F7C8  0E21               	movlw	low STR_11
  1760  00F7CA  6E0D               	movwf	printf@f,c
  1761  00F7CC  0EFF               	movlw	high STR_11
  1762  00F7CE  6E0E               	movwf	printf@f+1,c
  1763  00F7D0  EC74  F078         	call	_printf	;wreg free
  1764                           
  1765                           ;main.c: 277: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  1766  00F7D4  0E00               	movlw	0
  1767  00F7D6  6E36               	movwf	main@i_572,c
  1768  00F7D8                     l2742:
  1769  00F7D8  0E09               	movlw	9
  1770  00F7DA  6436               	cpfsgt	main@i_572,c
  1771  00F7DC  D001               	goto	l2746
  1772  00F7DE  D00A               	goto	l2750
  1773  00F7E0                     l2746:
  1774  00F7E0  0EFF               	movlw	255
  1775  00F7E2  6E23               	movwf	??_main& (0+255),c
  1776  00F7E4  0E8A               	movlw	138
  1777  00F7E6                     u3367:
  1778  00F7E6  2EE8               	decfsz	wreg,f,c
  1779  00F7E8  D7FE               	bra	u3367
  1780  00F7EA  2E23               	decfsz	??_main& (0+255),f,c
  1781  00F7EC  D7FC               	bra	u3367
  1782  00F7EE  D000               	nop2	
  1783  00F7F0  2A36               	incf	main@i_572,f,c
  1784  00F7F2  D7F2               	goto	l2742
  1785  00F7F4                     l2750:
  1786                           
  1787                           ;main.c: 278: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  1788  00F7F4  0E00               	movlw	0
  1789  00F7F6  6E37               	movwf	main@i_573,c
  1790  00F7F8                     l2752:
  1791  00F7F8  0E09               	movlw	9
  1792  00F7FA  6437               	cpfsgt	main@i_573,c
  1793  00F7FC  D001               	goto	l2756
  1794  00F7FE  D00A               	goto	l2760
  1795  00F800                     l2756:
  1796  00F800  0EFF               	movlw	255
  1797  00F802  6E23               	movwf	??_main& (0+255),c
  1798  00F804  0E8A               	movlw	138
  1799  00F806                     u3377:
  1800  00F806  2EE8               	decfsz	wreg,f,c
  1801  00F808  D7FE               	bra	u3377
  1802  00F80A  2E23               	decfsz	??_main& (0+255),f,c
  1803  00F80C  D7FC               	bra	u3377
  1804  00F80E  D000               	nop2	
  1805  00F810  2A37               	incf	main@i_573,f,c
  1806  00F812  D7F2               	goto	l2752
  1807  00F814                     l2760:
  1808                           
  1809                           ;main.c: 279: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  1810  00F814  0E00               	movlw	0
  1811  00F816  6E38               	movwf	main@i_574,c
  1812  00F818                     l2762:
  1813  00F818  0E09               	movlw	9
  1814  00F81A  6438               	cpfsgt	main@i_574,c
  1815  00F81C  D002               	goto	l2766
  1816  00F81E  EF00  F000         	goto	start
  1817  00F822                     l2766:
  1818  00F822  0EFF               	movlw	255
  1819  00F824  6E23               	movwf	??_main& (0+255),c
  1820  00F826  0E8A               	movlw	138
  1821  00F828                     u3387:
  1822  00F828  2EE8               	decfsz	wreg,f,c
  1823  00F82A  D7FE               	bra	u3387
  1824  00F82C  2E23               	decfsz	??_main& (0+255),f,c
  1825  00F82E  D7FC               	bra	u3387
  1826  00F830  D000               	nop2	
  1827  00F832  2A38               	incf	main@i_574,f,c
  1828  00F834  D7F1               	goto	l2762
  1829  00F836                     l2770:
  1830                           
  1831                           ;main.c: 281: }
  1832                           ;main.c: 283: I2C_Master_Start();
  1833  00F836  EC31  F075         	call	_I2C_Master_Start	;wreg free
  1834                           
  1835                           ;main.c: 284: I2C_Master_Write(0b11010000);
  1836  00F83A  0E00               	movlw	0
  1837  00F83C  6E03               	movwf	I2C_Master_Write@d+1,c
  1838  00F83E  0ED0               	movlw	208
  1839  00F840  6E02               	movwf	I2C_Master_Write@d,c
  1840  00F842  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1841                           
  1842                           ;main.c: 285: I2C_Master_Write(0x00);
  1843  00F846  0E00               	movlw	0
  1844  00F848  6E03               	movwf	I2C_Master_Write@d+1,c
  1845  00F84A  0E00               	movlw	0
  1846  00F84C  6E02               	movwf	I2C_Master_Write@d,c
  1847  00F84E  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1848                           
  1849                           ;main.c: 286: I2C_Master_Stop();
  1850  00F852  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  1851                           
  1852                           ;main.c: 288: I2C_Master_Start();
  1853  00F856  EC31  F075         	call	_I2C_Master_Start	;wreg free
  1854                           
  1855                           ;main.c: 289: I2C_Master_Write(0b11010001);
  1856  00F85A  0E00               	movlw	0
  1857  00F85C  6E03               	movwf	I2C_Master_Write@d+1,c
  1858  00F85E  0ED1               	movlw	209
  1859  00F860  6E02               	movwf	I2C_Master_Write@d,c
  1860  00F862  EC39  F075         	call	_I2C_Master_Write	;wreg free
  1861                           
  1862                           ;main.c: 290: for(unsigned char k=0;k<0x06;k++){
  1863  00F866  0E00               	movlw	0
  1864  00F868  6E57               	movwf	main@k_575,c
  1865  00F86A                     l2774:
  1866  00F86A  0E05               	movlw	5
  1867  00F86C  6457               	cpfsgt	main@k_575,c
  1868  00F86E  D001               	goto	l2778
  1869  00F870  D00E               	goto	l2784
  1870  00F872                     l2778:
  1871                           
  1872                           ;main.c: 291: time[k] = I2C_Master_Read(1);
  1873  00F872  5057               	movf	main@k_575,w,c
  1874  00F874  0D01               	mullw	1
  1875  00F876  0E2E               	movlw	low main@time
  1876  00F878  24F3               	addwf	prodl,w,c
  1877  00F87A  6ED9               	movwf	fsr2l,c
  1878  00F87C  0E00               	movlw	high main@time
  1879  00F87E  20F4               	addwfc	prodh,w,c
  1880  00F880  6EDA               	movwf	fsr2h,c
  1881  00F882  0E01               	movlw	1
  1882  00F884  EC87  F075         	call	_I2C_Master_Read
  1883  00F888  6EDF               	movwf	indf2,c
  1884  00F88A  2A57               	incf	main@k_575,f,c
  1885  00F88C  D7EE               	goto	l2774
  1886  00F88E                     l2784:
  1887                           
  1888                           ;main.c: 292: }
  1889                           ;main.c: 293: time[6] = I2C_Master_Read(0);
  1890  00F88E  0E00               	movlw	0
  1891  00F890  EC87  F075         	call	_I2C_Master_Read
  1892  00F894  6E34               	movwf	main@time+6,c
  1893                           
  1894                           ;main.c: 294: I2C_Master_Stop();
  1895  00F896  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  1896                           
  1897                           ;main.c: 296: unsigned char count_min_final = time[1];
  1898  00F89A  C02F  F060         	movff	main@time+1,main@count_min_final
  1899                           
  1900                           ;main.c: 297: unsigned char count_seconds_final = time[0];
  1901  00F89E  C02E  F061         	movff	main@time,main@count_seconds_final
  1902                           
  1903                           ;main.c: 299: initLCD();
  1904  00F8A2  EC13  F076         	call	_initLCD	;wreg free
  1905                           
  1906                           ;main.c: 300: printf("s:%02x min ", count_min_initial);
  1907  00F8A6  0E84               	movlw	low STR_12
  1908  00F8A8  6E0D               	movwf	printf@f,c
  1909  00F8AA  0EFF               	movlw	high STR_12
  1910  00F8AC  6E0E               	movwf	printf@f+1,c
  1911  00F8AE  C05E  F00F         	movff	main@count_min_initial,?_printf+2
  1912  00F8B2  6A10               	clrf	?_printf+3,c
  1913  00F8B4  EC74  F078         	call	_printf	;wreg free
  1914                           
  1915                           ;main.c: 301: printf("%02x sec", count_seconds_initial);
  1916  00F8B8  0EA4               	movlw	low STR_13
  1917  00F8BA  6E0D               	movwf	printf@f,c
  1918  00F8BC  0EFF               	movlw	high STR_13
  1919  00F8BE  6E0E               	movwf	printf@f+1,c
  1920  00F8C0  C05F  F00F         	movff	main@count_seconds_initial,?_printf+2
  1921  00F8C4  6A10               	clrf	?_printf+3,c
  1922  00F8C6  EC74  F078         	call	_printf	;wreg free
  1923                           
  1924                           ;main.c: 303: lcdInst(0b11000000);;
  1925  00F8CA  0EC0               	movlw	192
  1926  00F8CC  EC43  F075         	call	_lcdInst
  1927                           
  1928                           ;main.c: 304: printf("f:%02x min ", count_min_final);
  1929  00F8D0  0E78               	movlw	low STR_14
  1930  00F8D2  6E0D               	movwf	printf@f,c
  1931  00F8D4  0EFF               	movlw	high STR_14
  1932  00F8D6  6E0E               	movwf	printf@f+1,c
  1933  00F8D8  C060  F00F         	movff	main@count_min_final,?_printf+2
  1934  00F8DC  6A10               	clrf	?_printf+3,c
  1935  00F8DE  EC74  F078         	call	_printf	;wreg free
  1936                           
  1937                           ;main.c: 305: printf("%02x sec", count_seconds_final);
  1938  00F8E2  0EA4               	movlw	low STR_13
  1939  00F8E4  6E0D               	movwf	printf@f,c
  1940  00F8E6  0EFF               	movlw	high STR_13
  1941  00F8E8  6E0E               	movwf	printf@f+1,c
  1942  00F8EA  C061  F00F         	movff	main@count_seconds_final,?_printf+2
  1943  00F8EE  6A10               	clrf	?_printf+3,c
  1944  00F8F0  EC74  F078         	call	_printf	;wreg free
  1945                           
  1946                           ;main.c: 307: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  1947  00F8F4  0E00               	movlw	0
  1948  00F8F6  6E39               	movwf	main@i_582,c
  1949  00F8F8                     l2800:
  1950  00F8F8  0E09               	movlw	9
  1951  00F8FA  6439               	cpfsgt	main@i_582,c
  1952  00F8FC  D001               	goto	l2804
  1953  00F8FE  D00A               	goto	l2808
  1954  00F900                     l2804:
  1955  00F900  0EFF               	movlw	255
  1956  00F902  6E23               	movwf	??_main& (0+255),c
  1957  00F904  0E8A               	movlw	138
  1958  00F906                     u3397:
  1959  00F906  2EE8               	decfsz	wreg,f,c
  1960  00F908  D7FE               	bra	u3397
  1961  00F90A  2E23               	decfsz	??_main& (0+255),f,c
  1962  00F90C  D7FC               	bra	u3397
  1963  00F90E  D000               	nop2	
  1964  00F910  2A39               	incf	main@i_582,f,c
  1965  00F912  D7F2               	goto	l2800
  1966  00F914                     l2808:
  1967                           
  1968                           ;main.c: 308: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  1969  00F914  0E00               	movlw	0
  1970  00F916  6E3A               	movwf	main@i_583,c
  1971  00F918                     l2810:
  1972  00F918  0E09               	movlw	9
  1973  00F91A  643A               	cpfsgt	main@i_583,c
  1974  00F91C  D001               	goto	l2814
  1975  00F91E  D00A               	goto	l2818
  1976  00F920                     l2814:
  1977  00F920  0EFF               	movlw	255
  1978  00F922  6E23               	movwf	??_main& (0+255),c
  1979  00F924  0E8A               	movlw	138
  1980  00F926                     u3407:
  1981  00F926  2EE8               	decfsz	wreg,f,c
  1982  00F928  D7FE               	bra	u3407
  1983  00F92A  2E23               	decfsz	??_main& (0+255),f,c
  1984  00F92C  D7FC               	bra	u3407
  1985  00F92E  D000               	nop2	
  1986  00F930  2A3A               	incf	main@i_583,f,c
  1987  00F932  D7F2               	goto	l2810
  1988  00F934                     l2818:
  1989                           
  1990                           ;main.c: 309: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  1991  00F934  0E00               	movlw	0
  1992  00F936  6E3B               	movwf	main@i_584,c
  1993  00F938                     l2820:
  1994  00F938  0E09               	movlw	9
  1995  00F93A  643B               	cpfsgt	main@i_584,c
  1996  00F93C  D001               	goto	l2824
  1997  00F93E  D00A               	goto	l2828
  1998  00F940                     l2824:
  1999  00F940  0EFF               	movlw	255
  2000  00F942  6E23               	movwf	??_main& (0+255),c
  2001  00F944  0E8A               	movlw	138
  2002  00F946                     u3417:
  2003  00F946  2EE8               	decfsz	wreg,f,c
  2004  00F948  D7FE               	bra	u3417
  2005  00F94A  2E23               	decfsz	??_main& (0+255),f,c
  2006  00F94C  D7FC               	bra	u3417
  2007  00F94E  D000               	nop2	
  2008  00F950  2A3B               	incf	main@i_584,f,c
  2009  00F952  D7F2               	goto	l2820
  2010  00F954                     l2828:
  2011                           
  2012                           ;main.c: 311: count_min_initial = (count_min_initial & 0x0F) + ((count_min_initial & 0xF
      +                          0)>>4)*10;
  2013  00F954  385E               	swapf	main@count_min_initial,w,c
  2014  00F956  0B0F               	andlw	15
  2015  00F958  0B0F               	andlw	15
  2016  00F95A  0D0A               	mullw	10
  2017  00F95C  505E               	movf	main@count_min_initial,w,c
  2018  00F95E  0B0F               	andlw	15
  2019  00F960  24F3               	addwf	prodl,w,c
  2020  00F962  6E5E               	movwf	main@count_min_initial,c
  2021                           
  2022                           ;main.c: 312: count_seconds_initial = (count_seconds_initial & 0x0F) + ((count_seconds_i
      +                          nitial & 0xF0)>>4)*10;
  2023  00F964  385F               	swapf	main@count_seconds_initial,w,c
  2024  00F966  0B0F               	andlw	15
  2025  00F968  0B0F               	andlw	15
  2026  00F96A  0D0A               	mullw	10
  2027  00F96C  505F               	movf	main@count_seconds_initial,w,c
  2028  00F96E  0B0F               	andlw	15
  2029  00F970  24F3               	addwf	prodl,w,c
  2030  00F972  6E5F               	movwf	main@count_seconds_initial,c
  2031                           
  2032                           ;main.c: 313: count_min_final = (count_min_final & 0x0F) + ((count_min_final & 0xF0)>>4)
      +                          *10;
  2033  00F974  3860               	swapf	main@count_min_final,w,c
  2034  00F976  0B0F               	andlw	15
  2035  00F978  0B0F               	andlw	15
  2036  00F97A  0D0A               	mullw	10
  2037  00F97C  5060               	movf	main@count_min_final,w,c
  2038  00F97E  0B0F               	andlw	15
  2039  00F980  24F3               	addwf	prodl,w,c
  2040  00F982  6E60               	movwf	main@count_min_final,c
  2041                           
  2042                           ;main.c: 314: count_seconds_final = (count_seconds_final & 0x0F) + ((count_seconds_final
      +                           & 0xF0)>>4)*10;
  2043  00F984  3861               	swapf	main@count_seconds_final,w,c
  2044  00F986  0B0F               	andlw	15
  2045  00F988  0B0F               	andlw	15
  2046  00F98A  0D0A               	mullw	10
  2047  00F98C  5061               	movf	main@count_seconds_final,w,c
  2048  00F98E  0B0F               	andlw	15
  2049  00F990  24F3               	addwf	prodl,w,c
  2050  00F992  6E61               	movwf	main@count_seconds_final,c
  2051                           
  2052                           ;main.c: 316: signed char count_min = count_min_final - count_min_initial;
  2053  00F994  505E               	movf	main@count_min_initial,w,c
  2054  00F996  0800               	sublw	0
  2055  00F998  2460               	addwf	main@count_min_final,w,c
  2056  00F99A  6E58               	movwf	main@count_min,c
  2057                           
  2058                           ;main.c: 317: signed char count_seconds = count_seconds_final - count_seconds_initial;
  2059  00F99C  505F               	movf	main@count_seconds_initial,w,c
  2060  00F99E  0800               	sublw	0
  2061  00F9A0  2461               	addwf	main@count_seconds_final,w,c
  2062  00F9A2  6E62               	movwf	main@count_seconds,c
  2063                           
  2064                           ;main.c: 319: if(count_seconds < 0){
  2065  00F9A4  AE62               	btfss	main@count_seconds,7,c
  2066  00F9A6  D005               	goto	l2838
  2067                           
  2068                           ;main.c: 320: count_min = count_min - 1;
  2069  00F9A8  0458               	decf	main@count_min,w,c
  2070  00F9AA  6E58               	movwf	main@count_min,c
  2071                           
  2072                           ;main.c: 321: count_seconds = count_seconds + 60;
  2073  00F9AC  5062               	movf	main@count_seconds,w,c
  2074  00F9AE  0F3C               	addlw	60
  2075  00F9B0  6E62               	movwf	main@count_seconds,c
  2076  00F9B2                     l2838:
  2077                           
  2078                           ;main.c: 322: }
  2079                           ;main.c: 329: signed char eeprom_min = Eeprom_ReadByte(0x10);
  2080  00F9B2  0E10               	movlw	16
  2081  00F9B4  ECAD  F075         	call	_Eeprom_ReadByte
  2082  00F9B8  6E5B               	movwf	main@eeprom_min,c
  2083                           
  2084                           ;main.c: 330: signed char eeprom_seconds = Eeprom_ReadByte(0x60);
  2085  00F9BA  0E60               	movlw	96
  2086  00F9BC  ECAD  F075         	call	_Eeprom_ReadByte
  2087  00F9C0  6E5C               	movwf	main@eeprom_seconds,c
  2088                           
  2089                           ;main.c: 332: Eeprom_WriteByte(0x00, eeprom_min);
  2090  00F9C2  C05B  F001         	movff	main@eeprom_min,Eeprom_WriteByte@data
  2091  00F9C6  0E00               	movlw	0
  2092  00F9C8  ECD6  F075         	call	_Eeprom_WriteByte
  2093                           
  2094                           ;main.c: 333: Eeprom_WriteByte(0x50, eeprom_seconds);
  2095  00F9CC  C05C  F001         	movff	main@eeprom_seconds,Eeprom_WriteByte@data
  2096  00F9D0  0E50               	movlw	80
  2097  00F9D2  ECD6  F075         	call	_Eeprom_WriteByte
  2098                           
  2099                           ;main.c: 334: eeprom_min = Eeprom_ReadByte(0x20);
  2100  00F9D6  0E20               	movlw	32
  2101  00F9D8  ECAD  F075         	call	_Eeprom_ReadByte
  2102  00F9DC  6E5B               	movwf	main@eeprom_min,c
  2103                           
  2104                           ;main.c: 335: eeprom_seconds = Eeprom_ReadByte(0x70);
  2105  00F9DE  0E70               	movlw	112
  2106  00F9E0  ECAD  F075         	call	_Eeprom_ReadByte
  2107  00F9E4  6E5C               	movwf	main@eeprom_seconds,c
  2108                           
  2109                           ;main.c: 336: Eeprom_WriteByte(0x10, eeprom_min);
  2110  00F9E6  C05B  F001         	movff	main@eeprom_min,Eeprom_WriteByte@data
  2111  00F9EA  0E10               	movlw	16
  2112  00F9EC  ECD6  F075         	call	_Eeprom_WriteByte
  2113                           
  2114                           ;main.c: 337: Eeprom_WriteByte(0x60, eeprom_seconds);
  2115  00F9F0  C05C  F001         	movff	main@eeprom_seconds,Eeprom_WriteByte@data
  2116  00F9F4  0E60               	movlw	96
  2117  00F9F6  ECD6  F075         	call	_Eeprom_WriteByte
  2118                           
  2119                           ;main.c: 338: eeprom_min = Eeprom_ReadByte(0x30);
  2120  00F9FA  0E30               	movlw	48
  2121  00F9FC  ECAD  F075         	call	_Eeprom_ReadByte
  2122  00FA00  6E5B               	movwf	main@eeprom_min,c
  2123                           
  2124                           ;main.c: 339: eeprom_seconds = Eeprom_ReadByte(0x80);
  2125  00FA02  0E80               	movlw	128
  2126  00FA04  ECAD  F075         	call	_Eeprom_ReadByte
  2127  00FA08  6E5C               	movwf	main@eeprom_seconds,c
  2128                           
  2129                           ;main.c: 340: Eeprom_WriteByte(0x20, eeprom_min);
  2130  00FA0A  C05B  F001         	movff	main@eeprom_min,Eeprom_WriteByte@data
  2131  00FA0E  0E20               	movlw	32
  2132  00FA10  ECD6  F075         	call	_Eeprom_WriteByte
  2133                           
  2134                           ;main.c: 341: Eeprom_WriteByte(0x70, eeprom_seconds);
  2135  00FA14  C05C  F001         	movff	main@eeprom_seconds,Eeprom_WriteByte@data
  2136  00FA18  0E70               	movlw	112
  2137  00FA1A  ECD6  F075         	call	_Eeprom_WriteByte
  2138                           
  2139                           ;main.c: 343: Eeprom_WriteByte(0x30, count_min);
  2140  00FA1E  C058  F001         	movff	main@count_min,Eeprom_WriteByte@data
  2141  00FA22  0E30               	movlw	48
  2142  00FA24  ECD6  F075         	call	_Eeprom_WriteByte
  2143                           
  2144                           ;main.c: 344: Eeprom_WriteByte(0x80, count_seconds);
  2145  00FA28  C062  F001         	movff	main@count_seconds,Eeprom_WriteByte@data
  2146  00FA2C  0E80               	movlw	128
  2147  00FA2E  ECD6  F075         	call	_Eeprom_WriteByte
  2148                           
  2149                           ;main.c: 346: initLCD();
  2150  00FA32  EC13  F076         	call	_initLCD	;wreg free
  2151                           
  2152                           ;main.c: 347: printf("%02d", count_min);
  2153  00FA36  0EEE               	movlw	low STR_16
  2154  00FA38  6E0D               	movwf	printf@f,c
  2155  00FA3A  0EFF               	movlw	high STR_16
  2156  00FA3C  6E0E               	movwf	printf@f+1,c
  2157  00FA3E  5058               	movf	main@count_min,w,c
  2158  00FA40  6E0F               	movwf	?_printf+2,c
  2159  00FA42  6A10               	clrf	?_printf+3,c
  2160  00FA44  BE0F               	btfsc	?_printf+2,7,c
  2161  00FA46  0610               	decf	?_printf+3,f,c
  2162  00FA48  EC74  F078         	call	_printf	;wreg free
  2163                           
  2164                           ;main.c: 348: printf(" minutes");
  2165  00FA4C  0EBF               	movlw	low STR_17
  2166  00FA4E  6E0D               	movwf	printf@f,c
  2167  00FA50  0EFF               	movlw	high STR_17
  2168  00FA52  6E0E               	movwf	printf@f+1,c
  2169  00FA54  EC74  F078         	call	_printf	;wreg free
  2170                           
  2171                           ;main.c: 349: lcdInst(0b11000000);;
  2172  00FA58  0EC0               	movlw	192
  2173  00FA5A  EC43  F075         	call	_lcdInst
  2174                           
  2175                           ;main.c: 350: printf("%02d", count_seconds);
  2176  00FA5E  0EEE               	movlw	low STR_16
  2177  00FA60  6E0D               	movwf	printf@f,c
  2178  00FA62  0EFF               	movlw	high STR_16
  2179  00FA64  6E0E               	movwf	printf@f+1,c
  2180  00FA66  5062               	movf	main@count_seconds,w,c
  2181  00FA68  6E0F               	movwf	?_printf+2,c
  2182  00FA6A  6A10               	clrf	?_printf+3,c
  2183  00FA6C  BE0F               	btfsc	?_printf+2,7,c
  2184  00FA6E  0610               	decf	?_printf+3,f,c
  2185  00FA70  EC74  F078         	call	_printf	;wreg free
  2186                           
  2187                           ;main.c: 351: printf(" seconds");
  2188  00FA74  0EB6               	movlw	low STR_19
  2189  00FA76  6E0D               	movwf	printf@f,c
  2190  00FA78  0EFF               	movlw	high STR_19
  2191  00FA7A  6E0E               	movwf	printf@f+1,c
  2192  00FA7C  EC74  F078         	call	_printf	;wreg free
  2193                           
  2194                           ;main.c: 352: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2195  00FA80  0E00               	movlw	0
  2196  00FA82  6E3C               	movwf	main@i_595,c
  2197  00FA84                     l2880:
  2198  00FA84  0E09               	movlw	9
  2199  00FA86  643C               	cpfsgt	main@i_595,c
  2200  00FA88  D001               	goto	l2884
  2201  00FA8A  D00A               	goto	l2888
  2202  00FA8C                     l2884:
  2203  00FA8C  0EFF               	movlw	255
  2204  00FA8E  6E23               	movwf	??_main& (0+255),c
  2205  00FA90  0E8A               	movlw	138
  2206  00FA92                     u3427:
  2207  00FA92  2EE8               	decfsz	wreg,f,c
  2208  00FA94  D7FE               	bra	u3427
  2209  00FA96  2E23               	decfsz	??_main& (0+255),f,c
  2210  00FA98  D7FC               	bra	u3427
  2211  00FA9A  D000               	nop2	
  2212  00FA9C  2A3C               	incf	main@i_595,f,c
  2213  00FA9E  D7F2               	goto	l2880
  2214  00FAA0                     l2888:
  2215                           
  2216                           ;main.c: 353: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2217  00FAA0  0E00               	movlw	0
  2218  00FAA2  6E3D               	movwf	main@i_596,c
  2219  00FAA4                     l2890:
  2220  00FAA4  0E09               	movlw	9
  2221  00FAA6  643D               	cpfsgt	main@i_596,c
  2222  00FAA8  D001               	goto	l2894
  2223  00FAAA  D00A               	goto	l2898
  2224  00FAAC                     l2894:
  2225  00FAAC  0EFF               	movlw	255
  2226  00FAAE  6E23               	movwf	??_main& (0+255),c
  2227  00FAB0  0E8A               	movlw	138
  2228  00FAB2                     u3437:
  2229  00FAB2  2EE8               	decfsz	wreg,f,c
  2230  00FAB4  D7FE               	bra	u3437
  2231  00FAB6  2E23               	decfsz	??_main& (0+255),f,c
  2232  00FAB8  D7FC               	bra	u3437
  2233  00FABA  D000               	nop2	
  2234  00FABC  2A3D               	incf	main@i_596,f,c
  2235  00FABE  D7F2               	goto	l2890
  2236  00FAC0                     l2898:
  2237                           
  2238                           ;main.c: 354: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2239  00FAC0  0E00               	movlw	0
  2240  00FAC2  6E3E               	movwf	main@i_597,c
  2241  00FAC4                     l2900:
  2242  00FAC4  0E09               	movlw	9
  2243  00FAC6  643E               	cpfsgt	main@i_597,c
  2244  00FAC8  D001               	goto	l2904
  2245  00FACA  D00A               	goto	l2908
  2246  00FACC                     l2904:
  2247  00FACC  0EFF               	movlw	255
  2248  00FACE  6E23               	movwf	??_main& (0+255),c
  2249  00FAD0  0E8A               	movlw	138
  2250  00FAD2                     u3447:
  2251  00FAD2  2EE8               	decfsz	wreg,f,c
  2252  00FAD4  D7FE               	bra	u3447
  2253  00FAD6  2E23               	decfsz	??_main& (0+255),f,c
  2254  00FAD8  D7FC               	bra	u3447
  2255  00FADA  D000               	nop2	
  2256  00FADC  2A3E               	incf	main@i_597,f,c
  2257  00FADE  D7F2               	goto	l2900
  2258  00FAE0                     l2908:
  2259                           
  2260                           ;main.c: 355: initLCD();
  2261  00FAE0  EC13  F076         	call	_initLCD	;wreg free
  2262                           
  2263                           ;main.c: 356: printf("AA:");
  2264  00FAE4  0EF3               	movlw	low STR_20
  2265  00FAE6  6E0D               	movwf	printf@f,c
  2266  00FAE8  0EFF               	movlw	high STR_20
  2267  00FAEA  6E0E               	movwf	printf@f+1,c
  2268  00FAEC  EC74  F078         	call	_printf	;wreg free
  2269                           
  2270                           ;main.c: 357: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2271  00FAF0  0E00               	movlw	0
  2272  00FAF2  6E3F               	movwf	main@i_599,c
  2273  00FAF4                     l2914:
  2274  00FAF4  0E09               	movlw	9
  2275  00FAF6  643F               	cpfsgt	main@i_599,c
  2276  00FAF8  D001               	goto	l2918
  2277  00FAFA  D00A               	goto	l2922
  2278  00FAFC                     l2918:
  2279  00FAFC  0EFF               	movlw	255
  2280  00FAFE  6E23               	movwf	??_main& (0+255),c
  2281  00FB00  0E8A               	movlw	138
  2282  00FB02                     u3457:
  2283  00FB02  2EE8               	decfsz	wreg,f,c
  2284  00FB04  D7FE               	bra	u3457
  2285  00FB06  2E23               	decfsz	??_main& (0+255),f,c
  2286  00FB08  D7FC               	bra	u3457
  2287  00FB0A  D000               	nop2	
  2288  00FB0C  2A3F               	incf	main@i_599,f,c
  2289  00FB0E  D7F2               	goto	l2914
  2290  00FB10                     l2922:
  2291                           
  2292                           ;main.c: 358: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2293  00FB10  0E00               	movlw	0
  2294  00FB12  6E40               	movwf	main@i_600,c
  2295  00FB14                     l2924:
  2296  00FB14  0E09               	movlw	9
  2297  00FB16  6440               	cpfsgt	main@i_600,c
  2298  00FB18  D001               	goto	l2928
  2299  00FB1A  D00A               	goto	l2932
  2300  00FB1C                     l2928:
  2301  00FB1C  0EFF               	movlw	255
  2302  00FB1E  6E23               	movwf	??_main& (0+255),c
  2303  00FB20  0E8A               	movlw	138
  2304  00FB22                     u3467:
  2305  00FB22  2EE8               	decfsz	wreg,f,c
  2306  00FB24  D7FE               	bra	u3467
  2307  00FB26  2E23               	decfsz	??_main& (0+255),f,c
  2308  00FB28  D7FC               	bra	u3467
  2309  00FB2A  D000               	nop2	
  2310  00FB2C  2A40               	incf	main@i_600,f,c
  2311  00FB2E  D7F2               	goto	l2924
  2312  00FB30                     l2932:
  2313                           
  2314                           ;main.c: 359: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2315  00FB30  0E00               	movlw	0
  2316  00FB32  6E41               	movwf	main@i_601,c
  2317  00FB34                     l2934:
  2318  00FB34  0E09               	movlw	9
  2319  00FB36  6441               	cpfsgt	main@i_601,c
  2320  00FB38  D001               	goto	l2938
  2321  00FB3A  D00A               	goto	l2942
  2322  00FB3C                     l2938:
  2323  00FB3C  0EFF               	movlw	255
  2324  00FB3E  6E23               	movwf	??_main& (0+255),c
  2325  00FB40  0E8A               	movlw	138
  2326  00FB42                     u3477:
  2327  00FB42  2EE8               	decfsz	wreg,f,c
  2328  00FB44  D7FE               	bra	u3477
  2329  00FB46  2E23               	decfsz	??_main& (0+255),f,c
  2330  00FB48  D7FC               	bra	u3477
  2331  00FB4A  D000               	nop2	
  2332  00FB4C  2A41               	incf	main@i_601,f,c
  2333  00FB4E  D7F2               	goto	l2934
  2334  00FB50                     l2942:
  2335                           
  2336                           ;main.c: 360: initLCD();
  2337  00FB50  EC13  F076         	call	_initLCD	;wreg free
  2338                           
  2339                           ;main.c: 361: printf("9V:");
  2340  00FB54  0EF7               	movlw	low STR_21
  2341  00FB56  6E0D               	movwf	printf@f,c
  2342  00FB58  0EFF               	movlw	high STR_21
  2343  00FB5A  6E0E               	movwf	printf@f+1,c
  2344  00FB5C  EC74  F078         	call	_printf	;wreg free
  2345                           
  2346                           ;main.c: 362: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2347  00FB60  0E00               	movlw	0
  2348  00FB62  6E42               	movwf	main@i_603,c
  2349  00FB64                     l2948:
  2350  00FB64  0E09               	movlw	9
  2351  00FB66  6442               	cpfsgt	main@i_603,c
  2352  00FB68  D001               	goto	l2952
  2353  00FB6A  D00A               	goto	l2956
  2354  00FB6C                     l2952:
  2355  00FB6C  0EFF               	movlw	255
  2356  00FB6E  6E23               	movwf	??_main& (0+255),c
  2357  00FB70  0E8A               	movlw	138
  2358  00FB72                     u3487:
  2359  00FB72  2EE8               	decfsz	wreg,f,c
  2360  00FB74  D7FE               	bra	u3487
  2361  00FB76  2E23               	decfsz	??_main& (0+255),f,c
  2362  00FB78  D7FC               	bra	u3487
  2363  00FB7A  D000               	nop2	
  2364  00FB7C  2A42               	incf	main@i_603,f,c
  2365  00FB7E  D7F2               	goto	l2948
  2366  00FB80                     l2956:
  2367                           
  2368                           ;main.c: 363: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2369  00FB80  0E00               	movlw	0
  2370  00FB82  6E43               	movwf	main@i_604,c
  2371  00FB84                     l2958:
  2372  00FB84  0E09               	movlw	9
  2373  00FB86  6443               	cpfsgt	main@i_604,c
  2374  00FB88  D001               	goto	l2962
  2375  00FB8A  D00A               	goto	l2966
  2376  00FB8C                     l2962:
  2377  00FB8C  0EFF               	movlw	255
  2378  00FB8E  6E23               	movwf	??_main& (0+255),c
  2379  00FB90  0E8A               	movlw	138
  2380  00FB92                     u3497:
  2381  00FB92  2EE8               	decfsz	wreg,f,c
  2382  00FB94  D7FE               	bra	u3497
  2383  00FB96  2E23               	decfsz	??_main& (0+255),f,c
  2384  00FB98  D7FC               	bra	u3497
  2385  00FB9A  D000               	nop2	
  2386  00FB9C  2A43               	incf	main@i_604,f,c
  2387  00FB9E  D7F2               	goto	l2958
  2388  00FBA0                     l2966:
  2389                           
  2390                           ;main.c: 364: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2391  00FBA0  0E00               	movlw	0
  2392  00FBA2  6E44               	movwf	main@i_605,c
  2393  00FBA4                     l2968:
  2394  00FBA4  0E09               	movlw	9
  2395  00FBA6  6444               	cpfsgt	main@i_605,c
  2396  00FBA8  D001               	goto	l2972
  2397  00FBAA  D00A               	goto	l2976
  2398  00FBAC                     l2972:
  2399  00FBAC  0EFF               	movlw	255
  2400  00FBAE  6E23               	movwf	??_main& (0+255),c
  2401  00FBB0  0E8A               	movlw	138
  2402  00FBB2                     u3507:
  2403  00FBB2  2EE8               	decfsz	wreg,f,c
  2404  00FBB4  D7FE               	bra	u3507
  2405  00FBB6  2E23               	decfsz	??_main& (0+255),f,c
  2406  00FBB8  D7FC               	bra	u3507
  2407  00FBBA  D000               	nop2	
  2408  00FBBC  2A44               	incf	main@i_605,f,c
  2409  00FBBE  D7F2               	goto	l2968
  2410  00FBC0                     l2976:
  2411                           
  2412                           ;main.c: 365: initLCD();
  2413  00FBC0  EC13  F076         	call	_initLCD	;wreg free
  2414                           
  2415                           ;main.c: 366: printf("C:");
  2416  00FBC4  0EFB               	movlw	low STR_22
  2417  00FBC6  6E0D               	movwf	printf@f,c
  2418  00FBC8  0EFF               	movlw	high STR_22
  2419  00FBCA  6E0E               	movwf	printf@f+1,c
  2420  00FBCC  EC74  F078         	call	_printf	;wreg free
  2421                           
  2422                           ;main.c: 367: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2423  00FBD0  0E00               	movlw	0
  2424  00FBD2  6E45               	movwf	main@i_607,c
  2425  00FBD4                     l2982:
  2426  00FBD4  0E09               	movlw	9
  2427  00FBD6  6445               	cpfsgt	main@i_607,c
  2428  00FBD8  D001               	goto	l2986
  2429  00FBDA  D00A               	goto	l2990
  2430  00FBDC                     l2986:
  2431  00FBDC  0EFF               	movlw	255
  2432  00FBDE  6E23               	movwf	??_main& (0+255),c
  2433  00FBE0  0E8A               	movlw	138
  2434  00FBE2                     u3517:
  2435  00FBE2  2EE8               	decfsz	wreg,f,c
  2436  00FBE4  D7FE               	bra	u3517
  2437  00FBE6  2E23               	decfsz	??_main& (0+255),f,c
  2438  00FBE8  D7FC               	bra	u3517
  2439  00FBEA  D000               	nop2	
  2440  00FBEC  2A45               	incf	main@i_607,f,c
  2441  00FBEE  D7F2               	goto	l2982
  2442  00FBF0                     l2990:
  2443                           
  2444                           ;main.c: 368: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2445  00FBF0  0E00               	movlw	0
  2446  00FBF2  6E46               	movwf	main@i_608,c
  2447  00FBF4                     l2992:
  2448  00FBF4  0E09               	movlw	9
  2449  00FBF6  6446               	cpfsgt	main@i_608,c
  2450  00FBF8  D001               	goto	l2996
  2451  00FBFA  D00A               	goto	l3000
  2452  00FBFC                     l2996:
  2453  00FBFC  0EFF               	movlw	255
  2454  00FBFE  6E23               	movwf	??_main& (0+255),c
  2455  00FC00  0E8A               	movlw	138
  2456  00FC02                     u3527:
  2457  00FC02  2EE8               	decfsz	wreg,f,c
  2458  00FC04  D7FE               	bra	u3527
  2459  00FC06  2E23               	decfsz	??_main& (0+255),f,c
  2460  00FC08  D7FC               	bra	u3527
  2461  00FC0A  D000               	nop2	
  2462  00FC0C  2A46               	incf	main@i_608,f,c
  2463  00FC0E  D7F2               	goto	l2992
  2464  00FC10                     l3000:
  2465                           
  2466                           ;main.c: 369: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2467  00FC10  0E00               	movlw	0
  2468  00FC12  6E47               	movwf	main@i_609,c
  2469  00FC14                     l3002:
  2470  00FC14  0E09               	movlw	9
  2471  00FC16  6447               	cpfsgt	main@i_609,c
  2472  00FC18  D001               	goto	l3006
  2473  00FC1A  D00A               	goto	l3010
  2474  00FC1C                     l3006:
  2475  00FC1C  0EFF               	movlw	255
  2476  00FC1E  6E23               	movwf	??_main& (0+255),c
  2477  00FC20  0E8A               	movlw	138
  2478  00FC22                     u3537:
  2479  00FC22  2EE8               	decfsz	wreg,f,c
  2480  00FC24  D7FE               	bra	u3537
  2481  00FC26  2E23               	decfsz	??_main& (0+255),f,c
  2482  00FC28  D7FC               	bra	u3537
  2483  00FC2A  D000               	nop2	
  2484  00FC2C  2A47               	incf	main@i_609,f,c
  2485  00FC2E  D7F2               	goto	l3002
  2486  00FC30                     l3010:
  2487                           
  2488                           ;main.c: 370: initLCD();
  2489  00FC30  EC13  F076         	call	_initLCD	;wreg free
  2490                           
  2491                           ;main.c: 371: printf("Total:");
  2492  00FC34  0EE2               	movlw	low STR_23
  2493  00FC36  6E0D               	movwf	printf@f,c
  2494  00FC38  0EFF               	movlw	high STR_23
  2495  00FC3A  6E0E               	movwf	printf@f+1,c
  2496  00FC3C  EC74  F078         	call	_printf	;wreg free
  2497                           
  2498                           ;main.c: 372: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2499  00FC40  0E00               	movlw	0
  2500  00FC42  6E48               	movwf	main@i_611,c
  2501  00FC44                     l3016:
  2502  00FC44  0E09               	movlw	9
  2503  00FC46  6448               	cpfsgt	main@i_611,c
  2504  00FC48  D001               	goto	l3020
  2505  00FC4A  D00A               	goto	l3024
  2506  00FC4C                     l3020:
  2507  00FC4C  0EFF               	movlw	255
  2508  00FC4E  6E23               	movwf	??_main& (0+255),c
  2509  00FC50  0E8A               	movlw	138
  2510  00FC52                     u3547:
  2511  00FC52  2EE8               	decfsz	wreg,f,c
  2512  00FC54  D7FE               	bra	u3547
  2513  00FC56  2E23               	decfsz	??_main& (0+255),f,c
  2514  00FC58  D7FC               	bra	u3547
  2515  00FC5A  D000               	nop2	
  2516  00FC5C  2A48               	incf	main@i_611,f,c
  2517  00FC5E  D7F2               	goto	l3016
  2518  00FC60                     l3024:
  2519                           
  2520                           ;main.c: 373: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2521  00FC60  0E00               	movlw	0
  2522  00FC62  6E49               	movwf	main@i_612,c
  2523  00FC64                     l3026:
  2524  00FC64  0E09               	movlw	9
  2525  00FC66  6449               	cpfsgt	main@i_612,c
  2526  00FC68  D001               	goto	l3030
  2527  00FC6A  D00A               	goto	l3034
  2528  00FC6C                     l3030:
  2529  00FC6C  0EFF               	movlw	255
  2530  00FC6E  6E23               	movwf	??_main& (0+255),c
  2531  00FC70  0E8A               	movlw	138
  2532  00FC72                     u3557:
  2533  00FC72  2EE8               	decfsz	wreg,f,c
  2534  00FC74  D7FE               	bra	u3557
  2535  00FC76  2E23               	decfsz	??_main& (0+255),f,c
  2536  00FC78  D7FC               	bra	u3557
  2537  00FC7A  D000               	nop2	
  2538  00FC7C  2A49               	incf	main@i_612,f,c
  2539  00FC7E  D7F2               	goto	l3026
  2540  00FC80                     l3034:
  2541                           
  2542                           ;main.c: 374: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2543  00FC80  0E00               	movlw	0
  2544  00FC82  6E4A               	movwf	main@i_613,c
  2545  00FC84                     l3036:
  2546  00FC84  0E09               	movlw	9
  2547  00FC86  644A               	cpfsgt	main@i_613,c
  2548  00FC88  D001               	goto	l3040
  2549  00FC8A  D4C1               	goto	l224
  2550  00FC8C                     l3040:
  2551  00FC8C  0EFF               	movlw	255
  2552  00FC8E  6E23               	movwf	??_main& (0+255),c
  2553  00FC90  0E8A               	movlw	138
  2554  00FC92                     u3567:
  2555  00FC92  2EE8               	decfsz	wreg,f,c
  2556  00FC94  D7FE               	bra	u3567
  2557  00FC96  2E23               	decfsz	??_main& (0+255),f,c
  2558  00FC98  D7FC               	bra	u3567
  2559  00FC9A  D000               	nop2	
  2560  00FC9C  2A4A               	incf	main@i_613,f,c
  2561  00FC9E  D7F2               	goto	l3036
  2562  00FCA0                     l3044:
  2563                           
  2564                           ;main.c: 376: else if (keys[keypress] == keys[1]){
  2565  00FCA0  505D               	movf	main@keypress,w,c
  2566  00FCA2  0D01               	mullw	1
  2567  00FCA4  0ED7               	movlw	low _keys
  2568  00FCA6  24F3               	addwf	prodl,w,c
  2569  00FCA8  6EF6               	movwf	tblptrl,c
  2570  00FCAA  0EFE               	movlw	high _keys
  2571  00FCAC  20F4               	addwfc	prodh,w,c
  2572  00FCAE  6EF7               	movwf	tblptrh,c
  2573  00FCB0                     	if	0	;There are less than 3 active tblptr bytes
  2574  00FCB0                     	endif
  2575  00FCB0  0008               	tblrd		*
  2576  00FCB2  CFF5 F023          	movff	tablat,??_main
  2577  00FCB6  0ED8               	movlw	low (_keys+1)
  2578  00FCB8  6EF6               	movwf	tblptrl,c
  2579  00FCBA  0EFE               	movlw	high (_keys+1)
  2580  00FCBC  6EF7               	movwf	tblptrh,c
  2581  00FCBE                     	if	0	;tblptru may be non-zero
  2582  00FCBE                     	endif
  2583  00FCBE                     	if	0	;tblptru may be non-zero
  2584  00FCBE                     	endif
  2585  00FCBE  0008               	tblrd		*
  2586  00FCC0  50F5               	movf	tablat,w,c
  2587  00FCC2  1823               	xorwf	??_main,w,c
  2588  00FCC4  A4D8               	btfss	status,2,c
  2589  00FCC6  D079               	goto	l3106
  2590                           
  2591                           ;main.c: 377: unsigned char address_min = 0x30;
  2592  00FCC8  0E30               	movlw	48
  2593  00FCCA  6E59               	movwf	main@address_min,c
  2594                           
  2595                           ;main.c: 378: unsigned char address_seconds = 0x80;
  2596  00FCCC  0E80               	movlw	128
  2597  00FCCE  6E5A               	movwf	main@address_seconds,c
  2598                           
  2599                           ;main.c: 379: signed char past_min = Eeprom_ReadByte(address_min);
  2600  00FCD0  5059               	movf	main@address_min,w,c
  2601  00FCD2  ECAD  F075         	call	_Eeprom_ReadByte
  2602  00FCD6  6E29               	movwf	main@past_min,c
  2603                           
  2604                           ;main.c: 380: signed char past_seconds = Eeprom_ReadByte(address_seconds);
  2605  00FCD8  505A               	movf	main@address_seconds,w,c
  2606  00FCDA  ECAD  F075         	call	_Eeprom_ReadByte
  2607  00FCDE  6E2A               	movwf	main@past_seconds,c
  2608                           
  2609                           ;main.c: 382: for(unsigned char e=0;e<0x04;e++){
  2610  00FCE0  0E00               	movlw	0
  2611  00FCE2  6E4B               	movwf	main@e,c
  2612  00FCE4                     l3052:
  2613  00FCE4  0E03               	movlw	3
  2614  00FCE6  644B               	cpfsgt	main@e,c
  2615  00FCE8  D001               	goto	l3056
  2616  00FCEA  D491               	goto	l224
  2617  00FCEC                     l3056:
  2618                           
  2619                           ;main.c: 384: initLCD();
  2620  00FCEC  EC13  F076         	call	_initLCD	;wreg free
  2621                           
  2622                           ;main.c: 385: printf("%02d", past_min);
  2623  00FCF0  0EEE               	movlw	low STR_16
  2624  00FCF2  6E0D               	movwf	printf@f,c
  2625  00FCF4  0EFF               	movlw	high STR_16
  2626  00FCF6  6E0E               	movwf	printf@f+1,c
  2627  00FCF8  5029               	movf	main@past_min,w,c
  2628  00FCFA  6E0F               	movwf	?_printf+2,c
  2629  00FCFC  6A10               	clrf	?_printf+3,c
  2630  00FCFE  BE0F               	btfsc	?_printf+2,7,c
  2631  00FD00  0610               	decf	?_printf+3,f,c
  2632  00FD02  EC74  F078         	call	_printf	;wreg free
  2633                           
  2634                           ;main.c: 386: printf(" minutes");
  2635  00FD06  0EBF               	movlw	low STR_17
  2636  00FD08  6E0D               	movwf	printf@f,c
  2637  00FD0A  0EFF               	movlw	high STR_17
  2638  00FD0C  6E0E               	movwf	printf@f+1,c
  2639  00FD0E  EC74  F078         	call	_printf	;wreg free
  2640                           
  2641                           ;main.c: 387: lcdInst(0b11000000);;
  2642  00FD12  0EC0               	movlw	192
  2643  00FD14  EC43  F075         	call	_lcdInst
  2644                           
  2645                           ;main.c: 388: printf("%02d", past_seconds);
  2646  00FD18  0EEE               	movlw	low STR_16
  2647  00FD1A  6E0D               	movwf	printf@f,c
  2648  00FD1C  0EFF               	movlw	high STR_16
  2649  00FD1E  6E0E               	movwf	printf@f+1,c
  2650  00FD20  502A               	movf	main@past_seconds,w,c
  2651  00FD22  6E0F               	movwf	?_printf+2,c
  2652  00FD24  6A10               	clrf	?_printf+3,c
  2653  00FD26  BE0F               	btfsc	?_printf+2,7,c
  2654  00FD28  0610               	decf	?_printf+3,f,c
  2655  00FD2A  EC74  F078         	call	_printf	;wreg free
  2656                           
  2657                           ;main.c: 389: printf(" seconds");
  2658  00FD2E  0EB6               	movlw	low STR_19
  2659  00FD30  6E0D               	movwf	printf@f,c
  2660  00FD32  0EFF               	movlw	high STR_19
  2661  00FD34  6E0E               	movwf	printf@f+1,c
  2662  00FD36  EC74  F078         	call	_printf	;wreg free
  2663                           
  2664                           ;main.c: 390: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2665  00FD3A  0E00               	movlw	0
  2666  00FD3C  6E4C               	movwf	main@i_623,c
  2667  00FD3E                     l3068:
  2668  00FD3E  0E09               	movlw	9
  2669  00FD40  644C               	cpfsgt	main@i_623,c
  2670  00FD42  D001               	goto	l3072
  2671  00FD44  D00A               	goto	l3076
  2672  00FD46                     l3072:
  2673  00FD46  0EFF               	movlw	255
  2674  00FD48  6E23               	movwf	??_main& (0+255),c
  2675  00FD4A  0E8A               	movlw	138
  2676  00FD4C                     u3577:
  2677  00FD4C  2EE8               	decfsz	wreg,f,c
  2678  00FD4E  D7FE               	bra	u3577
  2679  00FD50  2E23               	decfsz	??_main& (0+255),f,c
  2680  00FD52  D7FC               	bra	u3577
  2681  00FD54  D000               	nop2	
  2682  00FD56  2A4C               	incf	main@i_623,f,c
  2683  00FD58  D7F2               	goto	l3068
  2684  00FD5A                     l3076:
  2685                           
  2686                           ;main.c: 391: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2687  00FD5A  0E00               	movlw	0
  2688  00FD5C  6E4D               	movwf	main@i_624,c
  2689  00FD5E                     l3078:
  2690  00FD5E  0E09               	movlw	9
  2691  00FD60  644D               	cpfsgt	main@i_624,c
  2692  00FD62  D001               	goto	l3082
  2693  00FD64  D00A               	goto	l3086
  2694  00FD66                     l3082:
  2695  00FD66  0EFF               	movlw	255
  2696  00FD68  6E23               	movwf	??_main& (0+255),c
  2697  00FD6A  0E8A               	movlw	138
  2698  00FD6C                     u3587:
  2699  00FD6C  2EE8               	decfsz	wreg,f,c
  2700  00FD6E  D7FE               	bra	u3587
  2701  00FD70  2E23               	decfsz	??_main& (0+255),f,c
  2702  00FD72  D7FC               	bra	u3587
  2703  00FD74  D000               	nop2	
  2704  00FD76  2A4D               	incf	main@i_624,f,c
  2705  00FD78  D7F2               	goto	l3078
  2706  00FD7A                     l3086:
  2707                           
  2708                           ;main.c: 392: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2709  00FD7A  0E00               	movlw	0
  2710  00FD7C  6E4E               	movwf	main@i_625,c
  2711  00FD7E                     l3088:
  2712  00FD7E  0E09               	movlw	9
  2713  00FD80  644E               	cpfsgt	main@i_625,c
  2714  00FD82  D001               	goto	l3092
  2715  00FD84  D00A               	goto	l3096
  2716  00FD86                     l3092:
  2717  00FD86  0EFF               	movlw	255
  2718  00FD88  6E23               	movwf	??_main& (0+255),c
  2719  00FD8A  0E8A               	movlw	138
  2720  00FD8C                     u3597:
  2721  00FD8C  2EE8               	decfsz	wreg,f,c
  2722  00FD8E  D7FE               	bra	u3597
  2723  00FD90  2E23               	decfsz	??_main& (0+255),f,c
  2724  00FD92  D7FC               	bra	u3597
  2725  00FD94  D000               	nop2	
  2726  00FD96  2A4E               	incf	main@i_625,f,c
  2727  00FD98  D7F2               	goto	l3088
  2728  00FD9A                     l3096:
  2729                           
  2730                           ;main.c: 394: address_min = address_min - 0x10;
  2731  00FD9A  5059               	movf	main@address_min,w,c
  2732  00FD9C  0FF0               	addlw	240
  2733  00FD9E  6E59               	movwf	main@address_min,c
  2734                           
  2735                           ;main.c: 395: address_seconds = address_seconds - 0x10;
  2736  00FDA0  505A               	movf	main@address_seconds,w,c
  2737  00FDA2  0FF0               	addlw	240
  2738  00FDA4  6E5A               	movwf	main@address_seconds,c
  2739                           
  2740                           ;main.c: 396: past_min = Eeprom_ReadByte(address_min);
  2741  00FDA6  5059               	movf	main@address_min,w,c
  2742  00FDA8  ECAD  F075         	call	_Eeprom_ReadByte
  2743  00FDAC  6E29               	movwf	main@past_min,c
  2744                           
  2745                           ;main.c: 397: past_seconds = Eeprom_ReadByte(address_seconds);
  2746  00FDAE  505A               	movf	main@address_seconds,w,c
  2747  00FDB0  ECAD  F075         	call	_Eeprom_ReadByte
  2748  00FDB4  6E2A               	movwf	main@past_seconds,c
  2749  00FDB6  2A4B               	incf	main@e,f,c
  2750  00FDB8  D795               	goto	l3052
  2751  00FDBA                     l3106:
  2752                           
  2753                           ;main.c: 400: else if (keys[keypress] == keys[2]){
  2754  00FDBA  505D               	movf	main@keypress,w,c
  2755  00FDBC  0D01               	mullw	1
  2756  00FDBE  0ED7               	movlw	low _keys
  2757  00FDC0  24F3               	addwf	prodl,w,c
  2758  00FDC2  6EF6               	movwf	tblptrl,c
  2759  00FDC4  0EFE               	movlw	high _keys
  2760  00FDC6  20F4               	addwfc	prodh,w,c
  2761  00FDC8  6EF7               	movwf	tblptrh,c
  2762  00FDCA                     	if	0	;There are less than 3 active tblptr bytes
  2763  00FDCA                     	endif
  2764  00FDCA  0008               	tblrd		*
  2765  00FDCC  CFF5 F023          	movff	tablat,??_main
  2766  00FDD0  0ED9               	movlw	low (_keys+2)
  2767  00FDD2  6EF6               	movwf	tblptrl,c
  2768  00FDD4  0EFE               	movlw	high (_keys+2)
  2769  00FDD6  6EF7               	movwf	tblptrh,c
  2770  00FDD8                     	if	0	;tblptru may be non-zero
  2771  00FDD8                     	endif
  2772  00FDD8                     	if	0	;tblptru may be non-zero
  2773  00FDD8                     	endif
  2774  00FDD8  0008               	tblrd		*
  2775  00FDDA  50F5               	movf	tablat,w,c
  2776  00FDDC  1823               	xorwf	??_main,w,c
  2777  00FDDE  A4D8               	btfss	status,2,c
  2778  00FDE0  D416               	goto	l224
  2779                           
  2780                           ;main.c: 401: initLCD();
  2781  00FDE2  EC13  F076         	call	_initLCD	;wreg free
  2782                           
  2783                           ;main.c: 402: printf("Downloading...");
  2784  00FDE6  0E12               	movlw	low STR_28
  2785  00FDE8  6E0D               	movwf	printf@f,c
  2786  00FDEA  0EFF               	movlw	high STR_28
  2787  00FDEC  6E0E               	movwf	printf@f+1,c
  2788  00FDEE  EC74  F078         	call	_printf	;wreg free
  2789                           
  2790                           ;main.c: 403: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2791  00FDF2  0E00               	movlw	0
  2792  00FDF4  6E4F               	movwf	main@i_627,c
  2793  00FDF6                     l3114:
  2794  00FDF6  0E09               	movlw	9
  2795  00FDF8  644F               	cpfsgt	main@i_627,c
  2796  00FDFA  D001               	goto	l3118
  2797  00FDFC  D00A               	goto	l3122
  2798  00FDFE                     l3118:
  2799  00FDFE  0EFF               	movlw	255
  2800  00FE00  6E23               	movwf	??_main& (0+255),c
  2801  00FE02  0E8A               	movlw	138
  2802  00FE04                     u3607:
  2803  00FE04  2EE8               	decfsz	wreg,f,c
  2804  00FE06  D7FE               	bra	u3607
  2805  00FE08  2E23               	decfsz	??_main& (0+255),f,c
  2806  00FE0A  D7FC               	bra	u3607
  2807  00FE0C  D000               	nop2	
  2808  00FE0E  2A4F               	incf	main@i_627,f,c
  2809  00FE10  D7F2               	goto	l3114
  2810  00FE12                     l3122:
  2811                           
  2812                           ;main.c: 404: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2813  00FE12  0E00               	movlw	0
  2814  00FE14  6E50               	movwf	main@i_628,c
  2815  00FE16                     l3124:
  2816  00FE16  0E09               	movlw	9
  2817  00FE18  6450               	cpfsgt	main@i_628,c
  2818  00FE1A  D001               	goto	l3128
  2819  00FE1C  D00A               	goto	l3132
  2820  00FE1E                     l3128:
  2821  00FE1E  0EFF               	movlw	255
  2822  00FE20  6E23               	movwf	??_main& (0+255),c
  2823  00FE22  0E8A               	movlw	138
  2824  00FE24                     u3617:
  2825  00FE24  2EE8               	decfsz	wreg,f,c
  2826  00FE26  D7FE               	bra	u3617
  2827  00FE28  2E23               	decfsz	??_main& (0+255),f,c
  2828  00FE2A  D7FC               	bra	u3617
  2829  00FE2C  D000               	nop2	
  2830  00FE2E  2A50               	incf	main@i_628,f,c
  2831  00FE30  D7F2               	goto	l3124
  2832  00FE32                     l3132:
  2833                           
  2834                           ;main.c: 405: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2835  00FE32  0E00               	movlw	0
  2836  00FE34  6E51               	movwf	main@i_629,c
  2837  00FE36                     l3134:
  2838  00FE36  0E09               	movlw	9
  2839  00FE38  6451               	cpfsgt	main@i_629,c
  2840  00FE3A  D001               	goto	l3138
  2841  00FE3C  D00A               	goto	l3142
  2842  00FE3E                     l3138:
  2843  00FE3E  0EFF               	movlw	255
  2844  00FE40  6E23               	movwf	??_main& (0+255),c
  2845  00FE42  0E8A               	movlw	138
  2846  00FE44                     u3627:
  2847  00FE44  2EE8               	decfsz	wreg,f,c
  2848  00FE46  D7FE               	bra	u3627
  2849  00FE48  2E23               	decfsz	??_main& (0+255),f,c
  2850  00FE4A  D7FC               	bra	u3627
  2851  00FE4C  D000               	nop2	
  2852  00FE4E  2A51               	incf	main@i_629,f,c
  2853  00FE50  D7F2               	goto	l3134
  2854  00FE52                     l3142:
  2855                           
  2856                           ;main.c: 406: initLCD();
  2857  00FE52  EC13  F076         	call	_initLCD	;wreg free
  2858                           
  2859                           ;main.c: 407: printf("Download ");
  2860  00FE56  0E90               	movlw	low STR_29
  2861  00FE58  6E0D               	movwf	printf@f,c
  2862  00FE5A  0EFF               	movlw	high STR_29
  2863  00FE5C  6E0E               	movwf	printf@f+1,c
  2864  00FE5E  EC74  F078         	call	_printf	;wreg free
  2865                           
  2866                           ;main.c: 408: lcdInst(0b11000000);;
  2867  00FE62  0EC0               	movlw	192
  2868  00FE64  EC43  F075         	call	_lcdInst
  2869                           
  2870                           ;main.c: 409: printf("Complete");
  2871  00FE68  0EAD               	movlw	low STR_30
  2872  00FE6A  6E0D               	movwf	printf@f,c
  2873  00FE6C  0EFF               	movlw	high STR_30
  2874  00FE6E  6E0E               	movwf	printf@f+1,c
  2875  00FE70  EC74  F078         	call	_printf	;wreg free
  2876                           
  2877                           ;main.c: 410: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2878  00FE74  0E00               	movlw	0
  2879  00FE76  6E52               	movwf	main@i_632,c
  2880  00FE78                     l3150:
  2881  00FE78  0E09               	movlw	9
  2882  00FE7A  6452               	cpfsgt	main@i_632,c
  2883  00FE7C  D001               	goto	l3154
  2884  00FE7E  D00A               	goto	l3158
  2885  00FE80                     l3154:
  2886  00FE80  0EFF               	movlw	255
  2887  00FE82  6E23               	movwf	??_main& (0+255),c
  2888  00FE84  0E8A               	movlw	138
  2889  00FE86                     u3637:
  2890  00FE86  2EE8               	decfsz	wreg,f,c
  2891  00FE88  D7FE               	bra	u3637
  2892  00FE8A  2E23               	decfsz	??_main& (0+255),f,c
  2893  00FE8C  D7FC               	bra	u3637
  2894  00FE8E  D000               	nop2	
  2895  00FE90  2A52               	incf	main@i_632,f,c
  2896  00FE92  D7F2               	goto	l3150
  2897  00FE94                     l3158:
  2898                           
  2899                           ;main.c: 411: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2900  00FE94  0E00               	movlw	0
  2901  00FE96  6E53               	movwf	main@i_633,c
  2902  00FE98                     l3160:
  2903  00FE98  0E09               	movlw	9
  2904  00FE9A  6453               	cpfsgt	main@i_633,c
  2905  00FE9C  D001               	goto	l3164
  2906  00FE9E  D00A               	goto	l3168
  2907  00FEA0                     l3164:
  2908  00FEA0  0EFF               	movlw	255
  2909  00FEA2  6E23               	movwf	??_main& (0+255),c
  2910  00FEA4  0E8A               	movlw	138
  2911  00FEA6                     u3647:
  2912  00FEA6  2EE8               	decfsz	wreg,f,c
  2913  00FEA8  D7FE               	bra	u3647
  2914  00FEAA  2E23               	decfsz	??_main& (0+255),f,c
  2915  00FEAC  D7FC               	bra	u3647
  2916  00FEAE  D000               	nop2	
  2917  00FEB0  2A53               	incf	main@i_633,f,c
  2918  00FEB2  D7F2               	goto	l3160
  2919  00FEB4                     l3168:
  2920                           
  2921                           ;main.c: 412: for(char i=0;i<10;i++){_delay((unsigned long)((98)*(8000000/4000.0)));};
  2922  00FEB4  0E00               	movlw	0
  2923  00FEB6  6E54               	movwf	main@i_634,c
  2924  00FEB8                     l3170:
  2925  00FEB8  0E09               	movlw	9
  2926  00FEBA  6454               	cpfsgt	main@i_634,c
  2927  00FEBC  D002               	goto	l3174
  2928  00FEBE  EF07  F07B         	goto	l224
  2929  00FEC2                     l3174:
  2930  00FEC2  0EFF               	movlw	255
  2931  00FEC4  6E23               	movwf	??_main& (0+255),c
  2932  00FEC6  0E8A               	movlw	138
  2933  00FEC8                     u3657:
  2934  00FEC8  2EE8               	decfsz	wreg,f,c
  2935  00FECA  D7FE               	bra	u3657
  2936  00FECC  2E23               	decfsz	??_main& (0+255),f,c
  2937  00FECE  D7FC               	bra	u3657
  2938  00FED0  D000               	nop2	
  2939  00FED2  2A54               	incf	main@i_634,f,c
  2940  00FED4  D7F1               	goto	l3170
  2941  00FED6                     __end_of_main:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodh	equ	0xFF4
  2948                           prodl	equ	0xFF3
  2949                           intcon2	equ	0xFF1
  2950                           wreg	equ	0xFE8
  2951                           indf2	equ	0xFDF
  2952                           fsr2h	equ	0xFDA
  2953                           fsr2l	equ	0xFD9
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _set_time *****************
  2957 ;; Defined at:
  2958 ;;		line 427 in file "main.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  i               1    3[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    2
  2979 ;; This function calls:
  2980 ;;		_I2C_Master_Start
  2981 ;;		_I2C_Master_Stop
  2982 ;;		_I2C_Master_Write
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text1
  2989  00EC6C                     __ptext1:
  2990                           	opt stack 0
  2991  00EC6C                     _set_time:
  2992                           	opt stack 28
  2993                           
  2994                           ;main.c: 428: I2C_Master_Start();
  2995                           
  2996                           ;incstack = 0
  2997  00EC6C  EC31  F075         	call	_I2C_Master_Start	;wreg free
  2998                           
  2999                           ;main.c: 429: I2C_Master_Write(0b11010000);
  3000  00EC70  0E00               	movlw	0
  3001  00EC72  6E03               	movwf	I2C_Master_Write@d+1,c
  3002  00EC74  0ED0               	movlw	208
  3003  00EC76  6E02               	movwf	I2C_Master_Write@d,c
  3004  00EC78  EC39  F075         	call	_I2C_Master_Write	;wreg free
  3005                           
  3006                           ;main.c: 430: I2C_Master_Write(0x00);
  3007  00EC7C  0E00               	movlw	0
  3008  00EC7E  6E03               	movwf	I2C_Master_Write@d+1,c
  3009  00EC80  0E00               	movlw	0
  3010  00EC82  6E02               	movwf	I2C_Master_Write@d,c
  3011  00EC84  EC39  F075         	call	_I2C_Master_Write	;wreg free
  3012                           
  3013                           ;main.c: 431: for(char i=0; i<7; i++){
  3014  00EC88  0E00               	movlw	0
  3015  00EC8A  6E04               	movwf	set_time@i,c
  3016  00EC8C                     l2326:
  3017  00EC8C  0E06               	movlw	6
  3018  00EC8E  6404               	cpfsgt	set_time@i,c
  3019  00EC90  D001               	goto	l2330
  3020  00EC92  D010               	goto	l2336
  3021  00EC94                     l2330:
  3022                           
  3023                           ;main.c: 432: I2C_Master_Write(happynewyear[i]);
  3024  00EC94  5004               	movf	set_time@i,w,c
  3025  00EC96  0D01               	mullw	1
  3026  00EC98  0EFA               	movlw	low _happynewyear
  3027  00EC9A  24F3               	addwf	prodl,w,c
  3028  00EC9C  6EF6               	movwf	tblptrl,c
  3029  00EC9E  0EFE               	movlw	high _happynewyear
  3030  00ECA0  20F4               	addwfc	prodh,w,c
  3031  00ECA2  6EF7               	movwf	tblptrh,c
  3032  00ECA4                     	if	0	;There are less than 3 active tblptr bytes
  3033  00ECA4                     	endif
  3034  00ECA4  0008               	tblrd		*
  3035  00ECA6  50F5               	movf	tablat,w,c
  3036  00ECA8  6E02               	movwf	I2C_Master_Write@d,c
  3037  00ECAA  6A03               	clrf	I2C_Master_Write@d+1,c
  3038  00ECAC  EC39  F075         	call	_I2C_Master_Write	;wreg free
  3039  00ECB0  2A04               	incf	set_time@i,f,c
  3040  00ECB2  D7EC               	goto	l2326
  3041  00ECB4                     l2336:
  3042                           
  3043                           ;main.c: 433: }
  3044                           ;main.c: 434: I2C_Master_Stop();
  3045  00ECB4  EC35  F075         	call	_I2C_Master_Stop	;wreg free
  3046  00ECB8  0012               	return		;funcret
  3047  00ECBA                     __end_of_set_time:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           prodh	equ	0xFF4
  3054                           prodl	equ	0xFF3
  3055                           intcon2	equ	0xFF1
  3056                           wreg	equ	0xFE8
  3057                           indf2	equ	0xFDF
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _I2C_Master_Write *****************
  3063 ;; Defined at:
  3064 ;;		line 47 in file "I2C.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  d               2    1[COMRAM] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;Total ram usage:        2 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    1
  3085 ;; This function calls:
  3086 ;;		_I2C_Master_Wait
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;;		_set_time
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text2
  3094  00EA72                     __ptext2:
  3095                           	opt stack 0
  3096  00EA72                     _I2C_Master_Write:
  3097                           	opt stack 28
  3098                           
  3099                           ;I2C.c: 49: I2C_Master_Wait();
  3100                           
  3101                           ;incstack = 0
  3102  00EA72  EC4F  F075         	call	_I2C_Master_Wait	;wreg free
  3103                           
  3104                           ;I2C.c: 50: SSPBUF = d;
  3105  00EA76  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3106  00EA7A  0012               	return		;funcret
  3107  00EA7C                     __end_of_I2C_Master_Write:
  3108                           	opt stack 0
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           prodh	equ	0xFF4
  3114                           prodl	equ	0xFF3
  3115                           intcon2	equ	0xFF1
  3116                           wreg	equ	0xFE8
  3117                           indf2	equ	0xFDF
  3118                           fsr2h	equ	0xFDA
  3119                           fsr2l	equ	0xFD9
  3120                           status	equ	0xFD8
  3121                           
  3122 ;; *************** function _I2C_Master_Stop *****************
  3123 ;; Defined at:
  3124 ;;		line 41 in file "I2C.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    1
  3145 ;; This function calls:
  3146 ;;		_I2C_Master_Wait
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;;		_set_time
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text3
  3154  00EA6A                     __ptext3:
  3155                           	opt stack 0
  3156  00EA6A                     _I2C_Master_Stop:
  3157                           	opt stack 28
  3158                           
  3159                           ;I2C.c: 43: I2C_Master_Wait();
  3160                           
  3161                           ;incstack = 0
  3162  00EA6A  EC4F  F075         	call	_I2C_Master_Wait	;wreg free
  3163                           
  3164                           ;I2C.c: 44: PEN = 1;
  3165  00EA6E  84C5               	bsf	4037,2,c	;volatile
  3166  00EA70  0012               	return		;funcret
  3167  00EA72                     __end_of_I2C_Master_Stop:
  3168                           	opt stack 0
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           intcon2	equ	0xFF1
  3176                           wreg	equ	0xFE8
  3177                           indf2	equ	0xFDF
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _I2C_Master_Start *****************
  3183 ;; Defined at:
  3184 ;;		line 29 in file "I2C.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		_I2C_Master_Wait
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;;		_set_time
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text4
  3214  00EA62                     __ptext4:
  3215                           	opt stack 0
  3216  00EA62                     _I2C_Master_Start:
  3217                           	opt stack 28
  3218                           
  3219                           ;I2C.c: 31: I2C_Master_Wait();
  3220                           
  3221                           ;incstack = 0
  3222  00EA62  EC4F  F075         	call	_I2C_Master_Wait	;wreg free
  3223                           
  3224                           ;I2C.c: 32: SEN = 1;
  3225  00EA66  80C5               	bsf	4037,0,c	;volatile
  3226  00EA68  0012               	return		;funcret
  3227  00EA6A                     __end_of_I2C_Master_Start:
  3228                           	opt stack 0
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon2	equ	0xFF1
  3236                           wreg	equ	0xFE8
  3237                           indf2	equ	0xFDF
  3238                           fsr2h	equ	0xFDA
  3239                           fsr2l	equ	0xFD9
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _printf *****************
  3243 ;; Defined at:
  3244 ;;		line 464 in file "/Applications/microchip/xc8/v1.40/sources/common/doprnt.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  f               2   12[COMRAM] PTR const unsigned char 
  3247 ;;		 -> STR_30(9), STR_29(10), STR_28(15), STR_27(9), 
  3248 ;;		 -> STR_26(5), STR_25(9), STR_24(5), STR_23(7), 
  3249 ;;		 -> STR_22(3), STR_21(4), STR_20(4), STR_19(9), 
  3250 ;;		 -> STR_18(5), STR_17(9), STR_16(5), STR_15(9), 
  3251 ;;		 -> STR_14(12), STR_13(9), STR_12(12), STR_11(15), 
  3252 ;;		 -> STR_10(9), STR_9(14), STR_8(5), STR_7(10), 
  3253 ;;		 -> STR_6(13), STR_5(15), STR_4(8), STR_3(9), 
  3254 ;;		 -> STR_2(15), STR_1(15), 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  idx             1   24[COMRAM] unsigned char 
  3257 ;;  tmpval          4    0        struct .
  3258 ;;  cp              3    0        PTR const unsigned char 
  3259 ;;  width           2   31[COMRAM] int 
  3260 ;;  val             2   28[COMRAM] unsigned int 
  3261 ;;  ap              2   25[COMRAM] PTR void [1]
  3262 ;;		 -> ?_printf(2), 
  3263 ;;  len             2    0        unsigned int 
  3264 ;;  c               1   33[COMRAM] char 
  3265 ;;  flag            1   30[COMRAM] unsigned char 
  3266 ;;  prec            1   27[COMRAM] char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  2   12[COMRAM] int 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3276 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;Total ram usage:       22 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    2
  3283 ;; This function calls:
  3284 ;;		___lwdiv
  3285 ;;		___lwmod
  3286 ;;		___wmul
  3287 ;;		_isdigit
  3288 ;;		_putch
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text5
  3295  00F0E8                     __ptext5:
  3296                           	opt stack 0
  3297  00F0E8                     _printf:
  3298                           	opt stack 28
  3299                           
  3300                           ;doprnt.c: 466: va_list ap;
  3301                           ;doprnt.c: 499: signed char c;
  3302                           ;doprnt.c: 501: int width;
  3303                           ;doprnt.c: 506: signed char prec;
  3304                           ;doprnt.c: 508: unsigned char flag;
  3305                           ;doprnt.c: 523: union {
  3306                           ;doprnt.c: 524: unsigned long vd;
  3307                           ;doprnt.c: 525: double integ;
  3308                           ;doprnt.c: 526: } tmpval;
  3309                           ;doprnt.c: 528: unsigned int val;
  3310                           ;doprnt.c: 529: unsigned len;
  3311                           ;doprnt.c: 530: const char * cp;
  3312                           ;doprnt.c: 533: *ap = __va_start();
  3313                           
  3314                           ;incstack = 0
  3315  00F0E8  0E0F               	movlw	low (?_printf+2)
  3316  00F0EA  6E1A               	movwf	printf@ap,c
  3317  00F0EC  0E00               	movlw	high (?_printf+2)
  3318  00F0EE  6E1B               	movwf	printf@ap+1,c
  3319                           
  3320                           ;doprnt.c: 536: while(c = *f++) {
  3321  00F0F0  D174               	goto	l2466
  3322  00F0F2                     l2340:
  3323                           
  3324                           ;doprnt.c: 538: if(c != '%')
  3325  00F0F2  0E25               	movlw	37
  3326  00F0F4  1822               	xorwf	printf@c,w,c
  3327  00F0F6  B4D8               	btfsc	status,2,c
  3328  00F0F8  D004               	goto	l2344
  3329                           
  3330                           ;doprnt.c: 540: {
  3331                           ;doprnt.c: 541: (putch(c) );
  3332  00F0FA  5022               	movf	printf@c,w,c
  3333  00F0FC  EC49  F075         	call	_putch
  3334                           
  3335                           ;doprnt.c: 542: continue;
  3336  00F100  D16C               	goto	l2466
  3337  00F102                     l2344:
  3338                           
  3339                           ;doprnt.c: 543: }
  3340                           ;doprnt.c: 546: width = 0;
  3341  00F102  0E00               	movlw	0
  3342  00F104  6E21               	movwf	printf@width+1,c
  3343  00F106  0E00               	movlw	0
  3344  00F108  6E20               	movwf	printf@width,c
  3345                           
  3346                           ;doprnt.c: 548: flag = 0;
  3347  00F10A  0E00               	movlw	0
  3348  00F10C  6E1F               	movwf	printf@flag,c
  3349                           
  3350                           ;doprnt.c: 551: switch(*f) {
  3351                           
  3352                           ;doprnt.c: 550: for(;;) {
  3353  00F10E  D003               	goto	l2350
  3354  00F110                     l2346:
  3355                           
  3356                           ;doprnt.c: 580: flag |= 0x04;
  3357  00F110  841F               	bsf	printf@flag,2,c
  3358                           
  3359                           ;doprnt.c: 581: f++;
  3360  00F112  4A0D               	infsnz	printf@f,f,c
  3361  00F114  2A0E               	incf	printf@f+1,f,c
  3362  00F116                     l2350:
  3363  00F116  C00D  FFF6         	movff	printf@f,tblptrl
  3364  00F11A  C00E  FFF7         	movff	printf@f+1,tblptrh
  3365  00F11E                     	if	0	;tblptru may be non-zero
  3366  00F11E                     	endif
  3367  00F11E                     	if	0	;tblptru may be non-zero
  3368  00F11E                     	endif
  3369  00F11E  0008               	tblrd		*
  3370  00F120  50F5               	movf	tablat,w,c
  3371                           
  3372                           ; Switch size 1, requested type "space"
  3373                           ; Number of cases is 1, Range of values is 48 to 48
  3374                           ; switch strategies available:
  3375                           ; Name         Instructions Cycles
  3376                           ; simple_byte            4     3 (average)
  3377                           ;	Chosen strategy is simple_byte
  3378  00F122  0A30               	xorlw	48	; case 48
  3379  00F124  B4D8               	btfsc	status,2,c
  3380  00F126  D7F4               	goto	l2346
  3381                           
  3382                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3383                           
  3384                           ;doprnt.c: 586: }
  3385                           
  3386                           ;doprnt.c: 585: break;
  3387  00F128  C00D  FFF6         	movff	printf@f,tblptrl
  3388  00F12C  C00E  FFF7         	movff	printf@f+1,tblptrh
  3389  00F130                     	if	0	;tblptru may be non-zero
  3390  00F130                     	endif
  3391  00F130                     	if	0	;tblptru may be non-zero
  3392  00F130                     	endif
  3393  00F130  0008               	tblrd		*
  3394  00F132  50F5               	movf	tablat,w,c
  3395  00F134  EC66  F075         	call	_isdigit
  3396  00F138  A0D8               	btfss	status,0,c
  3397  00F13A  D035               	goto	l2368
  3398                           
  3399                           ;doprnt.c: 598: width = 0;
  3400  00F13C  0E00               	movlw	0
  3401  00F13E  6E21               	movwf	printf@width+1,c
  3402  00F140  0E00               	movlw	0
  3403  00F142  6E20               	movwf	printf@width,c
  3404  00F144                     l2356:
  3405                           
  3406                           ;doprnt.c: 600: width *= 10;
  3407  00F144  C020  F001         	movff	printf@width,___wmul@multiplier
  3408  00F148  C021  F002         	movff	printf@width+1,___wmul@multiplier+1
  3409  00F14C  0E00               	movlw	0
  3410  00F14E  6E04               	movwf	___wmul@multiplicand+1,c
  3411  00F150  0E0A               	movlw	10
  3412  00F152  6E03               	movwf	___wmul@multiplicand,c
  3413  00F154  EC9A  F075         	call	___wmul	;wreg free
  3414  00F158  C001  F020         	movff	?___wmul,printf@width
  3415  00F15C  C002  F021         	movff	?___wmul+1,printf@width+1
  3416                           
  3417                           ;doprnt.c: 601: width += *f++ - '0';
  3418  00F160  0ED0               	movlw	208
  3419  00F162  6E15               	movwf	??_printf& (0+255),c
  3420  00F164  0EFF               	movlw	255
  3421  00F166  6E16               	movwf	(??_printf+1)& (0+255),c
  3422  00F168  C00D  FFF6         	movff	printf@f,tblptrl
  3423  00F16C  C00E  FFF7         	movff	printf@f+1,tblptrh
  3424  00F170                     	if	0	;tblptru may be non-zero
  3425  00F170                     	endif
  3426  00F170                     	if	0	;tblptru may be non-zero
  3427  00F170                     	endif
  3428  00F170  0008               	tblrd		*
  3429  00F172  50F5               	movf	tablat,w,c
  3430  00F174  6E17               	movwf	(??_printf+2)& (0+255),c
  3431  00F176  6A18               	clrf	(??_printf+3)& (0+255),c
  3432  00F178  5015               	movf	??_printf,w,c
  3433  00F17A  2617               	addwf	??_printf+2,f,c
  3434  00F17C  5016               	movf	??_printf+1,w,c
  3435  00F17E  2218               	addwfc	??_printf+3,f,c
  3436  00F180  5017               	movf	??_printf+2,w,c
  3437  00F182  2620               	addwf	printf@width,f,c
  3438  00F184  5018               	movf	??_printf+3,w,c
  3439  00F186  2221               	addwfc	printf@width+1,f,c
  3440  00F188  4A0D               	infsnz	printf@f,f,c
  3441  00F18A  2A0E               	incf	printf@f+1,f,c
  3442                           
  3443                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3444  00F18C  C00D  FFF6         	movff	printf@f,tblptrl
  3445  00F190  C00E  FFF7         	movff	printf@f+1,tblptrh
  3446  00F194                     	if	0	;tblptru may be non-zero
  3447  00F194                     	endif
  3448  00F194                     	if	0	;tblptru may be non-zero
  3449  00F194                     	endif
  3450  00F194  0008               	tblrd		*
  3451  00F196  50F5               	movf	tablat,w,c
  3452  00F198  EC66  F075         	call	_isdigit
  3453  00F19C  A0D8               	btfss	status,0,c
  3454  00F19E  D003               	goto	l2368
  3455  00F1A0  D7D1               	goto	l2356
  3456  00F1A2                     l2364:
  3457                           
  3458                           ;doprnt.c: 721: flag |= 0x80;
  3459  00F1A2  8E1F               	bsf	printf@flag,7,c
  3460                           
  3461                           ;doprnt.c: 723: break;
  3462  00F1A4  D017               	goto	l364
  3463  00F1A6                     l2368:
  3464  00F1A6  C00D  FFF6         	movff	printf@f,tblptrl
  3465  00F1AA  C00E  FFF7         	movff	printf@f+1,tblptrh
  3466  00F1AE  4A0D               	infsnz	printf@f,f,c
  3467  00F1B0  2A0E               	incf	printf@f+1,f,c
  3468  00F1B2                     	if	0	;tblptru may be non-zero
  3469  00F1B2                     	endif
  3470  00F1B2                     	if	0	;tblptru may be non-zero
  3471  00F1B2                     	endif
  3472  00F1B2  0008               	tblrd		*
  3473  00F1B4  CFF5 F022          	movff	tablat,printf@c
  3474  00F1B8  5022               	movf	printf@c,w,c
  3475                           
  3476                           ; Switch size 1, requested type "space"
  3477                           ; Number of cases is 4, Range of values is 0 to 120
  3478                           ; switch strategies available:
  3479                           ; Name         Instructions Cycles
  3480                           ; simple_byte           13     7 (average)
  3481                           ;	Chosen strategy is simple_byte
  3482  00F1BA  0A00               	xorlw	0	; case 0
  3483  00F1BC  B4D8               	btfsc	status,2,c
  3484  00F1BE  0012               	return	
  3485  00F1C0  0A64               	xorlw	100	; case 100
  3486  00F1C2  B4D8               	btfsc	status,2,c
  3487  00F1C4  D007               	goto	l364
  3488  00F1C6  0A0D               	xorlw	13	; case 105
  3489  00F1C8  B4D8               	btfsc	status,2,c
  3490  00F1CA  D004               	goto	l364
  3491  00F1CC  0A11               	xorlw	17	; case 120
  3492  00F1CE  B4D8               	btfsc	status,2,c
  3493  00F1D0  D7E8               	goto	l2364
  3494  00F1D2  D103               	goto	l2466
  3495  00F1D4                     l364:
  3496                           
  3497                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  3498  00F1D4  BE1F               	btfsc	printf@flag,7,c
  3499  00F1D6  D015               	goto	l2380
  3500                           
  3501                           ;doprnt.c: 1253: {
  3502                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3503  00F1D8  C01A  FFD9         	movff	printf@ap,fsr2l
  3504  00F1DC  C01B  FFDA         	movff	printf@ap+1,fsr2h
  3505  00F1E0  CFDE F01D          	movff	postinc2,printf@val
  3506  00F1E4  CFDD F01E          	movff	postdec2,printf@val+1
  3507  00F1E8  0E02               	movlw	2
  3508  00F1EA  261A               	addwf	printf@ap,f,c
  3509  00F1EC  0E00               	movlw	0
  3510  00F1EE  221B               	addwfc	printf@ap+1,f,c
  3511                           
  3512                           ;doprnt.c: 1261: if((int)val < 0) {
  3513  00F1F0  AE1E               	btfss	printf@val+1,7,c
  3514  00F1F2  D044               	goto	l2414
  3515                           
  3516                           ;doprnt.c: 1262: flag |= 0x03;
  3517  00F1F4  0E03               	movlw	3
  3518  00F1F6  121F               	iorwf	printf@flag,f,c
  3519                           
  3520                           ;doprnt.c: 1263: val = -val;
  3521  00F1F8  6C1D               	negf	printf@val,c
  3522  00F1FA  1E1E               	comf	printf@val+1,f,c
  3523  00F1FC  B0D8               	btfsc	status,0,c
  3524  00F1FE  2A1E               	incf	printf@val+1,f,c
  3525                           
  3526                           ;doprnt.c: 1264: }
  3527                           ;doprnt.c: 1266: }
  3528  00F200  D03D               	goto	l2414
  3529  00F202                     l2380:
  3530                           
  3531                           ;doprnt.c: 1268: else
  3532                           ;doprnt.c: 1273: {
  3533                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3534  00F202  C01A  FFD9         	movff	printf@ap,fsr2l
  3535  00F206  C01B  FFDA         	movff	printf@ap+1,fsr2h
  3536  00F20A  CFDE F01D          	movff	postinc2,printf@val
  3537  00F20E  CFDD F01E          	movff	postdec2,printf@val+1
  3538  00F212  0E02               	movlw	2
  3539  00F214  261A               	addwf	printf@ap,f,c
  3540  00F216  0E00               	movlw	0
  3541  00F218  221B               	addwfc	printf@ap+1,f,c
  3542                           
  3543                           ;doprnt.c: 1287: }
  3544                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  3545  00F21A  D030               	goto	l2414
  3546  00F21C                     l2384:
  3547                           
  3548                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3549  00F21C  0E01               	movlw	1
  3550  00F21E  6E22               	movwf	printf@c,c
  3551  00F220                     l2386:
  3552  00F220  0E05               	movlw	5
  3553  00F222  1822               	xorwf	printf@c,w,c
  3554  00F224  B4D8               	btfsc	status,2,c
  3555  00F226  D032               	goto	l2416
  3556                           
  3557                           ;doprnt.c: 1306: if(val < dpowers[c])
  3558  00F228  5022               	movf	printf@c,w,c
  3559  00F22A  0D02               	mullw	2
  3560  00F22C  0EE8               	movlw	low _dpowers
  3561  00F22E  24F3               	addwf	prodl,w,c
  3562  00F230  6EF6               	movwf	tblptrl,c
  3563  00F232  0EFE               	movlw	high _dpowers
  3564  00F234  20F4               	addwfc	prodh,w,c
  3565  00F236  6EF7               	movwf	tblptrh,c
  3566  00F238                     	if	0	;There are less than 3 active tblptr bytes
  3567  00F238                     	endif
  3568  00F238  0009               	tblrd		*+
  3569  00F23A  50F5               	movf	tablat,w,c
  3570  00F23C  5C1D               	subwf	printf@val,w,c
  3571  00F23E  0009               	tblrd		*+
  3572  00F240  50F5               	movf	tablat,w,c
  3573  00F242  581E               	subwfb	printf@val+1,w,c
  3574  00F244  A0D8               	btfss	status,0,c
  3575  00F246  D022               	goto	l2416
  3576                           
  3577                           ;doprnt.c: 1307: break;
  3578  00F248  2A22               	incf	printf@c,f,c
  3579  00F24A  D7EA               	goto	l2386
  3580  00F24C                     l2398:
  3581                           
  3582                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3583  00F24C  0E01               	movlw	1
  3584  00F24E  6E22               	movwf	printf@c,c
  3585  00F250                     l2400:
  3586  00F250  0E04               	movlw	4
  3587  00F252  1822               	xorwf	printf@c,w,c
  3588  00F254  B4D8               	btfsc	status,2,c
  3589  00F256  D01A               	goto	l2416
  3590                           
  3591                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3592  00F258  5022               	movf	printf@c,w,c
  3593  00F25A  0D02               	mullw	2
  3594  00F25C  0EF2               	movlw	low _hexpowers
  3595  00F25E  24F3               	addwf	prodl,w,c
  3596  00F260  6EF6               	movwf	tblptrl,c
  3597  00F262  0EFE               	movlw	high _hexpowers
  3598  00F264  20F4               	addwfc	prodh,w,c
  3599  00F266  6EF7               	movwf	tblptrh,c
  3600  00F268                     	if	0	;There are less than 3 active tblptr bytes
  3601  00F268                     	endif
  3602  00F268  0009               	tblrd		*+
  3603  00F26A  50F5               	movf	tablat,w,c
  3604  00F26C  5C1D               	subwf	printf@val,w,c
  3605  00F26E  0009               	tblrd		*+
  3606  00F270  50F5               	movf	tablat,w,c
  3607  00F272  581E               	subwfb	printf@val+1,w,c
  3608  00F274  A0D8               	btfss	status,0,c
  3609  00F276  D00A               	goto	l2416
  3610                           
  3611                           ;doprnt.c: 1318: break;
  3612  00F278  2A22               	incf	printf@c,f,c
  3613  00F27A  D7EA               	goto	l2400
  3614  00F27C                     l2414:
  3615  00F27C  501F               	movf	printf@flag,w,c
  3616  00F27E  0B80               	andlw	128
  3617                           
  3618                           ; Switch size 1, requested type "space"
  3619                           ; Number of cases is 2, Range of values is 0 to 128
  3620                           ; switch strategies available:
  3621                           ; Name         Instructions Cycles
  3622                           ; simple_byte            7     4 (average)
  3623                           ;	Chosen strategy is simple_byte
  3624  00F280  0A00               	xorlw	0	; case 0
  3625  00F282  B4D8               	btfsc	status,2,c
  3626  00F284  D7CB               	goto	l2384
  3627  00F286  0A80               	xorlw	128	; case 128
  3628  00F288  B4D8               	btfsc	status,2,c
  3629  00F28A  D7E0               	goto	l2398
  3630  00F28C                     l2416:
  3631                           
  3632                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3633  00F28C  5020               	movf	printf@width,w,c
  3634  00F28E  1021               	iorwf	printf@width+1,w,c
  3635  00F290  B4D8               	btfsc	status,2,c
  3636  00F292  D009               	goto	l2422
  3637  00F294  C01F  F015         	movff	printf@flag,??_printf
  3638  00F298  0E03               	movlw	3
  3639  00F29A  1615               	andwf	??_printf,f,c
  3640  00F29C  B4D8               	btfsc	status,2,c
  3641  00F29E  D003               	goto	l2422
  3642                           
  3643                           ;doprnt.c: 1346: width--;
  3644  00F2A0  0620               	decf	printf@width,f,c
  3645  00F2A2  A0D8               	btfss	status,0,c
  3646  00F2A4  0621               	decf	printf@width+1,f,c
  3647  00F2A6                     l2422:
  3648                           
  3649                           ;doprnt.c: 1381: if(width > c)
  3650  00F2A6  0E80               	movlw	128
  3651  00F2A8  BE22               	btfsc	printf@c,7,c
  3652  00F2AA  0E7F               	movlw	127
  3653  00F2AC  6E15               	movwf	??_printf& (0+255),c
  3654  00F2AE  5020               	movf	printf@width,w,c
  3655  00F2B0  5C22               	subwf	printf@c,w,c
  3656  00F2B2  5021               	movf	printf@width+1,w,c
  3657  00F2B4  0A80               	xorlw	128
  3658  00F2B6  5815               	subwfb	??_printf& (0+255),w,c
  3659  00F2B8  B0D8               	btfsc	status,0,c
  3660  00F2BA  D007               	goto	l2426
  3661                           
  3662                           ;doprnt.c: 1382: width -= c;
  3663  00F2BC  5022               	movf	printf@c,w,c
  3664  00F2BE  5E20               	subwf	printf@width,f,c
  3665  00F2C0  0E00               	movlw	0
  3666  00F2C2  BE22               	btfsc	printf@c,7,c
  3667  00F2C4  0EFF               	movlw	255
  3668  00F2C6  5A21               	subwfb	printf@width+1,f,c
  3669  00F2C8  D004               	goto	l2428
  3670  00F2CA                     l2426:
  3671                           
  3672                           ;doprnt.c: 1383: else
  3673                           ;doprnt.c: 1384: width = 0;
  3674  00F2CA  0E00               	movlw	0
  3675  00F2CC  6E21               	movwf	printf@width+1,c
  3676  00F2CE  0E00               	movlw	0
  3677  00F2D0  6E20               	movwf	printf@width,c
  3678  00F2D2                     l2428:
  3679                           
  3680                           ;doprnt.c: 1387: if(flag & 0x04) {
  3681  00F2D2  A41F               	btfss	printf@flag,2,c
  3682  00F2D4  D014               	goto	l2440
  3683                           
  3684                           ;doprnt.c: 1392: if(flag & 0x03)
  3685  00F2D6  C01F  F015         	movff	printf@flag,??_printf
  3686  00F2DA  0E03               	movlw	3
  3687  00F2DC  1615               	andwf	??_printf,f,c
  3688  00F2DE  B4D8               	btfsc	status,2,c
  3689  00F2E0  D003               	goto	l2434
  3690                           
  3691                           ;doprnt.c: 1393: (putch('-') );
  3692  00F2E2  0E2D               	movlw	45
  3693  00F2E4  EC49  F075         	call	_putch
  3694  00F2E8                     l2434:
  3695                           
  3696                           ;doprnt.c: 1415: if(width)
  3697  00F2E8  5020               	movf	printf@width,w,c
  3698  00F2EA  1021               	iorwf	printf@width+1,w,c
  3699  00F2EC  B4D8               	btfsc	status,2,c
  3700  00F2EE  D01E               	goto	l2450
  3701                           
  3702                           ;doprnt.c: 1417: (putch('0') );
  3703                           
  3704                           ;doprnt.c: 1416: do
  3705  00F2F0  0E30               	movlw	48
  3706  00F2F2  EC49  F075         	call	_putch
  3707                           
  3708                           ;doprnt.c: 1418: while(--width);
  3709  00F2F6  0620               	decf	printf@width,f,c
  3710  00F2F8  A0D8               	btfss	status,0,c
  3711  00F2FA  0621               	decf	printf@width+1,f,c
  3712  00F2FC  D7F5               	goto	l2434
  3713  00F2FE                     l2440:
  3714                           
  3715                           ;doprnt.c: 1422: {
  3716                           ;doprnt.c: 1424: if(width
  3717                           ;doprnt.c: 1428: )
  3718  00F2FE  5020               	movf	printf@width,w,c
  3719  00F300  1021               	iorwf	printf@width+1,w,c
  3720  00F302  B4D8               	btfsc	status,2,c
  3721  00F304  D00A               	goto	l2446
  3722  00F306                     l2442:
  3723                           
  3724                           ;doprnt.c: 1430: (putch(' ') );
  3725  00F306  0E20               	movlw	32
  3726  00F308  EC49  F075         	call	_putch
  3727                           
  3728                           ;doprnt.c: 1431: while(--width);
  3729  00F30C  0620               	decf	printf@width,f,c
  3730  00F30E  A0D8               	btfss	status,0,c
  3731  00F310  0621               	decf	printf@width+1,f,c
  3732  00F312  5020               	movf	printf@width,w,c
  3733  00F314  1021               	iorwf	printf@width+1,w,c
  3734  00F316  A4D8               	btfss	status,2,c
  3735  00F318  D7F6               	goto	l2442
  3736  00F31A                     l2446:
  3737                           
  3738                           ;doprnt.c: 1438: if(flag & 0x03)
  3739  00F31A  C01F  F015         	movff	printf@flag,??_printf
  3740  00F31E  0E03               	movlw	3
  3741  00F320  1615               	andwf	??_printf,f,c
  3742  00F322  B4D8               	btfsc	status,2,c
  3743  00F324  D003               	goto	l2450
  3744                           
  3745                           ;doprnt.c: 1439: (putch('-') );
  3746  00F326  0E2D               	movlw	45
  3747  00F328  EC49  F075         	call	_putch
  3748  00F32C                     l2450:
  3749                           
  3750                           ;doprnt.c: 1469: }
  3751                           ;doprnt.c: 1472: prec = c;
  3752  00F32C  C022  F01C         	movff	printf@c,printf@prec
  3753                           
  3754                           ;doprnt.c: 1474: while(prec--) {
  3755  00F330  D050               	goto	l2464
  3756  00F332                     l2452:
  3757                           
  3758                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3759  00F332  501C               	movf	printf@prec,w,c
  3760  00F334  0D02               	mullw	2
  3761  00F336  0EE8               	movlw	low _dpowers
  3762  00F338  24F3               	addwf	prodl,w,c
  3763  00F33A  6EF6               	movwf	tblptrl,c
  3764  00F33C  0EFE               	movlw	high _dpowers
  3765  00F33E  20F4               	addwfc	prodh,w,c
  3766  00F340  6EF7               	movwf	tblptrh,c
  3767  00F342                     	if	0	;There are less than 3 active tblptr bytes
  3768  00F342                     	endif
  3769  00F342  0009               	tblrd		*+
  3770  00F344  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3771  00F348  000A               	tblrd		*-
  3772  00F34A  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3773  00F34E  C01D  F001         	movff	printf@val,___lwdiv@dividend
  3774  00F352  C01E  F002         	movff	printf@val+1,___lwdiv@dividend+1
  3775  00F356  EC85  F076         	call	___lwdiv	;wreg free
  3776  00F35A  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3777  00F35E  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3778  00F362  0E00               	movlw	0
  3779  00F364  6E0B               	movwf	___lwmod@divisor+1,c
  3780  00F366  0E0A               	movlw	10
  3781  00F368  6E0A               	movwf	___lwmod@divisor,c
  3782  00F36A  ECF2  F075         	call	___lwmod	;wreg free
  3783  00F36E  5008               	movf	?___lwmod,w,c
  3784  00F370  0F30               	addlw	48
  3785  00F372  6E22               	movwf	printf@c,c
  3786                           
  3787                           ;doprnt.c: 1491: break;
  3788  00F374  D02B               	goto	l2462
  3789  00F376                     l2454:
  3790                           
  3791                           ;doprnt.c: 1499: {
  3792                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3793  00F376  C01D  F001         	movff	printf@val,___lwdiv@dividend
  3794  00F37A  C01E  F002         	movff	printf@val+1,___lwdiv@dividend+1
  3795  00F37E  501C               	movf	printf@prec,w,c
  3796  00F380  0D02               	mullw	2
  3797  00F382  0EF2               	movlw	low _hexpowers
  3798  00F384  24F3               	addwf	prodl,w,c
  3799  00F386  6EF6               	movwf	tblptrl,c
  3800  00F388  0EFE               	movlw	high _hexpowers
  3801  00F38A  20F4               	addwfc	prodh,w,c
  3802  00F38C  6EF7               	movwf	tblptrh,c
  3803  00F38E                     	if	0	;There are less than 3 active tblptr bytes
  3804  00F38E                     	endif
  3805  00F38E  0009               	tblrd		*+
  3806  00F390  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3807  00F394  000A               	tblrd		*-
  3808  00F396  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3809  00F39A  EC85  F076         	call	___lwdiv	;wreg free
  3810  00F39E  5001               	movf	?___lwdiv,w,c
  3811  00F3A0  0B0F               	andlw	15
  3812  00F3A2  6E19               	movwf	printf@idx,c
  3813                           
  3814                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  3815  00F3A4  5019               	movf	printf@idx,w,c
  3816  00F3A6  0D01               	mullw	1
  3817  00F3A8  0E01               	movlw	low STR_31
  3818  00F3AA  24F3               	addwf	prodl,w,c
  3819  00F3AC  6EF6               	movwf	tblptrl,c
  3820  00F3AE  0EFF               	movlw	high STR_31
  3821  00F3B0  20F4               	addwfc	prodh,w,c
  3822  00F3B2  6EF7               	movwf	tblptrh,c
  3823  00F3B4                     	if	0	;There are less than 3 active tblptr bytes
  3824  00F3B4                     	endif
  3825  00F3B4  0008               	tblrd		*
  3826  00F3B6  CFF5 F022          	movff	tablat,printf@c
  3827                           
  3828                           ;doprnt.c: 1523: }
  3829                           
  3830                           ;doprnt.c: 1508: }
  3831                           ;doprnt.c: 1510: break;
  3832  00F3BA  D008               	goto	l2462
  3833  00F3BC                     l2460:
  3834  00F3BC  501F               	movf	printf@flag,w,c
  3835  00F3BE  0B80               	andlw	128
  3836                           
  3837                           ; Switch size 1, requested type "space"
  3838                           ; Number of cases is 2, Range of values is 0 to 128
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            7     4 (average)
  3842                           ;	Chosen strategy is simple_byte
  3843  00F3C0  0A00               	xorlw	0	; case 0
  3844  00F3C2  B4D8               	btfsc	status,2,c
  3845  00F3C4  D7B6               	goto	l2452
  3846  00F3C6  0A80               	xorlw	128	; case 128
  3847  00F3C8  B4D8               	btfsc	status,2,c
  3848  00F3CA  D7D5               	goto	l2454
  3849  00F3CC                     l2462:
  3850                           
  3851                           ;doprnt.c: 1524: (putch(c) );
  3852  00F3CC  5022               	movf	printf@c,w,c
  3853  00F3CE  EC49  F075         	call	_putch
  3854  00F3D2                     l2464:
  3855  00F3D2  061C               	decf	printf@prec,f,c
  3856  00F3D4  281C               	incf	printf@prec,w,c
  3857  00F3D6  A4D8               	btfss	status,2,c
  3858  00F3D8  D7F1               	goto	l2460
  3859  00F3DA                     l2466:
  3860  00F3DA  C00D  FFF6         	movff	printf@f,tblptrl
  3861  00F3DE  C00E  FFF7         	movff	printf@f+1,tblptrh
  3862  00F3E2  4A0D               	infsnz	printf@f,f,c
  3863  00F3E4  2A0E               	incf	printf@f+1,f,c
  3864  00F3E6                     	if	0	;tblptru may be non-zero
  3865  00F3E6                     	endif
  3866  00F3E6                     	if	0	;tblptru may be non-zero
  3867  00F3E6                     	endif
  3868  00F3E6  0008               	tblrd		*
  3869  00F3E8  CFF5 F022          	movff	tablat,printf@c
  3870  00F3EC  5022               	movf	printf@c,w,c
  3871  00F3EE  B4D8               	btfsc	status,2,c
  3872  00F3F0  0012               	return	
  3873  00F3F2  D67F               	goto	l2340
  3874  00F3F4                     __end_of_printf:
  3875                           	opt stack 0
  3876                           tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           intcon2	equ	0xFF1
  3883                           wreg	equ	0xFE8
  3884                           indf2	equ	0xFDF
  3885                           postinc2	equ	0xFDE
  3886                           postdec2	equ	0xFDD
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _putch *****************
  3892 ;; Defined at:
  3893 ;;		line 30 in file "lcd.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  data            1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  data            1    2[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        1 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    1
  3914 ;; This function calls:
  3915 ;;		_lcdNibble
  3916 ;; This function is called by:
  3917 ;;		_printf
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text6
  3922  00EA92                     __ptext6:
  3923                           	opt stack 0
  3924  00EA92                     _putch:
  3925                           	opt stack 28
  3926                           
  3927                           ;incstack = 0
  3928                           ;putch@data stored from wreg
  3929  00EA92  6E03               	movwf	putch@data,c
  3930                           
  3931                           ;lcd.c: 31: LATDbits.LATD2 = 1;
  3932  00EA94  848C               	bsf	3980,2,c	;volatile
  3933                           
  3934                           ;lcd.c: 32: lcdNibble(data);
  3935  00EA96  5003               	movf	putch@data,w,c
  3936  00EA98  ECAE  F076         	call	_lcdNibble
  3937  00EA9C  0012               	return		;funcret
  3938  00EA9E                     __end_of_putch:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           intcon2	equ	0xFF1
  3947                           wreg	equ	0xFE8
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _isdigit *****************
  3956 ;; Defined at:
  3957 ;;		line 8 in file "/Applications/microchip/xc8/v1.40/sources/common/isdigit.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  c               1    wreg     unsigned char 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  c               1    2[COMRAM] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;Total ram usage:        3 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_printf
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text7
  3985  00EACC                     __ptext7:
  3986                           	opt stack 0
  3987  00EACC                     _isdigit:
  3988                           	opt stack 29
  3989                           
  3990                           ;incstack = 0
  3991                           ;isdigit@c stored from wreg
  3992  00EACC  6E03               	movwf	isdigit@c,c
  3993  00EACE  0E00               	movlw	0
  3994  00EAD0  6E02               	movwf	_isdigit$886,c
  3995  00EAD2  0E3A               	movlw	58
  3996  00EAD4  6003               	cpfslt	isdigit@c,c
  3997  00EAD6  D005               	goto	l2174
  3998  00EAD8  0E2F               	movlw	47
  3999  00EADA  6403               	cpfsgt	isdigit@c,c
  4000  00EADC  D002               	goto	l2174
  4001  00EADE  0E01               	movlw	1
  4002  00EAE0  6E02               	movwf	_isdigit$886,c
  4003  00EAE2                     l2174:
  4004  00EAE2  C002  F001         	movff	_isdigit$886,??_isdigit
  4005  00EAE6  3001               	rrcf	??_isdigit,w,c
  4006  00EAE8  0012               	return	
  4007  00EAEA                     __end_of_isdigit:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodh	equ	0xFF4
  4014                           prodl	equ	0xFF3
  4015                           intcon2	equ	0xFF1
  4016                           wreg	equ	0xFE8
  4017                           indf2	equ	0xFDF
  4018                           postinc2	equ	0xFDE
  4019                           postdec2	equ	0xFDD
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function ___wmul *****************
  4025 ;; Defined at:
  4026 ;;		line 15 in file "/Applications/microchip/xc8/v1.40/sources/common/Umul16.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  multiplier      2    0[COMRAM] unsigned int 
  4029 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  product         2    4[COMRAM] unsigned int 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  2    0[COMRAM] unsigned int 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0, prodl, prodh
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;Total ram usage:        6 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_printf
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text8
  4055  00EB34                     __ptext8:
  4056                           	opt stack 0
  4057  00EB34                     ___wmul:
  4058                           	opt stack 29
  4059                           
  4060                           ;incstack = 0
  4061  00EB34  5001               	movf	___wmul@multiplier,w,c
  4062  00EB36  0203               	mulwf	___wmul@multiplicand,c
  4063  00EB38  CFF3 F005          	movff	prodl,___wmul@product
  4064  00EB3C  CFF4 F006          	movff	prodh,___wmul@product+1
  4065  00EB40  5001               	movf	___wmul@multiplier,w,c
  4066  00EB42  0204               	mulwf	___wmul@multiplicand+1,c
  4067  00EB44  50F3               	movf	prodl,w,c
  4068  00EB46  2606               	addwf	___wmul@product+1,f,c
  4069  00EB48  5002               	movf	___wmul@multiplier+1,w,c
  4070  00EB4A  0203               	mulwf	___wmul@multiplicand,c
  4071  00EB4C  50F3               	movf	prodl,w,c
  4072  00EB4E  2606               	addwf	___wmul@product+1,f,c
  4073  00EB50  C005  F001         	movff	___wmul@product,?___wmul
  4074  00EB54  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4075  00EB58  0012               	return	
  4076  00EB5A                     __end_of___wmul:
  4077                           	opt stack 0
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon2	equ	0xFF1
  4085                           wreg	equ	0xFE8
  4086                           indf2	equ	0xFDF
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function ___lwmod *****************
  4094 ;; Defined at:
  4095 ;;		line 8 in file "/Applications/microchip/xc8/v1.40/sources/common/lwmod.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  dividend        2    7[COMRAM] unsigned int 
  4098 ;;  divisor         2    9[COMRAM] unsigned int 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  counter         1   11[COMRAM] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  2    7[COMRAM] unsigned int 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;Total ram usage:        5 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_printf
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text9
  4124  00EBE4                     __ptext9:
  4125                           	opt stack 0
  4126  00EBE4                     ___lwmod:
  4127                           	opt stack 29
  4128                           
  4129                           ;incstack = 0
  4130  00EBE4  500A               	movf	___lwmod@divisor,w,c
  4131  00EBE6  100B               	iorwf	___lwmod@divisor+1,w,c
  4132  00EBE8  B4D8               	btfsc	status,2,c
  4133  00EBEA  D018               	goto	l819
  4134  00EBEC  0E01               	movlw	1
  4135  00EBEE  6E0C               	movwf	___lwmod@counter,c
  4136  00EBF0  D004               	goto	l2270
  4137  00EBF2                     l2268:
  4138  00EBF2  90D8               	bcf	status,0,c
  4139  00EBF4  360A               	rlcf	___lwmod@divisor,f,c
  4140  00EBF6  360B               	rlcf	___lwmod@divisor+1,f,c
  4141  00EBF8  2A0C               	incf	___lwmod@counter,f,c
  4142  00EBFA                     l2270:
  4143  00EBFA  AE0B               	btfss	___lwmod@divisor+1,7,c
  4144  00EBFC  D7FA               	goto	l2268
  4145  00EBFE                     l2272:
  4146  00EBFE  500A               	movf	___lwmod@divisor,w,c
  4147  00EC00  5C08               	subwf	___lwmod@dividend,w,c
  4148  00EC02  500B               	movf	___lwmod@divisor+1,w,c
  4149  00EC04  5809               	subwfb	___lwmod@dividend+1,w,c
  4150  00EC06  A0D8               	btfss	status,0,c
  4151  00EC08  D004               	goto	l2276
  4152  00EC0A  500A               	movf	___lwmod@divisor,w,c
  4153  00EC0C  5E08               	subwf	___lwmod@dividend,f,c
  4154  00EC0E  500B               	movf	___lwmod@divisor+1,w,c
  4155  00EC10  5A09               	subwfb	___lwmod@dividend+1,f,c
  4156  00EC12                     l2276:
  4157  00EC12  90D8               	bcf	status,0,c
  4158  00EC14  320B               	rrcf	___lwmod@divisor+1,f,c
  4159  00EC16  320A               	rrcf	___lwmod@divisor,f,c
  4160  00EC18  2E0C               	decfsz	___lwmod@counter,f,c
  4161  00EC1A  D7F1               	goto	l2272
  4162  00EC1C                     l819:
  4163  00EC1C  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4164  00EC20  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4165  00EC24  0012               	return		;funcret
  4166  00EC26                     __end_of___lwmod:
  4167                           	opt stack 0
  4168                           tblptru	equ	0xFF8
  4169                           tblptrh	equ	0xFF7
  4170                           tblptrl	equ	0xFF6
  4171                           tablat	equ	0xFF5
  4172                           prodh	equ	0xFF4
  4173                           prodl	equ	0xFF3
  4174                           intcon2	equ	0xFF1
  4175                           wreg	equ	0xFE8
  4176                           indf2	equ	0xFDF
  4177                           postinc2	equ	0xFDE
  4178                           postdec2	equ	0xFDD
  4179                           fsr2h	equ	0xFDA
  4180                           fsr2l	equ	0xFD9
  4181                           status	equ	0xFD8
  4182                           
  4183 ;; *************** function ___lwdiv *****************
  4184 ;; Defined at:
  4185 ;;		line 8 in file "/Applications/microchip/xc8/v1.40/sources/common/lwdiv.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  dividend        2    0[COMRAM] unsigned int 
  4188 ;;  divisor         2    2[COMRAM] unsigned int 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  quotient        2    4[COMRAM] unsigned int 
  4191 ;;  counter         1    6[COMRAM] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  2    0[COMRAM] unsigned int 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;Total ram usage:        7 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_printf
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text10
  4215  00ED0A                     __ptext10:
  4216                           	opt stack 0
  4217  00ED0A                     ___lwdiv:
  4218                           	opt stack 29
  4219                           
  4220                           ;incstack = 0
  4221  00ED0A  0E00               	movlw	0
  4222  00ED0C  6E06               	movwf	___lwdiv@quotient+1,c
  4223  00ED0E  0E00               	movlw	0
  4224  00ED10  6E05               	movwf	___lwdiv@quotient,c
  4225  00ED12  5003               	movf	___lwdiv@divisor,w,c
  4226  00ED14  1004               	iorwf	___lwdiv@divisor+1,w,c
  4227  00ED16  B4D8               	btfsc	status,2,c
  4228  00ED18  D01C               	goto	l809
  4229  00ED1A  0E01               	movlw	1
  4230  00ED1C  6E07               	movwf	___lwdiv@counter,c
  4231  00ED1E  D004               	goto	l2250
  4232  00ED20                     l2248:
  4233  00ED20  90D8               	bcf	status,0,c
  4234  00ED22  3603               	rlcf	___lwdiv@divisor,f,c
  4235  00ED24  3604               	rlcf	___lwdiv@divisor+1,f,c
  4236  00ED26  2A07               	incf	___lwdiv@counter,f,c
  4237  00ED28                     l2250:
  4238  00ED28  AE04               	btfss	___lwdiv@divisor+1,7,c
  4239  00ED2A  D7FA               	goto	l2248
  4240  00ED2C                     l2252:
  4241  00ED2C  90D8               	bcf	status,0,c
  4242  00ED2E  3605               	rlcf	___lwdiv@quotient,f,c
  4243  00ED30  3606               	rlcf	___lwdiv@quotient+1,f,c
  4244  00ED32  5003               	movf	___lwdiv@divisor,w,c
  4245  00ED34  5C01               	subwf	___lwdiv@dividend,w,c
  4246  00ED36  5004               	movf	___lwdiv@divisor+1,w,c
  4247  00ED38  5802               	subwfb	___lwdiv@dividend+1,w,c
  4248  00ED3A  A0D8               	btfss	status,0,c
  4249  00ED3C  D005               	goto	l2260
  4250  00ED3E  5003               	movf	___lwdiv@divisor,w,c
  4251  00ED40  5E01               	subwf	___lwdiv@dividend,f,c
  4252  00ED42  5004               	movf	___lwdiv@divisor+1,w,c
  4253  00ED44  5A02               	subwfb	___lwdiv@dividend+1,f,c
  4254  00ED46  8005               	bsf	___lwdiv@quotient,0,c
  4255  00ED48                     l2260:
  4256  00ED48  90D8               	bcf	status,0,c
  4257  00ED4A  3204               	rrcf	___lwdiv@divisor+1,f,c
  4258  00ED4C  3203               	rrcf	___lwdiv@divisor,f,c
  4259  00ED4E  2E07               	decfsz	___lwdiv@counter,f,c
  4260  00ED50  D7ED               	goto	l2252
  4261  00ED52                     l809:
  4262  00ED52  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4263  00ED56  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4264  00ED5A  0012               	return		;funcret
  4265  00ED5C                     __end_of___lwdiv:
  4266                           	opt stack 0
  4267                           tblptru	equ	0xFF8
  4268                           tblptrh	equ	0xFF7
  4269                           tblptrl	equ	0xFF6
  4270                           tablat	equ	0xFF5
  4271                           prodh	equ	0xFF4
  4272                           prodl	equ	0xFF3
  4273                           intcon2	equ	0xFF1
  4274                           wreg	equ	0xFE8
  4275                           indf2	equ	0xFDF
  4276                           postinc2	equ	0xFDE
  4277                           postdec2	equ	0xFDD
  4278                           fsr2h	equ	0xFDA
  4279                           fsr2l	equ	0xFD9
  4280                           status	equ	0xFD8
  4281                           
  4282 ;; *************** function _key_pressed_check *****************
  4283 ;; Defined at:
  4284 ;;		line 20 in file "main.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  check           1    2[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        1 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    1
  4305 ;; This function calls:
  4306 ;;		_delay_10ms
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text11
  4313  00EB82                     __ptext11:
  4314                           	opt stack 0
  4315  00EB82                     _key_pressed_check:
  4316                           	opt stack 29
  4317  00EB82                     l200:
  4318  00EB82  A281               	btfss	3969,1,c	;volatile
  4319  00EB84  D7FE               	goto	l200
  4320                           
  4321                           ;main.c: 23: }
  4322                           ;main.c: 24: unsigned char check = PORTBbits.RB1;
  4323  00EB86  0E00               	movlw	0
  4324  00EB88  B281               	btfsc	3969,1,c	;volatile
  4325  00EB8A  0E01               	movlw	1
  4326  00EB8C  6E03               	movwf	key_pressed_check@check,c
  4327                           
  4328                           ;main.c: 25: delay_10ms(2);
  4329  00EB8E  0E02               	movlw	2
  4330  00EB90  EC58  F075         	call	_delay_10ms
  4331                           
  4332                           ;main.c: 27: if(check == PORTBbits.RB1){
  4333  00EB94  A281               	btfss	3969,1,c	;volatile
  4334  00EB96  D002               	goto	u290
  4335  00EB98  0E01               	movlw	1
  4336  00EB9A  D001               	goto	u296
  4337  00EB9C                     u290:
  4338  00EB9C  0E00               	movlw	0
  4339  00EB9E                     u296:
  4340  00EB9E  1803               	xorwf	key_pressed_check@check,w,c
  4341  00EBA0  A4D8               	btfss	status,2,c
  4342  00EBA2  D002               	goto	l1246
  4343                           
  4344                           ;main.c: 28: return 1;
  4345  00EBA4  0E01               	movlw	1
  4346  00EBA6  0012               	return	
  4347  00EBA8                     l1246:
  4348                           
  4349                           ;main.c: 29: }
  4350                           ;main.c: 30: return 0;
  4351  00EBA8  0E00               	movlw	0
  4352  00EBAA  0012               	return	
  4353  00EBAC                     __end_of_key_pressed_check:
  4354                           	opt stack 0
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon2	equ	0xFF1
  4362                           wreg	equ	0xFE8
  4363                           indf2	equ	0xFDF
  4364                           postinc2	equ	0xFDE
  4365                           postdec2	equ	0xFDD
  4366                           fsr2h	equ	0xFDA
  4367                           fsr2l	equ	0xFD9
  4368                           status	equ	0xFD8
  4369                           
  4370 ;; *************** function _delay_10ms *****************
  4371 ;; Defined at:
  4372 ;;		line 66 in file "I2C.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  n               1    wreg     unsigned char 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  n               1    1[COMRAM] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;Total ram usage:        2 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_key_pressed_check
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text12
  4400  00EAB0                     __ptext12:
  4401                           	opt stack 0
  4402  00EAB0                     _delay_10ms:
  4403                           	opt stack 29
  4404                           
  4405                           ;incstack = 0
  4406                           ;delay_10ms@n stored from wreg
  4407  00EAB0  6E02               	movwf	delay_10ms@n,c
  4408                           
  4409                           ;I2C.c: 67: while (n-- != 0) {
  4410  00EAB2  D007               	goto	l1066
  4411  00EAB4                     l1064:
  4412                           
  4413                           ;I2C.c: 68: _delay((unsigned long)((5)*(8000000/4000.0)));
  4414  00EAB4  0E0D               	movlw	13
  4415  00EAB6  6E01               	movwf	??_delay_10ms& (0+255),c
  4416  00EAB8  0EFC               	movlw	252
  4417  00EABA                     u3667:
  4418  00EABA  2EE8               	decfsz	wreg,f,c
  4419  00EABC  D7FE               	bra	u3667
  4420  00EABE  2E01               	decfsz	??_delay_10ms& (0+255),f,c
  4421  00EAC0  D7FC               	bra	u3667
  4422  00EAC2                     l1066:
  4423  00EAC2  0602               	decf	delay_10ms@n,f,c
  4424  00EAC4  2802               	incf	delay_10ms@n,w,c
  4425  00EAC6  B4D8               	btfsc	status,2,c
  4426  00EAC8  0012               	return	
  4427  00EACA  D7F4               	goto	l1064
  4428  00EACC                     __end_of_delay_10ms:
  4429                           	opt stack 0
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon2	equ	0xFF1
  4437                           wreg	equ	0xFE8
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           postdec2	equ	0xFDD
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function _initLCD *****************
  4446 ;; Defined at:
  4447 ;;		line 14 in file "lcd.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:        1 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    2
  4468 ;; This function calls:
  4469 ;;		_lcdInst
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text13
  4476  00EC26                     __ptext13:
  4477                           	opt stack 0
  4478  00EC26                     _initLCD:
  4479                           	opt stack 28
  4480                           
  4481                           ;lcd.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  4482                           
  4483                           ;incstack = 0
  4484  00EC26  0E27               	movlw	39
  4485  00EC28  6E04               	movwf	??_initLCD& (0+255),c
  4486  00EC2A  0EF5               	movlw	245
  4487  00EC2C                     u3677:
  4488  00EC2C  2EE8               	decfsz	wreg,f,c
  4489  00EC2E  D7FE               	bra	u3677
  4490  00EC30  2E04               	decfsz	??_initLCD& (0+255),f,c
  4491  00EC32  D7FC               	bra	u3677
  4492  00EC34  F000               	nop	
  4493                           
  4494                           ;lcd.c: 16: lcdInst(0b00110011);
  4495  00EC36  0E33               	movlw	51
  4496  00EC38  EC43  F075         	call	_lcdInst
  4497                           
  4498                           ;lcd.c: 17: lcdInst(0b00110010);
  4499  00EC3C  0E32               	movlw	50
  4500  00EC3E  EC43  F075         	call	_lcdInst
  4501                           
  4502                           ;lcd.c: 18: lcdInst(0b00101000);
  4503  00EC42  0E28               	movlw	40
  4504  00EC44  EC43  F075         	call	_lcdInst
  4505                           
  4506                           ;lcd.c: 19: lcdInst(0b00001111);
  4507  00EC48  0E0F               	movlw	15
  4508  00EC4A  EC43  F075         	call	_lcdInst
  4509                           
  4510                           ;lcd.c: 20: lcdInst(0b00000110);
  4511  00EC4E  0E06               	movlw	6
  4512  00EC50  EC43  F075         	call	_lcdInst
  4513                           
  4514                           ;lcd.c: 21: lcdInst(0b00000001);
  4515  00EC54  0E01               	movlw	1
  4516  00EC56  EC43  F075         	call	_lcdInst
  4517                           
  4518                           ;lcd.c: 22: _delay((unsigned long)((15)*(8000000/4000.0)));
  4519  00EC5A  0E27               	movlw	39
  4520  00EC5C  6E04               	movwf	??_initLCD& (0+255),c
  4521  00EC5E  0EF5               	movlw	245
  4522  00EC60                     u3687:
  4523  00EC60  2EE8               	decfsz	wreg,f,c
  4524  00EC62  D7FE               	bra	u3687
  4525  00EC64  2E04               	decfsz	??_initLCD& (0+255),f,c
  4526  00EC66  D7FC               	bra	u3687
  4527  00EC68  F000               	nop	
  4528  00EC6A  0012               	return		;funcret
  4529  00EC6C                     __end_of_initLCD:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           intcon2	equ	0xFF1
  4538                           wreg	equ	0xFE8
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _lcdInst *****************
  4547 ;; Defined at:
  4548 ;;		line 25 in file "lcd.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  data            1    wreg     unsigned char 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  data            1    2[COMRAM] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;Total ram usage:        1 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		_lcdNibble
  4571 ;; This function is called by:
  4572 ;;		_initLCD
  4573 ;;		_main
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text14
  4578  00EA86                     __ptext14:
  4579                           	opt stack 0
  4580  00EA86                     _lcdInst:
  4581                           	opt stack 29
  4582                           
  4583                           ;incstack = 0
  4584                           ;lcdInst@data stored from wreg
  4585  00EA86  6E03               	movwf	lcdInst@data,c
  4586                           
  4587                           ;lcd.c: 26: LATDbits.LATD2 = 0;
  4588  00EA88  948C               	bcf	3980,2,c	;volatile
  4589                           
  4590                           ;lcd.c: 27: lcdNibble(data);
  4591  00EA8A  5003               	movf	lcdInst@data,w,c
  4592  00EA8C  ECAE  F076         	call	_lcdNibble
  4593  00EA90  0012               	return		;funcret
  4594  00EA92                     __end_of_lcdInst:
  4595                           	opt stack 0
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           prodh	equ	0xFF4
  4601                           prodl	equ	0xFF3
  4602                           intcon2	equ	0xFF1
  4603                           wreg	equ	0xFE8
  4604                           indf2	equ	0xFDF
  4605                           postinc2	equ	0xFDE
  4606                           postdec2	equ	0xFDD
  4607                           fsr2h	equ	0xFDA
  4608                           fsr2l	equ	0xFD9
  4609                           status	equ	0xFD8
  4610                           
  4611 ;; *************** function _lcdNibble *****************
  4612 ;; Defined at:
  4613 ;;		line 35 in file "lcd.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  data            1    wreg     unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  data            1    1[COMRAM] unsigned char 
  4618 ;;  temp            1    0[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;Total ram usage:        2 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_lcdInst
  4638 ;;		_putch
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text15
  4643  00ED5C                     __ptext15:
  4644                           	opt stack 0
  4645  00ED5C                     _lcdNibble:
  4646                           	opt stack 28
  4647                           
  4648                           ;incstack = 0
  4649                           ;lcdNibble@data stored from wreg
  4650  00ED5C  6E02               	movwf	lcdNibble@data,c
  4651                           
  4652                           ;lcd.c: 37: char temp = data & 0xF0;
  4653  00ED5E  5002               	movf	lcdNibble@data,w,c
  4654  00ED60  0BF0               	andlw	240
  4655  00ED62  6E01               	movwf	lcdNibble@temp,c
  4656                           
  4657                           ;lcd.c: 38: LATD = LATD & 0x0F;
  4658  00ED64  508C               	movf	3980,w,c	;volatile
  4659  00ED66  0B0F               	andlw	15
  4660  00ED68  6E8C               	movwf	3980,c	;volatile
  4661                           
  4662                           ;lcd.c: 39: LATD = temp | LATD;
  4663  00ED6A  5001               	movf	lcdNibble@temp,w,c
  4664  00ED6C  108C               	iorwf	3980,w,c	;volatile
  4665  00ED6E  6E8C               	movwf	3980,c	;volatile
  4666                           
  4667                           ;lcd.c: 41: LATDbits.LATD3 = 0;
  4668  00ED70  968C               	bcf	3980,3,c	;volatile
  4669                           
  4670                           ;lcd.c: 42: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4671  00ED72  0E10               	movlw	16
  4672  00ED74                     u3697:
  4673  00ED74  2EE8               	decfsz	wreg,f,c
  4674  00ED76  D7FE               	bra	u3697
  4675  00ED78  D000               	nop2	
  4676                           
  4677                           ;lcd.c: 43: LATDbits.LATD3 = 1;
  4678  00ED7A  868C               	bsf	3980,3,c	;volatile
  4679                           
  4680                           ;lcd.c: 44: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4681  00ED7C  0E10               	movlw	16
  4682  00ED7E                     u3707:
  4683  00ED7E  2EE8               	decfsz	wreg,f,c
  4684  00ED80  D7FE               	bra	u3707
  4685  00ED82  D000               	nop2	
  4686                           
  4687                           ;lcd.c: 46: data = data << 4;
  4688  00ED84  3802               	swapf	lcdNibble@data,w,c
  4689  00ED86  0BF0               	andlw	240
  4690  00ED88  6E02               	movwf	lcdNibble@data,c
  4691                           
  4692                           ;lcd.c: 48: temp = data & 0xF0;
  4693  00ED8A  5002               	movf	lcdNibble@data,w,c
  4694  00ED8C  0BF0               	andlw	240
  4695  00ED8E  6E01               	movwf	lcdNibble@temp,c
  4696                           
  4697                           ;lcd.c: 49: LATD = LATD & 0x0F;
  4698  00ED90  508C               	movf	3980,w,c	;volatile
  4699  00ED92  0B0F               	andlw	15
  4700  00ED94  6E8C               	movwf	3980,c	;volatile
  4701                           
  4702                           ;lcd.c: 50: LATD = temp | LATD;
  4703  00ED96  5001               	movf	lcdNibble@temp,w,c
  4704  00ED98  108C               	iorwf	3980,w,c	;volatile
  4705  00ED9A  6E8C               	movwf	3980,c	;volatile
  4706                           
  4707                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  4708  00ED9C  968C               	bcf	3980,3,c	;volatile
  4709                           
  4710                           ;lcd.c: 53: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4711  00ED9E  0E10               	movlw	16
  4712  00EDA0                     u3717:
  4713  00EDA0  2EE8               	decfsz	wreg,f,c
  4714  00EDA2  D7FE               	bra	u3717
  4715  00EDA4  D000               	nop2	
  4716                           
  4717                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  4718  00EDA6  868C               	bsf	3980,3,c	;volatile
  4719                           
  4720                           ;lcd.c: 55: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4721  00EDA8  0E10               	movlw	16
  4722  00EDAA                     u3727:
  4723  00EDAA  2EE8               	decfsz	wreg,f,c
  4724  00EDAC  D7FE               	bra	u3727
  4725  00EDAE  D000               	nop2	
  4726  00EDB0  0012               	return		;funcret
  4727  00EDB2                     __end_of_lcdNibble:
  4728                           	opt stack 0
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           prodh	equ	0xFF4
  4734                           prodl	equ	0xFF3
  4735                           intcon2	equ	0xFF1
  4736                           wreg	equ	0xFE8
  4737                           indf2	equ	0xFDF
  4738                           postinc2	equ	0xFDE
  4739                           postdec2	equ	0xFDD
  4740                           fsr2h	equ	0xFDA
  4741                           fsr2l	equ	0xFD9
  4742                           status	equ	0xFD8
  4743                           
  4744 ;; *************** function _delay_1s_interrupt *****************
  4745 ;; Defined at:
  4746 ;;		line 72 in file "I2C.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  n               1    wreg     unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  n               1    5[COMRAM] unsigned char 
  4751 ;;  i               1    6[COMRAM] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2    0[COMRAM] int 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;Total ram usage:        7 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_main
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text16
  4775  00ECBA                     __ptext16:
  4776                           	opt stack 0
  4777  00ECBA                     _delay_1s_interrupt:
  4778                           	opt stack 30
  4779                           
  4780                           ;incstack = 0
  4781                           ;delay_1s_interrupt@n stored from wreg
  4782  00ECBA  6E06               	movwf	delay_1s_interrupt@n,c
  4783                           
  4784                           ;I2C.c: 73: for(char i=0;i<(10*n);i++){
  4785  00ECBC  0E00               	movlw	0
  4786  00ECBE  6E07               	movwf	delay_1s_interrupt@i,c
  4787  00ECC0  D010               	goto	l2298
  4788  00ECC2                     l86:
  4789                           
  4790                           ;I2C.c: 74: if (PORTBbits.RB1 == 1){
  4791  00ECC2  A281               	btfss	3969,1,c	;volatile
  4792  00ECC4  D005               	goto	l2294
  4793                           
  4794                           ;I2C.c: 75: return 1;
  4795  00ECC6  0E00               	movlw	0
  4796  00ECC8  6E02               	movwf	?_delay_1s_interrupt+1,c
  4797  00ECCA  0E01               	movlw	1
  4798  00ECCC  6E01               	movwf	?_delay_1s_interrupt,c
  4799  00ECCE  0012               	return	
  4800  00ECD0                     l2294:
  4801                           
  4802                           ;I2C.c: 76: }
  4803                           ;I2C.c: 77: _delay((unsigned long)((98)*(8000000/4000.0)));
  4804  00ECD0  0EFF               	movlw	255
  4805  00ECD2  6E03               	movwf	??_delay_1s_interrupt& (0+255),c
  4806  00ECD4  0E8A               	movlw	138
  4807  00ECD6                     u3737:
  4808  00ECD6  2EE8               	decfsz	wreg,f,c
  4809  00ECD8  D7FE               	bra	u3737
  4810  00ECDA  2E03               	decfsz	??_delay_1s_interrupt& (0+255),f,c
  4811  00ECDC  D7FC               	bra	u3737
  4812  00ECDE  D000               	nop2	
  4813  00ECE0  2A07               	incf	delay_1s_interrupt@i,f,c
  4814  00ECE2                     l2298:
  4815  00ECE2  5006               	movf	delay_1s_interrupt@n,w,c
  4816  00ECE4  0D0A               	mullw	10
  4817  00ECE6  5007               	movf	delay_1s_interrupt@i,w,c
  4818  00ECE8  6E03               	movwf	??_delay_1s_interrupt& (0+255),c
  4819  00ECEA  6A04               	clrf	(??_delay_1s_interrupt+1)& (0+255),c
  4820  00ECEC  50F3               	movf	prodl,w,c
  4821  00ECEE  5C03               	subwf	??_delay_1s_interrupt,w,c
  4822  00ECF0  5004               	movf	??_delay_1s_interrupt+1,w,c
  4823  00ECF2  0A80               	xorlw	128
  4824  00ECF4  6E05               	movwf	(??_delay_1s_interrupt+2)& (0+255),c
  4825  00ECF6  50F4               	movf	prodh,w,c
  4826  00ECF8  0A80               	xorlw	128
  4827  00ECFA  5805               	subwfb	(??_delay_1s_interrupt+2)& (0+255),w,c
  4828  00ECFC  A0D8               	btfss	status,0,c
  4829  00ECFE  D7E1               	goto	l86
  4830                           
  4831                           ;I2C.c: 78: }
  4832                           ;I2C.c: 79: return 0;
  4833  00ED00  0E00               	movlw	0
  4834  00ED02  6E02               	movwf	?_delay_1s_interrupt+1,c
  4835  00ED04  0E00               	movlw	0
  4836  00ED06  6E01               	movwf	?_delay_1s_interrupt,c
  4837  00ED08  0012               	return	
  4838  00ED0A                     __end_of_delay_1s_interrupt:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           prodh	equ	0xFF4
  4845                           prodl	equ	0xFF3
  4846                           intcon2	equ	0xFF1
  4847                           wreg	equ	0xFE8
  4848                           indf2	equ	0xFDF
  4849                           postinc2	equ	0xFDE
  4850                           postdec2	equ	0xFDD
  4851                           fsr2h	equ	0xFDA
  4852                           fsr2l	equ	0xFD9
  4853                           status	equ	0xFD8
  4854                           
  4855 ;; *************** function ___ftneg *****************
  4856 ;; Defined at:
  4857 ;;		line 15 in file "/Applications/microchip/xc8/v1.40/sources/common/ftneg.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  f1              3    0[COMRAM] float 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  3    0[COMRAM] float 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4871 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;Total ram usage:        3 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_main
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text17
  4885  00EAEA                     __ptext17:
  4886                           	opt stack 0
  4887  00EAEA                     ___ftneg:
  4888                           	opt stack 30
  4889                           
  4890                           ;incstack = 0
  4891  00EAEA  5001               	movf	___ftneg@f1,w,c
  4892  00EAEC  1002               	iorwf	___ftneg@f1+1,w,c
  4893  00EAEE  1003               	iorwf	___ftneg@f1+2,w,c
  4894  00EAF0  B4D8               	btfsc	status,2,c
  4895  00EAF2  D006               	goto	l706
  4896  00EAF4  0E00               	movlw	0
  4897  00EAF6  1A01               	xorwf	___ftneg@f1,f,c
  4898  00EAF8  0E00               	movlw	0
  4899  00EAFA  1A02               	xorwf	___ftneg@f1+1,f,c
  4900  00EAFC  0E80               	movlw	128
  4901  00EAFE  1A03               	xorwf	___ftneg@f1+2,f,c
  4902  00EB00                     l706:
  4903  00EB00  C001  F001         	movff	___ftneg@f1,?___ftneg
  4904  00EB04  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4905  00EB08  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4906  00EB0C  0012               	return		;funcret
  4907  00EB0E                     __end_of___ftneg:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon2	equ	0xFF1
  4916                           wreg	equ	0xFE8
  4917                           indf2	equ	0xFDF
  4918                           postinc2	equ	0xFDE
  4919                           postdec2	equ	0xFDD
  4920                           fsr2h	equ	0xFDA
  4921                           fsr2l	equ	0xFD9
  4922                           status	equ	0xFD8
  4923                           
  4924 ;; *************** function ___ftadd *****************
  4925 ;; Defined at:
  4926 ;;		line 86 in file "/Applications/microchip/xc8/v1.40/sources/common/ftadd.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  f1              3    8[COMRAM] float 
  4929 ;;  f2              3   11[COMRAM] float 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  exp1            1   19[COMRAM] unsigned char 
  4932 ;;  exp2            1   18[COMRAM] unsigned char 
  4933 ;;  sign            1   17[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  3    8[COMRAM] float 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:       12 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    1
  4950 ;; This function calls:
  4951 ;;		___ftpack
  4952 ;; This function is called by:
  4953 ;;		_main
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text18
  4958  00EF3C                     __ptext18:
  4959                           	opt stack 0
  4960  00EF3C                     ___ftadd:
  4961                           	opt stack 29
  4962                           
  4963                           ;incstack = 0
  4964  00EF3C  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  4965  00EF40  6A10               	clrf	(??___ftadd+1)& (0+255),c
  4966  00EF42  6A11               	clrf	(??___ftadd+2)& (0+255),c
  4967  00EF44  340A               	rlcf	___ftadd@f1+1,w,c
  4968  00EF46  360F               	rlcf	??___ftadd& (0+255),f,c
  4969  00EF48  E301               	bnc	u2231
  4970  00EF4A  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  4971  00EF4C                     u2231:
  4972  00EF4C  500F               	movf	??___ftadd,w,c
  4973  00EF4E  6E14               	movwf	___ftadd@exp1,c
  4974  00EF50  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  4975  00EF54  6A10               	clrf	(??___ftadd+1)& (0+255),c
  4976  00EF56  6A11               	clrf	(??___ftadd+2)& (0+255),c
  4977  00EF58  340D               	rlcf	___ftadd@f2+1,w,c
  4978  00EF5A  360F               	rlcf	??___ftadd& (0+255),f,c
  4979  00EF5C  E301               	bnc	u2241
  4980  00EF5E  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  4981  00EF60                     u2241:
  4982  00EF60  500F               	movf	??___ftadd,w,c
  4983  00EF62  6E13               	movwf	___ftadd@exp2,c
  4984  00EF64  5014               	movf	___ftadd@exp1,w,c
  4985  00EF66  B4D8               	btfsc	status,2,c
  4986  00EF68  D00B               	goto	l649
  4987  00EF6A  5013               	movf	___ftadd@exp2,w,c
  4988  00EF6C  5C14               	subwf	___ftadd@exp1,w,c
  4989  00EF6E  B0D8               	btfsc	status,0,c
  4990  00EF70  D00E               	goto	l2476
  4991  00EF72  5014               	movf	___ftadd@exp1,w,c
  4992  00EF74  0800               	sublw	0
  4993  00EF76  2413               	addwf	___ftadd@exp2,w,c
  4994  00EF78  6E0F               	movwf	??___ftadd& (0+255),c
  4995  00EF7A  0E18               	movlw	24
  4996  00EF7C  640F               	cpfsgt	??___ftadd,c
  4997  00EF7E  D007               	goto	l2476
  4998  00EF80                     l649:
  4999  00EF80  C00C  F009         	movff	___ftadd@f2,?___ftadd
  5000  00EF84  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  5001  00EF88  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  5002  00EF8C  0012               	return	
  5003  00EF8E                     l2476:
  5004  00EF8E  5013               	movf	___ftadd@exp2,w,c
  5005  00EF90  B4D8               	btfsc	status,2,c
  5006  00EF92  D00B               	goto	l653
  5007  00EF94  5014               	movf	___ftadd@exp1,w,c
  5008  00EF96  5C13               	subwf	___ftadd@exp2,w,c
  5009  00EF98  B0D8               	btfsc	status,0,c
  5010  00EF9A  D00E               	goto	l2482
  5011  00EF9C  5013               	movf	___ftadd@exp2,w,c
  5012  00EF9E  0800               	sublw	0
  5013  00EFA0  2414               	addwf	___ftadd@exp1,w,c
  5014  00EFA2  6E0F               	movwf	??___ftadd& (0+255),c
  5015  00EFA4  0E18               	movlw	24
  5016  00EFA6  640F               	cpfsgt	??___ftadd,c
  5017  00EFA8  D007               	goto	l2482
  5018  00EFAA                     l653:
  5019  00EFAA  C009  F009         	movff	___ftadd@f1,?___ftadd
  5020  00EFAE  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  5021  00EFB2  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  5022  00EFB6  0012               	return	
  5023  00EFB8                     l2482:
  5024  00EFB8  0E06               	movlw	6
  5025  00EFBA  6E12               	movwf	___ftadd@sign,c
  5026  00EFBC  BE0B               	btfsc	___ftadd@f1+2,7,c
  5027  00EFBE  8E12               	bsf	___ftadd@sign,7,c
  5028  00EFC0  BE0E               	btfsc	___ftadd@f2+2,7,c
  5029  00EFC2  8C12               	bsf	___ftadd@sign,6,c
  5030  00EFC4  8E0A               	bsf	___ftadd@f1+1,7,c
  5031  00EFC6  0EFF               	movlw	255
  5032  00EFC8  1609               	andwf	___ftadd@f1,f,c
  5033  00EFCA  0EFF               	movlw	255
  5034  00EFCC  160A               	andwf	___ftadd@f1+1,f,c
  5035  00EFCE  0E00               	movlw	0
  5036  00EFD0  160B               	andwf	___ftadd@f1+2,f,c
  5037  00EFD2  8E0D               	bsf	___ftadd@f2+1,7,c
  5038  00EFD4  0EFF               	movlw	255
  5039  00EFD6  160C               	andwf	___ftadd@f2,f,c
  5040  00EFD8  0EFF               	movlw	255
  5041  00EFDA  160D               	andwf	___ftadd@f2+1,f,c
  5042  00EFDC  0E00               	movlw	0
  5043  00EFDE  160E               	andwf	___ftadd@f2+2,f,c
  5044  00EFE0  5013               	movf	___ftadd@exp2,w,c
  5045  00EFE2  5C14               	subwf	___ftadd@exp1,w,c
  5046  00EFE4  B0D8               	btfsc	status,0,c
  5047  00EFE6  D01B               	goto	l2508
  5048  00EFE8                     l2498:
  5049  00EFE8  90D8               	bcf	status,0,c
  5050  00EFEA  360C               	rlcf	___ftadd@f2,f,c
  5051  00EFEC  360D               	rlcf	___ftadd@f2+1,f,c
  5052  00EFEE  360E               	rlcf	___ftadd@f2+2,f,c
  5053  00EFF0  0613               	decf	___ftadd@exp2,f,c
  5054  00EFF2  5014               	movf	___ftadd@exp1,w,c
  5055  00EFF4  1813               	xorwf	___ftadd@exp2,w,c
  5056  00EFF6  B4D8               	btfsc	status,2,c
  5057  00EFF8  D00D               	goto	l2506
  5058  00EFFA  0612               	decf	___ftadd@sign,f,c
  5059  00EFFC  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5060  00F000  0E07               	movlw	7
  5061  00F002  160F               	andwf	??___ftadd,f,c
  5062  00F004  B4D8               	btfsc	status,2,c
  5063  00F006  D006               	goto	l2506
  5064  00F008  D7EF               	goto	l2498
  5065  00F00A                     l2504:
  5066  00F00A  90D8               	bcf	status,0,c
  5067  00F00C  320B               	rrcf	___ftadd@f1+2,f,c
  5068  00F00E  320A               	rrcf	___ftadd@f1+1,f,c
  5069  00F010  3209               	rrcf	___ftadd@f1,f,c
  5070  00F012  2A14               	incf	___ftadd@exp1,f,c
  5071  00F014                     l2506:
  5072  00F014  5013               	movf	___ftadd@exp2,w,c
  5073  00F016  1814               	xorwf	___ftadd@exp1,w,c
  5074  00F018  B4D8               	btfsc	status,2,c
  5075  00F01A  D01F               	goto	l664
  5076  00F01C  D7F6               	goto	l2504
  5077  00F01E                     l2508:
  5078  00F01E  5014               	movf	___ftadd@exp1,w,c
  5079  00F020  5C13               	subwf	___ftadd@exp2,w,c
  5080  00F022  B0D8               	btfsc	status,0,c
  5081  00F024  D01A               	goto	l664
  5082  00F026                     l2510:
  5083  00F026  90D8               	bcf	status,0,c
  5084  00F028  3609               	rlcf	___ftadd@f1,f,c
  5085  00F02A  360A               	rlcf	___ftadd@f1+1,f,c
  5086  00F02C  360B               	rlcf	___ftadd@f1+2,f,c
  5087  00F02E  0614               	decf	___ftadd@exp1,f,c
  5088  00F030  5014               	movf	___ftadd@exp1,w,c
  5089  00F032  1813               	xorwf	___ftadd@exp2,w,c
  5090  00F034  B4D8               	btfsc	status,2,c
  5091  00F036  D00D               	goto	l2518
  5092  00F038  0612               	decf	___ftadd@sign,f,c
  5093  00F03A  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5094  00F03E  0E07               	movlw	7
  5095  00F040  160F               	andwf	??___ftadd,f,c
  5096  00F042  B4D8               	btfsc	status,2,c
  5097  00F044  D006               	goto	l2518
  5098  00F046  D7EF               	goto	l2510
  5099  00F048                     l2516:
  5100  00F048  90D8               	bcf	status,0,c
  5101  00F04A  320E               	rrcf	___ftadd@f2+2,f,c
  5102  00F04C  320D               	rrcf	___ftadd@f2+1,f,c
  5103  00F04E  320C               	rrcf	___ftadd@f2,f,c
  5104  00F050  2A13               	incf	___ftadd@exp2,f,c
  5105  00F052                     l2518:
  5106  00F052  5013               	movf	___ftadd@exp2,w,c
  5107  00F054  1814               	xorwf	___ftadd@exp1,w,c
  5108  00F056  A4D8               	btfss	status,2,c
  5109  00F058  D7F7               	goto	l2516
  5110  00F05A                     l664:
  5111  00F05A  AE12               	btfss	___ftadd@sign,7,c
  5112  00F05C  D00C               	goto	l673
  5113  00F05E  0EFF               	movlw	255
  5114  00F060  1A09               	xorwf	___ftadd@f1,f,c
  5115  00F062  0EFF               	movlw	255
  5116  00F064  1A0A               	xorwf	___ftadd@f1+1,f,c
  5117  00F066  0EFF               	movlw	255
  5118  00F068  1A0B               	xorwf	___ftadd@f1+2,f,c
  5119  00F06A  0E01               	movlw	1
  5120  00F06C  2609               	addwf	___ftadd@f1,f,c
  5121  00F06E  0E00               	movlw	0
  5122  00F070  220A               	addwfc	___ftadd@f1+1,f,c
  5123  00F072  0E00               	movlw	0
  5124  00F074  220B               	addwfc	___ftadd@f1+2,f,c
  5125  00F076                     l673:
  5126  00F076  AC12               	btfss	___ftadd@sign,6,c
  5127  00F078  D00C               	goto	l2524
  5128  00F07A  0EFF               	movlw	255
  5129  00F07C  1A0C               	xorwf	___ftadd@f2,f,c
  5130  00F07E  0EFF               	movlw	255
  5131  00F080  1A0D               	xorwf	___ftadd@f2+1,f,c
  5132  00F082  0EFF               	movlw	255
  5133  00F084  1A0E               	xorwf	___ftadd@f2+2,f,c
  5134  00F086  0E01               	movlw	1
  5135  00F088  260C               	addwf	___ftadd@f2,f,c
  5136  00F08A  0E00               	movlw	0
  5137  00F08C  220D               	addwfc	___ftadd@f2+1,f,c
  5138  00F08E  0E00               	movlw	0
  5139  00F090  220E               	addwfc	___ftadd@f2+2,f,c
  5140  00F092                     l2524:
  5141  00F092  0E00               	movlw	0
  5142  00F094  6E12               	movwf	___ftadd@sign,c
  5143  00F096  5009               	movf	___ftadd@f1,w,c
  5144  00F098  260C               	addwf	___ftadd@f2,f,c
  5145  00F09A  500A               	movf	___ftadd@f1+1,w,c
  5146  00F09C  220D               	addwfc	___ftadd@f2+1,f,c
  5147  00F09E  500B               	movf	___ftadd@f1+2,w,c
  5148  00F0A0  220E               	addwfc	___ftadd@f2+2,f,c
  5149  00F0A2  AE0E               	btfss	___ftadd@f2+2,7,c
  5150  00F0A4  D00E               	goto	l2534
  5151  00F0A6  0EFF               	movlw	255
  5152  00F0A8  1A0C               	xorwf	___ftadd@f2,f,c
  5153  00F0AA  0EFF               	movlw	255
  5154  00F0AC  1A0D               	xorwf	___ftadd@f2+1,f,c
  5155  00F0AE  0EFF               	movlw	255
  5156  00F0B0  1A0E               	xorwf	___ftadd@f2+2,f,c
  5157  00F0B2  0E01               	movlw	1
  5158  00F0B4  260C               	addwf	___ftadd@f2,f,c
  5159  00F0B6  0E00               	movlw	0
  5160  00F0B8  220D               	addwfc	___ftadd@f2+1,f,c
  5161  00F0BA  0E00               	movlw	0
  5162  00F0BC  220E               	addwfc	___ftadd@f2+2,f,c
  5163  00F0BE  0E01               	movlw	1
  5164  00F0C0  6E12               	movwf	___ftadd@sign,c
  5165  00F0C2                     l2534:
  5166  00F0C2  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  5167  00F0C6  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5168  00F0CA  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5169  00F0CE  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  5170  00F0D2  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  5171  00F0D6  EC47  F077         	call	___ftpack	;wreg free
  5172  00F0DA  C001  F009         	movff	?___ftpack,?___ftadd
  5173  00F0DE  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  5174  00F0E2  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  5175  00F0E6  0012               	return	
  5176  00F0E8                     __end_of___ftadd:
  5177                           	opt stack 0
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           prodh	equ	0xFF4
  5183                           prodl	equ	0xFF3
  5184                           intcon2	equ	0xFF1
  5185                           wreg	equ	0xFE8
  5186                           indf2	equ	0xFDF
  5187                           postinc2	equ	0xFDE
  5188                           postdec2	equ	0xFDD
  5189                           fsr2h	equ	0xFDA
  5190                           fsr2l	equ	0xFD9
  5191                           status	equ	0xFD8
  5192                           
  5193 ;; *************** function ___ftpack *****************
  5194 ;; Defined at:
  5195 ;;		line 62 in file "/Applications/microchip/xc8/v1.40/sources/common/float.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  arg             3    0[COMRAM] unsigned um
  5198 ;;  exp             1    3[COMRAM] unsigned char 
  5199 ;;  sign            1    4[COMRAM] unsigned char 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  3    0[COMRAM] float 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5211 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;Total ram usage:        8 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		___ftadd
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text19
  5225  00EE8E                     __ptext19:
  5226                           	opt stack 0
  5227  00EE8E                     ___ftpack:
  5228                           	opt stack 29
  5229                           
  5230                           ;incstack = 0
  5231  00EE8E  5004               	movf	___ftpack@exp,w,c
  5232  00EE90  B4D8               	btfsc	status,2,c
  5233  00EE92  D005               	goto	l2188
  5234  00EE94  5001               	movf	___ftpack@arg,w,c
  5235  00EE96  1002               	iorwf	___ftpack@arg+1,w,c
  5236  00EE98  1003               	iorwf	___ftpack@arg+2,w,c
  5237  00EE9A  A4D8               	btfss	status,2,c
  5238  00EE9C  D00C               	goto	l2194
  5239  00EE9E                     l2188:
  5240  00EE9E  0E00               	movlw	0
  5241  00EEA0  6E01               	movwf	?___ftpack,c
  5242  00EEA2  0E00               	movlw	0
  5243  00EEA4  6E02               	movwf	?___ftpack+1,c
  5244  00EEA6  0E00               	movlw	0
  5245  00EEA8  6E03               	movwf	?___ftpack+2,c
  5246  00EEAA  0012               	return	
  5247  00EEAC                     l2192:
  5248  00EEAC  2A04               	incf	___ftpack@exp,f,c
  5249  00EEAE  90D8               	bcf	status,0,c
  5250  00EEB0  3203               	rrcf	___ftpack@arg+2,f,c
  5251  00EEB2  3202               	rrcf	___ftpack@arg+1,f,c
  5252  00EEB4  3201               	rrcf	___ftpack@arg,f,c
  5253  00EEB6                     l2194:
  5254  00EEB6  0E00               	movlw	0
  5255  00EEB8  1401               	andwf	___ftpack@arg,w,c
  5256  00EEBA  6E06               	movwf	??___ftpack& (0+255),c
  5257  00EEBC  0E00               	movlw	0
  5258  00EEBE  1402               	andwf	___ftpack@arg+1,w,c
  5259  00EEC0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5260  00EEC2  0EFE               	movlw	254
  5261  00EEC4  1403               	andwf	___ftpack@arg+2,w,c
  5262  00EEC6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5263  00EEC8  5006               	movf	??___ftpack,w,c
  5264  00EECA  1007               	iorwf	??___ftpack+1,w,c
  5265  00EECC  1008               	iorwf	??___ftpack+2,w,c
  5266  00EECE  B4D8               	btfsc	status,2,c
  5267  00EED0  D00C               	goto	l2200
  5268  00EED2  D7EC               	goto	l2192
  5269  00EED4                     l2196:
  5270  00EED4  2A04               	incf	___ftpack@exp,f,c
  5271  00EED6  0E01               	movlw	1
  5272  00EED8  2601               	addwf	___ftpack@arg,f,c
  5273  00EEDA  0E00               	movlw	0
  5274  00EEDC  2202               	addwfc	___ftpack@arg+1,f,c
  5275  00EEDE  0E00               	movlw	0
  5276  00EEE0  2203               	addwfc	___ftpack@arg+2,f,c
  5277  00EEE2  90D8               	bcf	status,0,c
  5278  00EEE4  3203               	rrcf	___ftpack@arg+2,f,c
  5279  00EEE6  3202               	rrcf	___ftpack@arg+1,f,c
  5280  00EEE8  3201               	rrcf	___ftpack@arg,f,c
  5281  00EEEA                     l2200:
  5282  00EEEA  0E00               	movlw	0
  5283  00EEEC  1401               	andwf	___ftpack@arg,w,c
  5284  00EEEE  6E06               	movwf	??___ftpack& (0+255),c
  5285  00EEF0  0E00               	movlw	0
  5286  00EEF2  1402               	andwf	___ftpack@arg+1,w,c
  5287  00EEF4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5288  00EEF6  0EFF               	movlw	255
  5289  00EEF8  1403               	andwf	___ftpack@arg+2,w,c
  5290  00EEFA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5291  00EEFC  5006               	movf	??___ftpack,w,c
  5292  00EEFE  1007               	iorwf	??___ftpack+1,w,c
  5293  00EF00  1008               	iorwf	??___ftpack+2,w,c
  5294  00EF02  B4D8               	btfsc	status,2,c
  5295  00EF04  D006               	goto	l2204
  5296  00EF06  D7E6               	goto	l2196
  5297  00EF08                     l2202:
  5298  00EF08  0604               	decf	___ftpack@exp,f,c
  5299  00EF0A  90D8               	bcf	status,0,c
  5300  00EF0C  3601               	rlcf	___ftpack@arg,f,c
  5301  00EF0E  3602               	rlcf	___ftpack@arg+1,f,c
  5302  00EF10  3603               	rlcf	___ftpack@arg+2,f,c
  5303  00EF12                     l2204:
  5304  00EF12  BE02               	btfsc	___ftpack@arg+1,7,c
  5305  00EF14  D003               	goto	l626
  5306  00EF16  0E02               	movlw	2
  5307  00EF18  6004               	cpfslt	___ftpack@exp,c
  5308  00EF1A  D7F6               	goto	l2202
  5309  00EF1C                     l626:
  5310  00EF1C  A004               	btfss	___ftpack@exp,0,c
  5311  00EF1E  9E02               	bcf	___ftpack@arg+1,7,c
  5312  00EF20  90D8               	bcf	status,0,c
  5313  00EF22  3204               	rrcf	___ftpack@exp,f,c
  5314  00EF24  5004               	movf	___ftpack@exp,w,c
  5315  00EF26  1203               	iorwf	___ftpack@arg+2,f,c
  5316  00EF28  5005               	movf	___ftpack@sign,w,c
  5317  00EF2A  A4D8               	btfss	status,2,c
  5318  00EF2C  8E03               	bsf	___ftpack@arg+2,7,c
  5319  00EF2E  C001  F001         	movff	___ftpack@arg,?___ftpack
  5320  00EF32  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5321  00EF36  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5322  00EF3A  0012               	return	
  5323  00EF3C                     __end_of___ftpack:
  5324                           	opt stack 0
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon2	equ	0xFF1
  5332                           wreg	equ	0xFE8
  5333                           indf2	equ	0xFDF
  5334                           postinc2	equ	0xFDE
  5335                           postdec2	equ	0xFDD
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _I2C_Master_Read *****************
  5341 ;; Defined at:
  5342 ;;		line 53 in file "I2C.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  a               1    wreg     unsigned char 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  a               1    1[COMRAM] unsigned char 
  5347 ;;  temp            1    2[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      unsigned char 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;Total ram usage:        2 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    1
  5364 ;; This function calls:
  5365 ;;		_I2C_Master_Wait
  5366 ;; This function is called by:
  5367 ;;		_main
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text20
  5372  00EB0E                     __ptext20:
  5373                           	opt stack 0
  5374  00EB0E                     _I2C_Master_Read:
  5375                           	opt stack 29
  5376                           
  5377                           ;incstack = 0
  5378                           ;I2C_Master_Read@a stored from wreg
  5379  00EB0E  6E02               	movwf	I2C_Master_Read@a,c
  5380                           
  5381                           ;I2C.c: 55: unsigned char temp;
  5382                           ;I2C.c: 56: I2C_Master_Wait();
  5383  00EB10  EC4F  F075         	call	_I2C_Master_Wait	;wreg free
  5384                           
  5385                           ;I2C.c: 57: RCEN = 1;
  5386  00EB14  86C5               	bsf	4037,3,c	;volatile
  5387                           
  5388                           ;I2C.c: 58: I2C_Master_Wait();
  5389  00EB16  EC4F  F075         	call	_I2C_Master_Wait	;wreg free
  5390                           
  5391                           ;I2C.c: 59: temp = SSPBUF;
  5392  00EB1A  CFC9 F003          	movff	4041,I2C_Master_Read@temp	;volatile
  5393                           
  5394                           ;I2C.c: 60: I2C_Master_Wait();
  5395  00EB1E  EC4F  F075         	call	_I2C_Master_Wait	;wreg free
  5396                           
  5397                           ;I2C.c: 61: ACKDT = (a)?0:1;
  5398  00EB22  5002               	movf	I2C_Master_Read@a,w,c
  5399  00EB24  A4D8               	btfss	status,2,c
  5400  00EB26  D002               	goto	u240
  5401  00EB28  8AC5               	bsf	4037,5,c	;volatile
  5402  00EB2A  D001               	goto	l1212
  5403  00EB2C                     u240:
  5404  00EB2C  9AC5               	bcf	4037,5,c	;volatile
  5405  00EB2E                     l1212:
  5406                           
  5407                           ;I2C.c: 62: ACKEN = 1;
  5408  00EB2E  88C5               	bsf	4037,4,c	;volatile
  5409                           
  5410                           ;I2C.c: 63: return temp;
  5411  00EB30  5003               	movf	I2C_Master_Read@temp,w,c
  5412  00EB32  0012               	return	
  5413  00EB34                     __end_of_I2C_Master_Read:
  5414                           	opt stack 0
  5415                           tblptru	equ	0xFF8
  5416                           tblptrh	equ	0xFF7
  5417                           tblptrl	equ	0xFF6
  5418                           tablat	equ	0xFF5
  5419                           prodh	equ	0xFF4
  5420                           prodl	equ	0xFF3
  5421                           intcon2	equ	0xFF1
  5422                           wreg	equ	0xFE8
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           fsr2h	equ	0xFDA
  5427                           fsr2l	equ	0xFD9
  5428                           status	equ	0xFD8
  5429                           
  5430 ;; *************** function _I2C_Master_Wait *****************
  5431 ;; Defined at:
  5432 ;;		line 24 in file "I2C.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      void 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;Total ram usage:        1 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_I2C_Master_Start
  5456 ;;		_I2C_Master_Stop
  5457 ;;		_I2C_Master_Write
  5458 ;;		_I2C_Master_Read
  5459 ;;		_I2C_Master_RepeatedStart
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text21
  5464  00EA9E                     __ptext21:
  5465                           	opt stack 0
  5466  00EA9E                     _I2C_Master_Wait:
  5467                           	opt stack 28
  5468  00EA9E                     l58:
  5469  00EA9E  B4C7               	btfsc	4039,2,c	;volatile
  5470  00EAA0  D7FE               	goto	l58
  5471  00EAA2  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  5472  00EAA6  0E1F               	movlw	31
  5473  00EAA8  1601               	andwf	??_I2C_Master_Wait,f,c
  5474  00EAAA  B4D8               	btfsc	status,2,c
  5475  00EAAC  0012               	return	
  5476  00EAAE  D7F7               	goto	l58
  5477  00EAB0                     __end_of_I2C_Master_Wait:
  5478                           	opt stack 0
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon2	equ	0xFF1
  5486                           wreg	equ	0xFE8
  5487                           indf2	equ	0xFDF
  5488                           postinc2	equ	0xFDE
  5489                           postdec2	equ	0xFDD
  5490                           fsr2h	equ	0xFDA
  5491                           fsr2l	equ	0xFD9
  5492                           status	equ	0xFD8
  5493                           
  5494 ;; *************** function _I2C_Master_Init *****************
  5495 ;; Defined at:
  5496 ;;		line 13 in file "I2C.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  c               4   13[COMRAM] const unsigned long 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;Total ram usage:        8 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    1
  5517 ;; This function calls:
  5518 ;;		___lldiv
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text22
  5525  00EDB2                     __ptext22:
  5526                           	opt stack 0
  5527  00EDB2                     _I2C_Master_Init:
  5528                           	opt stack 29
  5529                           
  5530                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  5531                           
  5532                           ;incstack = 0
  5533  00EDB2  0E00               	movlw	0
  5534  00EDB4  6EC7               	movwf	4039,c	;volatile
  5535                           
  5536                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  5537  00EDB6  0E28               	movlw	40
  5538  00EDB8  6EC6               	movwf	4038,c	;volatile
  5539                           
  5540                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  5541  00EDBA  0E00               	movlw	0
  5542  00EDBC  6EC5               	movwf	4037,c	;volatile
  5543                           
  5544                           ;I2C.c: 19: SSPADD = (8000000/(4*c))-1;
  5545  00EDBE  0E00               	movlw	0
  5546  00EDC0  6E01               	movwf	___lldiv@dividend,c
  5547  00EDC2  0E12               	movlw	18
  5548  00EDC4  6E02               	movwf	___lldiv@dividend+1,c
  5549  00EDC6  0E7A               	movlw	122
  5550  00EDC8  6E03               	movwf	___lldiv@dividend+2,c
  5551  00EDCA  0E00               	movlw	0
  5552  00EDCC  6E04               	movwf	___lldiv@dividend+3,c
  5553  00EDCE  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  5554  00EDD2  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  5555  00EDD6  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  5556  00EDDA  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  5557  00EDDE  0E02               	movlw	2
  5558  00EDE0                     u1935:
  5559  00EDE0  90D8               	bcf	status,0,c
  5560  00EDE2  3612               	rlcf	??_I2C_Master_Init,f,c
  5561  00EDE4  3613               	rlcf	??_I2C_Master_Init+1,f,c
  5562  00EDE6  3614               	rlcf	??_I2C_Master_Init+2,f,c
  5563  00EDE8  3615               	rlcf	??_I2C_Master_Init+3,f,c
  5564  00EDEA  2EE8               	decfsz	wreg,f,c
  5565  00EDEC  D7F9               	goto	u1935
  5566  00EDEE  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  5567  00EDF2  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  5568  00EDF6  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  5569  00EDFA  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  5570  00EDFE  EC06  F077         	call	___lldiv	;wreg free
  5571  00EE02  0401               	decf	?___lldiv,w,c
  5572  00EE04  6EC8               	movwf	4040,c	;volatile
  5573                           
  5574                           ;I2C.c: 20: TRISC3 = 1;
  5575  00EE06  8694               	bsf	3988,3,c	;volatile
  5576                           
  5577                           ;I2C.c: 21: TRISC4 = 1;
  5578  00EE08  8894               	bsf	3988,4,c	;volatile
  5579  00EE0A  0012               	return		;funcret
  5580  00EE0C                     __end_of_I2C_Master_Init:
  5581                           	opt stack 0
  5582                           tblptru	equ	0xFF8
  5583                           tblptrh	equ	0xFF7
  5584                           tblptrl	equ	0xFF6
  5585                           tablat	equ	0xFF5
  5586                           prodh	equ	0xFF4
  5587                           prodl	equ	0xFF3
  5588                           intcon2	equ	0xFF1
  5589                           wreg	equ	0xFE8
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function ___lldiv *****************
  5598 ;; Defined at:
  5599 ;;		line 8 in file "/Applications/microchip/xc8/v1.40/sources/common/lldiv.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  dividend        4    0[COMRAM] unsigned long 
  5602 ;;  divisor         4    4[COMRAM] unsigned long 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  quotient        4    8[COMRAM] unsigned long 
  5605 ;;  counter         1   12[COMRAM] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  4    0[COMRAM] unsigned long 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5615 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;Total ram usage:       13 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_I2C_Master_Init
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text23
  5629  00EE0C                     __ptext23:
  5630                           	opt stack 0
  5631  00EE0C                     ___lldiv:
  5632                           	opt stack 29
  5633                           
  5634                           ;incstack = 0
  5635  00EE0C  0E00               	movlw	0
  5636  00EE0E  6E09               	movwf	___lldiv@quotient,c
  5637  00EE10  0E00               	movlw	0
  5638  00EE12  6E0A               	movwf	___lldiv@quotient+1,c
  5639  00EE14  0E00               	movlw	0
  5640  00EE16  6E0B               	movwf	___lldiv@quotient+2,c
  5641  00EE18  0E00               	movlw	0
  5642  00EE1A  6E0C               	movwf	___lldiv@quotient+3,c
  5643  00EE1C  5005               	movf	___lldiv@divisor,w,c
  5644  00EE1E  1006               	iorwf	___lldiv@divisor+1,w,c
  5645  00EE20  1007               	iorwf	___lldiv@divisor+2,w,c
  5646  00EE22  1008               	iorwf	___lldiv@divisor+3,w,c
  5647  00EE24  B4D8               	btfsc	status,2,c
  5648  00EE26  D02A               	goto	l756
  5649  00EE28  0E01               	movlw	1
  5650  00EE2A  6E0D               	movwf	___lldiv@counter,c
  5651  00EE2C  D006               	goto	l2228
  5652  00EE2E                     l2226:
  5653  00EE2E  90D8               	bcf	status,0,c
  5654  00EE30  3605               	rlcf	___lldiv@divisor,f,c
  5655  00EE32  3606               	rlcf	___lldiv@divisor+1,f,c
  5656  00EE34  3607               	rlcf	___lldiv@divisor+2,f,c
  5657  00EE36  3608               	rlcf	___lldiv@divisor+3,f,c
  5658  00EE38  2A0D               	incf	___lldiv@counter,f,c
  5659  00EE3A                     l2228:
  5660  00EE3A  AE08               	btfss	___lldiv@divisor+3,7,c
  5661  00EE3C  D7F8               	goto	l2226
  5662  00EE3E                     l2230:
  5663  00EE3E  90D8               	bcf	status,0,c
  5664  00EE40  3609               	rlcf	___lldiv@quotient,f,c
  5665  00EE42  360A               	rlcf	___lldiv@quotient+1,f,c
  5666  00EE44  360B               	rlcf	___lldiv@quotient+2,f,c
  5667  00EE46  360C               	rlcf	___lldiv@quotient+3,f,c
  5668  00EE48  5005               	movf	___lldiv@divisor,w,c
  5669  00EE4A  5C01               	subwf	___lldiv@dividend,w,c
  5670  00EE4C  5006               	movf	___lldiv@divisor+1,w,c
  5671  00EE4E  5802               	subwfb	___lldiv@dividend+1,w,c
  5672  00EE50  5007               	movf	___lldiv@divisor+2,w,c
  5673  00EE52  5803               	subwfb	___lldiv@dividend+2,w,c
  5674  00EE54  5008               	movf	___lldiv@divisor+3,w,c
  5675  00EE56  5804               	subwfb	___lldiv@dividend+3,w,c
  5676  00EE58  A0D8               	btfss	status,0,c
  5677  00EE5A  D009               	goto	l2238
  5678  00EE5C  5005               	movf	___lldiv@divisor,w,c
  5679  00EE5E  5E01               	subwf	___lldiv@dividend,f,c
  5680  00EE60  5006               	movf	___lldiv@divisor+1,w,c
  5681  00EE62  5A02               	subwfb	___lldiv@dividend+1,f,c
  5682  00EE64  5007               	movf	___lldiv@divisor+2,w,c
  5683  00EE66  5A03               	subwfb	___lldiv@dividend+2,f,c
  5684  00EE68  5008               	movf	___lldiv@divisor+3,w,c
  5685  00EE6A  5A04               	subwfb	___lldiv@dividend+3,f,c
  5686  00EE6C  8009               	bsf	___lldiv@quotient,0,c
  5687  00EE6E                     l2238:
  5688  00EE6E  90D8               	bcf	status,0,c
  5689  00EE70  3208               	rrcf	___lldiv@divisor+3,f,c
  5690  00EE72  3207               	rrcf	___lldiv@divisor+2,f,c
  5691  00EE74  3206               	rrcf	___lldiv@divisor+1,f,c
  5692  00EE76  3205               	rrcf	___lldiv@divisor,f,c
  5693  00EE78  2E0D               	decfsz	___lldiv@counter,f,c
  5694  00EE7A  D7E1               	goto	l2230
  5695  00EE7C                     l756:
  5696  00EE7C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5697  00EE80  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5698  00EE84  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5699  00EE88  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5700  00EE8C  0012               	return		;funcret
  5701  00EE8E                     __end_of___lldiv:
  5702                           	opt stack 0
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon2	equ	0xFF1
  5710                           wreg	equ	0xFE8
  5711                           indf2	equ	0xFDF
  5712                           postinc2	equ	0xFDE
  5713                           postdec2	equ	0xFDD
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _Eeprom_WriteByte *****************
  5719 ;; Defined at:
  5720 ;;		line 52 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  address         1    wreg     char 
  5723 ;;  data            1    0[COMRAM] char 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  address         1    3[COMRAM] char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;Total ram usage:        4 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text24
  5749  00EBAC                     __ptext24:
  5750                           	opt stack 0
  5751  00EBAC                     _Eeprom_WriteByte:
  5752                           	opt stack 30
  5753                           
  5754                           ;incstack = 0
  5755                           ;Eeprom_WriteByte@address stored from wreg
  5756  00EBAC  6E04               	movwf	Eeprom_WriteByte@address,c
  5757                           
  5758                           ;main.c: 55: EEADRH = (signed char)(address >> 8);
  5759  00EBAE  C004  F002         	movff	Eeprom_WriteByte@address,??_Eeprom_WriteByte
  5760  00EBB2  0E08               	movlw	8
  5761  00EBB4  6E03               	movwf	(??_Eeprom_WriteByte+1)& (0+255),c
  5762  00EBB6                     u1965:
  5763  00EBB6  3402               	rlcf	??_Eeprom_WriteByte,w,c
  5764  00EBB8  3202               	rrcf	??_Eeprom_WriteByte,f,c
  5765  00EBBA  2E03               	decfsz	(??_Eeprom_WriteByte+1)& (0+255),f,c
  5766  00EBBC  D7FC               	goto	u1965
  5767  00EBBE  5002               	movf	??_Eeprom_WriteByte,w,c
  5768  00EBC0  6EAA               	movwf	4010,c	;volatile
  5769                           
  5770                           ;main.c: 56: EEADR = (signed char)address;
  5771  00EBC2  C004  FFA9         	movff	Eeprom_WriteByte@address,4009	;volatile
  5772                           
  5773                           ;main.c: 58: EEDATA = data;
  5774  00EBC6  C001  FFA8         	movff	Eeprom_WriteByte@data,4008	;volatile
  5775                           
  5776                           ;main.c: 59: EECON1bits.EEPGD = 0;
  5777  00EBCA  9EA6               	bcf	4006,7,c	;volatile
  5778                           
  5779                           ;main.c: 60: EECON1bits.CFGS = 0;
  5780  00EBCC  9CA6               	bcf	4006,6,c	;volatile
  5781                           
  5782                           ;main.c: 61: EECON1bits.WREN = 1;
  5783  00EBCE  84A6               	bsf	4006,2,c	;volatile
  5784                           
  5785                           ;main.c: 65: EECON2 = 0x55;
  5786  00EBD0  0E55               	movlw	85
  5787  00EBD2  6EA7               	movwf	4007,c	;volatile
  5788                           
  5789                           ;main.c: 66: EECON2 = 0xAA;
  5790  00EBD4  0EAA               	movlw	170
  5791  00EBD6  6EA7               	movwf	4007,c	;volatile
  5792                           
  5793                           ;main.c: 67: EECON1bits.WR = 1;
  5794  00EBD8  82A6               	bsf	4006,1,c	;volatile
  5795  00EBDA                     l213:
  5796  00EBDA  A8A1               	btfss	4001,4,c	;volatile
  5797  00EBDC  D7FE               	goto	l213
  5798                           
  5799                           ;main.c: 73: }
  5800                           ;main.c: 75: PIR2bits.EEIF = 0;
  5801  00EBDE  98A1               	bcf	4001,4,c	;volatile
  5802                           
  5803                           ;main.c: 76: EECON1bits.WREN = 0;
  5804  00EBE0  94A6               	bcf	4006,2,c	;volatile
  5805  00EBE2  0012               	return		;funcret
  5806  00EBE4                     __end_of_Eeprom_WriteByte:
  5807                           	opt stack 0
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon2	equ	0xFF1
  5815                           wreg	equ	0xFE8
  5816                           indf2	equ	0xFDF
  5817                           postinc2	equ	0xFDE
  5818                           postdec2	equ	0xFDD
  5819                           fsr2h	equ	0xFDA
  5820                           fsr2l	equ	0xFD9
  5821                           status	equ	0xFD8
  5822                           
  5823 ;; *************** function _Eeprom_ReadByte *****************
  5824 ;; Defined at:
  5825 ;;		line 33 in file "main.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  address         1    wreg     char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  address         1    2[COMRAM] char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      char 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:        3 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_main
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text25
  5853  00EB5A                     __ptext25:
  5854                           	opt stack 0
  5855  00EB5A                     _Eeprom_ReadByte:
  5856                           	opt stack 30
  5857                           
  5858                           ;incstack = 0
  5859                           ;Eeprom_ReadByte@address stored from wreg
  5860  00EB5A  6E03               	movwf	Eeprom_ReadByte@address,c
  5861                           
  5862                           ;main.c: 37: EEADRH = (signed char)(address >> 8);
  5863  00EB5C  C003  F001         	movff	Eeprom_ReadByte@address,??_Eeprom_ReadByte
  5864  00EB60  0E08               	movlw	8
  5865  00EB62  6E02               	movwf	(??_Eeprom_ReadByte+1)& (0+255),c
  5866  00EB64                     u315:
  5867  00EB64  3401               	rlcf	??_Eeprom_ReadByte,w,c
  5868  00EB66  3201               	rrcf	??_Eeprom_ReadByte,f,c
  5869  00EB68  2E02               	decfsz	(??_Eeprom_ReadByte+1)& (0+255),f,c
  5870  00EB6A  D7FC               	goto	u315
  5871  00EB6C  5001               	movf	??_Eeprom_ReadByte,w,c
  5872  00EB6E  6EAA               	movwf	4010,c	;volatile
  5873                           
  5874                           ;main.c: 38: EEADR = (signed char)address;
  5875  00EB70  C003  FFA9         	movff	Eeprom_ReadByte@address,4009	;volatile
  5876                           
  5877                           ;main.c: 40: EECON1bits.EEPGD = 0;
  5878  00EB74  9EA6               	bcf	4006,7,c	;volatile
  5879                           
  5880                           ;main.c: 41: EECON1bits.CFGS = 0;
  5881  00EB76  9CA6               	bcf	4006,6,c	;volatile
  5882                           
  5883                           ;main.c: 42: EECON1bits.RD = 1;
  5884  00EB78  80A6               	bsf	4006,0,c	;volatile
  5885  00EB7A                     l207:
  5886  00EB7A  B0A6               	btfsc	4006,0,c	;volatile
  5887  00EB7C  D7FE               	goto	l207
  5888                           
  5889                           ;main.c: 48: return EEDATA;
  5890  00EB7E  50A8               	movf	4008,w,c	;volatile
  5891  00EB80  0012               	return	
  5892  00EB82                     __end_of_Eeprom_ReadByte:
  5893                           	opt stack 0
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodh	equ	0xFF4
  5899                           prodl	equ	0xFF3
  5900                           intcon2	equ	0xFF1
  5901                           wreg	equ	0xFE8
  5902                           indf2	equ	0xFDF
  5903                           postinc2	equ	0xFDE
  5904                           postdec2	equ	0xFDD
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           tblptru	equ	0xFF8
  5909                           tblptrh	equ	0xFF7
  5910                           tblptrl	equ	0xFF6
  5911                           tablat	equ	0xFF5
  5912                           prodh	equ	0xFF4
  5913                           prodl	equ	0xFF3
  5914                           intcon2	equ	0xFF1
  5915                           wreg	equ	0xFE8
  5916                           indf2	equ	0xFDF
  5917                           postinc2	equ	0xFDE
  5918                           postdec2	equ	0xFDD
  5919                           fsr2h	equ	0xFDA
  5920                           fsr2l	equ	0xFD9
  5921                           status	equ	0xFD8
  5922                           
  5923                           	psect	rparam
  5924  0000                     tblptru	equ	0xFF8
  5925                           tblptrh	equ	0xFF7
  5926                           tblptrl	equ	0xFF6
  5927                           tablat	equ	0xFF5
  5928                           prodh	equ	0xFF4
  5929                           prodl	equ	0xFF3
  5930                           intcon2	equ	0xFF1
  5931                           wreg	equ	0xFE8
  5932                           indf2	equ	0xFDF
  5933                           postinc2	equ	0xFDE
  5934                           postdec2	equ	0xFDD
  5935                           fsr2h	equ	0xFDA
  5936                           fsr2l	equ	0xFD9
  5937                           status	equ	0xFD8


Data Sizes:
    Strings     253
    Constant    42
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    103     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_30(CODE[9]), STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[9]), 
		 -> STR_26(CODE[5]), STR_25(CODE[9]), STR_24(CODE[5]), STR_23(CODE[7]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[9]), 
		 -> STR_18(CODE[5]), STR_17(CODE[9]), STR_16(CODE[5]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), STR_13(CODE[9]), STR_12(CODE[12]), STR_11(CODE[15]), 
		 -> STR_10(CODE[9]), STR_9(CODE[14]), STR_8(CODE[5]), STR_7(CODE[10]), 
		 -> STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[8]), STR_3(CODE[9]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _set_time->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _key_pressed_check->_delay_10ms
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    ___ftadd->___ftpack
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0   13456
                                             34 COMRAM    69    69      0
                    _Eeprom_ReadByte
                   _Eeprom_WriteByte
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___ftadd
                            ___ftneg
                 _delay_1s_interrupt
                            _initLCD
                  _key_pressed_check
                            _lcdInst
                             _printf
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             1     1      0     858
                                              3 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     790
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    4067
                                             12 COMRAM    22    14      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _key_pressed_check                                    1     1      0      30
                                              2 COMRAM     1     1      0
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (2) _delay_10ms                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay_1s_interrupt                                   7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3125
                                              8 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1953
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Eeprom_WriteByte                                     4     3      1     578
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Eeprom_ReadByte                                      3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eeprom_ReadByte
   _Eeprom_WriteByte
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftneg
   _delay_1s_interrupt
   _initLCD
     _lcdInst
       _lcdNibble
   _key_pressed_check
     _delay_10ms
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _lcdNibble
   _set_time
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     67      67       1       81.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Feb 25 00:38:44 2017

   __end_of_Eeprom_WriteByte EBE4                           l58 EA9E                           l86 ECC2  
        ___wmul@multiplicand 0003                  __CFG_BORV$3 000000      main@count_seconds_final 0061  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000                 ___ftadd@exp1 0014  
               ___ftadd@exp2 0013                 ___ftadd@sign 0012                          l200 EB82  
                        l213 EBDA                          l207 EB7A                          l224 F60E  
                        l251 F7C0                          l236 F61A                          l247 F71E  
                        l364 F1D4                          l626 EF1C                          l706 EB00  
                        l653 EFAA                          l664 F05A                          l673 F076  
                        l649 EF80                          l809 ED52                          l819 EC1C  
                        l756 EE7C                 __CFG_CPB$OFF 000000                          u240 EB2C  
                        u315 EB64                          _PEN 007E2A                          u290 EB9C  
               __CFG_CPD$OFF 000000                          u296 EB9E                          _SEN 007E28  
                        prod 000FF3          delay_1s_interrupt@i 0007          delay_1s_interrupt@n 0006  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1212 EB2E                         l2200 EEEA                         l1064 EAB4  
                       l3000 FC10                         l2202 EF08                         l1066 EAC2  
                       l3010 FC30                         l3002 FC14                         l2204 EF12  
                       l3020 FC4C                         l2230 EE3E                         l1246 EBA8  
                       l3030 FC6C                         l3006 FC1C                         l2400 F250  
                       l3040 FC8C                         l3024 FC60                         l3016 FC44  
                       l2226 EE2E                         l2250 ED28                         l2330 EC94  
                       l3122 FE12                         l3114 FDF6                         l3106 FDBA  
                       l3034 FC80                         l3026 FC64                         l2228 EE3A  
                       l2260 ED48                         l2252 ED2C                         l2340 F0F2  
                       l3132 FE32                         l3124 FE16                         l3052 FCE4  
                       l3036 FC84                         l3044 FCA0                         l2238 EE6E  
                       l2510 F026                         l2270 EBFA                         l2174 EAE2  
                       l2422 F2A6                         l2414 F27C                         l2350 F116  
                       l2326 EC8C                         l3150 FE78                         l3142 FE52  
                       l3134 FE36                         l3118 FDFE                         l2192 EEAC  
                       l2504 F00A                         l2248 ED20                         l2272 EBFE  
                       l2440 F2FE                         l2416 F28C                         l2344 F102  
                       l2336 ECB4                         l3160 FE98                         l3128 FE1E  
                       l3072 FD46                         l3056 FCEC                         l2194 EEB6  
                       l2506 F014                         l2442 F306                         l2450 F32C  
                       l2434 F2E8                         l2426 F2CA                         l2346 F110  
                       l3170 FEB8                         l3154 FE80                         l3138 FE3E  
                       l3082 FD66                         l2602 F50A                         l2196 EED4  
                       l2188 EE9E                         l2524 F092                         l2516 F048  
                       l2508 F01E                         l2276 EC12                         l2268 EBF2  
                       l2452 F332                         l2460 F3BC                         l2428 F2D2  
                       l2380 F202                         l2364 F1A2                         l2356 F144  
                       l3164 FEA0                         l3092 FD86                         l3076 FD5A  
                       l3068 FD3E                         l2700 F706                         l2534 F0C2  
                       l2518 F052                         l2294 ECD0                         l2454 F376  
                       l2462 F3CC                         l2446 F31A                         l3174 FEC2  
                       l3158 FE94                         l3086 FD7A                         l3078 FD5E  
                       l2702 F70C                         l2464 F3D2                         l2384 F21C  
                       l2368 F1A6                         l3168 FEB4                         l3096 FD9A  
                       l3088 FD7E                         l2800 F8F8                         l2712 F750  
                       l2608 F526                         l2624 F594                         l2482 EFB8  
                       l2298 ECE2                         l2386 F220                         l2466 F3DA  
                       l2810 F918                         l2476 EF8E                         l2900 FAC4  
                       l2820 F938                         l2804 F900                         l2580 F4BE  
                       l2398 F24C                         l2814 F920                         l2750 F7F4  
                       l2742 F7D8                         l2670 F686                         l2574 F4AE  
                       l2904 FACC                         l2824 F940                         l2808 F914  
                       l2760 F814                         l2752 F7F8                         l2736 F7C4  
                       l2584 F4C6                         l2498 EFE8                         l2922 FB10  
                       l2914 FAF4                         l2818 F934                         l2762 F818  
                       l2746 F7E0                         l2770 F836                         l2690 F6D2  
                       l2666 F67E                         l2658 F612                         l2932 FB30  
                       l2924 FB14                         l2908 FAE0                         l2828 F954  
                       l2756 F800                         l2676 F6A2                         l2942 FB50  
                       l2934 FB34                         l2918 FAFC                         l2838 F9B2  
                       l2774 F86A                         l2766 F822                         l2598 F502  
                       l2952 FB6C                         l2928 FB1C                         l2880 FA84  
                       l2784 F88E                         l2962 FB8C                         l2938 FB3C  
                       l2890 FAA4                         l2778 F872                         l2972 FBAC  
                       l2956 FB80                         l2948 FB64                         l2884 FA8C  
                       l2990 FBF0                         l2982 FBD4                         l2966 FBA0  
                       l2958 FB84                         l2894 FAAC                         l2992 FBF4  
                       l2976 FBC0                         l2968 FBA4                         l2888 FAA0  
                       l2986 FBDC                         l2898 FAC0                         l2996 FBFC  
                       _ADON 007E10                         STR_1 FF3F                         STR_2 FF4E  
                       STR_3 FFD1                         STR_4 FFDA                         STR_5 FF30  
                       STR_6 FF6B                         STR_7 FF9A                         STR_8 FFE9  
                       STR_9 FF5D                         _LATA 000F89                         _LATB 000F8A  
                       u2231 EF4C                         _LATC 000F8B                         _LATD 000F8C  
                       u2241 EF60                         _LATE 000F8D                         u3407 F926  
                       u3417 F946                         u3507 FBB2                         u3427 FA92  
                       u3347 F6E6                         u3517 FBE2                         u3437 FAB2  
                       u3357 F6F8                         u1935 EDE0                         u3607 FE04  
                       u3527 FC02                         u3447 FAD2                         u3367 F7E6  
                       u3617 FE24                         u3537 FC22                         u3457 FB02  
                       u3377 F806                         u3707 ED7E                         u3627 FE44  
                       u3547 FC52                         u3467 FB22                         u3387 F828  
                       u1965 EBB6                         u3717 EDA0                         u3637 FE86  
                       u3557 FC72                         u3477 FB42                         u3397 F906  
                       u3727 EDAA                         u3647 FEA6                         u3567 FC92  
                       u3487 FB72                         u3737 ECD6                         u3657 FEC8  
                       u3577 FD4C                         u3497 FB92                         u3667 EABA  
                       u3587 FD6C                         _RCEN 007E2B                         u3677 EC2C  
                       u3597 FD8C                         u3687 EC60                         u3697 ED74  
                       _RSEN 007E29            main@current_state 0028                         _main F3F4  
               ___ftpack@arg 0001                         _keys FED7                 ___ftpack@exp 0004  
                       fsr2h 000FDA                         indf2 000FDF                         fsr2l 000FD9  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
              __CFG_IESO$OFF 000000           main@flag_interrupt 0066                __CFG_MCLRE$ON 000000  
               ___param_bank 000000  __size_of_delay_1s_interrupt 0050             ?_I2C_Master_Init 000E  
           ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
                      ?_main 0001                        _ACKEN 007E2C                        _ACKDT 007E2D  
                      _ADRES 000FC3                        _EEADR 000FA9              __end_of___ftadd F0E8  
                      STR_10 FFC8                        STR_11 FF21                        STR_20 FFF3  
                      STR_12 FF84                        STR_21 FFF7                        STR_13 FFA4  
                      STR_22 FFFB                        STR_30 FFAD                        STR_14 FF78  
                      STR_15 FFA4                        STR_23 FFE2                        STR_31 FF01  
                      STR_24 FFEE                        STR_16 FFEE                        STR_25 FFBF  
                      STR_17 FFBF                        STR_26 FFEE                        STR_18 FFEE  
                      STR_27 FFB6                        STR_19 FFB6                        STR_28 FF12  
                      STR_29 FF90              __end_of___ftneg EB0E              __end_of___lldiv EE8E  
                      _T1CON 000FCD              __end_of___lwdiv ED5C              __end_of___lwmod EC26  
                      _PORTB 000F81                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000              __end_of_lcdInst EA92  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000                 main@keypress 005D               __CFG_EBTR3$OFF 000000  
                      _nRBPU 007F8F                 main@past_min 0029                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD EC6C  
             __CFG_EBTRB$OFF 000000              __end_of_dpowers FEF2             ?_Eeprom_ReadByte 0001  
            __end_of_isdigit EAEA                ___ftpack@sign 0005                        _putch EA92  
                      main@e 004B                        main@i 0035                        main@j 0055  
                      main@k 0056                        main@z 002C                        tablat 000FF5  
                      status 000FD8               __CFG_PBADEN$ON 000000              __initialization EA7C  
               __end_of_main FED6                 __end_of_keys FEE8            _key_pressed_check EB82  
         ?_key_pressed_check 0001                       ??_main 0023                __activetblptr 000002  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002          ??_key_pressed_check 0003  
         ??_I2C_Master_Start 0002                       _ADCON0 000FC2                       _ADCON1 000FC1  
         ??_I2C_Master_Write 0004                       _EEADRH 000FAA                       _EEDATA 000FA8  
                     _EECON2 000FA7                       ?_putch 0001             __end_of___ftpack EF3C  
                     _T1SYNC 007E6A                main@count_min 0058                       _OSCCON 000FD3  
                     _TMR1IE 007CE8                       _TMR1IF 007CF0                       _TMR1CS 007E69  
                     _TMR1ON 007E68                       _SSPADD 000FC8                       _TRISC3 007CA3  
                     _TRISC4 007CA4                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
      main@count_min_initial 005E    __end_of_key_pressed_check EBAC                       ___wmul EB34  
                  ??___ftadd 000F               __CFG_STVREN$ON 000000                    ??___ftneg 0004  
                  ??___lldiv 0009                    ??___lwdiv 0005                    ??___lwmod 000C  
                  ??_lcdInst 0003                       _printf F0E8                    ??_initLCD 0004  
                  ??_isdigit 0001             __end_of_set_time ECBA                 __mediumconst FED6  
                     tblptrh 000FF7      Eeprom_WriteByte@address 0004                       tblptrl 000FF6  
                     tblptru 000FF8                main@up_period 0063                   __accesstop 0080  
    __end_of__initialization EA7C                   ___ftadd@f1 0009                   ___ftadd@f2 000C  
              ___rparam_used 000001                   ___ftneg@f1 0001           main@eeprom_seconds 005C  
       __end_of_happynewyear FF01               __pcstackCOMRAM 0001                __end_of_putch EA9E  
          ?_Eeprom_WriteByte 0001           ??_Eeprom_WriteByte 0002           __size_of_lcdNibble 0056  
                    ??_putch 0003                   _delay_10ms EAB0               main@eeprom_min 005B  
 __size_of_key_pressed_check 002A                      ?___wmul 0001       key_pressed_check@check 0003  
                  ?___ftpack 0001                      ?_printf 000D                      _T1CKPS0 007E6C  
                    _T1CKPS1 007E6D                      _T1OSCEN 007E6B                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7            __end_of_lcdNibble EDB2  
 __end_of_delay_1s_interrupt ED0A                      __Hparam 0000                      __Lparam 0000  
                  ?_set_time 0001         Eeprom_WriteByte@data 0001                      ___ftadd EF3C  
                    ___ftneg EAEA                      ___lldiv EE0C              __size_of___wmul 0026  
                    ___lwdiv ED0A                      ___lwmod EBE4                      __pcinit EA7C  
                 ??___ftpack 0006                      __ramtop 1000                      _lcdInst EA86  
                    __ptext0 F3F4                      __ptext1 EC6C                      __ptext2 EA72  
                    __ptext3 EA6A                      __ptext4 EA62                      __ptext5 F0E8  
                    __ptext6 EA92                      __ptext7 EACC                      __ptext8 EB34  
                    __ptext9 EBE4              __size_of_printf 030C                      _initLCD EC26  
          __end_of_hexpowers FEFA                      _dpowers FEE8                      _isdigit EACC  
        main@address_seconds 005A     __size_of_I2C_Master_Init 005A     __size_of_I2C_Master_Read 0026  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008         end_of_initialization EA7C  
                ?_delay_10ms 0001                __Lmediumconst FED6     __size_of_Eeprom_ReadByte 0028  
  __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                   ??_set_time 0004                      printf@c 0022  
                    printf@f 000D             I2C_Master_Init@c 000E             I2C_Master_Read@a 0002  
                    postdec2 000FDD                      postinc2 000FDE                    _PORTAbits 000F80  
                  _PORTBbits 000F81                 _happynewyear FEFA                  printf@width 0020  
            main@address_min 0059               __end_of___wmul EB5A          main@count_min_final 0060  
        __size_of_delay_10ms 001C               __end_of_printf F3F4          start_initialization EA7C  
  __size_of_Eeprom_WriteByte 0038            ??_I2C_Master_Init 0012            ??_I2C_Master_Read 0002  
          ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002                     ??___wmul 0005  
          ??_Eeprom_ReadByte 0001             __CFG_LPT1OSC$OFF 000000                     ??_printf 0015  
          __size_of___ftpack 00AE             main@past_seconds 002A             _I2C_Master_Start EA62  
           _I2C_Master_Write EA72    main@count_seconds_initial 005F             ___lwdiv@dividend 0001  
          __CFG_CCP2MX$PORTC 000000                __pmediumconst FED6                    _lcdNibble ED5C  
                   ?___ftadd 0009                     ?___ftneg 0001                     ?___lldiv 0001  
                   ?___lwdiv 0001                     ?___lwmod 0008            __size_of_set_time 004E  
                   ?_lcdInst 0001           _delay_1s_interrupt ECBA                     ?_initLCD 0001  
                   ?_isdigit 0001          ?_delay_1s_interrupt 0001                    _hexpowers FEF2  
           ___lwdiv@quotient 0005               __size_of_putch 000C                 ??_delay_10ms 0001  
             ___wmul@product 0005                     _LATDbits 000F8C                     _PIR2bits 000FA1  
            main@down_period 0025         ??_delay_1s_interrupt 0003             __CFG_WDTPS$32768 000000  
                 ?_lcdNibble 0001                   _ADCON0bits 000FC2                    main@i_600 0040  
                  main@i_601 0041                    main@i_611 0048                    main@i_603 0042  
                  main@i_612 0049                    main@i_604 0043                    main@i_613 004A  
                  main@i_605 0044                    main@i_623 004C                    main@i_607 0045  
                  main@i_632 0052                    main@i_624 004D                    main@i_608 0046  
                  main@i_633 0053                    main@i_625 004E                    main@i_609 0047  
                  main@i_634 0054                    main@i_627 004F                    main@i_628 0050  
                  main@i_572 0036                    main@i_629 0051                    main@i_573 0037  
                  main@i_582 0039                    main@i_574 0038                    main@i_583 003A  
                  main@i_584 003B                    main@i_595 003C                    main@i_596 003D  
                  main@i_597 003E                    main@i_599 003F            ___wmul@multiplier 0001  
                  main@k_575 0057                lcdNibble@data 0002                   printf@flag 001F  
                  main@check 002B                lcdNibble@temp 0001           __end_of_delay_10ms EACC  
                 printf@prec 001C          I2C_Master_Read@temp 0003             _Eeprom_WriteByte EBAC  
                 _EECON1bits 000FA6                     __Hrparam 0000                     __Lrparam 0000  
         __CFG_BOREN$SBORDIS 000000             __size_of___ftadd 01AC             __size_of___ftneg 0024  
           __size_of___lldiv 0082             __size_of___lwdiv 0052             __size_of___lwmod 0042  
                   ___ftpack EE8E       Eeprom_ReadByte@address 0003                  _isdigit$886 0002  
           __size_of_lcdInst 000C              _I2C_Master_Init EDB2              _I2C_Master_Read EB0E  
           __size_of_initLCD 0046              _I2C_Master_Wait EA9E              _I2C_Master_Stop EA6A  
           __size_of_isdigit 001E              ___lwdiv@divisor 0003              ___lwdiv@counter 0007  
                   __ptext10 ED0A                     __ptext11 EB82                     __ptext20 EB0E  
                   __ptext12 EAB0                     __ptext21 EA9E                     __ptext13 EC26  
                   __ptext22 EDB2                     __ptext14 EA86                     __ptext23 EE0C  
                   __ptext15 ED5C                     __ptext24 EBAC                     __ptext16 ECBA  
                   __ptext25 EB5A                     __ptext17 EAEA                     __ptext18 EF3C  
                   __ptext19 EE8E                  delay_10ms@n 0002                __size_of_main 0AE2  
            _Eeprom_ReadByte EB5A                    set_time@i 0004                     _set_time EC6C  
                ??_lcdNibble 0001                    printf@idx 0019                    printf@val 001D  
                   main@page 0024                     main@time 002E            main@count_seconds 0062  
                  putch@data 0003     __end_of_I2C_Master_Start EA6A     __end_of_I2C_Master_Write EA7C  
                   isdigit@c 0003             ___lwmod@dividend 0008             ___lldiv@dividend 0001  
                   printf@ap 001A      __end_of_I2C_Master_Init EE0C      __end_of_I2C_Master_Read EB34  
    __end_of_I2C_Master_Wait EAB0      __end_of_I2C_Master_Stop EA72                  lcdInst@data 0003  
           ___lldiv@quotient 0009            I2C_Master_Write@d 0002              ___lwmod@divisor 000A  
            ___lwmod@counter 000C      __end_of_Eeprom_ReadByte EB82  
